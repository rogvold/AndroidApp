android.bluetooth.IBluetoothGattProfile -> android.bluetooth.IBluetoothGattProfile:
    void onDiscoverCharacteristicsResult(java.lang.String,boolean) -> onDiscoverCharacteristicsResult
    void onSetCharacteristicValueResult(java.lang.String,boolean) -> onSetCharacteristicValueResult
    void onSetCharacteristicCliConfResult(java.lang.String,boolean) -> onSetCharacteristicCliConfResult
    void onUpdateCharacteristicValueResult(java.lang.String,boolean) -> onUpdateCharacteristicValueResult
    void onValueChanged(java.lang.String,java.lang.String) -> onValueChanged
android.bluetooth.IBluetoothGattProfile$Stub -> android.bluetooth.IBluetoothGattProfile$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onDiscoverCharacteristicsResult -> TRANSACTION_onDiscoverCharacteristicsResult
    int TRANSACTION_onSetCharacteristicValueResult -> TRANSACTION_onSetCharacteristicValueResult
    int TRANSACTION_onSetCharacteristicCliConfResult -> TRANSACTION_onSetCharacteristicCliConfResult
    int TRANSACTION_onUpdateCharacteristicValueResult -> TRANSACTION_onUpdateCharacteristicValueResult
    int TRANSACTION_onValueChanged -> TRANSACTION_onValueChanged
    android.bluetooth.IBluetoothGattProfile asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.bluetooth.IBluetoothGattProfile$Stub$Proxy -> android.bluetooth.IBluetoothGattProfile$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onDiscoverCharacteristicsResult(java.lang.String,boolean) -> onDiscoverCharacteristicsResult
    void onSetCharacteristicValueResult(java.lang.String,boolean) -> onSetCharacteristicValueResult
    void onSetCharacteristicCliConfResult(java.lang.String,boolean) -> onSetCharacteristicCliConfResult
    void onUpdateCharacteristicValueResult(java.lang.String,boolean) -> onUpdateCharacteristicValueResult
    void onValueChanged(java.lang.String,java.lang.String) -> onValueChanged
android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$1 -> android.support.v13.app.a:
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.b:
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.c:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
    android.app.Fragment access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> a
    android.app.Fragment access$100(android.support.v13.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v13.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v13.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v13.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.ActivityCompat -> android.support.v4.app.a:
    void finishAffinity(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.b:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.c:
    void finishAffinity(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.d:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> b
    int commitAllowingStateLoss() -> c
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> d
    boolean isEmpty() -> e
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.e:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.f:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void dismissInternal(boolean) -> a
    int getTheme() -> a
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.h:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> d_
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack(int,int) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.r:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.s:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.u:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.w:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.y:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.z:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    boolean isEmpty() -> e
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> a
    int commit() -> b
    int commitAllowingStateLoss() -> c
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> j
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> k
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> a
android.support.v4.app.ListFragment$1 -> android.support.v4.app.aa:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ab:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.ac:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ad:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ae:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.af:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.ag:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpFromSameTask(android.app.Activity) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    android.content.Intent getParentActivityIntent(android.app.Activity) -> b
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    java.lang.String getParentActivityName(android.app.Activity) -> c
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.ah:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.ai:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.aj:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.ak:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.al:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.am:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.an:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    java.util.Iterator iterator() -> iterator
    void startActivities() -> a
    void startActivities(android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.ao:
    android.content.Intent getSupportParentActivityIntent() -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.ap:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.aq:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.ar:
android.support.v4.content.ContextCompat -> android.support.v4.content.a:
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.b:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.c:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.d:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.e:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.f:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.g:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.h:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.i:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.j:
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.k:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> android.support.v4.content.l:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    android.content.Context mContext -> c
    boolean mStarted -> d
    boolean mAbandoned -> e
    boolean mReset -> f
    boolean mContentChanged -> g
    boolean mProcessingChange -> h
    void deliverResult(java.lang.Object) -> a
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> a
    void startLoading() -> b
    void onStartLoading() -> c
    void stopLoading() -> d
    void onStopLoading() -> e
    void reset() -> f
    void onReset() -> g
    java.lang.String dataToString(java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.m:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.n:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.o:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.p:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.q:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> b
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> c
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> d
    java.util.concurrent.Executor sDefaultExecutor -> e
    java.util.concurrent.FutureTask mFuture -> f
    android.support.v4.content.ModernAsyncTask$Status mStatus -> g
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> a
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> b
    void finish(java.lang.Object) -> c
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.r:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.s:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.t:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.internal.view.SupportMenu -> android.support.v4.a.a.a:
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.a.a.b:
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    boolean expandActionView() -> expandActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.a.a.c:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void gc() -> d
    void put(int,java.lang.Object) -> b
    int size() -> b
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ActionProvider -> android.support.v4.view.n:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.content.Context getContext() -> a
    android.view.View onCreateActionView() -> b
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> c
    boolean isVisible() -> d
    void refreshVisibility() -> e
    boolean onPerformDefaultAction() -> f
    boolean hasSubMenu() -> g
    void onPrepareSubMenu(android.view.SubMenu) -> a
    void subUiVisibilityChanged(boolean) -> a
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> a
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> a
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.o:
    void onSubUiVisibilityChanged(boolean) -> a
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.p:
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.q:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.s:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.t:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.u:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.v:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.w:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.z:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.aa:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.ab:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MenuItemCompat -> android.support.v4.view.ac:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.ad:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.ae:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.af:
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.ag:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.ah:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.ai:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.aj:
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.ak:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.al:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.am:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.an:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ao:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ap:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.aq:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.ar:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> a
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.as:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.at:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.au:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.av:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.aw:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ax:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ay:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.az:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ba:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.bb:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.bc:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.bd:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.be:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.bf:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.bg:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.bh:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.bi:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.bj:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.bk:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.bl:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.bm:
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bn:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.bo:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bp:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bq:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.br:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bs:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bt:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.bu:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bv:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bw:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bx:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.by:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bz:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ca:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.cb:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.cc:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.cd:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ce:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.cf:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.cg:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ch:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ci:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.cj:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ck:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.cl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.cn:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.co:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.cp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.cq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.cr:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cs:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.i:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.j:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.w:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.x:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.y:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.z:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.aa:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ab:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ad:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.a:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> c
    void hide() -> a
    void show() -> b
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.b:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.c:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.d:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.e:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.f:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.g:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.h:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.i:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mDisallowInterceptRequested -> p
    boolean mChildrenCanceledTouch -> q
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    android.graphics.drawable.Drawable mShadowLeft -> u
    android.graphics.drawable.Drawable mShadowRight -> v
    java.lang.CharSequence mTitleLeft -> w
    java.lang.CharSequence mTitleRight -> x
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibilitiy(android.view.View) -> m
    int[] access$100() -> d
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> k
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.j:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.k:
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.l:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.m:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.n:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.o:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.p:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.q:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.r:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.s:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.t:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.u:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.v:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.w:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.x:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.y:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.z:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.aa:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.ab:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.ac:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.ad:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.ae:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.af:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.ag:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.ah:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.ai:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.aj:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.ak:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.al:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds(int,int,int,int) -> a
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> a
    android.support.v4.widget.SwipeProgressBar mProgressBar -> b
    android.view.View mTarget -> c
    int mOriginalOffsetTop -> d
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    int mFrom -> f
    boolean mRefreshing -> g
    int mTouchSlop -> h
    float mDistanceToTriggerSync -> i
    int mMediumAnimationDuration -> j
    float mFromPercentage -> k
    float mCurrPercentage -> l
    int mProgressBarHeight -> m
    int mCurrentTargetOffsetTop -> n
    float mInitialMotionY -> o
    float mLastMotionY -> p
    boolean mIsBeingDragged -> q
    int mActivePointerId -> r
    boolean mReturningToStart -> s
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> t
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> u
    int[] LAYOUT_ATTRS -> v
    android.view.animation.Animation mAnimateToStartPosition -> w
    android.view.animation.Animation mShrinkTrigger -> x
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> y
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> z
    java.lang.Runnable mReturnToStartPosition -> A
    java.lang.Runnable mCancel -> B
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> a
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void ensureTarget() -> b
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> c
    void updateContentOffsetTop(int) -> a
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> d
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> a
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> f
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> j
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> k
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> l
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.am:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.an:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.ao:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.ap:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.aq:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.ar:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.as:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.at:
    void onRefresh() -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.au:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.av:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.aw:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ax:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    void setSelectedNavigationItem(int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setNavigationMode(int) -> b
    int getDisplayOptions() -> a
    android.support.v7.app.ActionBar$Tab newTab() -> b
    void addTab(android.support.v7.app.ActionBar$Tab) -> a
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> c
android.support.v7.app.ActionBar$Callback -> android.support.v7.app.a:
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> a
android.support.v7.app.ActionBar$OnNavigationListener -> android.support.v7.app.b:
    boolean onNavigationItemSelected(int,long) -> a
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.c:
    int getPosition() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    java.lang.CharSequence getText() -> c
    android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence) -> a
    android.view.View getCustomView() -> d
    android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener) -> a
    void select() -> e
    java.lang.CharSequence getContentDescription() -> f
android.support.v7.app.ActionBar$TabListener -> android.support.v7.app.d:
    void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> a
    void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> b
    void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> c
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
    android.support.v7.app.ActionBarActivityDelegate mImpl -> n
    android.support.v7.app.ActionBar getSupportActionBar() -> f
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void supportInvalidateOptionsMenu() -> c
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    void superSetContentView(int) -> a
    void superSetContentView(android.view.View) -> a
    void superSetContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void superAddContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    boolean superOnCreatePanelMenu(int,android.view.Menu) -> a
    boolean superOnPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean superOnPrepareOptionsPanel(android.view.View,android.view.Menu) -> b
    boolean superOnMenuItemSelected(int,android.view.MenuItem) -> a
    void onBackPressed() -> onBackPressed
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> a
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> b
    boolean onSupportNavigateUp() -> g
    android.content.Intent getSupportParentActivityIntent() -> a
    boolean supportShouldUpRecreateTask(android.content.Intent) -> a
    void supportNavigateUpTo(android.content.Intent) -> b
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> h
android.support.v7.app.ActionBarActivityDelegate -> android.support.v7.app.e:
    android.support.v7.app.ActionBarActivity mActivity -> a
    android.support.v7.app.ActionBar mActionBar -> d
    android.view.MenuInflater mMenuInflater -> e
    boolean mHasActionBar -> b
    boolean mOverlayActionBar -> c
    boolean mEnableDefaultActionBarUp -> f
    android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> b
    android.view.MenuInflater getMenuInflater() -> c
    void onCreate(android.os.Bundle) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onTitleChanged(java.lang.CharSequence) -> a
    void supportInvalidateOptionsMenu() -> f
    android.view.View onCreatePanelView(int) -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onBackPressed() -> g
    void onContentChanged() -> h
    java.lang.String getUiOptionsFromMetadata() -> i
    android.content.Context getActionBarThemedContext() -> j
android.support.v7.app.ActionBarActivityDelegateApi20 -> android.support.v7.app.f:
    android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback) -> a
android.support.v7.app.ActionBarActivityDelegateApi20$WindowCallbackWrapperApi20 -> android.support.v7.app.g:
    android.support.v7.app.ActionBarActivityDelegateApi20 this$0 -> a
android.support.v7.app.ActionBarActivityDelegateBase -> android.support.v7.app.h:
    int[] ACTION_BAR_DRAWABLE_TOGGLE_ATTRS -> d
    android.support.v7.internal.widget.ActionBarView mActionBarView -> e
    android.support.v7.internal.view.menu.ListMenuPresenter mListMenuPresenter -> f
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> g
    android.support.v7.view.ActionMode mActionMode -> h
    boolean mSubDecorInstalled -> i
    java.lang.CharSequence mTitleToSet -> j
    boolean mFeatureProgress -> k
    boolean mFeatureIndeterminateProgress -> l
    boolean mClosingActionMenu -> m
    boolean mPanelIsPrepared -> n
    boolean mPanelRefreshContent -> o
    android.os.Bundle mPanelFrozenActionViewState -> p
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onContentChanged() -> h
    void ensureSubDecor() -> k
    void applyFixedSizeWindow() -> l
    void onTitleChanged(java.lang.CharSequence) -> a
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void supportInvalidateOptionsMenu() -> f
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> b
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.content.Context,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onBackPressed() -> g
    boolean initializePanelMenu() -> m
    boolean preparePanel() -> n
android.support.v7.app.ActionBarActivityDelegateBase$1 -> android.support.v7.app.i:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void run() -> run
android.support.v7.app.ActionBarActivityDelegateHC -> android.support.v7.app.j:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarActivityDelegateICS -> android.support.v7.app.k:
    android.view.Menu mMenu -> d
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onContentChanged() -> h
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    void onTitleChanged(java.lang.CharSequence) -> a
    void onActionModeStarted(android.view.ActionMode) -> a
    void onActionModeFinished(android.view.ActionMode) -> b
    void supportInvalidateOptionsMenu() -> f
    boolean onBackPressed() -> g
    android.support.v7.internal.view.ActionModeWrapper createActionModeWrapper(android.content.Context,android.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper -> android.support.v7.app.l:
    android.view.Window$Callback mWrapped -> b
    android.support.v7.app.ActionBarActivityDelegateICS this$0 -> c
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
android.support.v7.app.ActionBarActivityDelegateJB -> android.support.v7.app.m:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.internal.view.ActionModeWrapper createActionModeWrapper(android.content.Context,android.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateJBMR2 -> android.support.v7.app.n:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarImplBase -> android.support.v7.app.o:
    android.content.Context mContext -> b
    android.content.Context mThemedContext -> c
    android.support.v7.app.ActionBarActivity mActivity -> d
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> e
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> f
    android.view.ViewGroup mTopVisibilityView -> g
    android.support.v7.internal.widget.ActionBarView mActionView -> h
    android.support.v7.internal.widget.ActionBarContextView mContextView -> i
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> j
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> k
    java.util.ArrayList mTabs -> l
    android.support.v7.app.ActionBarImplBase$TabImpl mSelectedTab -> m
    int mSavedTabPosition -> n
    boolean mDisplayHomeAsUpSet -> o
    java.util.ArrayList mMenuVisibilityListeners -> p
    int mContextDisplayMode -> q
    boolean mHasEmbeddedTabs -> r
    android.os.Handler mHandler -> a
    int mCurWindowVisibility -> s
    boolean mHiddenByApp -> t
    boolean mHiddenBySystem -> u
    boolean mShowingForMode -> v
    boolean mNowShowing -> w
    boolean mShowHideAnimationEnabled -> x
    android.support.v7.app.ActionBar$Callback mCallback -> y
    void init(android.support.v7.app.ActionBarActivity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> f
    void setSelectedNavigationItem(int) -> a
    int getSelectedNavigationIndex() -> d
    void setTitle(java.lang.CharSequence) -> a
    void setDisplayOptions(int,int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> e
    void setNavigationMode(int) -> b
    int getDisplayOptions() -> a
    android.support.v7.app.ActionBar$Tab newTab() -> b
    void addTab(android.support.v7.app.ActionBar$Tab) -> a
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void selectTab(android.support.v7.app.ActionBar$Tab) -> b
    android.content.Context getThemedContext() -> c
    void showForActionMode() -> f
    void hideForActionMode() -> g
    void ensureTabsExist() -> i
    void configureTab(android.support.v7.app.ActionBar$Tab,int) -> a
    boolean checkShowingFlags(boolean,boolean,boolean) -> a
    void updateVisibility(boolean) -> g
    void setShowHideAnimationEnabled(boolean) -> c
    void doShow(boolean) -> d
    void doHide(boolean) -> e
    boolean isShowHideAnimationEnabled() -> h
    android.support.v7.internal.widget.ScrollingTabContainerView access$000(android.support.v7.app.ActionBarImplBase) -> a
android.support.v7.app.ActionBarImplBase$TabImpl -> android.support.v7.app.p:
    android.support.v7.app.ActionBar$TabListener mCallback -> b
    android.graphics.drawable.Drawable mIcon -> c
    java.lang.CharSequence mText -> d
    java.lang.CharSequence mContentDesc -> e
    int mPosition -> f
    android.view.View mCustomView -> g
    android.support.v7.app.ActionBarImplBase this$0 -> a
    android.support.v7.app.ActionBar$TabListener getCallback() -> g
    android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener) -> a
    android.view.View getCustomView() -> d
    android.graphics.drawable.Drawable getIcon() -> b
    int getPosition() -> a
    void setPosition(int) -> a
    java.lang.CharSequence getText() -> c
    android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence) -> a
    void select() -> e
    java.lang.CharSequence getContentDescription() -> f
android.support.v7.app.ActionBarImplHC -> android.support.v7.app.q:
    android.support.v7.internal.widget.NativeActionModeAwareLayout mNativeActionModeAwareLayout -> b
    android.view.ActionMode mCurActionMode -> c
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
    boolean isShowHideAnimationEnabled() -> h
    android.view.ActionMode access$002(android.support.v7.app.ActionBarImplHC,android.view.ActionMode) -> a
android.support.v7.app.ActionBarImplHC$CallbackWrapper -> android.support.v7.app.r:
    android.view.ActionMode$Callback mWrappedCallback -> b
    android.support.v7.app.ActionBarImplHC this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
android.support.v7.app.ActionBarImplICS -> android.support.v7.app.s:
    android.app.Activity mActivity -> a
    android.support.v7.app.ActionBar$Callback mCallback -> b
    android.app.ActionBar mActionBar -> c
    android.support.v4.app.FragmentTransaction mActiveTransaction -> d
    java.util.ArrayList mAddedMenuVisWrappers -> e
    void setSelectedNavigationItem(int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setNavigationMode(int) -> b
    int getDisplayOptions() -> a
    android.support.v7.app.ActionBar$Tab newTab() -> b
    void addTab(android.support.v7.app.ActionBar$Tab) -> a
    android.content.Context getThemedContext() -> c
    void setHomeButtonEnabled(boolean) -> b
    android.support.v4.app.FragmentTransaction getActiveTransaction() -> d
    void commitActiveTransaction() -> e
android.support.v7.app.ActionBarImplICS$TabWrapper -> android.support.v7.app.t:
    android.app.ActionBar$Tab mWrappedTab -> a
    java.lang.CharSequence mContentDescription -> c
    android.support.v7.app.ActionBar$TabListener mTabListener -> d
    android.support.v7.app.ActionBarImplICS this$0 -> b
    int getPosition() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    java.lang.CharSequence getText() -> c
    android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence) -> a
    android.view.View getCustomView() -> d
    android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener) -> a
    void select() -> e
    java.lang.CharSequence getContentDescription() -> f
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
android.support.v7.app.ActionBarImplJB -> android.support.v7.app.u:
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> c
    void addTab(android.support.v7.app.ActionBar$Tab) -> a
    android.support.v7.app.ActionBar$Tab newTab() -> b
    int getDisplayOptions() -> a
    void setNavigationMode(int) -> b
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setSelectedNavigationItem(int) -> a
android.support.v7.app.ActionBarImplJBMR2 -> android.support.v7.app.v:
android.support.v7.appcompat.R -> android.support.v7.a.a:
android.support.v7.appcompat.R$anim -> android.support.v7.a.b:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
android.support.v7.appcompat.R$attr -> android.support.v7.a.c:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int customNavigationLayout -> customNavigationLayout
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryHint -> queryHint
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowSplitActionBar -> windowSplitActionBar
android.support.v7.appcompat.R$bool -> android.support.v7.a.d:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
android.support.v7.appcompat.R$dimen -> android.support.v7.a.e:
    int abc_action_bar_default_height -> abc_action_bar_default_height
    int abc_action_bar_icon_vertical_padding -> abc_action_bar_icon_vertical_padding
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin -> abc_action_bar_subtitle_bottom_margin
    int abc_action_bar_subtitle_text_size -> abc_action_bar_subtitle_text_size
    int abc_action_bar_subtitle_top_margin -> abc_action_bar_subtitle_top_margin
    int abc_action_bar_title_text_size -> abc_action_bar_title_text_size
    int abc_action_button_min_width -> abc_action_button_min_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
android.support.v7.appcompat.R$id -> android.support.v7.a.f:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int always -> always
    int beginning -> beginning
    int checkbox -> checkbox
    int collapseActionView -> collapseActionView
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int edit_query -> edit_query
    int end -> end
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int listMode -> listMode
    int list_item -> list_item
    int middle -> middle
    int never -> never
    int none -> none
    int normal -> normal
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int title -> title
    int top_action_bar -> top_action_bar
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
android.support.v7.appcompat.R$integer -> android.support.v7.a.g:
    int abc_max_action_buttons -> abc_max_action_buttons
android.support.v7.appcompat.R$layout -> android.support.v7.a.h:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_decor -> abc_simple_decor
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.v7.appcompat.R$string -> android.support.v7.a.i:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
android.support.v7.appcompat.R$style -> android.support.v7.a.j:
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_DialogWhenLarge -> Theme_Base_AppCompat_DialogWhenLarge
    int Theme_Base_AppCompat_DialogWhenLarge_Base -> Theme_Base_AppCompat_DialogWhenLarge_Base
    int Theme_Base_AppCompat_Dialog_FixedSize -> Theme_Base_AppCompat_Dialog_FixedSize
    int Theme_Base_AppCompat_Dialog_Light_FixedSize -> Theme_Base_AppCompat_Dialog_Light_FixedSize
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_AppCompat_Light_DialogWhenLarge -> Theme_Base_AppCompat_Light_DialogWhenLarge
    int Theme_Base_AppCompat_Light_DialogWhenLarge_Base -> Theme_Base_AppCompat_Light_DialogWhenLarge_Base
    int Theme_Base_Light -> Theme_Base_Light
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListPopupWindow -> Widget_AppCompat_Base_ListPopupWindow
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListPopupWindow -> Widget_AppCompat_Light_Base_ListPopupWindow
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
android.support.v7.appcompat.R$styleable -> android.support.v7.a.k:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowFixedHeightMajor -> ActionBarWindow_windowFixedHeightMajor
    int ActionBarWindow_windowFixedHeightMinor -> ActionBarWindow_windowFixedHeightMinor
    int ActionBarWindow_windowFixedWidthMajor -> ActionBarWindow_windowFixedWidthMajor
    int ActionBarWindow_windowFixedWidthMinor -> ActionBarWindow_windowFixedWidthMinor
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
android.support.v7.internal.view.ActionBarPolicy -> android.support.v7.internal.view.a:
    android.content.Context mContext -> a
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> a
    int getMaxActionButtons() -> a
    boolean showsOverflowMenuButton() -> b
    int getEmbeddedMenuWidthLimit() -> c
    boolean hasEmbeddedTabs() -> d
    int getTabContainerHeight() -> e
    boolean enableHomeButtonByDefault() -> f
    int getStackedTabMaxWidth() -> g
android.support.v7.internal.view.ActionModeWrapper -> android.support.v7.internal.view.b:
    android.view.MenuInflater mInflater -> a
    android.view.ActionMode mWrappedObject -> b
    void finish() -> a
android.support.v7.internal.view.ActionModeWrapperJB -> android.support.v7.internal.view.c:
android.support.v7.internal.view.SupportMenuInflater -> android.support.v7.internal.view.d:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> a
    java.lang.Class[] access$200() -> a
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> b
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> c
    java.lang.Class[] access$500() -> b
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> d
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.internal.view.e:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> android.support.v7.internal.view.f:
    android.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    android.support.v4.view.ActionProvider itemActionProvider -> z
    android.support.v7.internal.view.SupportMenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(android.view.MenuItem) -> a
    void addItem() -> b
    android.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> a
android.support.v7.internal.view.menu.ActionMenuItem -> android.support.v7.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    boolean mAllowTextWithIcon -> e
    boolean mExpandedFormat -> f
    int mMinWidth -> g
    int mSavedPaddingLeft -> h
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
android.support.v7.internal.view.menu.ActionMenuItemView$AllCapsTransformationMethod -> android.support.v7.internal.view.menu.b:
    java.util.Locale mLocale -> b
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.view.menu.ActionMenuPresenter -> android.support.v7.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> b
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> c
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(android.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$202(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$1 -> android.support.v7.internal.view.menu.c:
android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.internal.view.menu.d:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.internal.view.menu.e:
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.internal.view.menu.f:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup -> android.support.v7.internal.view.menu.g:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.internal.view.menu.h:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState -> android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState$1 -> android.support.v7.internal.view.menu.i:
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.view.menu.ActionMenuView -> android.support.v7.internal.view.menu.ActionMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    boolean mReserveOverflow -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter mPresenter -> c
    boolean mFormatItems -> d
    int mFormatItemsWidth -> e
    int mMinCellSize -> f
    int mGeneratedItemPadding -> g
    int mMeasuredExtraWidth -> h
    int mMaxItemHeight -> i
    void setPresenter(android.support.v7.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasSupportDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.internal.view.menu.ActionMenuView$ActionMenuChildView -> android.support.v7.internal.view.menu.j:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuView$LayoutParams -> android.support.v7.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
android.support.v7.internal.view.menu.BaseMenuPresenter -> android.support.v7.internal.view.menu.k:
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> a
    int mMenuLayoutRes -> b
    int mItemLayoutRes -> i
    android.support.v7.internal.view.menu.MenuView mMenuView -> h
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> c
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
android.support.v7.internal.view.menu.BaseMenuWrapper -> android.support.v7.internal.view.menu.l:
    java.util.HashMap mMenuItems -> b
    java.util.HashMap mSubMenus -> c
    android.support.v4.internal.view.SupportMenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    void internalClear() -> a
    void internalRemoveGroup(int) -> a
    void internalRemoveItem(int) -> b
android.support.v7.internal.view.menu.BaseWrapper -> android.support.v7.internal.view.menu.m:
    java.lang.Object mWrappedObject -> a
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    int mAnimations -> b
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mBackground -> g
    int mTextAppearance -> h
    android.content.Context mTextAppearanceContext -> i
    boolean mPreserveIconSpacing -> j
    int mMenuType -> k
    android.content.Context mContext -> l
    android.view.LayoutInflater mInflater -> m
    boolean mForceShowIcon -> n
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> a
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> android.support.v7.internal.view.menu.n:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> h
    int mThemeRes -> e
    int mItemLayoutRes -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> i
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.widget.ListAdapter getAdapter() -> a
    void updateMenuView(boolean) -> c
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> a
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.internal.view.menu.o:
    int mExpandedIndex -> b
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> android.support.v7.internal.view.menu.p:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> x
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> c
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> a
    int findGroupIndex(int) -> b
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> c
    boolean isQwertyMode() -> b
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> c
    android.content.res.Resources getResources() -> d
    android.content.Context getContext() -> e
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void changeMenuMode() -> f
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> g
    void startDispatchingItemsChanged() -> h
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> i
    void flagActionItems() -> j
    java.util.ArrayList getActionItems() -> k
    java.util.ArrayList getNonActionItems() -> l
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> a
    java.lang.CharSequence getHeaderTitle() -> m
    android.graphics.drawable.Drawable getHeaderIcon() -> n
    android.view.View getHeaderView() -> o
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean getOptionalIconsVisible() -> q
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> r
android.support.v7.internal.view.menu.MenuBuilder$Callback -> android.support.v7.internal.view.menu.q:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.internal.view.menu.r:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuDialogHelper -> android.support.v7.internal.view.menu.s:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.app.AlertDialog mDialog -> c
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> b
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void dismiss() -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> android.support.v7.internal.view.menu.t:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> l
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> a
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> b
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> c
    java.lang.String getShortcutLabel() -> d
    boolean shouldShowShortcut() -> e
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> f
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> g
    boolean shouldShowIcon() -> h
    boolean isActionButton() -> i
    boolean requestsActionButton() -> j
    boolean requiresActionButton() -> k
    void setIsActionButton(boolean) -> d
    boolean showsTextAsAction() -> l
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> m
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean hasCollapsibleActionView() -> n
    void setActionViewExpanded(boolean) -> e
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuItemImpl$1 -> android.support.v7.internal.view.menu.u:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> a
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS -> android.support.v7.internal.view.menu.v:
    boolean mEmulateProviderVisibilityOverride -> b
    boolean mLastRequestVisible -> c
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> d
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> b
    void setExclusiveCheckable(boolean) -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> b
    boolean checkActionProviderOverrideVisibility() -> c
    android.view.MenuItem wrappedSetVisible(boolean) -> b
    boolean access$000(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> a
    boolean access$100(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> b
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.internal.view.menu.w:
    android.support.v4.view.ActionProvider mInner -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper$1 -> android.support.v7.internal.view.menu.x:
    android.support.v7.internal.view.menu.MenuItemWrapperICS val$this$0 -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper this$1 -> b
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.internal.view.menu.y:
    android.support.v7.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View getWrappedView() -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.internal.view.menu.z:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> android.support.v7.internal.view.menu.aa:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> b
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.internal.view.menu.ab:
    android.view.ActionProvider$VisibilityListener mListener -> c
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> d
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    void setVisibilityListener(android.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuPopupHelper -> android.support.v7.internal.view.menu.ac:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.widget.ListPopupWindow mPopup -> e
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setForceShowIcon(boolean) -> a
    boolean tryShow() -> a
    void dismiss() -> b
    void onDismiss() -> onDismiss
    boolean isShowing() -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> c
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> android.support.v7.internal.view.menu.ad:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
android.support.v7.internal.view.menu.MenuPresenter -> android.support.v7.internal.view.menu.ae:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.view.menu.MenuPresenter$Callback -> android.support.v7.internal.view.menu.af:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
android.support.v7.internal.view.menu.MenuView -> android.support.v7.internal.view.menu.ag:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView$ItemView -> android.support.v7.internal.view.menu.ah:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
android.support.v7.internal.view.menu.MenuWrapperFactory -> android.support.v7.internal.view.menu.ai:
    android.view.Menu createMenuWrapper(android.view.Menu) -> a
    android.view.MenuItem createMenuItemWrapper(android.view.MenuItem) -> a
    android.support.v4.internal.view.SupportSubMenu createSupportSubMenuWrapper(android.view.SubMenu) -> a
    android.support.v4.internal.view.SupportMenuItem createSupportMenuItemWrapper(android.view.MenuItem) -> b
android.support.v7.internal.view.menu.MenuWrapperICS -> android.support.v7.internal.view.menu.aj:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> android.support.v7.internal.view.menu.ak:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> d
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> b
    boolean isShortcutsVisible() -> c
    android.view.Menu getParentMenu() -> s
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> a
android.support.v7.internal.view.menu.SubMenuWrapperICS -> android.support.v7.internal.view.menu.al:
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
android.support.v7.internal.widget.AbsActionBarView -> android.support.v7.internal.widget.a:
    android.support.v7.internal.view.menu.ActionMenuView mMenuView -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    void dismissPopupMenus() -> f
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
android.support.v7.internal.widget.AbsActionBarView$1 -> android.support.v7.internal.widget.b:
    android.support.v7.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
android.support.v7.internal.widget.AbsSpinnerICS -> android.support.v7.internal.widget.AbsSpinnerICS:
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> E
    void initAbsSpinner() -> o
    void setAdapter(android.widget.SpinnerAdapter) -> a
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int) -> a
    void layout(int,boolean) -> a
    android.view.View getSelectedView() -> c
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.widget.Adapter getAdapter() -> e
    void access$100(android.support.v7.internal.widget.AbsSpinnerICS,android.view.View,boolean) -> a
android.support.v7.internal.widget.AbsSpinnerICS$1 -> android.support.v7.internal.widget.c:
android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin -> android.support.v7.internal.widget.d:
    android.util.SparseArray mScrapHeap -> b
    android.support.v7.internal.widget.AbsSpinnerICS this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
android.support.v7.internal.widget.AbsSpinnerICS$SavedState -> android.support.v7.internal.widget.AbsSpinnerICS$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.internal.widget.AbsSpinnerICS$SavedState$1 -> android.support.v7.internal.widget.e:
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    android.support.v7.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void drawBackgroundDrawable(android.graphics.drawable.Drawable,android.graphics.Canvas) -> a
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> g
    java.lang.CharSequence mSubtitle -> h
    android.view.View mClose -> i
    android.view.View mCustomView -> j
    android.widget.LinearLayout mTitleLayout -> k
    android.widget.TextView mTitleView -> l
    android.widget.TextView mSubtitleView -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    android.graphics.drawable.Drawable mSplitBackground -> p
    boolean mTitleOptional -> q
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> g
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTitleOptional(boolean) -> setTitleOptional
    void dismissPopupMenus() -> f
    boolean isOverflowReserved() -> e
    void postShowOverflowMenu() -> b
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> b
    android.support.v7.app.ActionBar mActionBar -> c
    android.graphics.Rect mZeroRect -> d
    int[] mActionBarSizeAttr -> a
    void init(android.content.Context) -> a
    void setActionBar(android.support.v7.app.ActionBar) -> setActionBar
android.support.v7.internal.widget.ActionBarView -> android.support.v7.internal.widget.ActionBarView:
    int mNavigationMode -> i
    int mDisplayOptions -> j
    java.lang.CharSequence mTitle -> k
    java.lang.CharSequence mSubtitle -> l
    android.graphics.drawable.Drawable mIcon -> m
    android.graphics.drawable.Drawable mLogo -> n
    android.content.Context mContext -> o
    android.support.v7.internal.widget.ActionBarView$HomeView mHomeLayout -> p
    android.support.v7.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> q
    android.widget.LinearLayout mTitleLayout -> r
    android.widget.TextView mTitleView -> s
    android.widget.TextView mSubtitleView -> t
    android.view.View mTitleUpView -> u
    android.support.v7.internal.widget.SpinnerICS mSpinner -> v
    android.widget.LinearLayout mListNavLayout -> w
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> x
    android.view.View mCustomNavView -> y
    android.support.v7.internal.widget.ProgressBarICS mProgressView -> z
    android.support.v7.internal.widget.ProgressBarICS mIndeterminateProgressView -> A
    int mProgressBarPadding -> B
    int mItemPadding -> C
    int mTitleStyleRes -> D
    int mSubtitleStyleRes -> E
    int mProgressStyle -> F
    int mIndeterminateProgressStyle -> G
    boolean mUserTitle -> H
    boolean mIncludeTabs -> I
    boolean mIsCollapsable -> J
    boolean mIsCollapsed -> K
    android.support.v7.internal.view.menu.MenuBuilder mOptionsMenu -> L
    android.support.v7.internal.widget.ActionBarContextView mContextView -> M
    android.support.v7.internal.view.menu.ActionMenuItem mLogoNavItem -> N
    android.widget.SpinnerAdapter mSpinnerAdapter -> O
    android.support.v7.app.ActionBar$OnNavigationListener mCallback -> P
    java.lang.Runnable mTabSelector -> Q
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> R
    android.view.View mExpandedActionView -> g
    android.view.Window$Callback mWindowCallback -> h
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mNavItemSelectedListener -> S
    android.view.View$OnClickListener mExpandedActionViewUpListener -> T
    android.view.View$OnClickListener mUpClickListener -> U
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> i
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(android.support.v7.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> j
    void collapseActionView() -> k
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> m
    void setContextView(android.support.v7.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> l
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void dismissPopupMenus() -> f
    boolean isOverflowReserved() -> e
    boolean isOverflowMenuShowing() -> d
    boolean hideOverflowMenu() -> c
    void postShowOverflowMenu() -> b
    boolean showOverflowMenu() -> a
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setContentHeight(int) -> setContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    android.support.v7.app.ActionBar$OnNavigationListener access$000(android.support.v7.internal.widget.ActionBarView) -> a
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(android.support.v7.internal.widget.ActionBarView) -> b
    android.support.v7.internal.view.menu.ActionMenuItem access$200(android.support.v7.internal.widget.ActionBarView) -> c
    android.graphics.drawable.Drawable access$500(android.support.v7.internal.widget.ActionBarView) -> d
    android.support.v7.internal.widget.ActionBarView$HomeView access$600(android.support.v7.internal.widget.ActionBarView) -> e
    android.support.v7.internal.widget.ActionBarView$HomeView access$700(android.support.v7.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$800(android.support.v7.internal.widget.ActionBarView) -> g
    android.support.v7.internal.widget.ScrollingTabContainerView access$900(android.support.v7.internal.widget.ActionBarView) -> h
    android.support.v7.internal.widget.SpinnerICS access$1000(android.support.v7.internal.widget.ActionBarView) -> i
    android.view.View access$1100(android.support.v7.internal.widget.ActionBarView) -> j
    int access$1200(android.support.v7.internal.widget.ActionBarView) -> k
    void access$1300(android.support.v7.internal.widget.ActionBarView) -> l
    int access$1400(android.support.v7.internal.widget.ActionBarView) -> m
android.support.v7.internal.widget.ActionBarView$1 -> android.support.v7.internal.widget.f:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.ActionBarView$2 -> android.support.v7.internal.widget.g:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$3 -> android.support.v7.internal.widget.h:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> android.support.v7.internal.widget.i:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.widget.ActionBarView$HomeView -> android.support.v7.internal.widget.ActionBarView$HomeView:
    android.widget.ImageView mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    int mUpIndicatorRes -> d
    android.graphics.drawable.Drawable mDefaultUpIndicator -> e
    void setUp(boolean) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setUpIndicator(android.graphics.drawable.Drawable) -> b
    void setUpIndicator(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarView$SavedState -> android.support.v7.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ActionBarView$SavedState$1 -> android.support.v7.internal.widget.j:
    android.support.v7.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActivityChooserModel -> android.support.v7.internal.widget.k:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivities -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    boolean mReloadActivities -> o
    android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    void persistHistoricalDataIfNeeded() -> e
    void executePersistHistoryAsyncTaskBase() -> f
    void executePersistHistoryAsyncTaskSDK11() -> g
    int getHistorySize() -> c
    void ensureConsistentState() -> h
    boolean sortActivitiesIfNeeded() -> i
    boolean loadActivitiesIfNeeded() -> j
    boolean readHistoricalDataIfNeeded() -> k
    boolean addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord) -> a
    void pruneExcessiveHistoricalRecordsIfNeeded() -> l
    void readHistoricalDataImpl() -> m
    android.content.Context access$200(android.support.v7.internal.widget.ActivityChooserModel) -> a
    java.lang.String access$300() -> d
    java.lang.String access$400(android.support.v7.internal.widget.ActivityChooserModel) -> b
    boolean access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean) -> a
android.support.v7.internal.widget.ActivityChooserModel$1 -> android.support.v7.internal.widget.l:
android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.internal.widget.m:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.internal.widget.n:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.internal.widget.o:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.internal.widget.p:
    boolean onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent) -> a
android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.internal.widget.q:
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.internal.widget.ActivityChooserView -> android.support.v7.internal.widget.ActivityChooserView:
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    android.support.v7.internal.widget.ActivityChooserView$Callbacks mCallbacks -> c
    android.widget.LinearLayout mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    android.support.v4.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    android.support.v7.internal.widget.ListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    void setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> a
    boolean dismissPopup() -> b
    boolean isShowingPopup() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.internal.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> d
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(android.support.v7.internal.widget.ActivityChooserView) -> a
    android.support.v7.internal.widget.ListPopupWindow access$100(android.support.v7.internal.widget.ActivityChooserView) -> b
    void access$400(android.support.v7.internal.widget.ActivityChooserView) -> c
    void access$500(android.support.v7.internal.widget.ActivityChooserView,int) -> a
    boolean access$600(android.support.v7.internal.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$700(android.support.v7.internal.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$800(android.support.v7.internal.widget.ActivityChooserView) -> f
    boolean access$602(android.support.v7.internal.widget.ActivityChooserView,boolean) -> a
    int access$900(android.support.v7.internal.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$1000(android.support.v7.internal.widget.ActivityChooserView) -> h
    android.database.DataSetObserver access$1100(android.support.v7.internal.widget.ActivityChooserView) -> i
android.support.v7.internal.widget.ActivityChooserView$1 -> android.support.v7.internal.widget.r:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ActivityChooserView$2 -> android.support.v7.internal.widget.s:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.ActivityChooserView$3 -> android.support.v7.internal.widget.t:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.internal.widget.u:
    android.support.v7.internal.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void setDataModel(android.support.v7.internal.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> e
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> f
android.support.v7.internal.widget.ActivityChooserView$Callbacks -> android.support.v7.internal.widget.v:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
android.support.v7.internal.widget.AdapterViewICS -> android.support.v7.internal.widget.w:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mOnItemSelectedListener -> s
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mOnItemClickListener -> t
    boolean mDataChanged -> u
    int mNextSelectedPosition -> v
    long mNextSelectedRowId -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    android.view.View mEmptyView -> b
    int mItemCount -> z
    int mOldItemCount -> A
    int mOldSelectedPosition -> B
    long mOldSelectedRowId -> C
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> D
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    boolean performItemClick(android.view.View,int,long) -> a
    void setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener) -> a
    android.widget.Adapter getAdapter() -> e
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> f
    long getSelectedItemId() -> g
    android.view.View getSelectedView() -> c
    boolean isInFilterMode() -> h
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> i
    void updateEmptyStatus(boolean) -> a
    long getItemIdAtPosition(int) -> b
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> j
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> k
    void checkSelectionChanged() -> l
    int findSyncPosition() -> m
    int lookForSelectablePosition(int,boolean) -> b
    void setSelectedPositionInt(int) -> c
    void setNextSelectedPositionInt(int) -> d
    void rememberSyncState() -> n
    void access$000(android.support.v7.internal.widget.AdapterViewICS,android.os.Parcelable) -> a
    android.os.Parcelable access$100(android.support.v7.internal.widget.AdapterViewICS) -> a
    void access$200(android.support.v7.internal.widget.AdapterViewICS) -> b
android.support.v7.internal.widget.AdapterViewICS$1 -> android.support.v7.internal.widget.x:
android.support.v7.internal.widget.AdapterViewICS$AdapterDataSetObserver -> android.support.v7.internal.widget.y:
    android.os.Parcelable mInstanceState -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener -> android.support.v7.internal.widget.z:
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListenerWrapper -> android.support.v7.internal.widget.aa:
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mWrappedListener -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener -> android.support.v7.internal.widget.ab:
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier -> android.support.v7.internal.widget.ac:
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void run() -> run
android.support.v7.internal.widget.CompatTextView -> android.support.v7.internal.widget.CompatTextView:
android.support.v7.internal.widget.CompatTextView$AllCapsTransformationMethod -> android.support.v7.internal.widget.ad:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.widget.LinearLayoutICS -> android.support.v7.internal.widget.LinearLayoutICS:
    android.graphics.drawable.Drawable mDivider -> a
    int mDividerWidth -> b
    int mDividerHeight -> c
    int mShowDividers -> d
    int mDividerPadding -> e
    int getSupportDividerWidth() -> getSupportDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void drawSupportDividersVertical(android.graphics.Canvas) -> a
    void drawSupportDividersHorizontal(android.graphics.Canvas) -> b
    void drawSupportHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawSupportVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasSupportDividerBeforeChildAt(int) -> a
android.support.v7.internal.widget.ListPopupWindow -> android.support.v7.internal.widget.ListPopupWindow:
    android.content.Context mContext -> b
    android.widget.PopupWindow mPopup -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView mDropDownList -> e
    int mDropDownHeight -> f
    int mDropDownWidth -> g
    int mDropDownHorizontalOffset -> h
    int mDropDownVerticalOffset -> i
    boolean mDropDownVerticalOffsetSet -> j
    boolean mDropDownAlwaysVisible -> k
    boolean mForceIgnoreOutsideTouch -> l
    int mListItemExpandMaximum -> a
    android.view.View mPromptView -> m
    int mPromptPosition -> n
    android.database.DataSetObserver mObserver -> o
    android.view.View mDropDownAnchorView -> p
    android.graphics.drawable.Drawable mDropDownListHighlight -> q
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> r
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> s
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> t
    android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> u
    android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener mScrollListener -> v
    android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider mHideSelector -> w
    java.lang.Runnable mShowDropDownRunnable -> x
    android.os.Handler mHandler -> y
    android.graphics.Rect mTempRect -> z
    boolean mModal -> A
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    android.graphics.drawable.Drawable getBackground() -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    android.view.View getAnchorView() -> b
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> b
    void setVerticalOffset(int) -> c
    void setWidth(int) -> d
    void setContentWidth(int) -> e
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> d
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void removePromptView() -> i
    void setInputMethodMode(int) -> f
    void setSelection(int) -> g
    void clearListSelection() -> e
    boolean isShowing() -> f
    boolean isInputMethodNotNeeded() -> g
    android.widget.ListView getListView() -> h
    int buildDropDown() -> j
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView access$700(android.support.v7.internal.widget.ListPopupWindow) -> a
    android.widget.PopupWindow access$800(android.support.v7.internal.widget.ListPopupWindow) -> b
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable access$900(android.support.v7.internal.widget.ListPopupWindow) -> c
    android.os.Handler access$1000(android.support.v7.internal.widget.ListPopupWindow) -> d
android.support.v7.internal.widget.ListPopupWindow$1 -> android.support.v7.internal.widget.ae:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$2 -> android.support.v7.internal.widget.af:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.internal.widget.ListPopupWindow$DropDownListView -> android.support.v7.internal.widget.ag:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    boolean access$502(android.support.v7.internal.widget.ListPopupWindow$DropDownListView,boolean) -> a
android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.internal.widget.ah:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.internal.widget.ai:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.internal.widget.aj:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.internal.widget.ak:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.internal.widget.al:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.NativeActionModeAwareLayout -> android.support.v7.internal.widget.NativeActionModeAwareLayout:
    android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener mActionModeForChildListener -> a
    void setActionModeForChildListener(android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener) -> setActionModeForChildListener
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener -> android.support.v7.internal.widget.am:
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
android.support.v7.internal.widget.ProgressBarICS -> android.support.v7.internal.widget.ProgressBarICS:
    int[] android_R_styleable_ProgressBar -> f
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> g
    int mSecondaryProgress -> h
    int mMax -> i
    int mBehavior -> j
    int mDuration -> k
    boolean mIndeterminate -> l
    boolean mOnlyIndeterminate -> m
    android.view.animation.Transformation mTransformation -> n
    android.view.animation.AlphaAnimation mAnimation -> o
    android.graphics.drawable.Drawable mIndeterminateDrawable -> p
    android.graphics.drawable.Drawable mProgressDrawable -> q
    android.graphics.drawable.Drawable mCurrentDrawable -> r
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> s
    android.view.animation.Interpolator mInterpolator -> t
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable mRefreshProgressRunnable -> u
    long mUiThreadId -> v
    boolean mShouldStartAnimationDrawable -> w
    long mLastDrawTime -> x
    boolean mInDrawing -> y
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void access$000(android.support.v7.internal.widget.ProgressBarICS,int,int,boolean,boolean) -> a
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable access$102(android.support.v7.internal.widget.ProgressBarICS,android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable) -> a
android.support.v7.internal.widget.ProgressBarICS$1 -> android.support.v7.internal.widget.an:
android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable -> android.support.v7.internal.widget.ao:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    android.support.v7.internal.widget.ProgressBarICS this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
android.support.v7.internal.widget.ProgressBarICS$SavedState -> android.support.v7.internal.widget.ProgressBarICS$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ProgressBarICS$SavedState$1 -> android.support.v7.internal.widget.ap:
    android.support.v7.internal.widget.ProgressBarICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ProgressBarICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> d
    android.widget.LinearLayout mTabLayout -> e
    android.support.v7.internal.widget.SpinnerICS mTabSpinner -> f
    boolean mAllowCollapse -> g
    android.view.LayoutInflater mInflater -> h
    int mMaxTabWidth -> b
    int mStackedTabMaxWidth -> c
    int mContentHeight -> i
    int mSelectedTabIndex -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.internal.widget.SpinnerICS createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> b
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void updateTab(int) -> b
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    android.widget.LinearLayout access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> android.support.v7.internal.widget.aq:
    android.view.View val$tabView -> a
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.internal.widget.ar:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.internal.widget.as:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ScrollingTabContainerView$TabView:
    android.support.v7.app.ActionBar$Tab mTab -> a
    android.widget.TextView mTextView -> b
    android.widget.ImageView mIconView -> c
    android.view.View mCustomView -> d
    android.support.v7.internal.widget.ScrollingTabContainerView mParent -> e
    void attach(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
android.support.v7.internal.widget.SpinnerICS -> android.support.v7.internal.widget.at:
    android.support.v7.internal.widget.SpinnerICS$SpinnerPopup mPopup -> F
    android.support.v7.internal.widget.SpinnerICS$DropDownAdapter mTempAdapter -> G
    int mDropDownWidth -> E
    int mGravity -> H
    android.graphics.Rect mTempRect -> I
    void setAdapter(android.widget.SpinnerAdapter) -> a
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    void setOnItemClickListenerInt(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> a
    android.view.View makeAndAddView(int) -> e
    void setUpChild(android.view.View) -> c
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$200(android.support.v7.internal.widget.SpinnerICS) -> a
android.support.v7.internal.widget.SpinnerICS$1 -> android.support.v7.internal.widget.au:
android.support.v7.internal.widget.SpinnerICS$DialogPopup -> android.support.v7.internal.widget.av:
    android.app.AlertDialog mPopup -> b
    android.widget.ListAdapter mListAdapter -> c
    java.lang.CharSequence mPrompt -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> a
    void dismiss() -> d
    boolean isShowing() -> f
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.widget.SpinnerICS$DropDownAdapter -> android.support.v7.internal.widget.aw:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.internal.widget.SpinnerICS$DropdownPopup -> android.support.v7.internal.widget.ax:
    java.lang.CharSequence mHintText -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> b
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    android.widget.ListAdapter access$100(android.support.v7.internal.widget.SpinnerICS$DropdownPopup) -> a
android.support.v7.internal.widget.SpinnerICS$DropdownPopup$1 -> android.support.v7.internal.widget.ay:
    android.support.v7.internal.widget.SpinnerICS val$this$0 -> a
    android.support.v7.internal.widget.SpinnerICS$DropdownPopup this$1 -> b
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.SpinnerICS$SpinnerPopup -> android.support.v7.internal.widget.az:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> c
    void dismiss() -> d
    boolean isShowing() -> f
    void setPromptText(java.lang.CharSequence) -> a
android.support.v7.view.ActionMode -> android.support.v7.b.a:
    void finish() -> a
android.support.v7.view.CollapsibleActionView -> android.support.v7.b.b:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> c
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> d
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> e
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> f
    android.view.View$OnClickListener mOnSearchClickListener -> g
    boolean mIconifiedByDefault -> h
    boolean mIconified -> i
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> j
    android.view.View mSearchButton -> k
    android.view.View mSubmitButton -> l
    android.view.View mSearchPlate -> m
    android.view.View mSubmitArea -> n
    android.widget.ImageView mCloseButton -> o
    android.view.View mSearchEditFrame -> p
    android.view.View mVoiceButton -> q
    android.support.v7.widget.SearchView$SearchAutoComplete mQueryTextView -> r
    android.view.View mDropDownAnchor -> s
    android.widget.ImageView mSearchHintIcon -> t
    boolean mSubmitButtonEnabled -> u
    java.lang.CharSequence mQueryHint -> v
    boolean mQueryRefinement -> w
    boolean mClearingFocus -> x
    int mMaxWidth -> y
    boolean mVoiceButtonEnabled -> z
    java.lang.CharSequence mOldQueryText -> A
    java.lang.CharSequence mUserQuery -> B
    boolean mExpandedInActionView -> C
    int mCollapsedImeOptions -> D
    android.app.SearchableInfo mSearchable -> E
    android.os.Bundle mAppSearchData -> F
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> a
    java.lang.Runnable mShowImeRunnable -> G
    java.lang.Runnable mUpdateDrawableStateRunnable -> H
    java.lang.Runnable mReleaseCursorRunnable -> I
    android.content.Intent mVoiceWebSearchIntent -> J
    android.content.Intent mVoiceAppSearchIntent -> K
    java.util.WeakHashMap mOutsideDrawablesCache -> L
    android.view.View$OnClickListener mOnClickListener -> M
    android.view.View$OnKeyListener mTextKeyListener -> b
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> N
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> O
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> P
    android.text.TextWatcher mTextWatcher -> Q
    void addOnLayoutChangeListenerToDropDownAnchorSDK11() -> e
    void addOnLayoutChangeListenerToDropDownAnchorBase() -> f
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> g
    boolean isSubmitAreaEnabled() -> h
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> i
    void updateCloseButton() -> j
    void postUpdateFocusedState() -> k
    void updateFocusedState() -> l
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> m
    void updateSearchAutoComplete() -> n
    void updateVoiceButton(boolean) -> c
    void onTextChanged(java.lang.CharSequence) -> c
    void onSubmitQuery() -> o
    void dismissSuggestions() -> p
    void onCloseClicked() -> q
    void onSearchClicked() -> r
    void onVoiceClicked() -> s
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void adjustDropDownSizeAndPosition() -> t
    boolean onItemClicked(int,int,java.lang.String) -> a
    boolean onItemSelected(int) -> a
    void rewriteQueryFromSuggestion(int) -> b
    boolean launchSuggestion(int,int,java.lang.String) -> b
    void launchIntent(android.content.Intent) -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    void forceSuggestionQuery() -> u
    boolean isLandscapeMode(android.content.Context) -> a
    void access$000(android.support.v7.widget.SearchView) -> a
    android.support.v4.widget.CursorAdapter access$100(android.support.v7.widget.SearchView) -> b
    android.view.View$OnFocusChangeListener access$200(android.support.v7.widget.SearchView) -> c
    void access$300(android.support.v7.widget.SearchView) -> d
    android.view.View access$400(android.support.v7.widget.SearchView) -> e
    void access$500(android.support.v7.widget.SearchView) -> f
    android.widget.ImageView access$600(android.support.v7.widget.SearchView) -> g
    void access$700(android.support.v7.widget.SearchView) -> h
    android.view.View access$800(android.support.v7.widget.SearchView) -> i
    void access$900(android.support.v7.widget.SearchView) -> j
    android.view.View access$1000(android.support.v7.widget.SearchView) -> k
    void access$1100(android.support.v7.widget.SearchView) -> l
    android.support.v7.widget.SearchView$SearchAutoComplete access$1200(android.support.v7.widget.SearchView) -> m
    void access$1300(android.support.v7.widget.SearchView) -> n
    android.app.SearchableInfo access$1400(android.support.v7.widget.SearchView) -> o
    boolean access$1500(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> a
    void access$1700(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String) -> a
    boolean access$1800(android.support.v7.widget.SearchView,int,int,java.lang.String) -> a
    boolean access$1900(android.support.v7.widget.SearchView,int) -> a
    void access$2000(android.support.v7.widget.SearchView,java.lang.CharSequence) -> a
    void access$2100(android.support.v7.widget.SearchView,boolean) -> a
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.a:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.b:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$11 -> android.support.v7.widget.c:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$12 -> android.support.v7.widget.d:
    android.support.v7.widget.SearchView this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.e:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.f:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.g:
    android.support.v7.widget.SearchView this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.h:
    android.support.v7.widget.SearchView this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.i:
    android.support.v7.widget.SearchView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.j:
    android.support.v7.widget.SearchView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.k:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.l:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.m:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    void showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int) -> a
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.n:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.o:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.p:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    android.support.v7.widget.SearchView mSearchView -> b
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> a
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$1600(android.support.v7.widget.SearchView$SearchAutoComplete) -> a
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.q:
    android.app.SearchManager mSearchManager -> j
    android.support.v7.widget.SearchView mSearchView -> k
    android.app.SearchableInfo mSearchable -> l
    android.content.Context mProviderContext -> m
    java.util.WeakHashMap mOutsideDrawablesCache -> n
    boolean mClosed -> o
    int mQueryRefinement -> p
    android.content.res.ColorStateList mUrlColor -> q
    int mText1Col -> r
    int mText2Col -> s
    int mText2UrlCol -> t
    int mIconName1Col -> u
    int mIconName2Col -> v
    int mFlagsCol -> w
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> d
    void changeCursor(android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> g
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> a
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> b
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.r:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
bolts.AggregateException -> bolts.AggregateException:
    long serialVersionUID -> serialVersionUID
bolts.AppLinkNavigation -> bolts.AppLinkNavigation:
bolts.AppLinkNavigation$NavigationResult -> bolts.AppLinkNavigation$NavigationResult:
    bolts.AppLinkNavigation$NavigationResult FAILED -> a
    bolts.AppLinkNavigation$NavigationResult WEB -> b
    bolts.AppLinkNavigation$NavigationResult APP -> c
    bolts.AppLinkNavigation$NavigationResult[] $VALUES -> d
    bolts.AppLinkNavigation$NavigationResult[] values() -> values
    bolts.AppLinkNavigation$NavigationResult valueOf(java.lang.String) -> valueOf
com.cardiomood.android.CardioMoodApplication -> com.cardiomood.android.CardioMoodApplication:
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> a
    android.database.sqlite.SQLiteDatabase database -> b
    void onCreate() -> onCreate
    com.cardiomood.android.db.DatabaseHelper getHelper() -> a
    void onTerminate() -> onTerminate
com.cardiomood.android.FeedbackActivity -> com.cardiomood.android.FeedbackActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.cardiomood.android.FeedbackActivity$FeedbackFragment -> com.cardiomood.android.a:
    android.app.ProgressDialog progressDialog -> b
    android.widget.EditText userMessage -> c
    android.widget.Spinner feedbackType -> d
    android.widget.RatingBar userRating -> e
    android.widget.Button buttonSubmit -> f
    android.widget.Button buttonOpenGooglePlay -> g
    com.cardiomood.android.tools.PreferenceHelper prefHelper -> h
    com.cardiomood.android.FeedbackActivity this$0 -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void openGooglePlay() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void submitFeedback() -> b
    void access$000(com.cardiomood.android.FeedbackActivity$FeedbackFragment) -> a
    void access$100(com.cardiomood.android.FeedbackActivity$FeedbackFragment) -> b
    android.app.ProgressDialog access$200(com.cardiomood.android.FeedbackActivity$FeedbackFragment) -> c
    android.app.ProgressDialog access$202(com.cardiomood.android.FeedbackActivity$FeedbackFragment,android.app.ProgressDialog) -> a
com.cardiomood.android.FeedbackActivity$FeedbackFragment$1 -> com.cardiomood.android.b:
    com.cardiomood.android.FeedbackActivity$FeedbackFragment this$1 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.FeedbackActivity$FeedbackFragment$2 -> com.cardiomood.android.c:
    com.cardiomood.android.FeedbackActivity$FeedbackFragment this$1 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.FeedbackActivity$FeedbackFragment$3 -> com.cardiomood.android.d:
    com.cardiomood.android.FeedbackActivity$FeedbackFragment this$1 -> a
    void done(com.parse.ParseException) -> done
com.cardiomood.android.LoginActivity -> com.cardiomood.android.LoginActivity:
    java.lang.String TAG -> a
    java.lang.String mEmail -> b
    java.lang.String mPassword -> c
    java.lang.String mFirstName -> d
    java.lang.String mLastName -> e
    boolean loginInProgress -> f
    android.widget.EditText mEmailView -> g
    android.widget.EditText mPasswordView -> h
    android.view.View mLoginFormView -> i
    android.view.View mLoginStatusView -> j
    android.widget.TextView mLoginStatusMessageView -> k
    com.cardiomood.android.tools.PreferenceHelper prefHelper -> l
    com.cardiomood.data.DataServiceHelper dataServiceHelper -> m
    android.widget.Toast toast -> n
    long lastBackPressTime -> o
    boolean resumed -> p
    com.facebook.UiLifecycleHelper uiHelper -> q
    com.facebook.Session$StatusCallback callback -> r
    com.facebook.widget.LoginButton fbLoginButton -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void fixBrokenSessions() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startMainActivity() -> a
    void attemptRegister() -> b
    void onSessionStateChange(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
    void attemptFacebookLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void attemptLogin() -> c
    void showProgress(boolean) -> a
    void performLogIn(com.cardiomood.data.json.ApiToken) -> a
    boolean isLoggedIn() -> d
    void onBackPressed() -> onBackPressed
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$000(com.cardiomood.android.LoginActivity,com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
    java.lang.String access$100(com.cardiomood.android.LoginActivity) -> a
    java.lang.String access$200(com.cardiomood.android.LoginActivity) -> b
    boolean access$302(com.cardiomood.android.LoginActivity,boolean) -> a
    void access$400(com.cardiomood.android.LoginActivity,boolean) -> b
    android.widget.EditText access$500(com.cardiomood.android.LoginActivity) -> c
    void access$600(com.cardiomood.android.LoginActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.facebook.widget.LoginButton access$700(com.cardiomood.android.LoginActivity) -> d
    java.lang.String access$102(com.cardiomood.android.LoginActivity,java.lang.String) -> a
    java.lang.String access$202(com.cardiomood.android.LoginActivity,java.lang.String) -> b
    java.lang.String access$802(com.cardiomood.android.LoginActivity,java.lang.String) -> c
    java.lang.String access$902(com.cardiomood.android.LoginActivity,java.lang.String) -> d
    com.cardiomood.android.tools.PreferenceHelper access$1000(com.cardiomood.android.LoginActivity) -> e
    java.lang.String access$1100() -> e
    android.view.View access$1200(com.cardiomood.android.LoginActivity) -> f
    android.view.View access$1300(com.cardiomood.android.LoginActivity) -> g
com.cardiomood.android.LoginActivity$1 -> com.cardiomood.android.e:
    com.cardiomood.android.LoginActivity this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.cardiomood.android.LoginActivity$10 -> com.cardiomood.android.f:
    boolean val$show -> a
    com.cardiomood.android.LoginActivity this$0 -> b
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.cardiomood.android.LoginActivity$11 -> com.cardiomood.android.g:
    java.lang.Long val$userId -> a
    java.lang.String val$email -> b
    java.lang.String val$password -> c
    java.lang.String val$firstName -> d
    java.lang.String val$lastName -> e
    com.cardiomood.android.LoginActivity this$0 -> f
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.cardiomood.android.LoginActivity$11$1 -> com.cardiomood.android.h:
    com.cardiomood.android.db.dao.ContinuousSessionDAO val$sessionDAO -> a
    java.lang.Long val$userLocalId -> b
    com.cardiomood.android.LoginActivity$11 this$1 -> c
    java.lang.Object call() -> call
com.cardiomood.android.LoginActivity$2 -> com.cardiomood.android.i:
    com.cardiomood.android.LoginActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.cardiomood.android.LoginActivity$3 -> com.cardiomood.android.j:
    com.cardiomood.android.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.LoginActivity$4 -> com.cardiomood.android.k:
    com.cardiomood.android.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.LoginActivity$5 -> com.cardiomood.android.l:
    com.cardiomood.android.LoginActivity this$0 -> a
    void onResult(com.cardiomood.data.json.UserProfile) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.LoginActivity$6 -> com.cardiomood.android.m:
    com.cardiomood.android.LoginActivity this$0 -> a
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.cardiomood.android.LoginActivity$7 -> com.cardiomood.android.n:
    java.lang.String val$email -> a
    java.lang.String val$generatedPassword -> b
    java.lang.String val$firstName -> c
    java.lang.String val$lastName -> d
    java.lang.String val$fbId -> e
    com.cardiomood.android.LoginActivity this$0 -> f
    void onResult(com.cardiomood.data.json.ApiToken) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.LoginActivity$8 -> com.cardiomood.android.o:
    com.cardiomood.android.LoginActivity this$0 -> a
    void onResult(com.cardiomood.data.json.ApiToken) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.LoginActivity$9 -> com.cardiomood.android.p:
    boolean val$show -> a
    com.cardiomood.android.LoginActivity this$0 -> b
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.cardiomood.android.MainActivity -> com.cardiomood.android.MainActivity:
    java.lang.String TAG -> q
    android.widget.Toast toast -> r
    long lastBackPressTime -> s
    boolean whatsNewDialogShown -> t
    com.cardiomood.android.tools.PreferenceHelper mPrefHelper -> u
    com.cardiomood.android.MainActivity$SectionsPagerAdapter mSectionsPagerAdapter -> o
    com.cardiomood.android.components.CustomViewPager mViewPager -> p
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> v
    com.cardiomood.data.DataServiceHelper dataServiceHelper -> w
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    com.cardiomood.android.db.DatabaseHelper getHelper() -> j
    void showWhatsNewDialog() -> k
    void openBluetoothSettings() -> l
    void showAboutDialog() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> a
    void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> b
    void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> c
    void logout() -> n
    void showChangePasswordDialog() -> o
    void onBackPressed() -> onBackPressed
    void access$000(com.cardiomood.android.MainActivity) -> a
    com.cardiomood.android.tools.PreferenceHelper access$100(com.cardiomood.android.MainActivity) -> b
    com.cardiomood.data.DataServiceHelper access$200(com.cardiomood.android.MainActivity) -> c
    void access$300(com.cardiomood.android.MainActivity) -> d
    com.cardiomood.android.db.DatabaseHelper access$400(com.cardiomood.android.MainActivity) -> e
    java.lang.String access$500() -> i
com.cardiomood.android.MainActivity$1 -> com.cardiomood.android.q:
    android.support.v7.app.ActionBar val$actionBar -> a
    com.cardiomood.android.MainActivity this$0 -> b
    void onPageSelected(int) -> a
com.cardiomood.android.MainActivity$2 -> com.cardiomood.android.r:
    android.support.v7.app.ActionBar val$actionBar -> a
    com.cardiomood.android.MainActivity this$0 -> b
    void run() -> run
com.cardiomood.android.MainActivity$3 -> com.cardiomood.android.s:
    com.cardiomood.android.MainActivity this$0 -> a
    void run() -> run
com.cardiomood.android.MainActivity$4 -> com.cardiomood.android.t:
    com.cardiomood.android.MainActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.cardiomood.android.MainActivity$5 -> com.cardiomood.android.u:
    com.cardiomood.android.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cardiomood.android.MainActivity$6 -> com.cardiomood.android.v:
    android.widget.EditText val$newPassword -> a
    android.widget.EditText val$confirmNewPassword -> b
    com.cardiomood.android.MainActivity this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.cardiomood.android.MainActivity$6$1 -> com.cardiomood.android.w:
    java.lang.String val$p1 -> a
    com.cardiomood.android.MainActivity$6 this$1 -> b
    void retry() -> retry
    void onResult(com.cardiomood.data.json.UserAccount) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.MainActivity$SectionsPagerAdapter -> com.cardiomood.android.x:
    com.cardiomood.android.MainActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> c
    com.cardiomood.android.db.entity.UserEntity saveProfileLocally() -> c
    void saveProfileRemotely(com.cardiomood.android.db.entity.UserEntity) -> a
    com.cardiomood.android.tools.fragments.ProfileFragment createProfileFragment() -> d
    com.cardiomood.android.db.entity.UserEntity access$600(com.cardiomood.android.MainActivity$SectionsPagerAdapter) -> a
    void access$700(com.cardiomood.android.MainActivity$SectionsPagerAdapter,com.cardiomood.android.db.entity.UserEntity) -> a
com.cardiomood.android.MainActivity$SectionsPagerAdapter$1 -> com.cardiomood.android.y:
    com.cardiomood.data.json.UserProfile val$profile -> a
    com.cardiomood.android.MainActivity$SectionsPagerAdapter this$1 -> b
    void retry() -> retry
    void onResult(java.lang.String) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.MainActivity$SectionsPagerAdapter$2 -> com.cardiomood.android.z:
    com.cardiomood.android.tools.fragments.ProfileFragment val$fragment -> a
    com.cardiomood.android.MainActivity$SectionsPagerAdapter this$1 -> b
    void onSave() -> a
    void onSync() -> b
com.cardiomood.android.MainActivity$SectionsPagerAdapter$2$1 -> com.cardiomood.android.aa:
    com.cardiomood.android.MainActivity$SectionsPagerAdapter$2 this$2 -> a
    void onResult(com.cardiomood.data.json.ApiToken) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.MainActivity$SectionsPagerAdapter$2$2 -> com.cardiomood.android.ab:
    com.cardiomood.android.MainActivity$SectionsPagerAdapter$2 this$2 -> a
    void retry() -> retry
    void onResult(com.cardiomood.data.json.UserProfile) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.MonitoringActivity -> com.cardiomood.android.MonitoringActivity:
    java.lang.String TAG -> q
    com.cardiomood.android.heartrate.CardioMoodHeartRateLeService mBluetoothLeService -> r
    com.cardiomood.android.gps.CardioMoodGPSService mGPSService -> s
    boolean receiverRegistered -> t
    boolean hrServiceBound -> u
    boolean gpsServiceBound -> v
    com.cardiomood.android.tools.PreferenceHelper preferenceHelper -> w
    java.util.Set fragments -> x
    android.content.ServiceConnection mServiceConnection -> y
    android.content.BroadcastReceiver dataReceiver -> z
    android.content.ServiceConnection mGPSServiceConnection -> A
    com.cardiomood.android.MonitoringActivity$SectionsPagerAdapter mSectionsPagerAdapter -> o
    com.cardiomood.android.components.CustomViewPager mViewPager -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> a
    void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> b
    void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> c
    int getCurrentBPM() -> i
    void updateView() -> j
    void startMonitoring() -> k
    void stopMonitoring() -> l
    void registerFragmentCallback(com.cardiomood.android.fragments.monitoring.FragmentCallback) -> a
    void unregisterFragmentCallback(com.cardiomood.android.fragments.monitoring.FragmentCallback) -> b
    boolean isGPSCollectingEnabled() -> m
    android.content.IntentFilter makeGattUpdateIntentFilter() -> n
    com.cardiomood.android.heartrate.CardioMoodHeartRateLeService access$002(com.cardiomood.android.MonitoringActivity,com.cardiomood.android.heartrate.CardioMoodHeartRateLeService) -> a
    com.cardiomood.android.heartrate.CardioMoodHeartRateLeService access$000(com.cardiomood.android.MonitoringActivity) -> a
    com.cardiomood.android.gps.CardioMoodGPSService access$100(com.cardiomood.android.MonitoringActivity) -> b
    boolean access$200(com.cardiomood.android.MonitoringActivity) -> c
    java.util.Set access$300(com.cardiomood.android.MonitoringActivity) -> d
    void access$400(com.cardiomood.android.MonitoringActivity) -> e
    com.cardiomood.android.gps.CardioMoodGPSService access$102(com.cardiomood.android.MonitoringActivity,com.cardiomood.android.gps.CardioMoodGPSService) -> a
com.cardiomood.android.MonitoringActivity$1 -> com.cardiomood.android.ac:
    com.cardiomood.android.MonitoringActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.cardiomood.android.MonitoringActivity$1$1 -> com.cardiomood.android.ad:
    com.cardiomood.android.MonitoringActivity$1 this$1 -> a
    void onStart() -> a
    void onDataSaved(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> a
com.cardiomood.android.MonitoringActivity$2 -> com.cardiomood.android.ae:
    com.cardiomood.android.MonitoringActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cardiomood.android.MonitoringActivity$3 -> com.cardiomood.android.af:
    com.cardiomood.android.MonitoringActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.cardiomood.android.MonitoringActivity$4 -> com.cardiomood.android.ag:
    android.support.v7.app.ActionBar val$actionBar -> a
    com.cardiomood.android.MonitoringActivity this$0 -> b
    void onPageSelected(int) -> a
com.cardiomood.android.MonitoringActivity$5 -> com.cardiomood.android.ah:
    int[] $SwitchMap$com$cardiomood$android$heartrate$AbstractDataCollector$Status -> a
com.cardiomood.android.MonitoringActivity$SectionsPagerAdapter -> com.cardiomood.android.ai:
    com.cardiomood.android.MonitoringActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> c
com.cardiomood.android.ReportPreviewActivity -> com.cardiomood.android.ReportPreviewActivity:
    java.lang.String TAG -> a
    android.widget.TextView tvPath -> b
    android.webkit.WebView webView -> c
    java.lang.String filePath -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void deleteAndClose() -> a
    void onBackPressed() -> onBackPressed
com.cardiomood.android.SessionDetailsActivity -> com.cardiomood.android.SessionDetailsActivity:
    com.cardiomood.android.SessionDetailsActivity$SectionsPagerAdapter mSectionsPagerAdapter -> o
    com.cardiomood.android.components.CustomViewPager mViewPager -> p
    long sessionId -> q
    int postRenderAction -> r
    com.j256.ormlite.dao.RuntimeExceptionDao sessionDAO -> s
    com.j256.ormlite.dao.RuntimeExceptionDao hrDAO -> t
    com.cardiomood.android.tools.PreferenceHelper pHelper -> u
    com.cardiomood.data.DataServiceHelper dataServiceHelper -> v
    java.util.Set reportFragments -> w
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> a
    void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> b
    void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> c
    void executePostRenderAction() -> i
    void showRenameSessionDialog() -> j
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void registerFragment(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> a
    void unregisterFragment(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> b
    com.cardiomood.android.db.DatabaseHelper getHelper() -> k
    void removeArtifacts() -> l
    void undoRemoveArtifacts() -> m
    boolean isPredefinedSession(long) -> a
    long access$000(com.cardiomood.android.SessionDetailsActivity) -> a
    com.j256.ormlite.dao.RuntimeExceptionDao access$100(com.cardiomood.android.SessionDetailsActivity) -> b
    com.cardiomood.android.tools.PreferenceHelper access$200(com.cardiomood.android.SessionDetailsActivity) -> c
    com.cardiomood.data.DataServiceHelper access$300(com.cardiomood.android.SessionDetailsActivity) -> d
com.cardiomood.android.SessionDetailsActivity$1 -> com.cardiomood.android.aj:
    android.support.v7.app.ActionBar val$actionBar -> a
    com.cardiomood.android.SessionDetailsActivity this$0 -> b
    void onPageSelected(int) -> a
com.cardiomood.android.SessionDetailsActivity$2 -> com.cardiomood.android.ak:
    com.cardiomood.android.SessionDetailsActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cardiomood.android.SessionDetailsActivity$3 -> com.cardiomood.android.al:
    android.widget.EditText val$userInput -> a
    com.cardiomood.android.SessionDetailsActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.cardiomood.android.SessionDetailsActivity$3$1 -> com.cardiomood.android.am:
    com.cardiomood.android.db.entity.ContinuousSessionEntity val$session -> a
    com.cardiomood.android.SessionDetailsActivity$3 this$1 -> b
    void retry() -> retry
    void onResult(com.cardiomood.data.json.CardioSession) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.SessionDetailsActivity$SectionsPagerAdapter -> com.cardiomood.android.an:
    java.util.List fragments -> b
    java.util.List titles -> c
    com.cardiomood.android.SessionDetailsActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> c
    void addFragment(java.lang.Class,java.lang.String) -> a
com.cardiomood.android.SettingsActivity -> com.cardiomood.android.SettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    com.cardiomood.android.fragments.SettingsFragment createMainFragment() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.cardiomood.android.tools.PreferenceActivityBase$AbstractMainFragment createMainFragment() -> b
com.cardiomood.android.SplashScreenActivity -> com.cardiomood.android.SplashScreenActivity:
    com.cardiomood.android.util.SystemUiHider mSystemUiHider -> d
    long timeToStart -> e
    android.os.AsyncTask startMainActivityTask -> f
    com.cardiomood.android.tools.PreferenceHelper prefHelper -> g
    android.view.View$OnTouchListener mDelayHideTouchListener -> a
    android.os.Handler mHideHandler -> b
    java.lang.Runnable mHideRunnable -> c
    void onCreate(android.os.Bundle) -> onCreate
    void openNextActivity() -> a
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void startMainActivity() -> b
    void delayedHide(int) -> a
    com.cardiomood.android.util.SystemUiHider access$100(com.cardiomood.android.SplashScreenActivity) -> a
    long access$202(com.cardiomood.android.SplashScreenActivity,long) -> a
    long access$200(com.cardiomood.android.SplashScreenActivity) -> b
    long access$222(com.cardiomood.android.SplashScreenActivity,long) -> b
    void access$300(com.cardiomood.android.SplashScreenActivity) -> c
com.cardiomood.android.SplashScreenActivity$1 -> com.cardiomood.android.ao:
    int mControlsHeight -> a
    int mShortAnimTime -> b
    android.view.View val$controlsView -> c
    com.cardiomood.android.SplashScreenActivity this$0 -> d
    void onVisibilityChange(boolean) -> a
com.cardiomood.android.SplashScreenActivity$2 -> com.cardiomood.android.ap:
    com.cardiomood.android.SplashScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.SplashScreenActivity$3 -> com.cardiomood.android.aq:
    com.cardiomood.android.SplashScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.SplashScreenActivity$4 -> com.cardiomood.android.ar:
    com.cardiomood.android.SplashScreenActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.cardiomood.android.SplashScreenActivity$5 -> com.cardiomood.android.as:
    com.cardiomood.android.SplashScreenActivity this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.cardiomood.android.SplashScreenActivity$6 -> com.cardiomood.android.at:
    com.cardiomood.android.SplashScreenActivity this$0 -> a
    void run() -> run
com.cardiomood.android.components.CustomViewPager -> com.cardiomood.android.components.CustomViewPager:
    boolean enabled -> a
    void setCurrentItem(int) -> setCurrentItem
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setPagingEnabled(boolean) -> setPagingEnabled
com.cardiomood.android.controls.CircledTextView -> com.cardiomood.android.controls.CircledTextView:
    int circleColor -> a
    float density -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void setCircleColor(int) -> setCircleColor
com.cardiomood.android.controls.R -> com.cardiomood.android.controls.a:
com.cardiomood.android.controls.R$drawable -> com.cardiomood.android.controls.b:
    int abc_ab_bottom_solid_dark_holo -> abc_ab_bottom_solid_dark_holo
    int abc_ab_bottom_solid_light_holo -> abc_ab_bottom_solid_light_holo
    int abc_ab_bottom_transparent_dark_holo -> abc_ab_bottom_transparent_dark_holo
    int abc_ab_bottom_transparent_light_holo -> abc_ab_bottom_transparent_light_holo
    int abc_ab_share_pack_holo_dark -> abc_ab_share_pack_holo_dark
    int abc_ab_share_pack_holo_light -> abc_ab_share_pack_holo_light
    int abc_ab_solid_dark_holo -> abc_ab_solid_dark_holo
    int abc_ab_solid_light_holo -> abc_ab_solid_light_holo
    int abc_ab_stacked_solid_dark_holo -> abc_ab_stacked_solid_dark_holo
    int abc_ab_stacked_solid_light_holo -> abc_ab_stacked_solid_light_holo
    int abc_ab_stacked_transparent_dark_holo -> abc_ab_stacked_transparent_dark_holo
    int abc_ab_stacked_transparent_light_holo -> abc_ab_stacked_transparent_light_holo
    int abc_ab_transparent_dark_holo -> abc_ab_transparent_dark_holo
    int abc_ab_transparent_light_holo -> abc_ab_transparent_light_holo
    int abc_cab_background_bottom_holo_dark -> abc_cab_background_bottom_holo_dark
    int abc_cab_background_bottom_holo_light -> abc_cab_background_bottom_holo_light
    int abc_cab_background_top_holo_dark -> abc_cab_background_top_holo_dark
    int abc_cab_background_top_holo_light -> abc_cab_background_top_holo_light
    int abc_ic_ab_back_holo_dark -> abc_ic_ab_back_holo_dark
    int abc_ic_ab_back_holo_light -> abc_ic_ab_back_holo_light
    int abc_ic_cab_done_holo_dark -> abc_ic_cab_done_holo_dark
    int abc_ic_cab_done_holo_light -> abc_ic_cab_done_holo_light
    int abc_ic_clear -> abc_ic_clear
    int abc_ic_clear_disabled -> abc_ic_clear_disabled
    int abc_ic_clear_holo_light -> abc_ic_clear_holo_light
    int abc_ic_clear_normal -> abc_ic_clear_normal
    int abc_ic_clear_search_api_disabled_holo_light -> abc_ic_clear_search_api_disabled_holo_light
    int abc_ic_clear_search_api_holo_light -> abc_ic_clear_search_api_holo_light
    int abc_ic_commit_search_api_holo_dark -> abc_ic_commit_search_api_holo_dark
    int abc_ic_commit_search_api_holo_light -> abc_ic_commit_search_api_holo_light
    int abc_ic_go -> abc_ic_go
    int abc_ic_go_search_api_holo_light -> abc_ic_go_search_api_holo_light
    int abc_ic_menu_moreoverflow_normal_holo_dark -> abc_ic_menu_moreoverflow_normal_holo_dark
    int abc_ic_menu_moreoverflow_normal_holo_light -> abc_ic_menu_moreoverflow_normal_holo_light
    int abc_ic_menu_share_holo_dark -> abc_ic_menu_share_holo_dark
    int abc_ic_menu_share_holo_light -> abc_ic_menu_share_holo_light
    int abc_ic_search -> abc_ic_search
    int abc_ic_search_api_holo_light -> abc_ic_search_api_holo_light
    int abc_ic_voice_search -> abc_ic_voice_search
    int abc_ic_voice_search_api_holo_light -> abc_ic_voice_search_api_holo_light
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_holo_dark -> abc_list_divider_holo_dark
    int abc_list_divider_holo_light -> abc_list_divider_holo_light
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_dropdown_panel_holo_dark -> abc_menu_dropdown_panel_holo_dark
    int abc_menu_dropdown_panel_holo_light -> abc_menu_dropdown_panel_holo_light
    int abc_menu_hardkey_panel_holo_dark -> abc_menu_hardkey_panel_holo_dark
    int abc_menu_hardkey_panel_holo_light -> abc_menu_hardkey_panel_holo_light
    int abc_search_dropdown_dark -> abc_search_dropdown_dark
    int abc_search_dropdown_light -> abc_search_dropdown_light
    int abc_spinner_ab_default_holo_dark -> abc_spinner_ab_default_holo_dark
    int abc_spinner_ab_default_holo_light -> abc_spinner_ab_default_holo_light
    int abc_spinner_ab_disabled_holo_dark -> abc_spinner_ab_disabled_holo_dark
    int abc_spinner_ab_disabled_holo_light -> abc_spinner_ab_disabled_holo_light
    int abc_spinner_ab_focused_holo_dark -> abc_spinner_ab_focused_holo_dark
    int abc_spinner_ab_focused_holo_light -> abc_spinner_ab_focused_holo_light
    int abc_spinner_ab_holo_dark -> abc_spinner_ab_holo_dark
    int abc_spinner_ab_holo_light -> abc_spinner_ab_holo_light
    int abc_spinner_ab_pressed_holo_dark -> abc_spinner_ab_pressed_holo_dark
    int abc_spinner_ab_pressed_holo_light -> abc_spinner_ab_pressed_holo_light
    int abc_tab_indicator_ab_holo -> abc_tab_indicator_ab_holo
    int abc_tab_selected_focused_holo -> abc_tab_selected_focused_holo
    int abc_tab_selected_holo -> abc_tab_selected_holo
    int abc_tab_selected_pressed_holo -> abc_tab_selected_pressed_holo
    int abc_tab_unselected_pressed_holo -> abc_tab_unselected_pressed_holo
    int abc_textfield_search_default_holo_dark -> abc_textfield_search_default_holo_dark
    int abc_textfield_search_default_holo_light -> abc_textfield_search_default_holo_light
    int abc_textfield_search_right_default_holo_dark -> abc_textfield_search_right_default_holo_dark
    int abc_textfield_search_right_default_holo_light -> abc_textfield_search_right_default_holo_light
    int abc_textfield_search_right_selected_holo_dark -> abc_textfield_search_right_selected_holo_dark
    int abc_textfield_search_right_selected_holo_light -> abc_textfield_search_right_selected_holo_light
    int abc_textfield_search_selected_holo_dark -> abc_textfield_search_selected_holo_dark
    int abc_textfield_search_selected_holo_light -> abc_textfield_search_selected_holo_light
    int abc_textfield_searchview_holo_dark -> abc_textfield_searchview_holo_dark
    int abc_textfield_searchview_holo_light -> abc_textfield_searchview_holo_light
    int abc_textfield_searchview_right_holo_dark -> abc_textfield_searchview_right_holo_dark
    int abc_textfield_searchview_right_holo_light -> abc_textfield_searchview_right_holo_light
    int img_empty_battery_horisontal -> img_empty_battery_horisontal
    int img_empty_battery_vertical -> img_empty_battery_vertical
    int spot_mask -> spot_mask
com.cardiomood.android.controls.R$styleable -> com.cardiomood.android.controls.c:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowFixedHeightMajor -> ActionBarWindow_windowFixedHeightMajor
    int ActionBarWindow_windowFixedHeightMinor -> ActionBarWindow_windowFixedHeightMinor
    int ActionBarWindow_windowFixedWidthMajor -> ActionBarWindow_windowFixedWidthMajor
    int ActionBarWindow_windowFixedWidthMinor -> ActionBarWindow_windowFixedWidthMinor
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] BatteryIndicatorGauge -> BatteryIndicatorGauge
    int BatteryIndicatorGauge_max -> BatteryIndicatorGauge_max
    int BatteryIndicatorGauge_min -> BatteryIndicatorGauge_min
    int BatteryIndicatorGauge_orientation -> BatteryIndicatorGauge_orientation
    int BatteryIndicatorGauge_value -> BatteryIndicatorGauge_value
    int[] CircularProgressBar -> CircularProgressBar
    int CircularProgressBar_color -> CircularProgressBar_color
    int CircularProgressBar_lineWidth -> CircularProgressBar_lineWidth
    int CircularProgressBar_max -> CircularProgressBar_max
    int CircularProgressBar_min -> CircularProgressBar_min
    int CircularProgressBar_progress -> CircularProgressBar_progress
    int CircularProgressBar_textSize -> CircularProgressBar_textSize
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] SpeedometerGauge -> SpeedometerGauge
    int SpeedometerGauge_labelTextSize -> SpeedometerGauge_labelTextSize
    int SpeedometerGauge_maxSpeed -> SpeedometerGauge_maxSpeed
    int SpeedometerGauge_speed -> SpeedometerGauge_speed
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
com.cardiomood.android.controls.gauge.BatteryIndicatorGauge -> com.cardiomood.android.controls.gauge.BatteryIndicatorGauge:
    com.cardiomood.android.controls.gauge.BatteryIndicatorGauge$ValueToColorConverter DEFAULT_CONVERTER -> a
    float max -> b
    float value -> c
    float min -> d
    int orientation -> e
    com.cardiomood.android.controls.gauge.BatteryIndicatorGauge$ValueToColorConverter valueToColorConverter -> f
    float density -> g
    android.graphics.Paint mPaint -> h
    android.graphics.Paint bmpPaint -> i
    android.graphics.Paint ovalPaint -> j
    android.graphics.Bitmap batteryBitmap -> k
    float getMax() -> getMax
    void setMax(float) -> setMax
    float getMin() -> getMin
    void setMin(float) -> setMin
    float getValue() -> getValue
    void setValue(float) -> setValue
    android.animation.ValueAnimator setValue(float,long,long) -> a
    com.cardiomood.android.controls.gauge.BatteryIndicatorGauge$ValueToColorConverter getValueToColorConverter() -> getValueToColorConverter
    void setValueToColorConverter(com.cardiomood.android.controls.gauge.BatteryIndicatorGauge$ValueToColorConverter) -> setValueToColorConverter
    int getColorForValue(float) -> a
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    float getPercentage() -> getPercentage
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void init() -> a
    float getOriginalWidth() -> getOriginalWidth
    float getOriginalHeight() -> getOriginalHeight
    android.graphics.RectF getRect(float,float) -> a
    android.graphics.RectF getBatteryContentRect(android.graphics.RectF) -> a
com.cardiomood.android.controls.gauge.BatteryIndicatorGauge$1 -> com.cardiomood.android.controls.gauge.a:
    int getColorOf(com.cardiomood.android.controls.gauge.BatteryIndicatorGauge,float) -> a
com.cardiomood.android.controls.gauge.BatteryIndicatorGauge$2 -> com.cardiomood.android.controls.gauge.b:
    com.cardiomood.android.controls.gauge.BatteryIndicatorGauge this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.cardiomood.android.controls.gauge.BatteryIndicatorGauge$ValueToColorConverter -> com.cardiomood.android.controls.gauge.c:
    int getColorOf(com.cardiomood.android.controls.gauge.BatteryIndicatorGauge,float) -> a
com.cardiomood.android.controls.gauge.NeedleGauge -> com.cardiomood.android.controls.gauge.NeedleGauge:
com.cardiomood.android.controls.gauge.SpeedometerGauge -> com.cardiomood.android.controls.gauge.SpeedometerGauge:
    java.lang.String TAG -> a
    double maxSpeed -> b
    double speed -> c
    int defaultColor -> d
    double majorTickStep -> e
    int minorTicks -> f
    com.cardiomood.android.controls.gauge.SpeedometerGauge$LabelConverter labelConverter -> g
    java.util.List ranges -> h
    android.graphics.Paint backgroundPaint -> i
    android.graphics.Paint backgroundInnerPaint -> j
    android.graphics.Paint maskPaint -> k
    android.graphics.Paint needlePaint -> l
    android.graphics.Paint ticksPaint -> m
    android.graphics.Paint txtPaint -> n
    android.graphics.Paint colorLinePaint -> o
    int labelTextSize -> p
    android.graphics.Bitmap mMask -> q
    double getMaxSpeed() -> getMaxSpeed
    void setMaxSpeed(double) -> setMaxSpeed
    double getSpeed() -> getSpeed
    void setSpeed(double) -> setSpeed
    android.animation.ValueAnimator setSpeed(double,long,long) -> a
    int getDefaultColor() -> getDefaultColor
    void setDefaultColor(int) -> setDefaultColor
    double getMajorTickStep() -> getMajorTickStep
    void setMajorTickStep(double) -> setMajorTickStep
    int getMinorTicks() -> getMinorTicks
    void setMinorTicks(int) -> setMinorTicks
    com.cardiomood.android.controls.gauge.SpeedometerGauge$LabelConverter getLabelConverter() -> getLabelConverter
    void setLabelConverter(com.cardiomood.android.controls.gauge.SpeedometerGauge$LabelConverter) -> setLabelConverter
    void addColoredRange(double,double,int) -> a
    int getLabelTextSize() -> getLabelTextSize
    void setLabelTextSize(int) -> setLabelTextSize
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawNeedle(android.graphics.Canvas) -> a
    void drawTicks(android.graphics.Canvas) -> b
    android.graphics.RectF getOval(android.graphics.Canvas,float) -> a
    void drawBackground(android.graphics.Canvas) -> c
    void init() -> a
com.cardiomood.android.controls.gauge.SpeedometerGauge$1 -> com.cardiomood.android.controls.gauge.d:
    com.cardiomood.android.controls.gauge.SpeedometerGauge this$0 -> a
    java.lang.Double evaluate(float,java.lang.Double,java.lang.Double) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.cardiomood.android.controls.gauge.SpeedometerGauge$2 -> com.cardiomood.android.controls.gauge.e:
    com.cardiomood.android.controls.gauge.SpeedometerGauge this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.cardiomood.android.controls.gauge.SpeedometerGauge$ColoredRange -> com.cardiomood.android.controls.gauge.f:
    int color -> a
    double begin -> b
    double end -> c
    int getColor() -> a
    double getBegin() -> b
    double getEnd() -> c
com.cardiomood.android.controls.gauge.SpeedometerGauge$LabelConverter -> com.cardiomood.android.controls.gauge.g:
    java.lang.String getLabelFor(double,double) -> a
com.cardiomood.android.controls.progress.CircularProgressBar -> com.cardiomood.android.controls.progress.CircularProgressBar:
    float max -> a
    float progress -> b
    float min -> c
    float lineWidth -> d
    int color -> e
    float textSize -> f
    int textColor -> g
    com.cardiomood.android.controls.progress.CircularProgressBar$LabelConverter labelConverter -> h
    float density -> i
    android.graphics.Paint mPaint -> j
    android.graphics.Paint txtPaint -> k
    float getMax() -> getMax
    void setMax(float) -> setMax
    float getProgress() -> getProgress
    void setProgress(float) -> setProgress
    android.animation.ValueAnimator setProgress(float,long) -> a
    float getMin() -> getMin
    void setMin(float) -> setMin
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    int getColor() -> getColor
    void setColor(int) -> setColor
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    com.cardiomood.android.controls.progress.CircularProgressBar$LabelConverter getLabelConverter() -> getLabelConverter
    void setLabelConverter(com.cardiomood.android.controls.progress.CircularProgressBar$LabelConverter) -> setLabelConverter
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.RectF getOval(int,int,float) -> a
    void init() -> a
com.cardiomood.android.controls.progress.CircularProgressBar$1 -> com.cardiomood.android.controls.progress.a:
    com.cardiomood.android.controls.progress.CircularProgressBar this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.cardiomood.android.controls.progress.CircularProgressBar$LabelConverter -> com.cardiomood.android.controls.progress.b:
    java.lang.String getLabelFor(float,float,android.graphics.Paint) -> a
com.cardiomood.android.db.DBUpgradeHelper -> com.cardiomood.android.db.DBUpgradeHelper:
    java.lang.String TAG -> TAG
    android.database.sqlite.SQLiteDatabase database -> database
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> databaseHelper
    com.cardiomood.android.tools.PreferenceHelper preferenceHelper -> preferenceHelper
    java.util.List upgradeChain -> upgradeChain
    void addUpgrader(int,int,com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader$Callback) -> addUpgrader
    void performUpgrade(int,int) -> performUpgrade
    com.cardiomood.android.tools.PreferenceHelper access$000(com.cardiomood.android.db.DBUpgradeHelper) -> access$000
com.cardiomood.android.db.DBUpgradeHelper$1 -> com.cardiomood.android.db.DBUpgradeHelper$1:
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$2 -> com.cardiomood.android.db.DBUpgradeHelper$2:
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$3 -> com.cardiomood.android.db.DBUpgradeHelper$3:
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$4 -> com.cardiomood.android.db.DBUpgradeHelper$4:
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$5 -> com.cardiomood.android.db.DBUpgradeHelper$5:
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$6 -> com.cardiomood.android.db.DBUpgradeHelper$6:
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$7 -> com.cardiomood.android.db.DBUpgradeHelper$7:
    com.cardiomood.android.db.DatabaseHelper val$databaseHelper -> val$databaseHelper
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$8 -> com.cardiomood.android.db.DBUpgradeHelper$8:
    com.cardiomood.android.db.DatabaseHelper val$databaseHelper -> val$databaseHelper
    com.cardiomood.android.db.DBUpgradeHelper this$0 -> this$0
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader -> com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader:
    android.database.sqlite.SQLiteDatabase database -> database
    int oldVersion -> oldVersion
    int newVersion -> newVersion
    com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader$Callback callback -> callback
    int getOldVersion() -> getOldVersion
    void setOldVersion(int) -> setOldVersion
    int getNewVersion() -> getNewVersion
    void setNewVersion(int) -> setNewVersion
    com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader onUpgrade(com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader$Callback) -> onUpgrade
    void upgrade() -> upgrade
com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader$Callback -> com.cardiomood.android.db.DBUpgradeHelper$DBUpgrader$Callback:
    void onUpgrade(android.database.sqlite.SQLiteDatabase) -> onUpgrade
com.cardiomood.android.db.DatabaseHelper -> com.cardiomood.android.db.DatabaseHelper:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    com.cardiomood.android.tools.PreferenceHelper pHelper -> pHelper
    android.database.sqlite.SQLiteDatabase database -> database
    void backupDB() -> backupDB
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    android.content.Context getmContext() -> getmContext
com.cardiomood.android.db.HeartRateDBContract -> com.cardiomood.android.db.HeartRateDBContract:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
com.cardiomood.android.db.HeartRateDBContract$HeartRateData -> com.cardiomood.android.db.HeartRateDBContract$HeartRateData:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String COLUMN_NAME_SESSION_ID -> COLUMN_NAME_SESSION_ID
    java.lang.String COLUMN_NAME_BPM -> COLUMN_NAME_BPM
    java.lang.String COLUMN_NAME_RR_TIME -> COLUMN_NAME_RR_TIME
    java.lang.String COLUMN_NAME_TIME_STAMP -> COLUMN_NAME_TIME_STAMP
com.cardiomood.android.db.HeartRateDBContract$SQL -> com.cardiomood.android.db.HeartRateDBContract$SQL:
    java.lang.String TEXT_TYPE -> TEXT_TYPE
    java.lang.String COMMA_SEP -> COMMA_SEP
    java.lang.String CREATE_TABLE_HR_DATA -> CREATE_TABLE_HR_DATA
    java.lang.String CREATE_TABLE_SESSIONS -> CREATE_TABLE_SESSIONS
    java.lang.String CREATE_TABLE_USERS -> CREATE_TABLE_USERS
com.cardiomood.android.db.HeartRateDBContract$Sessions -> com.cardiomood.android.db.HeartRateDBContract$Sessions:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String COLUMN_NAME_EXTERNAL_ID -> COLUMN_NAME_EXTERNAL_ID
    java.lang.String COLUMN_NAME_ORIGINAL_SESSION_ID -> COLUMN_NAME_ORIGINAL_SESSION_ID
    java.lang.String COLUMN_NAME_USER_ID -> COLUMN_NAME_USER_ID
    java.lang.String COLUMN_NAME_NAME -> COLUMN_NAME_NAME
    java.lang.String COLUMN_NAME_DESCRIPTION -> COLUMN_NAME_DESCRIPTION
    java.lang.String COLUMN_NAME_DATE_STARTED -> COLUMN_NAME_DATE_STARTED
    java.lang.String COLUMN_NAME_DATE_ENDED -> COLUMN_NAME_DATE_ENDED
    java.lang.String COLUMN_NAME_STATUS -> COLUMN_NAME_STATUS
com.cardiomood.android.db.HeartRateDBContract$Users -> com.cardiomood.android.db.HeartRateDBContract$Users:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String COLUMN_NAME_EXTERNAL_ID -> COLUMN_NAME_EXTERNAL_ID
    java.lang.String COLUMN_NAME_EMAIL -> COLUMN_NAME_EMAIL
    java.lang.String COLUMN_NAME_PASSWORD -> COLUMN_NAME_PASSWORD
    java.lang.String COLUMN_NAME_STATUS -> COLUMN_NAME_STATUS
com.cardiomood.android.db.dao.ContinuousSessionDAO -> com.cardiomood.android.db.dao.ContinuousSessionDAO:
com.cardiomood.android.db.dao.GPSLocationDAO -> com.cardiomood.android.db.dao.GPSLocationDAO:
com.cardiomood.android.db.dao.RRIntervalDAO -> com.cardiomood.android.db.dao.RRIntervalDAO:
com.cardiomood.android.db.dao.UserDAO -> com.cardiomood.android.db.dao.UserDAO:
    com.cardiomood.android.db.entity.UserEntity findByExternalId(java.lang.Long) -> findByExternalId
com.cardiomood.android.db.entity.ContinuousSessionEntity -> com.cardiomood.android.db.entity.ContinuousSessionEntity:
    java.lang.Long id -> id
    java.lang.Long externalId -> externalId
    com.cardiomood.android.db.entity.ContinuousSessionEntity originalSession -> originalSession
    java.lang.Long userId -> userId
    java.lang.String name -> name
    java.lang.String description -> description
    com.cardiomood.android.db.entity.SessionStatus status -> status
    java.util.Date dateStarted -> dateStarted
    java.util.Date dateEnded -> dateEnded
    long lastModified -> lastModified
    java.lang.String dataClassName -> dataClassName
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.Long getExternalId() -> getExternalId
    void setExternalId(java.lang.Long) -> setExternalId
    com.cardiomood.android.db.entity.ContinuousSessionEntity getOriginalSession() -> getOriginalSession
    void setOriginalSession(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> setOriginalSession
    java.lang.Long getUserId() -> getUserId
    void setUserId(java.lang.Long) -> setUserId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.cardiomood.android.db.entity.SessionStatus getStatus() -> getStatus
    void setStatus(com.cardiomood.android.db.entity.SessionStatus) -> setStatus
    java.util.Date getDateStarted() -> getDateStarted
    void setDateStarted(java.util.Date) -> setDateStarted
    java.util.Date getDateEnded() -> getDateEnded
    void setDateEnded(java.util.Date) -> setDateEnded
    long getLastModified() -> getLastModified
    void setLastModified(long) -> setLastModified
    java.lang.String getDataClassName() -> getDataClassName
    void setDataClassName(java.lang.String) -> setDataClassName
com.cardiomood.android.db.entity.GPSLocationEntity -> com.cardiomood.android.db.entity.GPSLocationEntity:
    double lat -> lat
    double lon -> lon
    java.lang.Double alt -> alt
    java.lang.Double speed -> speed
    java.lang.Double bearing -> bearing
    java.lang.Double accuracy -> accuracy
    double getLat() -> getLat
    void setLat(double) -> setLat
    double getLon() -> getLon
    void setLon(double) -> setLon
    java.lang.Double getAlt() -> getAlt
    void setAlt(java.lang.Double) -> setAlt
    java.lang.Double getSpeed() -> getSpeed
    void setSpeed(java.lang.Double) -> setSpeed
    java.lang.Double getAccuracy() -> getAccuracy
    void setAccuracy(java.lang.Double) -> setAccuracy
    java.lang.Double getBearing() -> getBearing
    void setBearing(java.lang.Double) -> setBearing
    com.cardiomood.data.json.JsonGPS toJsonDataItem() -> toJsonDataItem
    java.lang.Object toJsonDataItem() -> toJsonDataItem
com.cardiomood.android.db.entity.RRIntervalEntity -> com.cardiomood.android.db.entity.RRIntervalEntity:
    int heartBeatsPerMinute -> heartBeatsPerMinute
    double rrTime -> rrTime
    int getHeartBeatsPerMinute() -> getHeartBeatsPerMinute
    void setHeartBeatsPerMinute(int) -> setHeartBeatsPerMinute
    double getRrTime() -> getRrTime
    void setRrTime(double) -> setRrTime
    com.cardiomood.data.json.JsonRRInterval toJsonDataItem() -> toJsonDataItem
    java.lang.Object toJsonDataItem() -> toJsonDataItem
com.cardiomood.android.db.entity.SessionDataItem -> com.cardiomood.android.db.entity.SessionDataItem:
    java.lang.Long id -> id
    com.cardiomood.android.db.entity.ContinuousSessionEntity session -> session
    long timestamp -> timestamp
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    com.cardiomood.android.db.entity.ContinuousSessionEntity getSession() -> getSession
    void setSession(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> setSession
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    com.cardiomood.data.json.CardioDataItem toCardioDataItem() -> toCardioDataItem
    java.lang.Object toJsonDataItem() -> toJsonDataItem
com.cardiomood.android.db.entity.SessionStatus -> com.cardiomood.android.db.entity.SessionStatus:
    com.cardiomood.android.db.entity.SessionStatus NEW -> NEW
    com.cardiomood.android.db.entity.SessionStatus IN_PROGRESS -> IN_PROGRESS
    com.cardiomood.android.db.entity.SessionStatus COMPLETED -> COMPLETED
    com.cardiomood.android.db.entity.SessionStatus SYNCHRONIZING -> SYNCHRONIZING
    com.cardiomood.android.db.entity.SessionStatus SYNCHRONIZED -> SYNCHRONIZED
    com.cardiomood.android.db.entity.SessionStatus[] $VALUES -> $VALUES
    com.cardiomood.android.db.entity.SessionStatus[] values() -> values
    com.cardiomood.android.db.entity.SessionStatus valueOf(java.lang.String) -> valueOf
com.cardiomood.android.db.entity.UserEntity -> com.cardiomood.android.db.entity.UserEntity:
    java.lang.Long id -> id
    java.lang.Long externalId -> externalId
    java.lang.String email -> email
    java.lang.String password -> password
    com.cardiomood.android.db.entity.UserStatus status -> status
    java.lang.String firstName -> firstName
    java.lang.String lastName -> lastName
    java.lang.Float weight -> weight
    java.lang.Float height -> height
    java.lang.Long birthDate -> birthDate
    java.lang.String phoneNumber -> phoneNumber
    java.lang.String gender -> gender
    long lastModified -> lastModified
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.Long getExternalId() -> getExternalId
    void setExternalId(java.lang.Long) -> setExternalId
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    com.cardiomood.android.db.entity.UserStatus getStatus() -> getStatus
    void setStatus(com.cardiomood.android.db.entity.UserStatus) -> setStatus
    java.lang.String getFirstName() -> getFirstName
    void setFirstName(java.lang.String) -> setFirstName
    java.lang.String getLastName() -> getLastName
    void setLastName(java.lang.String) -> setLastName
    java.lang.Float getWeight() -> getWeight
    void setWeight(java.lang.Float) -> setWeight
    java.lang.Float getHeight() -> getHeight
    void setHeight(java.lang.Float) -> setHeight
    java.lang.Long getBirthDate() -> getBirthDate
    void setBirthDate(java.lang.Long) -> setBirthDate
    java.lang.String getPhoneNumber() -> getPhoneNumber
    void setPhoneNumber(java.lang.String) -> setPhoneNumber
    long getLastModified() -> getLastModified
    void setLastModified(long) -> setLastModified
    java.lang.String getGender() -> getGender
    void setGender(java.lang.String) -> setGender
    java.lang.String toString() -> toString
com.cardiomood.android.db.entity.UserStatus -> com.cardiomood.android.db.entity.UserStatus:
    com.cardiomood.android.db.entity.UserStatus NEW -> NEW
    com.cardiomood.android.db.entity.UserStatus EDITED -> EDITED
    com.cardiomood.android.db.entity.UserStatus SYNCHRONIZED -> SYNCHRONIZED
    com.cardiomood.android.db.entity.UserStatus[] $VALUES -> $VALUES
    com.cardiomood.android.db.entity.UserStatus[] values() -> values
    com.cardiomood.android.db.entity.UserStatus valueOf(java.lang.String) -> valueOf
com.cardiomood.android.dialogs.AboutDialog -> com.cardiomood.android.a.a:
    android.content.Context mContext -> a
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String readRawTextFile(int) -> a
com.cardiomood.android.dialogs.SaveAsDialog -> com.cardiomood.android.a.b:
    java.lang.String TAG -> a
    long sessionId -> b
    android.content.Context mContext -> c
    android.widget.ListView mListView -> d
    int filterCount -> e
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> f
    boolean savingInProgress -> g
    com.cardiomood.android.dialogs.SaveAsDialog$SavingCallback savingCallback -> h
    void onCreate(android.os.Bundle) -> onCreate
    void setSavingInProgress(boolean) -> a
    void setSavingCallback(com.cardiomood.android.dialogs.SaveAsDialog$SavingCallback) -> a
    void saveAsImage() -> b
    void saveAsTxt() -> a
    void access$000(com.cardiomood.android.dialogs.SaveAsDialog) -> a
    android.content.Context access$200(com.cardiomood.android.dialogs.SaveAsDialog) -> b
    long access$300(com.cardiomood.android.dialogs.SaveAsDialog) -> c
    com.cardiomood.android.dialogs.SaveAsDialog$SavingCallback access$400(com.cardiomood.android.dialogs.SaveAsDialog) -> d
    com.cardiomood.android.db.DatabaseHelper access$500(com.cardiomood.android.dialogs.SaveAsDialog) -> e
    int access$600(com.cardiomood.android.dialogs.SaveAsDialog) -> f
com.cardiomood.android.dialogs.SaveAsDialog$1 -> com.cardiomood.android.a.c:
    com.cardiomood.android.dialogs.SaveAsDialog this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cardiomood.android.dialogs.SaveAsDialog$SaveAsTextTask -> com.cardiomood.android.a.d:
    com.cardiomood.android.dialogs.SaveAsDialog this$0 -> a
    java.io.File getTextStorageDirectory() -> a
    java.lang.String generateFileName() -> b
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Long[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.android.dialogs.SaveAsDialog$SavingCallback -> com.cardiomood.android.a.e:
    void onBeginSave() -> a
    void onEndSave(java.lang.String) -> a
    void onError() -> b
com.cardiomood.android.dialogs.WhatsNewDialog -> com.cardiomood.android.a.f:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String readRawTextFile(int) -> a
com.cardiomood.android.fragments.ConnectionFragment -> com.cardiomood.android.fragments.ConnectionFragment:
    java.lang.String TAG -> a
    android.view.View container -> b
    android.widget.TextView hintText -> c
    android.widget.Button connectDeviceButton -> d
    android.widget.LinearLayout measurementOptionsLayout -> e
    android.widget.LinearLayout measurementStatusLayout -> f
    android.widget.LinearLayout timeLimitLayout -> g
    android.widget.LinearLayout countLimitLayout -> h
    android.widget.LinearLayout customLimitLayout -> i
    android.widget.Spinner limitTypeSpinner -> j
    android.widget.Spinner timeLimitSpinner -> k
    android.widget.Spinner countLimitSpinner -> l
    android.widget.EditText customCountLimitTxt -> m
    android.widget.EditText customTimeLimitTxt -> n
    android.widget.CheckBox startImmediately -> o
    com.cardiomood.android.controls.progress.CircularProgressBar measurementProgress -> p
    android.widget.TextView intervalsCollected -> q
    android.widget.TextView timeElapsed -> r
    com.cardiomood.android.tools.PreferenceHelper mPrefHelper -> s
    android.os.Handler mHandler -> t
    boolean mScanning -> u
    android.app.AlertDialog alertSelectDevice -> v
    boolean disableBluetoothOnClose -> w
    boolean receiverRegistered -> x
    boolean hrServiceBound -> y
    boolean gpsServiceBound -> z
    com.cardiomood.android.heartrate.CardioMoodHeartRateLeService mBluetoothLeService -> A
    com.cardiomood.android.gps.CardioMoodGPSService mGPSService -> B
    android.content.ServiceConnection mHRServiceConnection -> C
    android.content.ServiceConnection mGPSServiceConnection -> D
    android.content.BroadcastReceiver dataReceiver -> E
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> F
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void openMonitor() -> e
    void setDisconnectedView() -> f
    void setConnectedView() -> g
    boolean requestEnableBluetooth() -> a
    void performConnect() -> b
    boolean isGPSCollectingEnabled() -> h
    void performDisconnect() -> c
    com.cardiomood.android.heartrate.AbstractDataCollector createDataCollector() -> i
    com.cardiomood.android.db.DatabaseHelper getHelper() -> j
    boolean deviceConnected() -> k
    void updateView() -> l
    void showConnectionDialog() -> m
    void scanLeDevice(android.bluetooth.BluetoothAdapter,boolean,android.bluetooth.BluetoothAdapter$LeScanCallback) -> a
    void disableEnableControls(boolean,android.view.ViewGroup) -> a
    android.content.IntentFilter makeGattUpdateIntentFilter() -> n
    com.cardiomood.android.heartrate.CardioMoodHeartRateLeService access$002(com.cardiomood.android.fragments.ConnectionFragment,com.cardiomood.android.heartrate.CardioMoodHeartRateLeService) -> a
    void access$100(com.cardiomood.android.fragments.ConnectionFragment) -> a
    com.cardiomood.android.gps.CardioMoodGPSService access$202(com.cardiomood.android.fragments.ConnectionFragment,com.cardiomood.android.gps.CardioMoodGPSService) -> a
    android.os.Handler access$300(com.cardiomood.android.fragments.ConnectionFragment) -> b
    android.widget.Button access$400(com.cardiomood.android.fragments.ConnectionFragment) -> c
    android.widget.LinearLayout access$500(com.cardiomood.android.fragments.ConnectionFragment) -> d
    void access$600(com.cardiomood.android.fragments.ConnectionFragment,boolean,android.view.ViewGroup) -> a
    void access$700(com.cardiomood.android.fragments.ConnectionFragment) -> e
    void access$800(com.cardiomood.android.fragments.ConnectionFragment) -> f
    com.cardiomood.android.heartrate.CardioMoodHeartRateLeService access$000(com.cardiomood.android.fragments.ConnectionFragment) -> g
    android.widget.LinearLayout access$900(com.cardiomood.android.fragments.ConnectionFragment) -> h
    android.widget.LinearLayout access$1000(com.cardiomood.android.fragments.ConnectionFragment) -> i
    android.widget.LinearLayout access$1100(com.cardiomood.android.fragments.ConnectionFragment) -> j
    com.cardiomood.android.gps.CardioMoodGPSService access$200(com.cardiomood.android.fragments.ConnectionFragment) -> k
    boolean access$1200(com.cardiomood.android.fragments.ConnectionFragment) -> l
    boolean access$1300(com.cardiomood.android.fragments.ConnectionFragment) -> m
    boolean access$1400(com.cardiomood.android.fragments.ConnectionFragment) -> n
    com.cardiomood.android.controls.progress.CircularProgressBar access$1500(com.cardiomood.android.fragments.ConnectionFragment) -> o
    android.widget.TextView access$1600(com.cardiomood.android.fragments.ConnectionFragment) -> p
    android.widget.TextView access$1700(com.cardiomood.android.fragments.ConnectionFragment) -> q
    void access$1800(com.cardiomood.android.fragments.ConnectionFragment) -> r
    android.widget.TextView access$1900(com.cardiomood.android.fragments.ConnectionFragment) -> s
    java.lang.String access$2000() -> d
    void access$2100(com.cardiomood.android.fragments.ConnectionFragment,android.bluetooth.BluetoothAdapter,boolean,android.bluetooth.BluetoothAdapter$LeScanCallback) -> a
    android.app.AlertDialog access$2200(com.cardiomood.android.fragments.ConnectionFragment) -> t
    android.app.AlertDialog access$2202(com.cardiomood.android.fragments.ConnectionFragment,android.app.AlertDialog) -> a
    boolean access$2300(com.cardiomood.android.fragments.ConnectionFragment) -> u
    boolean access$2302(com.cardiomood.android.fragments.ConnectionFragment,boolean) -> a
com.cardiomood.android.fragments.ConnectionFragment$1 -> com.cardiomood.android.fragments.a:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.cardiomood.android.fragments.ConnectionFragment$10 -> com.cardiomood.android.fragments.b:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void run() -> run
com.cardiomood.android.fragments.ConnectionFragment$11 -> com.cardiomood.android.fragments.c:
    java.util.Set val$discoveredDevices -> a
    android.widget.ArrayAdapter val$mPairedDevicesArrayAdapter -> b
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> c
    void onLeScan(android.bluetooth.BluetoothDevice,int,byte[]) -> onLeScan
com.cardiomood.android.fragments.ConnectionFragment$11$1 -> com.cardiomood.android.fragments.d:
    android.bluetooth.BluetoothDevice val$bluetoothDevice -> a
    com.cardiomood.android.fragments.ConnectionFragment$11 this$1 -> b
    void run() -> run
com.cardiomood.android.fragments.ConnectionFragment$12 -> com.cardiomood.android.fragments.e:
    android.bluetooth.BluetoothAdapter val$bluetoothAdapter -> a
    java.lang.Object val$leScanCallback -> b
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> c
    void onShow(android.content.DialogInterface) -> onShow
com.cardiomood.android.fragments.ConnectionFragment$13 -> com.cardiomood.android.fragments.f:
    android.bluetooth.BluetoothAdapter val$bluetoothAdapter -> a
    java.lang.Object val$leScanCallback -> b
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> c
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.cardiomood.android.fragments.ConnectionFragment$14 -> com.cardiomood.android.fragments.g:
    android.bluetooth.BluetoothAdapter val$bluetoothAdapter -> a
    java.lang.Object val$leScanCallback -> b
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cardiomood.android.fragments.ConnectionFragment$15 -> com.cardiomood.android.fragments.h:
    android.bluetooth.BluetoothAdapter val$bluetoothAdapter -> a
    android.bluetooth.BluetoothAdapter$LeScanCallback val$leScanCallback -> b
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> c
    void run() -> run
com.cardiomood.android.fragments.ConnectionFragment$2 -> com.cardiomood.android.fragments.i:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.cardiomood.android.fragments.ConnectionFragment$3 -> com.cardiomood.android.fragments.j:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cardiomood.android.fragments.ConnectionFragment$3$1 -> com.cardiomood.android.fragments.k:
    com.cardiomood.android.fragments.ConnectionFragment$3 this$1 -> a
    void run() -> run
com.cardiomood.android.fragments.ConnectionFragment$4 -> com.cardiomood.android.fragments.l:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.fragments.ConnectionFragment$5 -> com.cardiomood.android.fragments.m:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    java.lang.String getLabelFor(float,float,android.graphics.Paint) -> a
com.cardiomood.android.fragments.ConnectionFragment$6 -> com.cardiomood.android.fragments.n:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.fragments.ConnectionFragment$7 -> com.cardiomood.android.fragments.o:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.cardiomood.android.fragments.ConnectionFragment$7$1 -> com.cardiomood.android.fragments.p:
    int val$position -> a
    com.cardiomood.android.fragments.ConnectionFragment$7 this$1 -> b
    void run() -> run
com.cardiomood.android.fragments.ConnectionFragment$8 -> com.cardiomood.android.fragments.q:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void run() -> run
com.cardiomood.android.fragments.ConnectionFragment$9 -> com.cardiomood.android.fragments.r:
    com.cardiomood.android.fragments.ConnectionFragment this$0 -> a
    void onStart() -> a
    void onDataSaved(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> a
com.cardiomood.android.fragments.HistoryFragment -> com.cardiomood.android.fragments.HistoryFragment:
    java.lang.String TAG -> a
    android.widget.ListView listView -> b
    android.view.View root -> c
    com.cardiomood.android.fragments.SessionsArrayAdapter listAdapter -> d
    com.cardiomood.android.tools.PreferenceHelper pHelper -> e
    com.cardiomood.data.DataServiceHelper serviceHelper -> f
    android.app.ProgressDialog pDialog -> g
    android.view.ActionMode mActionMode -> h
    java.lang.Long userId -> i
    java.lang.Long userExternalId -> j
    boolean initial -> k
    android.view.ActionMode$Callback mActionModeCallback -> l
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> m
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onStart() -> onStart
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void deleteItem(int) -> a
    void renameItem(int) -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onDestroy() -> onDestroy
    void sync() -> b
    void refresh() -> c
    com.cardiomood.android.db.DatabaseHelper getHelper() -> d
    boolean hasUpdatedSessions() -> e
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    com.cardiomood.android.fragments.SessionsArrayAdapter access$000(com.cardiomood.android.fragments.HistoryFragment) -> a
    android.view.ActionMode access$102(com.cardiomood.android.fragments.HistoryFragment,android.view.ActionMode) -> a
    void access$200(com.cardiomood.android.fragments.HistoryFragment) -> b
    boolean access$302(com.cardiomood.android.fragments.HistoryFragment,boolean) -> a
    com.cardiomood.android.db.DatabaseHelper access$500(com.cardiomood.android.fragments.HistoryFragment) -> c
    com.cardiomood.android.tools.PreferenceHelper access$600(com.cardiomood.android.fragments.HistoryFragment) -> d
    com.cardiomood.data.DataServiceHelper access$700(com.cardiomood.android.fragments.HistoryFragment) -> e
    java.lang.String access$800() -> a
    android.app.ProgressDialog access$902(com.cardiomood.android.fragments.HistoryFragment,android.app.ProgressDialog) -> a
    java.lang.Long access$1000(com.cardiomood.android.fragments.HistoryFragment) -> f
    android.app.ProgressDialog access$900(com.cardiomood.android.fragments.HistoryFragment) -> g
com.cardiomood.android.fragments.HistoryFragment$1 -> com.cardiomood.android.fragments.s:
    com.cardiomood.android.fragments.HistoryFragment this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.cardiomood.android.fragments.HistoryFragment$2 -> com.cardiomood.android.fragments.t:
    com.cardiomood.android.fragments.HistoryFragment this$0 -> a
    void run() -> run
com.cardiomood.android.fragments.HistoryFragment$3 -> com.cardiomood.android.fragments.u:
    com.cardiomood.android.fragments.HistoryFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cardiomood.android.fragments.HistoryFragment$4 -> com.cardiomood.android.fragments.v:
    long val$sessionId -> a
    android.widget.EditText val$userInput -> b
    com.cardiomood.android.db.entity.ContinuousSessionEntity val$itemSession -> c
    com.cardiomood.android.fragments.HistoryFragment this$0 -> d
    void onClick(android.content.DialogInterface,int) -> onClick
com.cardiomood.android.fragments.HistoryFragment$4$1 -> com.cardiomood.android.fragments.w:
    com.cardiomood.android.db.entity.ContinuousSessionEntity val$session -> a
    com.j256.ormlite.dao.RuntimeExceptionDao val$dao -> b
    com.cardiomood.android.fragments.HistoryFragment$4 this$1 -> c
    void retry() -> retry
    void onResult(com.cardiomood.data.json.CardioSession) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.fragments.HistoryFragment$5 -> com.cardiomood.android.fragments.x:
    android.app.Activity val$activity -> a
    com.cardiomood.android.fragments.HistoryFragment this$0 -> b
    void onResult(java.lang.Boolean) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.fragments.HistoryFragment$DeleteItemTask -> com.cardiomood.android.fragments.y:
    com.cardiomood.android.db.entity.ContinuousSessionEntity session -> c
    android.os.Handler handler -> d
    com.j256.ormlite.dao.RuntimeExceptionDao hrSessionDAO -> a
    com.cardiomood.android.fragments.HistoryFragment this$0 -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void logSessionDeletedEvent(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.android.fragments.HistoryFragment$DeleteItemTask$1 -> com.cardiomood.android.fragments.z:
    com.cardiomood.data.json.JSONResponse val$response -> a
    com.cardiomood.android.fragments.HistoryFragment$DeleteItemTask this$1 -> b
    void run() -> run
com.cardiomood.android.fragments.HistoryFragment$SyncTask -> com.cardiomood.android.fragments.aa:
    android.content.Context context -> b
    com.j256.ormlite.dao.RuntimeExceptionDao userDAO -> c
    com.j256.ormlite.dao.RuntimeExceptionDao sessionDAO -> d
    com.j256.ormlite.dao.RuntimeExceptionDao rrItemDAO -> e
    com.j256.ormlite.dao.RuntimeExceptionDao gpsItemDAO -> f
    com.cardiomood.android.fragments.HistoryFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void uploadSession(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> a
    void rewriteSessionData(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> b
    void downloadSession(com.cardiomood.data.json.CardioSession) -> a
    com.j256.ormlite.dao.RuntimeExceptionDao access$1200(com.cardiomood.android.fragments.HistoryFragment$SyncTask) -> a
    com.j256.ormlite.dao.RuntimeExceptionDao access$1300(com.cardiomood.android.fragments.HistoryFragment$SyncTask) -> b
com.cardiomood.android.fragments.HistoryFragment$SyncTask$1 -> com.cardiomood.android.fragments.ab:
    java.util.List val$items -> a
    com.cardiomood.android.fragments.HistoryFragment$SyncTask this$1 -> b
    java.lang.Object call() -> call
com.cardiomood.android.fragments.HistoryFragment$SyncTask$2 -> com.cardiomood.android.fragments.ac:
    java.util.List val$items -> a
    com.cardiomood.android.fragments.HistoryFragment$SyncTask this$1 -> b
    java.lang.Object call() -> call
com.cardiomood.android.fragments.SessionsArrayAdapter -> com.cardiomood.android.fragments.ad:
    java.text.DateFormat DATE_FORMAT -> a
    int selectedPosition -> b
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> c
    java.util.Map cache -> d
    void setSelectedItem(int) -> a
    int getSelectedItem() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void requestAvgHeartRate(java.lang.Long,com.cardiomood.android.controls.CircledTextView) -> a
    java.util.Map access$000(com.cardiomood.android.fragments.SessionsArrayAdapter) -> a
    com.cardiomood.android.db.DatabaseHelper access$100(com.cardiomood.android.fragments.SessionsArrayAdapter) -> b
com.cardiomood.android.fragments.SessionsArrayAdapter$1 -> com.cardiomood.android.fragments.ae:
    java.lang.Long val$id -> a
    com.cardiomood.android.controls.CircledTextView val$tv -> b
    com.cardiomood.android.fragments.SessionsArrayAdapter this$0 -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.cardiomood.android.fragments.SessionsEndlessAdapter -> com.cardiomood.android.fragments.af:
    com.j256.ormlite.dao.RuntimeExceptionDao sessionDAO -> a
    com.cardiomood.android.tools.PreferenceHelper pHelper -> b
    java.lang.Long userId -> c
    java.util.List cachedSessions -> d
    android.view.View getPendingView(android.view.ViewGroup) -> a
    boolean cacheInBackground() -> a
    void appendCachedData() -> b
com.cardiomood.android.fragments.SettingsFragment -> com.cardiomood.android.fragments.ag:
    android.preference.EditTextPreference mProtocolPref -> a
    android.preference.EditTextPreference mHostPref -> b
    android.preference.EditTextPreference mPortPref -> c
    android.preference.EditTextPreference mPathPref -> d
    android.preference.CheckBoxPreference mDisableBluetoothOnClosePref -> e
    android.preference.ListPreference mPreferredUnitSystemPref -> f
    android.preference.CheckBoxPreference mDisableSplashScreenPref -> g
    android.preference.CheckBoxPreference mLogGPSDataPref -> h
    android.preference.Preference mLastDeviceBatteryLevelPref -> i
    android.preference.CheckBoxPreference mSyncDisableRealTimePref -> j
    android.preference.ListPreference mSyncStrategyPref -> k
    com.cardiomood.android.tools.PreferenceHelper helper -> l
    void onCreate(android.os.Bundle) -> onCreate
    void refreshSummaries() -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.cardiomood.android.fragments.details.AbstractSessionReportFragment -> com.cardiomood.android.fragments.details.AbstractSessionReportFragment:
    java.lang.String TAG -> b
    java.text.DateFormat DATE_FORMAT -> a
    java.lang.Object lock -> c
    double[] time -> d
    double[] rrOriginal -> e
    com.shinobicontrols.charts.Axis xAxis -> f
    com.shinobicontrols.charts.Axis yAxis -> g
    long sessionId -> h
    boolean savingInProgress -> i
    android.widget.ScrollView scrollView -> j
    android.widget.LinearLayout progressView -> k
    android.support.v4.widget.ContentLoadingProgressBar progress -> l
    android.widget.TextView sessionName -> m
    android.widget.TextView sessionDate -> n
    com.shinobicontrols.charts.ChartView chartView -> o
    com.shinobicontrols.charts.ShinobiChart chart -> p
    android.widget.FrameLayout topCustomSection -> q
    android.widget.FrameLayout bottomCustomSection -> r
    int filterCount -> s
    int artifactsLeft -> t
    boolean refreshing -> u
    com.cardiomood.math.filter.ArtifactFilter FILTER -> v
    int artifactsFiltered -> w
    com.cardiomood.android.SessionDetailsActivity mHostActivity -> x
    double[] rr -> y
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> z
    com.cardiomood.android.fragments.details.AbstractSessionReportFragment newInstance(java.lang.Class,long) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.cardiomood.android.db.DatabaseHelper getHelper() -> a
    void saveThisRevision() -> s
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onAttach(android.app.Activity) -> onAttach
    void refresh() -> b
    int getTopCustomLayoutId() -> c
    int getBottomCustomLayoutId() -> d
    void removeArtifacts() -> e
    void undoRemoveArtifacts() -> f
    void showProgress() -> g
    void hideProgress() -> h
    com.shinobicontrols.charts.ShinobiChart getChart() -> i
    void showSaveAsDialog() -> t
    com.j256.ormlite.dao.RuntimeExceptionDao getSessionDao() -> j
    com.j256.ormlite.dao.RuntimeExceptionDao getRRIntervalDao() -> k
    com.shinobicontrols.charts.Axis getXAxis() -> l
    com.shinobicontrols.charts.Axis getYAxis() -> m
    void collectDataInBackground(com.cardiomood.android.db.entity.ContinuousSessionEntity,double[],double[]) -> a
    void displayData(double[]) -> a
    boolean access$202(com.cardiomood.android.fragments.details.AbstractSessionReportFragment,boolean) -> a
    java.lang.String access$300() -> n
    java.lang.Object access$400() -> o
    double[] access$500() -> p
    double[] access$602(double[]) -> b
    double[] access$502(double[]) -> c
    double[] access$600() -> q
    double[] access$702(com.cardiomood.android.fragments.details.AbstractSessionReportFragment,double[]) -> a
    int access$800(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> a
    int access$802(com.cardiomood.android.fragments.details.AbstractSessionReportFragment,int) -> a
    int access$900(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> b
    int access$812(com.cardiomood.android.fragments.details.AbstractSessionReportFragment,int) -> b
    double[] access$700(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> c
    com.cardiomood.math.filter.ArtifactFilter access$1000() -> r
    int access$1102(com.cardiomood.android.fragments.details.AbstractSessionReportFragment,int) -> c
    android.widget.TextView access$1200(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> d
    android.widget.TextView access$1300(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> e
    boolean access$1402(com.cardiomood.android.fragments.details.AbstractSessionReportFragment,boolean) -> b
    int access$1100(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> f
    long access$1500(com.cardiomood.android.fragments.details.AbstractSessionReportFragment) -> g
com.cardiomood.android.fragments.details.AbstractSessionReportFragment$1 -> com.cardiomood.android.fragments.details.a:
    com.cardiomood.android.fragments.details.AbstractSessionReportFragment this$0 -> a
    void onBeginSave() -> a
    void onEndSave(java.lang.String) -> a
    void onError() -> b
com.cardiomood.android.fragments.details.AbstractSessionReportFragment$DataLoadingTask -> com.cardiomood.android.fragments.details.b:
    com.j256.ormlite.dao.RuntimeExceptionDao sessionDAO -> b
    java.lang.String name -> c
    java.lang.String date -> d
    int artifactsRemoved -> e
    com.j256.ormlite.dao.RuntimeExceptionDao hrDAO -> f
    com.cardiomood.android.fragments.details.AbstractSessionReportFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    double[] doInBackground(java.lang.Long[]) -> a
    void onPostExecute(double[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.android.fragments.details.AbstractSessionReportFragment$SaveThisRevisionTask -> com.cardiomood.android.fragments.details.c:
    com.cardiomood.android.fragments.details.AbstractSessionReportFragment this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.cardiomood.android.fragments.details.AbstractSessionReportFragment$SaveThisRevisionTask$1 -> com.cardiomood.android.fragments.details.d:
    com.j256.ormlite.dao.RuntimeExceptionDao val$sessionDAO -> a
    com.cardiomood.android.db.entity.ContinuousSessionEntity val$session -> b
    java.util.List val$items -> c
    com.j256.ormlite.dao.RuntimeExceptionDao val$hrDAO -> d
    com.cardiomood.android.fragments.details.AbstractSessionReportFragment$SaveThisRevisionTask this$1 -> e
    java.lang.Object call() -> call
com.cardiomood.android.fragments.details.HistogramReportFragment -> com.cardiomood.android.fragments.details.HistogramReportFragment:
    java.lang.String TAG -> b
    com.j256.ormlite.dao.RuntimeExceptionDao hrDAO -> c
    com.cardiomood.math.histogram.Histogram histogram -> d
    com.shinobicontrols.charts.Axis getXAxis() -> l
    com.shinobicontrols.charts.Axis getYAxis() -> m
    void collectDataInBackground(com.cardiomood.android.db.entity.ContinuousSessionEntity,double[],double[]) -> a
    void displayData(double[]) -> a
    java.util.List getSeriesForIntervals(double[]) -> d
    int getBottomCustomLayoutId() -> d
com.cardiomood.android.fragments.details.OrganizationAReportFragment -> com.cardiomood.android.fragments.details.OrganizationAReportFragment:
    java.lang.String TAG -> b
    com.j256.ormlite.dao.RuntimeExceptionDao hrDAO -> c
    double[][] A -> d
    void onCreate(android.os.Bundle) -> onCreate
    com.shinobicontrols.charts.Axis getXAxis() -> l
    com.shinobicontrols.charts.Axis getYAxis() -> m
    void collectDataInBackground(com.cardiomood.android.db.entity.ContinuousSessionEntity,double[],double[]) -> a
    void displayData(double[]) -> a
com.cardiomood.android.fragments.details.OveralSessionReportFragment -> com.cardiomood.android.fragments.details.OveralSessionReportFragment:
    java.lang.String TAG -> b
    android.widget.TextView meanHeartRate -> c
    android.widget.TextView meanStressIndex -> d
    com.cardiomood.android.controls.gauge.SpeedometerGauge speedometer -> e
    double meanBPM -> f
    double stressIndex -> g
    double[] bpm -> h
    double[] time -> i
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    int getTopCustomLayoutId() -> c
    com.shinobicontrols.charts.Axis getXAxis() -> l
    com.shinobicontrols.charts.Axis getYAxis() -> m
    void collectDataInBackground(com.cardiomood.android.db.entity.ContinuousSessionEntity,double[],double[]) -> a
    void displayData(double[]) -> a
com.cardiomood.android.fragments.details.OveralSessionReportFragment$1 -> com.cardiomood.android.fragments.details.e:
    com.cardiomood.android.fragments.details.OveralSessionReportFragment this$0 -> a
    java.lang.String getLabelFor(double,double) -> a
com.cardiomood.android.fragments.details.ScatterogramReportFragment -> com.cardiomood.android.fragments.details.ScatterogramReportFragment:
    java.lang.String TAG -> b
    com.j256.ormlite.dao.RuntimeExceptionDao hrDAO -> c
    void onCreate(android.os.Bundle) -> onCreate
    com.shinobicontrols.charts.Axis getXAxis() -> l
    com.shinobicontrols.charts.Axis getYAxis() -> m
    void collectDataInBackground(com.cardiomood.android.db.entity.ContinuousSessionEntity,double[],double[]) -> a
    void displayData(double[]) -> a
    int getBottomCustomLayoutId() -> d
com.cardiomood.android.fragments.details.SpectralAnalysisReportFragment -> com.cardiomood.android.fragments.details.SpectralAnalysisReportFragment:
    java.lang.String TAG -> b
    com.cardiomood.math.spectrum.SpectralAnalysis sa -> c
    void onCreate(android.os.Bundle) -> onCreate
    com.shinobicontrols.charts.Axis getXAxis() -> l
    com.shinobicontrols.charts.Axis getYAxis() -> m
    void collectDataInBackground(com.cardiomood.android.db.entity.ContinuousSessionEntity,double[],double[]) -> a
    void displayData(double[]) -> a
    int getBottomCustomLayoutId() -> d
com.cardiomood.android.fragments.details.StressIndexReportFragment -> com.cardiomood.android.fragments.details.StressIndexReportFragment:
    java.lang.String TAG -> b
    com.j256.ormlite.dao.RuntimeExceptionDao hrDAO -> c
    double[][] SI -> d
    void onCreate(android.os.Bundle) -> onCreate
    com.shinobicontrols.charts.Axis getXAxis() -> l
    com.shinobicontrols.charts.Axis getYAxis() -> m
    void collectDataInBackground(com.cardiomood.android.db.entity.ContinuousSessionEntity,double[],double[]) -> a
    void displayData(double[]) -> a
com.cardiomood.android.fragments.details.TextReport -> com.cardiomood.android.fragments.details.f:
    java.text.DateFormat DATE_FORMAT -> a
    java.text.DateFormat TIME_FORMAT -> b
    com.cardiomood.math.filter.ArtifactFilter FILTER -> c
    java.lang.String reportFormat -> d
    java.util.Date startDate -> e
    java.util.Date endDate -> f
    java.lang.String tag -> g
    double[] rrIntervals -> h
    int artifactsCount -> i
    double heartRate -> j
    double mRR -> k
    double SDNN -> l
    double RMSSD -> m
    double pNN50 -> n
    com.cardiomood.math.spectrum.SpectralAnalysis spectrum -> o
    com.cardiomood.math.histogram.Histogram histogram50 -> p
    com.cardiomood.math.histogram.Histogram128Ext histogram128 -> q
    java.lang.String getReportFormat() -> a
    java.util.Date getStartDate() -> b
    java.util.Date getEndDate() -> c
    double[] getRrIntervals() -> d
    double getHeartRate() -> e
    double getmRR() -> f
    double getSDNN() -> g
    double getRMSSD() -> h
    double getpNN50() -> i
    com.cardiomood.math.spectrum.SpectralAnalysis getSpectrum() -> j
    com.cardiomood.math.histogram.Histogram getHistogram50() -> k
    com.cardiomood.math.histogram.Histogram128Ext getHistogram128() -> l
    java.lang.String getTag() -> m
    java.lang.String toString() -> toString
    java.util.Date access$202(com.cardiomood.android.fragments.details.TextReport,java.util.Date) -> a
    java.util.Date access$302(com.cardiomood.android.fragments.details.TextReport,java.util.Date) -> b
    java.lang.String access$402(com.cardiomood.android.fragments.details.TextReport,java.lang.String) -> a
    double[] access$502(com.cardiomood.android.fragments.details.TextReport,double[]) -> a
    java.util.Date access$300(com.cardiomood.android.fragments.details.TextReport) -> a
    java.util.Date access$200(com.cardiomood.android.fragments.details.TextReport) -> b
    double[] access$500(com.cardiomood.android.fragments.details.TextReport) -> c
    com.cardiomood.math.filter.ArtifactFilter access$600() -> n
    int access$702(com.cardiomood.android.fragments.details.TextReport,int) -> a
    com.cardiomood.math.spectrum.SpectralAnalysis access$802(com.cardiomood.android.fragments.details.TextReport,com.cardiomood.math.spectrum.SpectralAnalysis) -> a
    com.cardiomood.math.histogram.Histogram access$902(com.cardiomood.android.fragments.details.TextReport,com.cardiomood.math.histogram.Histogram) -> a
    double access$1002(com.cardiomood.android.fragments.details.TextReport,double) -> a
    double access$1102(com.cardiomood.android.fragments.details.TextReport,double) -> b
    double access$1000(com.cardiomood.android.fragments.details.TextReport) -> d
    double access$1202(com.cardiomood.android.fragments.details.TextReport,double) -> c
    double access$1302(com.cardiomood.android.fragments.details.TextReport,double) -> d
    double access$1402(com.cardiomood.android.fragments.details.TextReport,double) -> e
    com.cardiomood.math.histogram.Histogram128Ext access$1502(com.cardiomood.android.fragments.details.TextReport,com.cardiomood.math.histogram.Histogram128Ext) -> a
com.cardiomood.android.fragments.details.TextReport$1 -> com.cardiomood.android.fragments.details.g:
com.cardiomood.android.fragments.details.TextReport$Builder -> com.cardiomood.android.fragments.details.h:
    com.cardiomood.android.fragments.details.TextReport report -> a
    int filterCount -> b
    com.cardiomood.android.fragments.details.TextReport$Builder setStartDate(java.util.Date) -> a
    com.cardiomood.android.fragments.details.TextReport$Builder setEndDate(java.util.Date) -> b
    com.cardiomood.android.fragments.details.TextReport$Builder setTag(java.lang.String) -> a
    com.cardiomood.android.fragments.details.TextReport$Builder setRRIntervals(double[]) -> a
    com.cardiomood.android.fragments.details.TextReport build() -> a
    void setFilterCount(int) -> a
com.cardiomood.android.fragments.monitoring.ActivityCallback -> com.cardiomood.android.fragments.monitoring.a:
    void registerFragmentCallback(com.cardiomood.android.fragments.monitoring.FragmentCallback) -> a
    void unregisterFragmentCallback(com.cardiomood.android.fragments.monitoring.FragmentCallback) -> b
com.cardiomood.android.fragments.monitoring.FragmentCallback -> com.cardiomood.android.fragments.monitoring.b:
    void notifyBPM(com.cardiomood.android.heartrate.CardioMoodHeartRateLeService,int) -> a
    void notifyConnectionStatus(com.cardiomood.android.heartrate.CardioMoodHeartRateLeService,int,int) -> a
    void notifyProgress(com.cardiomood.android.heartrate.CardioMoodHeartRateLeService,double,int,long) -> a
com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment -> com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment:
    com.cardiomood.android.fragments.monitoring.ActivityCallback mCallback -> a
    int currentBPM -> b
    com.cardiomood.android.controls.progress.CircularProgressBar progressBar -> c
    android.widget.TextView intervalsCollected -> d
    android.widget.TextView timeElapsed -> e
    com.cardiomood.android.controls.gauge.BatteryIndicatorGauge batteryIndicator -> f
    com.cardiomood.android.controls.gauge.SpeedometerGauge stressIndicator -> g
    android.widget.TextView stressIndexValue -> h
    android.widget.TextView energyLevel -> i
    android.os.Handler handler -> j
    double lastStressIndex -> k
    double lastEnergyLevel -> l
    double artifactsPercentage -> m
    com.cardiomood.math.window.DataWindow$IntervalsCount batteryWindow -> n
    com.cardiomood.math.window.DataWindow$Timed stressWindow -> o
    com.cardiomood.math.window.DataWindow$Callback batteryWindowCallback -> p
    com.cardiomood.math.window.DataWindow$Callback stressWindowCallback -> q
    com.cardiomood.math.filter.ArtifactFilter filter -> r
    com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment newInstance() -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onStart() -> onStart
    void onStop() -> onStop
    void notifyBPM(com.cardiomood.android.heartrate.CardioMoodHeartRateLeService,int) -> a
    void notifyConnectionStatus(com.cardiomood.android.heartrate.CardioMoodHeartRateLeService,int,int) -> a
    void notifyProgress(com.cardiomood.android.heartrate.CardioMoodHeartRateLeService,double,int,long) -> a
    double access$002(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment,double) -> a
    com.cardiomood.math.filter.ArtifactFilter access$100() -> b
    double access$202(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment,double) -> b
    com.cardiomood.android.controls.gauge.BatteryIndicatorGauge access$300(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment) -> a
    android.widget.TextView access$400(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment) -> b
    android.os.Handler access$500(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment) -> c
    double access$602(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment,double) -> c
    com.cardiomood.android.controls.gauge.SpeedometerGauge access$700(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment) -> d
    android.widget.TextView access$800(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment) -> e
    int access$900(com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment) -> f
com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$1 -> com.cardiomood.android.fragments.monitoring.c:
    com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment this$0 -> a
    void onStep(com.cardiomood.math.window.DataWindow$IntervalsCount,int,double,double) -> a
    void onStep(com.cardiomood.math.window.DataWindow,int,double,double) -> a
com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$1$1 -> com.cardiomood.android.fragments.monitoring.d:
    com.cardiomood.math.window.DataWindow$IntervalsCount val$window -> a
    com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$1 this$1 -> b
    void run() -> run
com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$2 -> com.cardiomood.android.fragments.monitoring.e:
    com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment this$0 -> a
    void onStep(com.cardiomood.math.window.DataWindow$Timed,int,double,double) -> a
    void onStep(com.cardiomood.math.window.DataWindow,int,double,double) -> a
com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$2$1 -> com.cardiomood.android.fragments.monitoring.f:
    com.cardiomood.math.window.DataWindow$Timed val$window -> a
    com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$2 this$1 -> b
    void run() -> run
com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$3 -> com.cardiomood.android.fragments.monitoring.g:
    com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment this$0 -> a
    java.lang.String getLabelFor(float,float,android.graphics.Paint) -> a
com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment$4 -> com.cardiomood.android.fragments.monitoring.h:
    com.cardiomood.android.fragments.monitoring.HeartRateMonitoringFragment this$0 -> a
    java.lang.String getLabelFor(double,double) -> a
com.cardiomood.android.gps.CardioMoodGPSService -> com.cardiomood.android.gps.CardioMoodGPSService:
    java.lang.String TAG -> a
    android.os.IBinder mBinder -> b
    com.cardiomood.android.gps.GPSMonitor monitor -> c
    com.cardiomood.android.gps.CardioMoodGPSService$DataCollector dataCollector -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void close() -> a
    void stop() -> b
    void start() -> c
    void setDataCollector(com.cardiomood.android.gps.CardioMoodGPSService$DataCollector) -> a
    com.cardiomood.android.gps.GPSMonitor createGPSMonitor() -> d
    com.cardiomood.android.gps.CardioMoodGPSService$DataCollector access$000(com.cardiomood.android.gps.CardioMoodGPSService) -> a
com.cardiomood.android.gps.CardioMoodGPSService$1 -> com.cardiomood.android.gps.a:
    com.cardiomood.android.gps.CardioMoodGPSService this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.cardiomood.android.gps.CardioMoodGPSService$DataCollector -> com.cardiomood.android.gps.b:
    void onConnected() -> a
    void addData(android.location.Location) -> a
    void onDisconnected() -> b
com.cardiomood.android.gps.CardioMoodGPSService$LocalBinder -> com.cardiomood.android.gps.c:
    com.cardiomood.android.gps.CardioMoodGPSService this$0 -> a
    com.cardiomood.android.gps.CardioMoodGPSService getService() -> a
com.cardiomood.android.gps.GPSDataCollector -> com.cardiomood.android.gps.GPSDataCollector:
    java.lang.String TAG -> c
    com.cardiomood.data.DataServiceHelper dataService -> a
    com.cardiomood.data.json.CardioSessionWithData cardioSession -> b
    com.j256.ormlite.dao.RuntimeExceptionDao sessionDAO -> d
    com.j256.ormlite.dao.RuntimeExceptionDao gpsLocationDAO -> e
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> f
    com.cardiomood.android.tools.PreferenceHelper preferenceHelper -> g
    com.cardiomood.android.db.entity.ContinuousSessionEntity currentSession -> h
    java.util.List dataItems -> i
    java.util.List pendingData -> j
    com.cardiomood.android.tools.WorkerThread serverSyncWorker -> k
    int count -> l
    com.cardiomood.android.gps.GPSDataCollector$Listener listener -> m
    com.cardiomood.android.gps.GPSDataCollector$Status status -> n
    boolean creatingSession -> o
    void onStartCollecting() -> c
    void onFirstDataReceived() -> d
    void attemptCreateCardiomoodSession() -> l
    void onCompleteCollecting() -> e
    void processCollectedData() -> f
    void onConnected() -> a
    void addData(android.location.Location) -> a
    void onDisconnected() -> b
    void sendPendingData() -> m
    void setStatus(com.cardiomood.android.gps.GPSDataCollector$Status) -> a
    com.cardiomood.android.gps.GPSDataCollector$Status getStatus() -> g
    void startCollecting() -> h
    void stopCollecting() -> i
    boolean enoughDataCollected() -> j
    com.cardiomood.android.db.entity.ContinuousSessionEntity access$000(com.cardiomood.android.gps.GPSDataCollector) -> a
    java.lang.String access$100() -> k
    com.j256.ormlite.dao.RuntimeExceptionDao access$200(com.cardiomood.android.gps.GPSDataCollector) -> b
    com.cardiomood.android.tools.WorkerThread access$302(com.cardiomood.android.gps.GPSDataCollector,com.cardiomood.android.tools.WorkerThread) -> a
    com.cardiomood.android.tools.WorkerThread access$300(com.cardiomood.android.gps.GPSDataCollector) -> c
    boolean access$502(com.cardiomood.android.gps.GPSDataCollector,boolean) -> a
com.cardiomood.android.gps.GPSDataCollector$1 -> com.cardiomood.android.gps.d:
    com.cardiomood.android.gps.GPSDataCollector this$0 -> a
    void retry() -> retry
    void onResult(com.cardiomood.data.json.CardioSession) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.gps.GPSDataCollector$2 -> com.cardiomood.android.gps.e:
    com.cardiomood.android.gps.GPSDataCollector this$0 -> a
    void retry() -> retry
    void onResult(java.lang.String) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.gps.GPSDataCollector$Listener -> com.cardiomood.android.gps.f:
    void onComplete() -> a
    void onStart() -> b
    void onDataAdded(android.location.Location) -> a
    void onDataSaved(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> a
com.cardiomood.android.gps.GPSDataCollector$ServerSyncWorkerThread -> com.cardiomood.android.gps.g:
    com.cardiomood.data.json.CardioSession cardioSession -> b
    java.util.List buffer -> c
    com.cardiomood.android.gps.GPSDataCollector this$0 -> a
    void processItem(com.cardiomood.data.json.CardioDataItem) -> a
    void onStop() -> a
    void processItem(java.lang.Object) -> a
com.cardiomood.android.gps.GPSDataCollector$Status -> com.cardiomood.android.gps.GPSDataCollector$Status:
    com.cardiomood.android.gps.GPSDataCollector$Status NOT_STARTED -> a
    com.cardiomood.android.gps.GPSDataCollector$Status COLLECTING -> b
    com.cardiomood.android.gps.GPSDataCollector$Status COMPLETED -> c
    com.cardiomood.android.gps.GPSDataCollector$Status[] $VALUES -> d
    com.cardiomood.android.gps.GPSDataCollector$Status[] values() -> values
    com.cardiomood.android.gps.GPSDataCollector$Status valueOf(java.lang.String) -> valueOf
com.cardiomood.android.gps.GPSMonitor -> com.cardiomood.android.gps.h:
    java.lang.String TAG -> a
    com.cardiomood.android.tools.ConfigurationManager config -> b
    android.content.Context context -> c
    android.location.LocationManager locationManager -> d
    android.location.LocationListener listener -> e
    boolean running -> f
    android.location.Location currentLocation -> g
    long currentLocationTimestamp -> h
    android.location.LocationListener _listener -> i
    boolean isGPSEnabled() -> a
    void setListener(android.location.LocationListener) -> a
    boolean isRunning() -> b
    void start() -> c
    void stop() -> d
    java.lang.String access$100() -> e
    android.location.LocationListener access$200(com.cardiomood.android.gps.GPSMonitor) -> a
    android.location.Location access$302(com.cardiomood.android.gps.GPSMonitor,android.location.Location) -> a
    long access$402(com.cardiomood.android.gps.GPSMonitor,long) -> a
com.cardiomood.android.gps.GPSMonitor$1 -> com.cardiomood.android.gps.i:
com.cardiomood.android.gps.GPSMonitor$Listener -> com.cardiomood.android.gps.j:
    com.cardiomood.android.gps.GPSMonitor this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.cardiomood.android.heartrate.AbstractDataCollector -> com.cardiomood.android.heartrate.AbstractDataCollector:
    java.lang.String TAG -> e
    com.cardiomood.android.heartrate.CardioMoodHeartRateLeService service -> a
    com.cardiomood.math.DataWindowSet math -> b
    com.cardiomood.data.DataServiceHelper dataService -> c
    com.cardiomood.data.json.CardioSessionWithData cardioSession -> d
    com.j256.ormlite.dao.RuntimeExceptionDao sessionDAO -> f
    com.j256.ormlite.dao.RuntimeExceptionDao hrItemDAO -> g
    com.cardiomood.android.db.DatabaseHelper databaseHelper -> h
    com.cardiomood.android.tools.PreferenceHelper preferenceHelper -> i
    com.cardiomood.android.db.entity.ContinuousSessionEntity currentSession -> j
    java.util.List heartRateDataItems -> k
    java.util.List pendingData -> l
    int count -> m
    com.cardiomood.android.tools.WorkerThread serverSyncWorker -> n
    com.cardiomood.android.heartrate.AbstractDataCollector$Listener listener -> o
    com.cardiomood.android.heartrate.AbstractDataCollector$Status status -> p
    boolean creatingSession -> q
    void onConnected() -> a
    void onStartCollecting() -> b
    void onFirstDataRecieved() -> c
    void attemptCreateCardioSession() -> p
    void onCompleteCollecting() -> d
    void onDisconnected() -> e
    void addData(int,short[]) -> a
    void sendPendingData() -> q
    com.cardiomood.android.heartrate.AbstractDataCollector$Status getStatus() -> f
    void setStatus(com.cardiomood.android.heartrate.AbstractDataCollector$Status) -> a
    boolean needToStopCollecting() -> g
    double getProgress() -> h
    void startCollecting() -> i
    void stopCollecting() -> j
    boolean enoughDataCollected() -> k
    void processCollectedData() -> l
    void setListener(com.cardiomood.android.heartrate.AbstractDataCollector$Listener) -> a
    int getIntervalsCount() -> m
    double getDuration() -> n
    void addWindow(com.cardiomood.math.window.DataWindow) -> a
    com.cardiomood.android.db.entity.ContinuousSessionEntity access$000(com.cardiomood.android.heartrate.AbstractDataCollector) -> a
    java.lang.String access$100() -> o
    com.j256.ormlite.dao.RuntimeExceptionDao access$200(com.cardiomood.android.heartrate.AbstractDataCollector) -> b
    com.cardiomood.android.tools.WorkerThread access$302(com.cardiomood.android.heartrate.AbstractDataCollector,com.cardiomood.android.tools.WorkerThread) -> a
    com.cardiomood.android.tools.WorkerThread access$300(com.cardiomood.android.heartrate.AbstractDataCollector) -> c
    boolean access$502(com.cardiomood.android.heartrate.AbstractDataCollector,boolean) -> a
com.cardiomood.android.heartrate.AbstractDataCollector$1 -> com.cardiomood.android.heartrate.a:
    com.cardiomood.android.heartrate.AbstractDataCollector this$0 -> a
    void retry() -> retry
    void onResult(com.cardiomood.data.json.CardioSession) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.heartrate.AbstractDataCollector$2 -> com.cardiomood.android.heartrate.b:
    com.cardiomood.android.heartrate.AbstractDataCollector this$0 -> a
    void retry() -> retry
    void onResult(java.lang.String) -> a
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.android.heartrate.AbstractDataCollector$Listener -> com.cardiomood.android.heartrate.c:
    void onComplete() -> b
    void onStart() -> a
    void onDataAdded(int,short[]) -> a
    void onDataSaved(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> a
com.cardiomood.android.heartrate.AbstractDataCollector$ServerSyncWorkerThread -> com.cardiomood.android.heartrate.d:
    com.cardiomood.data.json.CardioSession cardioSession -> b
    java.util.List buffer -> c
    com.cardiomood.android.heartrate.AbstractDataCollector this$0 -> a
    void processItem(com.cardiomood.data.json.CardioDataItem) -> a
    void onStop() -> a
    void processItem(java.lang.Object) -> a
com.cardiomood.android.heartrate.AbstractDataCollector$SimpleListener -> com.cardiomood.android.heartrate.e:
    void onComplete() -> b
    void onStart() -> a
    void onDataAdded(int,short[]) -> a
    void onDataSaved(com.cardiomood.android.db.entity.ContinuousSessionEntity) -> a
com.cardiomood.android.heartrate.AbstractDataCollector$Status -> com.cardiomood.android.heartrate.AbstractDataCollector$Status:
    com.cardiomood.android.heartrate.AbstractDataCollector$Status NOT_STARTED -> a
    com.cardiomood.android.heartrate.AbstractDataCollector$Status COLLECTING -> b
    com.cardiomood.android.heartrate.AbstractDataCollector$Status COMPLETED -> c
    com.cardiomood.android.heartrate.AbstractDataCollector$Status[] $VALUES -> d
    com.cardiomood.android.heartrate.AbstractDataCollector$Status[] values() -> values
    com.cardiomood.android.heartrate.AbstractDataCollector$Status valueOf(java.lang.String) -> valueOf
com.cardiomood.android.heartrate.CardioMoodHeartRateLeService -> com.cardiomood.android.heartrate.CardioMoodHeartRateLeService:
    void onReceiveBroadcast(android.content.Context,android.content.Intent) -> a
com.cardiomood.android.heartrate.IntervalLimitDataCollector -> com.cardiomood.android.heartrate.f:
    java.lang.String TAG -> e
    int intervalsLimit -> f
    boolean needToStopCollecting() -> g
    double getProgress() -> h
com.cardiomood.android.heartrate.TimeAndIntervalLimitDataCollector -> com.cardiomood.android.heartrate.g:
    int intervalsLimit -> e
    boolean needToStopCollecting() -> g
    double getProgress() -> h
com.cardiomood.android.heartrate.TimeLimitDataCollector -> com.cardiomood.android.heartrate.h:
    java.lang.String TAG -> e
    double timeLimit -> f
    boolean needToStopCollecting() -> g
    double getProgress() -> h
    void addData(int,short[]) -> a
com.cardiomood.android.heartrate.UnlimitedDataCollector -> com.cardiomood.android.heartrate.i:
    java.lang.String TAG -> e
    boolean needToStopCollecting() -> g
    double getProgress() -> h
com.cardiomood.android.tools.CommonTools -> com.cardiomood.android.tools.a:
    java.lang.String TAG -> a
    java.lang.String timeToHumanString(long) -> a
    void vibrate(android.content.Context,long) -> a
    void hideSoftInputKeyboard(android.app.Activity) -> a
    boolean isNetworkAvailable(android.content.Context) -> a
    java.lang.String encryptString(java.lang.String,java.lang.String) -> a
    java.lang.String toHexString(byte[]) -> a
    java.lang.String SHA256(java.lang.String) -> a
    java.lang.String generateRandomString(int) -> a
com.cardiomood.android.tools.ConfigurationManager -> com.cardiomood.android.tools.b:
    java.util.Map config -> a
    void remove(java.lang.String) -> a
    com.cardiomood.android.tools.ConfigurationManager getInstance() -> a
    void loadProperties(java.lang.String) -> b
    java.lang.String getString(java.lang.String) -> c
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    void set(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> d
    void setString(java.lang.String,java.lang.String) -> b
    java.lang.Integer getInteger(java.lang.String) -> e
    java.lang.Integer getInteger(java.lang.String,java.lang.Integer) -> a
    int getInt(java.lang.String,int) -> a
    java.lang.Float getFloat(java.lang.String,java.lang.Float) -> a
    boolean getBoolean(java.lang.String,boolean) -> a
    long getLong(java.lang.String,long) -> a
com.cardiomood.android.tools.ConfigurationManager$1 -> com.cardiomood.android.tools.c:
com.cardiomood.android.tools.ConfigurationManager$Holder -> com.cardiomood.android.tools.d:
    com.cardiomood.android.tools.ConfigurationManager instance -> a
    com.cardiomood.android.tools.ConfigurationManager access$100() -> a
com.cardiomood.android.tools.IMonitors -> com.cardiomood.android.tools.e:
    java.lang.String[] MonitorNamesPatternLE -> a
com.cardiomood.android.tools.PointD -> com.cardiomood.android.tools.PointD:
    double x -> a
    double y -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
com.cardiomood.android.tools.PointD$1 -> com.cardiomood.android.tools.f:
    com.cardiomood.android.tools.PointD createFromParcel(android.os.Parcel) -> a
    com.cardiomood.android.tools.PointD[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.cardiomood.android.tools.PreferenceActivityBase -> com.cardiomood.android.tools.PreferenceActivityBase:
    com.cardiomood.android.tools.PreferenceActivityBase$AbstractMainFragment fragment -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    com.cardiomood.android.tools.PreferenceActivityBase$AbstractMainFragment createMainFragment() -> b
com.cardiomood.android.tools.PreferenceActivityBase$AbstractMainFragment -> com.cardiomood.android.tools.g:
    void updatePrefSummary(android.preference.Preference[]) -> a
com.cardiomood.android.tools.PreferenceHelper -> com.cardiomood.android.tools.h:
    android.content.Context context -> a
    boolean persistent -> b
    boolean isPersistent() -> a
    void setPersistent(boolean) -> a
    void putString(java.lang.String,java.lang.String,boolean) -> a
    void putString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String,java.lang.String,boolean) -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> b
    java.lang.String getString(java.lang.String) -> a
    void putFloat(java.lang.String,java.lang.Float,boolean) -> a
    void putFloat(java.lang.String,java.lang.Float) -> a
    java.lang.Float getFloat(java.lang.String,java.lang.Float,boolean) -> b
    java.lang.Float getFloat(java.lang.String,float) -> a
    java.lang.Float getFloat(java.lang.String) -> b
    void putInt(java.lang.String,java.lang.Integer,boolean) -> a
    void putInt(java.lang.String,int) -> a
    int getInt(java.lang.String,int,boolean) -> a
    int getInt(java.lang.String,int) -> b
    void putLong(java.lang.String,java.lang.Long,boolean) -> a
    void putLong(java.lang.String,java.lang.Long) -> a
    long getLong(java.lang.String,long,boolean) -> a
    long getLong(java.lang.String,long) -> a
    long getLong(java.lang.String) -> c
    void putBoolean(java.lang.String,java.lang.Boolean,boolean) -> a
    void putBoolean(java.lang.String,boolean) -> a
    boolean getBoolean(java.lang.String,boolean,boolean) -> a
    boolean getBoolean(java.lang.String) -> d
    void remove(java.lang.String) -> e
com.cardiomood.android.tools.R -> com.cardiomood.android.tools.i:
com.cardiomood.android.tools.R$id -> com.cardiomood.android.tools.j:
    int ScrollView01 -> ScrollView01
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int always -> always
    int beginning -> beginning
    int birth_date -> birth_date
    int checkbox -> checkbox
    int collapseActionView -> collapseActionView
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int editTextEmail -> editTextEmail
    int editTextFirstName -> editTextFirstName
    int editTextLastName -> editTextLastName
    int editTextPhoneNumber -> editTextPhoneNumber
    int edit_query -> edit_query
    int end -> end
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int gender -> gender
    int height_major -> height_major
    int height_major_units -> height_major_units
    int height_minor -> height_minor
    int height_minor_units -> height_minor_units
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int listMode -> listMode
    int list_item -> list_item
    int menu_sync -> menu_sync
    int middle -> middle
    int never -> never
    int none -> none
    int normal -> normal
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int title -> title
    int top_action_bar -> top_action_bar
    int up -> up
    int useLogo -> useLogo
    int weight_major -> weight_major
    int weight_major_units -> weight_major_units
    int weight_minor -> weight_minor
    int weight_minor_units -> weight_minor_units
    int withText -> withText
com.cardiomood.android.tools.R$layout -> com.cardiomood.android.tools.k:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_decor -> abc_simple_decor
    int fragment_profile -> fragment_profile
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
com.cardiomood.android.tools.R$menu -> com.cardiomood.android.tools.l:
    int fragment_profile -> fragment_profile
com.cardiomood.android.tools.R$string -> com.cardiomood.android.tools.m:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int birth_date -> birth_date
    int birth_date_dlg_title -> birth_date_dlg_title
    int email -> email
    int first_name -> first_name
    int height -> height
    int height_units_cm -> height_units_cm
    int height_units_ft -> height_units_ft
    int height_units_in -> height_units_in
    int height_units_m -> height_units_m
    int last_name -> last_name
    int menu_sync -> menu_sync
    int phone_number_hint -> phone_number_hint
    int weight -> weight
    int weight_units_g -> weight_units_g
    int weight_units_kg -> weight_units_kg
    int weight_units_lb -> weight_units_lb
    int weight_units_oz -> weight_units_oz
    int you_can_select_unit_system_in_settings -> you_can_select_unit_system_in_settings
com.cardiomood.android.tools.WorkerThread -> com.cardiomood.android.tools.n:
    java.util.concurrent.BlockingQueue queue -> a
    boolean finished -> b
    void run() -> run
    void put(java.lang.Object) -> b
    void onStart() -> b
    void onStop() -> a
    int getQueueSize() -> c
    void finishWork() -> d
    boolean isFinished() -> e
    void processItem(java.lang.Object) -> a
com.cardiomood.android.tools.fragments.ProfileFragment -> com.cardiomood.android.tools.fragments.ProfileFragment:
    java.lang.String TAG -> a
    java.text.DateFormat DATE_FORMAT -> b
    com.cardiomood.android.tools.PreferenceHelper prefHelper -> c
    android.widget.EditText emailView -> d
    android.widget.EditText firstNameView -> e
    android.widget.EditText lastNameView -> f
    android.widget.EditText phoneNumberView -> g
    android.widget.Spinner genderView -> h
    android.widget.EditText birthdayView -> i
    android.widget.EditText weightMajorView -> j
    android.widget.EditText weightMinorView -> k
    android.widget.EditText heightMajorView -> l
    android.widget.EditText heightMinorView -> m
    android.widget.TextView weightMajorUnitsView -> n
    android.widget.TextView heightMajorUnitsView -> o
    android.widget.TextView weightMinorUnitsView -> p
    android.widget.TextView heightMinorUnitsView -> q
    com.cardiomood.android.tools.fragments.ProfileFragment$Callback callback -> r
    boolean modified -> s
    boolean initialized -> t
    boolean firstStart -> u
    java.util.Calendar myCalendar -> v
    android.app.DatePickerDialog$OnDateSetListener dateChangeListener -> w
    int genderLastSelectedPosition -> x
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void reloadData() -> a
    void restoreListeners() -> d
    void removeListeners() -> e
    void onPause() -> onPause
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void save() -> b
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void sync() -> f
    void setCallback(com.cardiomood.android.tools.fragments.ProfileFragment$Callback) -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    java.util.Calendar access$000(com.cardiomood.android.tools.fragments.ProfileFragment) -> a
    java.text.DateFormat access$100() -> c
    android.widget.EditText access$200(com.cardiomood.android.tools.fragments.ProfileFragment) -> b
    boolean access$300(com.cardiomood.android.tools.fragments.ProfileFragment) -> c
    boolean access$402(com.cardiomood.android.tools.fragments.ProfileFragment,boolean) -> a
    android.app.DatePickerDialog$OnDateSetListener access$500(com.cardiomood.android.tools.fragments.ProfileFragment) -> d
    int access$600(com.cardiomood.android.tools.fragments.ProfileFragment) -> e
    int access$602(com.cardiomood.android.tools.fragments.ProfileFragment,int) -> a
com.cardiomood.android.tools.fragments.ProfileFragment$1 -> com.cardiomood.android.tools.fragments.a:
    com.cardiomood.android.tools.fragments.ProfileFragment this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.cardiomood.android.tools.fragments.ProfileFragment$2 -> com.cardiomood.android.tools.fragments.b:
    com.cardiomood.android.tools.fragments.ProfileFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.cardiomood.android.tools.fragments.ProfileFragment$3 -> com.cardiomood.android.tools.fragments.c:
    com.cardiomood.android.tools.fragments.ProfileFragment this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.cardiomood.android.tools.fragments.ProfileFragment$4 -> com.cardiomood.android.tools.fragments.d:
    com.cardiomood.android.tools.fragments.ProfileFragment this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.cardiomood.android.tools.fragments.ProfileFragment$Callback -> com.cardiomood.android.tools.fragments.e:
    void onSave() -> a
    void onSync() -> b
com.cardiomood.android.tools.settings.PreferenceActivityBase -> com.cardiomood.android.tools.settings.PreferenceActivityBase:
    com.cardiomood.android.tools.settings.PreferenceActivityBase$AbstractMainFragment fragment -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    com.cardiomood.android.tools.settings.PreferenceActivityBase$AbstractMainFragment createMainFragment() -> a
com.cardiomood.android.tools.settings.PreferenceActivityBase$AbstractMainFragment -> com.cardiomood.android.tools.settings.a:
com.cardiomood.android.util.SystemUiHider -> com.cardiomood.android.b.a:
    android.app.Activity mActivity -> a
    android.view.View mAnchorView -> b
    int mFlags -> c
    com.cardiomood.android.util.SystemUiHider$OnVisibilityChangeListener mOnVisibilityChangeListener -> d
    com.cardiomood.android.util.SystemUiHider$OnVisibilityChangeListener sDummyListener -> e
    com.cardiomood.android.util.SystemUiHider getInstance(android.app.Activity,android.view.View,int) -> a
    void setup() -> a
    boolean isVisible() -> b
    void hide() -> c
    void show() -> d
    void toggle() -> e
    void setOnVisibilityChangeListener(com.cardiomood.android.util.SystemUiHider$OnVisibilityChangeListener) -> a
com.cardiomood.android.util.SystemUiHider$1 -> com.cardiomood.android.b.b:
    void onVisibilityChange(boolean) -> a
com.cardiomood.android.util.SystemUiHider$OnVisibilityChangeListener -> com.cardiomood.android.b.c:
    void onVisibilityChange(boolean) -> a
com.cardiomood.android.util.SystemUiHiderBase -> com.cardiomood.android.b.d:
    boolean mVisible -> e
    void setup() -> a
    boolean isVisible() -> b
    void hide() -> c
    void show() -> d
com.cardiomood.android.util.SystemUiHiderHoneycomb -> com.cardiomood.android.b.e:
    int mShowFlags -> e
    int mHideFlags -> f
    int mTestFlags -> g
    boolean mVisible -> h
    android.view.View$OnSystemUiVisibilityChangeListener mSystemUiVisibilityChangeListener -> i
    void setup() -> a
    void hide() -> c
    void show() -> d
    boolean isVisible() -> b
    int access$000(com.cardiomood.android.util.SystemUiHiderHoneycomb) -> a
    boolean access$102(com.cardiomood.android.util.SystemUiHiderHoneycomb,boolean) -> a
    int access$200(com.cardiomood.android.util.SystemUiHiderHoneycomb) -> b
com.cardiomood.android.util.SystemUiHiderHoneycomb$1 -> com.cardiomood.android.b.f:
    com.cardiomood.android.util.SystemUiHiderHoneycomb this$0 -> a
    void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
com.cardiomood.data.BuildConfig -> com.cardiomood.data.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.cardiomood.data.CardioMoodDataService -> com.cardiomood.data.CardioMoodDataService:
    com.cardiomood.data.json.JSONResponse register(java.lang.String,java.lang.String) -> register
    com.cardiomood.data.json.JSONResponse login(java.lang.String,java.lang.String) -> login
    com.cardiomood.data.json.JSONResponse createSession(java.lang.String,java.lang.Long,java.lang.Long,java.lang.String,java.lang.Long) -> createSession
    com.cardiomood.data.json.JSONResponse getSessionsOfUser(java.lang.String,java.lang.Long,java.lang.Long) -> getSessionsOfUser
    com.cardiomood.data.json.JSONResponse updateSessionInfo(java.lang.String,java.lang.Long,java.lang.Long,java.lang.String,java.lang.String) -> updateSessionInfo
    com.cardiomood.data.json.JSONResponse getSessionData(java.lang.String,java.lang.Long,java.lang.Long) -> getSessionData
    com.cardiomood.data.json.JSONResponse deleteSession(java.lang.String,java.lang.Long,java.lang.Long) -> deleteSession
    com.cardiomood.data.json.JSONResponse appendDataToSession(java.lang.String,java.lang.Long,java.lang.String) -> appendDataToSession
    com.cardiomood.data.json.JSONResponse rewriteCardioSessionData(java.lang.String,java.lang.Long,java.lang.String) -> rewriteCardioSessionData
    com.cardiomood.data.json.JSONResponse finishSession(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long) -> finishSession
    com.cardiomood.data.json.JSONResponse updateUserInfo(java.lang.String,java.lang.Long,java.lang.String,java.lang.String) -> updateUserInfo
    com.cardiomood.data.json.JSONResponse updateUserProfile(java.lang.String,java.lang.String) -> updateUserProfile
    com.cardiomood.data.json.JSONResponse getUserProfileByToken(java.lang.String) -> getUserProfileByToken
    com.cardiomood.data.json.JSONResponse lazyFacebookLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> lazyFacebookLogin
    com.cardiomood.data.json.JSONResponse changePassword(java.lang.String,java.lang.Long,com.cardiomood.data.json.UserAccount$Type,java.lang.String) -> changePassword
com.cardiomood.data.CardioMoodServer -> com.cardiomood.data.CardioMoodServer:
    com.cardiomood.data.CardioMoodServer INSTANCE -> INSTANCE
    com.cardiomood.data.CardioMoodDataService service -> service
    com.cardiomood.data.CardioMoodServer[] $VALUES -> $VALUES
    com.cardiomood.data.CardioMoodServer[] values() -> values
    com.cardiomood.data.CardioMoodServer valueOf(java.lang.String) -> valueOf
    com.cardiomood.data.CardioMoodDataService rebuildService(android.content.Context) -> rebuildService
    com.cardiomood.data.CardioMoodDataService buildService() -> buildService
    com.cardiomood.data.CardioMoodDataService getService() -> getService
com.cardiomood.data.DataServiceHelper -> com.cardiomood.data.DataServiceHelper:
    java.lang.String TAG -> TAG
    com.google.gson.Gson GSON -> GSON
    java.lang.String OFFLINE_MODE_KEY -> OFFLINE_MODE_KEY
    java.lang.String USER_EXTERNAL_ID -> USER_EXTERNAL_ID
    java.lang.String USER_EMAIL_KEY -> USER_EMAIL_KEY
    java.lang.String USER_PASSWORD_KEY -> USER_PASSWORD_KEY
    java.lang.String USER_ACCESS_TOKEN_KEY -> USER_ACCESS_TOKEN_KEY
    com.cardiomood.data.CardioMoodDataService mService -> mService
    com.cardiomood.data.json.ApiToken mToken -> mToken
    boolean signedIn -> signedIn
    java.lang.String email -> email
    java.lang.String password -> password
    boolean offlineMode -> offlineMode
    boolean isSignedIn() -> isSignedIn
    void setSignedIn(boolean) -> setSignedIn
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    boolean isOfflineMode() -> isOfflineMode
    void setOfflineMode(boolean) -> setOfflineMode
    com.cardiomood.data.json.ApiToken getToken() -> getToken
    java.lang.Long getUserId() -> getUserId
    java.lang.String getTokenString() -> getTokenString
    void setToken(com.cardiomood.data.json.ApiToken) -> setToken
    void logout() -> logout
    com.cardiomood.data.json.JSONResponse login(java.lang.String,java.lang.String) -> login
    void login(java.lang.String,java.lang.String,com.cardiomood.data.async.ServerResponseCallback) -> login
    com.cardiomood.data.json.JSONResponse register(java.lang.String,java.lang.String) -> register
    void register(java.lang.String,java.lang.String,com.cardiomood.data.async.ServerResponseCallback) -> register
    com.cardiomood.data.json.JSONResponse createSession(java.lang.String,long) -> createSession
    android.os.AsyncTask createSession(java.lang.String,long,com.cardiomood.data.async.ServerResponseCallbackRetry) -> createSession
    com.cardiomood.data.json.JSONResponse finishSession(long,long) -> finishSession
    void finishSession(long,long,com.cardiomood.data.async.ServerResponseCallbackRetry) -> finishSession
    com.cardiomood.data.json.JSONResponse getSessions() -> getSessions
    void getSessions(com.cardiomood.data.async.ServerResponseCallbackRetry) -> getSessions
    com.cardiomood.data.json.JSONResponse updateSessionInfo(java.lang.Long,java.lang.String,java.lang.String) -> updateSessionInfo
    void updateSessionInfo(java.lang.Long,java.lang.String,java.lang.String,com.cardiomood.data.async.ServerResponseCallbackRetry) -> updateSessionInfo
    com.cardiomood.data.json.JSONResponse getSessionData(java.lang.Long) -> getSessionData
    void getSessionData(java.lang.Long,com.cardiomood.data.async.ServerResponseCallbackRetry) -> getSessionData
    com.cardiomood.data.json.JSONResponse deleteSession(java.lang.Long) -> deleteSession
    android.os.AsyncTask deleteSession(java.lang.Long,com.cardiomood.data.async.ServerResponseCallbackRetry) -> deleteSession
    com.cardiomood.data.json.JSONResponse rewriteCardioSessionData(com.cardiomood.data.json.CardioSessionWithData) -> rewriteCardioSessionData
    void rewriteCardioSessionData(com.cardiomood.data.json.CardioSessionWithData,com.cardiomood.data.async.ServerResponseCallbackRetry) -> rewriteCardioSessionData
    com.cardiomood.data.json.JSONResponse appendDataToSession(com.cardiomood.data.json.CardioSessionWithData) -> appendDataToSession
    void appendDataToSession(com.cardiomood.data.json.CardioSessionWithData,com.cardiomood.data.async.ServerResponseCallbackRetry) -> appendDataToSession
    com.cardiomood.data.json.JSONResponse updateUserProfile(com.cardiomood.data.json.UserProfile) -> updateUserProfile
    void updateUserProfile(com.cardiomood.data.json.UserProfile,com.cardiomood.data.async.ServerResponseCallbackRetry) -> updateUserProfile
    com.cardiomood.data.json.JSONResponse getUserProfile() -> getUserProfile
    com.cardiomood.data.async.ServiceTask getUserProfile(com.cardiomood.data.async.ServerResponseCallbackRetry) -> getUserProfile
    com.cardiomood.data.json.JSONResponse changePassword(java.lang.String) -> changePassword
    com.cardiomood.data.async.ServiceTask changePassword(java.lang.String,com.cardiomood.data.async.ServerResponseCallbackRetry) -> changePassword
    com.cardiomood.data.json.JSONResponse lazyFacebookLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> lazyFacebookLogin
    com.cardiomood.data.async.ServiceTask lazyFacebookLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.cardiomood.data.async.ServerResponseCallback) -> lazyFacebookLogin
    void refreshToken() -> refreshToken
    void refreshToken(boolean) -> refreshToken
    void refreshToken(com.cardiomood.data.async.ServerResponseCallback) -> refreshToken
    boolean isTokenExpired() -> isTokenExpired
    void checkInternetAvailable(android.content.Context,com.cardiomood.data.async.ServerResponseCallback) -> checkInternetAvailable
    java.lang.String access$000() -> access$000
com.cardiomood.data.DataServiceHelper$1 -> com.cardiomood.data.DataServiceHelper$1:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$10 -> com.cardiomood.data.DataServiceHelper$10:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$11 -> com.cardiomood.data.DataServiceHelper$11:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$12 -> com.cardiomood.data.DataServiceHelper$12:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$13 -> com.cardiomood.data.DataServiceHelper$13:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$14 -> com.cardiomood.data.DataServiceHelper$14:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$15 -> com.cardiomood.data.DataServiceHelper$15:
    com.cardiomood.data.async.ServerResponseCallback val$callback -> val$callback
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    void onResult(com.cardiomood.data.json.ApiToken) -> onResult
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.data.DataServiceHelper$16 -> com.cardiomood.data.DataServiceHelper$16:
    com.cardiomood.data.async.ServerResponseCallback val$callback -> val$callback
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.cardiomood.data.DataServiceHelper$2 -> com.cardiomood.data.DataServiceHelper$2:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$3 -> com.cardiomood.data.DataServiceHelper$3:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$4 -> com.cardiomood.data.DataServiceHelper$4:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$5 -> com.cardiomood.data.DataServiceHelper$5:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$6 -> com.cardiomood.data.DataServiceHelper$6:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$7 -> com.cardiomood.data.DataServiceHelper$7:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$8 -> com.cardiomood.data.DataServiceHelper$8:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$9 -> com.cardiomood.data.DataServiceHelper$9:
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.DataServiceHelper$HandleTokenExpiredCallback -> com.cardiomood.data.DataServiceHelper$HandleTokenExpiredCallback:
    com.cardiomood.data.async.ServerResponseCallbackRetry externalCallback -> externalCallback
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    void onResult(java.lang.Object) -> onResult
    void onError(com.cardiomood.data.json.JSONError) -> onError
    com.cardiomood.data.async.ServerResponseCallbackRetry access$100(com.cardiomood.data.DataServiceHelper$HandleTokenExpiredCallback) -> access$100
com.cardiomood.data.DataServiceHelper$HandleTokenExpiredCallback$1 -> com.cardiomood.data.DataServiceHelper$HandleTokenExpiredCallback$1:
    com.cardiomood.data.DataServiceHelper$HandleTokenExpiredCallback this$1 -> this$1
    void onResult(com.cardiomood.data.json.ApiToken) -> onResult
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.data.DataServiceHelper$LoginCallback -> com.cardiomood.data.DataServiceHelper$LoginCallback:
    com.cardiomood.data.async.ServerResponseCallback externalCallback -> externalCallback
    java.lang.String login -> login
    java.lang.String password -> password
    com.cardiomood.data.DataServiceHelper this$0 -> this$0
    void onResult(com.cardiomood.data.json.ApiToken) -> onResult
    void onError(com.cardiomood.data.json.JSONError) -> onError
    void onResult(java.lang.Object) -> onResult
com.cardiomood.data.R -> com.cardiomood.data.R:
com.cardiomood.data.R$anim -> com.cardiomood.data.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
com.cardiomood.data.R$array -> com.cardiomood.data.R$array:
    int feedback_types -> feedback_types
    int gender_names -> gender_names
    int gender_values -> gender_values
    int measurement_system_titles -> measurement_system_titles
    int measurement_system_values -> measurement_system_values
com.cardiomood.data.R$attr -> com.cardiomood.data.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int customNavigationLayout -> customNavigationLayout
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryHint -> queryHint
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowSplitActionBar -> windowSplitActionBar
com.cardiomood.data.R$bool -> com.cardiomood.data.R$bool:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
com.cardiomood.data.R$color -> com.cardiomood.data.R$color:
    int AliceBlue -> AliceBlue
    int AntiqueWhite -> AntiqueWhite
    int Aquamarine -> Aquamarine
    int Azure -> Azure
    int Beige -> Beige
    int Bisque -> Bisque
    int BlanchedAlmond -> BlanchedAlmond
    int BlueViolet -> BlueViolet
    int Brown -> Brown
    int BurlyWood -> BurlyWood
    int CadetBlue -> CadetBlue
    int Chartreuse -> Chartreuse
    int Chocolate -> Chocolate
    int Coral -> Coral
    int CornflowerBlue -> CornflowerBlue
    int Cornsilk -> Cornsilk
    int Crimson -> Crimson
    int DarkBlue -> DarkBlue
    int DarkCyan -> DarkCyan
    int DarkGoldenrod -> DarkGoldenrod
    int DarkGray -> DarkGray
    int DarkGreen -> DarkGreen
    int DarkKhaki -> DarkKhaki
    int DarkMagenta -> DarkMagenta
    int DarkOliveGreen -> DarkOliveGreen
    int DarkOrange -> DarkOrange
    int DarkOrchid -> DarkOrchid
    int DarkRed -> DarkRed
    int DarkSalmon -> DarkSalmon
    int DarkSeaGreen -> DarkSeaGreen
    int DarkSlateBlue -> DarkSlateBlue
    int DarkSlateGray -> DarkSlateGray
    int DarkTurquoise -> DarkTurquoise
    int DarkViolet -> DarkViolet
    int DeepPink -> DeepPink
    int DeepSkyBlue -> DeepSkyBlue
    int DimGray -> DimGray
    int DodgerBlue -> DodgerBlue
    int FireBrick -> FireBrick
    int FloralWhite -> FloralWhite
    int ForestGreen -> ForestGreen
    int Fuchsia -> Fuchsia
    int Gainsboro -> Gainsboro
    int GhostWhite -> GhostWhite
    int Gold -> Gold
    int Goldenrod -> Goldenrod
    int GreenYellow -> GreenYellow
    int Honeydew -> Honeydew
    int HotPink -> HotPink
    int IndianRed -> IndianRed
    int Indigo -> Indigo
    int Ivory -> Ivory
    int Khaki -> Khaki
    int Lavender -> Lavender
    int LavenderBlush -> LavenderBlush
    int LawnGreen -> LawnGreen
    int LemonChiffon -> LemonChiffon
    int LightBlue -> LightBlue
    int LightCoral -> LightCoral
    int LightCyan -> LightCyan
    int LightGoldenrodYellow -> LightGoldenrodYellow
    int LightGreen -> LightGreen
    int LightGrey -> LightGrey
    int LightPink -> LightPink
    int LightSalmon -> LightSalmon
    int LightSeaGreen -> LightSeaGreen
    int LightSkyBlue -> LightSkyBlue
    int LightSlateGray -> LightSlateGray
    int LightSteelBlue -> LightSteelBlue
    int LightYellow -> LightYellow
    int LimeGreen -> LimeGreen
    int Linen -> Linen
    int Magenta -> Magenta
    int Maroon -> Maroon
    int MediumAquamarine -> MediumAquamarine
    int MediumBlue -> MediumBlue
    int MediumOrchid -> MediumOrchid
    int MediumPurple -> MediumPurple
    int MediumSeaGreen -> MediumSeaGreen
    int MediumSlateBlue -> MediumSlateBlue
    int MediumSpringGreen -> MediumSpringGreen
    int MediumTurquoise -> MediumTurquoise
    int MediumVioletRed -> MediumVioletRed
    int MidnightBlue -> MidnightBlue
    int MintCream -> MintCream
    int MistyRose -> MistyRose
    int Moccasin -> Moccasin
    int NavajoWhite -> NavajoWhite
    int OldLace -> OldLace
    int OliveDrab -> OliveDrab
    int Orange -> Orange
    int OrangeRed -> OrangeRed
    int Orchid -> Orchid
    int PaleGoldenrod -> PaleGoldenrod
    int PaleGreen -> PaleGreen
    int PaleTurquoise -> PaleTurquoise
    int PaleVioletRed -> PaleVioletRed
    int PapayaWhip -> PapayaWhip
    int PeachPuff -> PeachPuff
    int Peru -> Peru
    int Pink -> Pink
    int Plum -> Plum
    int PowderBlue -> PowderBlue
    int RosyBrown -> RosyBrown
    int RoyalBlue -> RoyalBlue
    int SaddleBrown -> SaddleBrown
    int Salmon -> Salmon
    int SandyBrown -> SandyBrown
    int SeaGreen -> SeaGreen
    int Seashell -> Seashell
    int Sienna -> Sienna
    int SkyBlue -> SkyBlue
    int SlateBlue -> SlateBlue
    int SlateGray -> SlateGray
    int Snow -> Snow
    int SpringGreen -> SpringGreen
    int SteelBlue -> SteelBlue
    int Tan -> Tan
    int Thistle -> Thistle
    int Tomato -> Tomato
    int Turquoise -> Turquoise
    int Violet -> Violet
    int Wheat -> Wheat
    int WhiteSmoke -> WhiteSmoke
    int YellowGreen -> YellowGreen
    int abc_search_url_text_holo -> abc_search_url_text_holo
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int android_green -> android_green
    int aqua -> aqua
    int black -> black
    int blue -> blue
    int fuchsia -> fuchsia
    int gray -> gray
    int green -> green
    int lime -> lime
    int maroon -> maroon
    int navy -> navy
    int olive -> olive
    int purple -> purple
    int red -> red
    int silver -> silver
    int teal -> teal
    int white -> white
    int win8_blue -> win8_blue
    int win8_brown -> win8_brown
    int win8_green -> win8_green
    int win8_lime -> win8_lime
    int win8_magenta -> win8_magenta
    int win8_orange -> win8_orange
    int win8_pink -> win8_pink
    int win8_purple -> win8_purple
    int win8_red -> win8_red
    int win8_teal -> win8_teal
    int yellow -> yellow
com.cardiomood.data.R$dimen -> com.cardiomood.data.R$dimen:
    int abc_action_bar_default_height -> abc_action_bar_default_height
    int abc_action_bar_icon_vertical_padding -> abc_action_bar_icon_vertical_padding
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin -> abc_action_bar_subtitle_bottom_margin
    int abc_action_bar_subtitle_text_size -> abc_action_bar_subtitle_text_size
    int abc_action_bar_subtitle_top_margin -> abc_action_bar_subtitle_top_margin
    int abc_action_bar_title_text_size -> abc_action_bar_title_text_size
    int abc_action_button_min_width -> abc_action_button_min_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
com.cardiomood.data.R$drawable -> com.cardiomood.data.R$drawable:
    int abc_ab_bottom_solid_dark_holo -> abc_ab_bottom_solid_dark_holo
    int abc_ab_bottom_solid_light_holo -> abc_ab_bottom_solid_light_holo
    int abc_ab_bottom_transparent_dark_holo -> abc_ab_bottom_transparent_dark_holo
    int abc_ab_bottom_transparent_light_holo -> abc_ab_bottom_transparent_light_holo
    int abc_ab_share_pack_holo_dark -> abc_ab_share_pack_holo_dark
    int abc_ab_share_pack_holo_light -> abc_ab_share_pack_holo_light
    int abc_ab_solid_dark_holo -> abc_ab_solid_dark_holo
    int abc_ab_solid_light_holo -> abc_ab_solid_light_holo
    int abc_ab_stacked_solid_dark_holo -> abc_ab_stacked_solid_dark_holo
    int abc_ab_stacked_solid_light_holo -> abc_ab_stacked_solid_light_holo
    int abc_ab_stacked_transparent_dark_holo -> abc_ab_stacked_transparent_dark_holo
    int abc_ab_stacked_transparent_light_holo -> abc_ab_stacked_transparent_light_holo
    int abc_ab_transparent_dark_holo -> abc_ab_transparent_dark_holo
    int abc_ab_transparent_light_holo -> abc_ab_transparent_light_holo
    int abc_cab_background_bottom_holo_dark -> abc_cab_background_bottom_holo_dark
    int abc_cab_background_bottom_holo_light -> abc_cab_background_bottom_holo_light
    int abc_cab_background_top_holo_dark -> abc_cab_background_top_holo_dark
    int abc_cab_background_top_holo_light -> abc_cab_background_top_holo_light
    int abc_ic_ab_back_holo_dark -> abc_ic_ab_back_holo_dark
    int abc_ic_ab_back_holo_light -> abc_ic_ab_back_holo_light
    int abc_ic_cab_done_holo_dark -> abc_ic_cab_done_holo_dark
    int abc_ic_cab_done_holo_light -> abc_ic_cab_done_holo_light
    int abc_ic_clear -> abc_ic_clear
    int abc_ic_clear_disabled -> abc_ic_clear_disabled
    int abc_ic_clear_holo_light -> abc_ic_clear_holo_light
    int abc_ic_clear_normal -> abc_ic_clear_normal
    int abc_ic_clear_search_api_disabled_holo_light -> abc_ic_clear_search_api_disabled_holo_light
    int abc_ic_clear_search_api_holo_light -> abc_ic_clear_search_api_holo_light
    int abc_ic_commit_search_api_holo_dark -> abc_ic_commit_search_api_holo_dark
    int abc_ic_commit_search_api_holo_light -> abc_ic_commit_search_api_holo_light
    int abc_ic_go -> abc_ic_go
    int abc_ic_go_search_api_holo_light -> abc_ic_go_search_api_holo_light
    int abc_ic_menu_moreoverflow_normal_holo_dark -> abc_ic_menu_moreoverflow_normal_holo_dark
    int abc_ic_menu_moreoverflow_normal_holo_light -> abc_ic_menu_moreoverflow_normal_holo_light
    int abc_ic_menu_share_holo_dark -> abc_ic_menu_share_holo_dark
    int abc_ic_menu_share_holo_light -> abc_ic_menu_share_holo_light
    int abc_ic_search -> abc_ic_search
    int abc_ic_search_api_holo_light -> abc_ic_search_api_holo_light
    int abc_ic_voice_search -> abc_ic_voice_search
    int abc_ic_voice_search_api_holo_light -> abc_ic_voice_search_api_holo_light
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_holo_dark -> abc_list_divider_holo_dark
    int abc_list_divider_holo_light -> abc_list_divider_holo_light
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_dropdown_panel_holo_dark -> abc_menu_dropdown_panel_holo_dark
    int abc_menu_dropdown_panel_holo_light -> abc_menu_dropdown_panel_holo_light
    int abc_menu_hardkey_panel_holo_dark -> abc_menu_hardkey_panel_holo_dark
    int abc_menu_hardkey_panel_holo_light -> abc_menu_hardkey_panel_holo_light
    int abc_search_dropdown_dark -> abc_search_dropdown_dark
    int abc_search_dropdown_light -> abc_search_dropdown_light
    int abc_spinner_ab_default_holo_dark -> abc_spinner_ab_default_holo_dark
    int abc_spinner_ab_default_holo_light -> abc_spinner_ab_default_holo_light
    int abc_spinner_ab_disabled_holo_dark -> abc_spinner_ab_disabled_holo_dark
    int abc_spinner_ab_disabled_holo_light -> abc_spinner_ab_disabled_holo_light
    int abc_spinner_ab_focused_holo_dark -> abc_spinner_ab_focused_holo_dark
    int abc_spinner_ab_focused_holo_light -> abc_spinner_ab_focused_holo_light
    int abc_spinner_ab_holo_dark -> abc_spinner_ab_holo_dark
    int abc_spinner_ab_holo_light -> abc_spinner_ab_holo_light
    int abc_spinner_ab_pressed_holo_dark -> abc_spinner_ab_pressed_holo_dark
    int abc_spinner_ab_pressed_holo_light -> abc_spinner_ab_pressed_holo_light
    int abc_tab_indicator_ab_holo -> abc_tab_indicator_ab_holo
    int abc_tab_selected_focused_holo -> abc_tab_selected_focused_holo
    int abc_tab_selected_holo -> abc_tab_selected_holo
    int abc_tab_selected_pressed_holo -> abc_tab_selected_pressed_holo
    int abc_tab_unselected_pressed_holo -> abc_tab_unselected_pressed_holo
    int abc_textfield_search_default_holo_dark -> abc_textfield_search_default_holo_dark
    int abc_textfield_search_default_holo_light -> abc_textfield_search_default_holo_light
    int abc_textfield_search_right_default_holo_dark -> abc_textfield_search_right_default_holo_dark
    int abc_textfield_search_right_default_holo_light -> abc_textfield_search_right_default_holo_light
    int abc_textfield_search_right_selected_holo_dark -> abc_textfield_search_right_selected_holo_dark
    int abc_textfield_search_right_selected_holo_light -> abc_textfield_search_right_selected_holo_light
    int abc_textfield_search_selected_holo_dark -> abc_textfield_search_selected_holo_dark
    int abc_textfield_search_selected_holo_light -> abc_textfield_search_selected_holo_light
    int abc_textfield_searchview_holo_dark -> abc_textfield_searchview_holo_dark
    int abc_textfield_searchview_holo_light -> abc_textfield_searchview_holo_light
    int abc_textfield_searchview_right_holo_dark -> abc_textfield_searchview_right_holo_dark
    int abc_textfield_searchview_right_holo_light -> abc_textfield_searchview_right_holo_light
    int ic_action_refresh -> ic_action_refresh
com.cardiomood.data.R$id -> com.cardiomood.data.R$id:
    int ScrollView01 -> ScrollView01
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int always -> always
    int beginning -> beginning
    int birth_date -> birth_date
    int checkbox -> checkbox
    int collapseActionView -> collapseActionView
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int editTextEmail -> editTextEmail
    int editTextFirstName -> editTextFirstName
    int editTextLastName -> editTextLastName
    int editTextPhoneNumber -> editTextPhoneNumber
    int edit_query -> edit_query
    int end -> end
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int gender -> gender
    int height_major -> height_major
    int height_major_units -> height_major_units
    int height_minor -> height_minor
    int height_minor_units -> height_minor_units
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int listMode -> listMode
    int list_item -> list_item
    int menu_sync -> menu_sync
    int middle -> middle
    int never -> never
    int none -> none
    int normal -> normal
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int title -> title
    int top_action_bar -> top_action_bar
    int up -> up
    int useLogo -> useLogo
    int weight_major -> weight_major
    int weight_major_units -> weight_major_units
    int weight_minor -> weight_minor
    int weight_minor_units -> weight_minor_units
    int withText -> withText
com.cardiomood.data.R$integer -> com.cardiomood.data.R$integer:
    int abc_max_action_buttons -> abc_max_action_buttons
com.cardiomood.data.R$layout -> com.cardiomood.data.R$layout:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_decor -> abc_simple_decor
    int fragment_profile -> fragment_profile
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
com.cardiomood.data.R$menu -> com.cardiomood.data.R$menu:
    int fragment_profile -> fragment_profile
com.cardiomood.data.R$string -> com.cardiomood.data.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int app_name -> app_name
    int birth_date -> birth_date
    int birth_date_dlg_title -> birth_date_dlg_title
    int email -> email
    int first_name -> first_name
    int height -> height
    int height_units_cm -> height_units_cm
    int height_units_ft -> height_units_ft
    int height_units_in -> height_units_in
    int height_units_m -> height_units_m
    int last_name -> last_name
    int menu_sync -> menu_sync
    int phone_number_hint -> phone_number_hint
    int weight -> weight
    int weight_units_g -> weight_units_g
    int weight_units_kg -> weight_units_kg
    int weight_units_lb -> weight_units_lb
    int weight_units_oz -> weight_units_oz
    int you_can_select_unit_system_in_settings -> you_can_select_unit_system_in_settings
com.cardiomood.data.R$style -> com.cardiomood.data.R$style:
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_DialogWhenLarge -> Theme_Base_AppCompat_DialogWhenLarge
    int Theme_Base_AppCompat_DialogWhenLarge_Base -> Theme_Base_AppCompat_DialogWhenLarge_Base
    int Theme_Base_AppCompat_Dialog_FixedSize -> Theme_Base_AppCompat_Dialog_FixedSize
    int Theme_Base_AppCompat_Dialog_Light_FixedSize -> Theme_Base_AppCompat_Dialog_Light_FixedSize
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_AppCompat_Light_DialogWhenLarge -> Theme_Base_AppCompat_Light_DialogWhenLarge
    int Theme_Base_AppCompat_Light_DialogWhenLarge_Base -> Theme_Base_AppCompat_Light_DialogWhenLarge_Base
    int Theme_Base_Light -> Theme_Base_Light
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListPopupWindow -> Widget_AppCompat_Base_ListPopupWindow
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListPopupWindow -> Widget_AppCompat_Light_Base_ListPopupWindow
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
com.cardiomood.data.R$styleable -> com.cardiomood.data.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowFixedHeightMajor -> ActionBarWindow_windowFixedHeightMajor
    int ActionBarWindow_windowFixedHeightMinor -> ActionBarWindow_windowFixedHeightMinor
    int ActionBarWindow_windowFixedWidthMajor -> ActionBarWindow_windowFixedWidthMajor
    int ActionBarWindow_windowFixedWidthMinor -> ActionBarWindow_windowFixedWidthMinor
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
com.cardiomood.data.ServerConstants -> com.cardiomood.data.ServerConstants:
    java.lang.Long CARDIOMOOD_CLIENT_ID -> CARDIOMOOD_CLIENT_ID
    java.lang.String SERVICE_PROTOCOL -> SERVICE_PROTOCOL
    java.lang.String SERVICE_HOST -> SERVICE_HOST
    java.lang.String SERVICE_PORT -> SERVICE_PORT
    java.lang.String SERVICE_PATH -> SERVICE_PATH
    java.lang.String DEFAULT_SERVICE_PATH -> DEFAULT_SERVICE_PATH
    java.lang.String DEFAULT_SERVICE_PROTOCOL -> DEFAULT_SERVICE_PROTOCOL
    java.lang.String DEFAULT_SERVICE_HOST -> DEFAULT_SERVICE_HOST
    java.lang.String DEFAULT_SERVICE_PORT -> DEFAULT_SERVICE_PORT
com.cardiomood.data.async.ServerResponseCallback -> com.cardiomood.data.async.ServerResponseCallback:
    void onResult(java.lang.Object) -> onResult
    void onError(com.cardiomood.data.json.JSONError) -> onError
com.cardiomood.data.async.ServerResponseCallbackRetry -> com.cardiomood.data.async.ServerResponseCallbackRetry:
    boolean retryRequired -> retryRequired
    void retry() -> retry
    boolean isRetryRequired() -> isRetryRequired
    void setRetryRequired(boolean) -> setRetryRequired
com.cardiomood.data.async.ServiceTask -> com.cardiomood.data.async.ServiceTask:
    java.lang.String TAG -> TAG
    com.cardiomood.data.async.ServerResponseCallback callback -> callback
    void onPostExecute(com.cardiomood.data.json.JSONResponse) -> onPostExecute
    com.cardiomood.data.json.JSONResponse doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cardiomood.data.json.ApiToken -> com.cardiomood.data.json.ApiToken:
    long serialVersionUID -> serialVersionUID
    java.lang.Long id -> id
    java.lang.Long userId -> userId
    java.lang.String token -> token
    java.lang.Long expirationDate -> expirationDate
    java.lang.Long getExpirationDate() -> getExpirationDate
    void setExpirationDate(java.lang.Long) -> setExpirationDate
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.Long getUserId() -> getUserId
    void setUserId(java.lang.Long) -> setUserId
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.String toString() -> toString
com.cardiomood.data.json.CardioDataItem -> com.cardiomood.data.json.CardioDataItem:
    long serialVersionUID -> serialVersionUID
    java.lang.Long id -> id
    java.lang.String dataItem -> dataItem
    java.lang.Long sessionId -> sessionId
    java.lang.Long number -> number
    java.lang.Long creationTimestamp -> creationTimestamp
    java.lang.Long getCreationTimestamp() -> getCreationTimestamp
    void setCreationTimestamp(java.lang.Long) -> setCreationTimestamp
    java.lang.String getDataItem() -> getDataItem
    void setDataItem(java.lang.String) -> setDataItem
    java.lang.Long getNumber() -> getNumber
    void setNumber(java.lang.Long) -> setNumber
    java.lang.Long getSessionId() -> getSessionId
    void setSessionId(java.lang.Long) -> setSessionId
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
com.cardiomood.data.json.CardioSession -> com.cardiomood.data.json.CardioSession:
    long serialVersionUID -> serialVersionUID
    java.lang.Long id -> id
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.Long serverId -> serverId
    java.lang.Long userId -> userId
    java.lang.Long creationTimestamp -> creationTimestamp
    java.lang.String dataClassName -> dataClassName
    java.lang.Long originalSessionId -> originalSessionId
    java.lang.Long lastModificationTimestamp -> lastModificationTimestamp
    java.lang.Long endTimestamp -> endTimestamp
    java.lang.String getDataClassName() -> getDataClassName
    void setDataClassName(java.lang.String) -> setDataClassName
    java.lang.Long getCreationTimestamp() -> getCreationTimestamp
    void setCreationTimestamp(java.lang.Long) -> setCreationTimestamp
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.Long getServerId() -> getServerId
    void setServerId(java.lang.Long) -> setServerId
    java.lang.Long getUserId() -> getUserId
    void setUserId(java.lang.Long) -> setUserId
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.Long getOriginalSessionId() -> getOriginalSessionId
    void setOriginalSessionId(java.lang.Long) -> setOriginalSessionId
    java.lang.Long getLastModificationTimestamp() -> getLastModificationTimestamp
    void setLastModificationTimestamp(java.lang.Long) -> setLastModificationTimestamp
    java.lang.Long getEndTimestamp() -> getEndTimestamp
    void setEndTimestamp(java.lang.Long) -> setEndTimestamp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.cardiomood.data.json.CardioSessionWithData -> com.cardiomood.data.json.CardioSessionWithData:
    java.util.List dataItems -> dataItems
    java.util.List getDataItems() -> getDataItems
    void setDataItems(java.util.List) -> setDataItems
com.cardiomood.data.json.JSONError -> com.cardiomood.data.json.JSONError:
    java.lang.Integer NORMAL_ERROR -> NORMAL_ERROR
    java.lang.Integer INVALID_TOKEN_ERROR -> INVALID_TOKEN_ERROR
    java.lang.Integer LOGIN_FAILED_ERROR -> LOGIN_FAILED_ERROR
    java.lang.Integer NOT_AUTHORIZED_ERROR -> NOT_AUTHORIZED_ERROR
    java.lang.Integer ACCESS_DENIED_ERROR -> ACCESS_DENIED_ERROR
    java.lang.Integer REGISTRATION_FAILED_ERROR -> REGISTRATION_FAILED_ERROR
    java.lang.Integer SESSION_IS_MODIFIED_ON_SERVER_ERROR -> SESSION_IS_MODIFIED_ON_SERVER_ERROR
    java.lang.Integer EMPTY_RESPONSE_ERROR -> EMPTY_RESPONSE_ERROR
    java.lang.Integer INVALID_RESPONSE_CODE_ERROR -> INVALID_RESPONSE_CODE_ERROR
    java.lang.Integer SERVICE_ERROR -> SERVICE_ERROR
    java.lang.String message -> message
    java.lang.Integer code -> code
    java.lang.Integer getCode() -> getCode
    void setCode(java.lang.Integer) -> setCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String toString() -> toString
com.cardiomood.data.json.JSONResponse -> com.cardiomood.data.json.JSONResponse:
    java.lang.Integer RESPONSE_OK -> RESPONSE_OK
    java.lang.Integer RESPONSE_ERROR -> RESPONSE_ERROR
    java.lang.Integer responseCode -> responseCode
    com.cardiomood.data.json.JSONError error -> error
    java.lang.Object data -> data
    long serverTime -> serverTime
    com.cardiomood.data.json.JSONError getError() -> getError
    void setError(com.cardiomood.data.json.JSONError) -> setError
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    java.lang.Integer getResponseCode() -> getResponseCode
    void setResponseCode(java.lang.Integer) -> setResponseCode
    boolean isOk() -> isOk
    long getServerTime() -> getServerTime
    void setServerTime(long) -> setServerTime
    java.lang.String toString() -> toString
com.cardiomood.data.json.JsonGPS -> com.cardiomood.data.json.JsonGPS:
    com.google.gson.Gson GSON -> GSON
    double lat -> lat
    double lon -> lon
    java.lang.Double alt -> alt
    java.lang.Double speed -> speed
    java.lang.Double accuracy -> accuracy
    java.lang.Double bearing -> bearing
    double getLat() -> getLat
    void setLat(double) -> setLat
    double getLon() -> getLon
    void setLon(double) -> setLon
    java.lang.Double getAlt() -> getAlt
    void setAlt(java.lang.Double) -> setAlt
    java.lang.Double getSpeed() -> getSpeed
    void setSpeed(java.lang.Double) -> setSpeed
    java.lang.Double getAccuracy() -> getAccuracy
    void setAccuracy(java.lang.Double) -> setAccuracy
    java.lang.Double getBearing() -> getBearing
    void setBearing(java.lang.Double) -> setBearing
    java.lang.String toString() -> toString
    java.lang.String toJson(com.cardiomood.data.json.JsonGPS) -> toJson
    com.cardiomood.data.json.JsonGPS fromJson(java.lang.String) -> fromJson
com.cardiomood.data.json.JsonRRInterval -> com.cardiomood.data.json.JsonRRInterval:
    com.google.gson.Gson GSON -> GSON
    java.lang.Integer r -> r
    java.lang.Integer getR() -> getR
    void setR(java.lang.Integer) -> setR
    java.lang.String toString() -> toString
    java.lang.String toJson(com.cardiomood.data.json.JsonRRInterval) -> toJson
    com.cardiomood.data.json.JsonRRInterval fromJson(java.lang.String) -> fromJson
com.cardiomood.data.json.UserAccount -> com.cardiomood.data.json.UserAccount:
    long serialVersionUID -> serialVersionUID
    java.lang.Long id -> id
    java.lang.String login -> login
    java.lang.String password -> password
    com.cardiomood.data.json.UserAccount$Type accountType -> accountType
    java.lang.Long userId -> userId
    java.lang.Long getUserId() -> getUserId
    void setUserId(java.lang.Long) -> setUserId
    com.cardiomood.data.json.UserAccount$Type getAccountType() -> getAccountType
    void setAccountType(com.cardiomood.data.json.UserAccount$Type) -> setAccountType
    java.lang.String getLogin() -> getLogin
    void setLogin(java.lang.String) -> setLogin
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.cardiomood.data.json.UserAccount$Type -> com.cardiomood.data.json.UserAccount$Type:
    com.cardiomood.data.json.UserAccount$Type EMAIL -> EMAIL
    com.cardiomood.data.json.UserAccount$Type FACEBOOK -> FACEBOOK
    com.cardiomood.data.json.UserAccount$Type GOOGLE -> GOOGLE
    com.cardiomood.data.json.UserAccount$Type[] $VALUES -> $VALUES
    com.cardiomood.data.json.UserAccount$Type[] values() -> values
    com.cardiomood.data.json.UserAccount$Type valueOf(java.lang.String) -> valueOf
com.cardiomood.data.json.UserProfile -> com.cardiomood.data.json.UserProfile:
    long serialVersionUID -> serialVersionUID
    com.google.gson.Gson GSON -> GSON
    java.lang.Long id -> id
    java.lang.String firstName -> firstName
    java.lang.String lastName -> lastName
    com.cardiomood.data.json.UserProfile$Role userRole -> userRole
    com.cardiomood.data.json.UserProfile$AccountStatus accountStatus -> accountStatus
    com.cardiomood.data.json.UserProfile$Status userStatus -> userStatus
    java.lang.Long registrationDate -> registrationDate
    java.lang.Long lastLoginDate -> lastLoginDate
    java.lang.Long lastModificationDate -> lastModificationDate
    java.lang.Double weight -> weight
    java.lang.Double height -> height
    com.cardiomood.data.json.UserProfile$Gender gender -> gender
    java.lang.String phoneNumber -> phoneNumber
    java.lang.Long birthTimestamp -> birthTimestamp
    com.cardiomood.data.json.UserProfile$AccountStatus getAccountStatus() -> getAccountStatus
    void setAccountStatus(com.cardiomood.data.json.UserProfile$AccountStatus) -> setAccountStatus
    java.lang.String getFirstName() -> getFirstName
    void setFirstName(java.lang.String) -> setFirstName
    java.lang.Long getLastLoginDate() -> getLastLoginDate
    void setLastLoginDate(java.lang.Long) -> setLastLoginDate
    java.lang.String getLastName() -> getLastName
    void setLastName(java.lang.String) -> setLastName
    java.lang.Long getRegistrationDate() -> getRegistrationDate
    void setRegistrationDate(java.lang.Long) -> setRegistrationDate
    com.cardiomood.data.json.UserProfile$Role getUserRole() -> getUserRole
    void setUserRole(com.cardiomood.data.json.UserProfile$Role) -> setUserRole
    com.cardiomood.data.json.UserProfile$Status getUserStatus() -> getUserStatus
    void setUserStatus(com.cardiomood.data.json.UserProfile$Status) -> setUserStatus
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.Long getLastModificationDate() -> getLastModificationDate
    void setLastModificationDate(java.lang.Long) -> setLastModificationDate
    java.lang.Double getWeight() -> getWeight
    void setWeight(java.lang.Double) -> setWeight
    java.lang.Double getHeight() -> getHeight
    void setHeight(java.lang.Double) -> setHeight
    com.cardiomood.data.json.UserProfile$Gender getGender() -> getGender
    void setGender(com.cardiomood.data.json.UserProfile$Gender) -> setGender
    java.lang.String getPhoneNumber() -> getPhoneNumber
    void setPhoneNumber(java.lang.String) -> setPhoneNumber
    java.lang.Long getBirthTimestamp() -> getBirthTimestamp
    void setBirthTimestamp(java.lang.Long) -> setBirthTimestamp
    java.lang.String toString() -> toString
com.cardiomood.data.json.UserProfile$AccountStatus -> com.cardiomood.data.json.UserProfile$AccountStatus:
    com.cardiomood.data.json.UserProfile$AccountStatus FREE -> FREE
    com.cardiomood.data.json.UserProfile$AccountStatus GOLD -> GOLD
    com.cardiomood.data.json.UserProfile$AccountStatus[] $VALUES -> $VALUES
    com.cardiomood.data.json.UserProfile$AccountStatus[] values() -> values
    com.cardiomood.data.json.UserProfile$AccountStatus valueOf(java.lang.String) -> valueOf
com.cardiomood.data.json.UserProfile$Gender -> com.cardiomood.data.json.UserProfile$Gender:
    com.cardiomood.data.json.UserProfile$Gender MALE -> MALE
    com.cardiomood.data.json.UserProfile$Gender FEMALE -> FEMALE
    com.cardiomood.data.json.UserProfile$Gender UNSPECIFIED -> UNSPECIFIED
    com.cardiomood.data.json.UserProfile$Gender[] $VALUES -> $VALUES
    com.cardiomood.data.json.UserProfile$Gender[] values() -> values
    com.cardiomood.data.json.UserProfile$Gender valueOf(java.lang.String) -> valueOf
com.cardiomood.data.json.UserProfile$Role -> com.cardiomood.data.json.UserProfile$Role:
    com.cardiomood.data.json.UserProfile$Role USER -> USER
    com.cardiomood.data.json.UserProfile$Role ADMIN -> ADMIN
    com.cardiomood.data.json.UserProfile$Role[] $VALUES -> $VALUES
    com.cardiomood.data.json.UserProfile$Role[] values() -> values
    com.cardiomood.data.json.UserProfile$Role valueOf(java.lang.String) -> valueOf
com.cardiomood.data.json.UserProfile$Status -> com.cardiomood.data.json.UserProfile$Status:
    com.cardiomood.data.json.UserProfile$Status ACTIVE -> ACTIVE
    com.cardiomood.data.json.UserProfile$Status BANNED -> BANNED
    com.cardiomood.data.json.UserProfile$Status DELETED -> DELETED
    com.cardiomood.data.json.UserProfile$Status[] $VALUES -> $VALUES
    com.cardiomood.data.json.UserProfile$Status[] values() -> values
    com.cardiomood.data.json.UserProfile$Status valueOf(java.lang.String) -> valueOf
com.cardiomood.data.test.ServiceStub -> com.cardiomood.data.test.ServiceStub:
    java.lang.String EMAIL -> EMAIL
    java.lang.String PASSWORD -> PASSWORD
    long USER_ID -> USER_ID
    long TOKEN_LIFE_TIME -> TOKEN_LIFE_TIME
    java.util.Random random -> random
    com.cardiomood.data.json.JSONResponse register(java.lang.String,java.lang.String) -> register
    com.cardiomood.data.json.JSONResponse login(java.lang.String,java.lang.String) -> login
    com.cardiomood.data.json.JSONResponse createSession(java.lang.String,java.lang.Long,java.lang.Long,java.lang.String,java.lang.Long) -> createSession
    com.cardiomood.data.json.JSONResponse getSessionsOfUser(java.lang.String,java.lang.Long,java.lang.Long) -> getSessionsOfUser
    com.cardiomood.data.json.JSONResponse updateSessionInfo(java.lang.String,java.lang.Long,java.lang.Long,java.lang.String,java.lang.String) -> updateSessionInfo
    com.cardiomood.data.json.JSONResponse getSessionData(java.lang.String,java.lang.Long,java.lang.Long) -> getSessionData
    com.cardiomood.data.json.JSONResponse deleteSession(java.lang.String,java.lang.Long,java.lang.Long) -> deleteSession
    com.cardiomood.data.json.JSONResponse appendDataToSession(java.lang.String,java.lang.Long,java.lang.String) -> appendDataToSession
    com.cardiomood.data.json.JSONResponse rewriteCardioSessionData(java.lang.String,java.lang.Long,java.lang.String) -> rewriteCardioSessionData
    com.cardiomood.data.json.JSONResponse finishSession(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long) -> finishSession
    com.cardiomood.data.json.JSONResponse updateUserInfo(java.lang.String,java.lang.Long,java.lang.String,java.lang.String) -> updateUserInfo
    com.cardiomood.data.json.JSONResponse updateUserProfile(java.lang.String,java.lang.String) -> updateUserProfile
    com.cardiomood.data.json.JSONResponse getUserProfileByToken(java.lang.String) -> getUserProfileByToken
    com.cardiomood.data.json.JSONResponse lazyFacebookLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> lazyFacebookLogin
    com.cardiomood.data.json.JSONResponse changePassword(java.lang.String,java.lang.Long,com.cardiomood.data.json.UserAccount$Type,java.lang.String) -> changePassword
    com.cardiomood.data.json.ApiToken generateApiToken() -> generateApiToken
    com.cardiomood.data.json.UserProfile getUser() -> getUser
    void sleep(long) -> sleep
com.cardiomood.heartrate.bluetooth.AndroidLeHRMonitor -> com.cardiomood.heartrate.bluetooth.a:
    java.lang.String TAG -> f
    java.lang.String CLIENT_CHARACTERISTIC_CONFIG -> a
    java.util.UUID UUID_HEART_RATE_SERVICE -> b
    java.util.UUID UUID_HEART_RATE_MEASUREMENT_CHARACTERISTIC -> c
    java.util.UUID UUID_BATTERY_SERVICE -> d
    java.util.UUID UUID_BATTERY_LEVEL_CHARACTERISTIC -> e
    android.content.Context mContext -> g
    android.bluetooth.BluetoothManager mBluetoothManager -> h
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> i
    android.bluetooth.BluetoothGatt mBluetoothGatt -> j
    java.lang.String mBluetoothDeviceAddress -> k
    android.bluetooth.BluetoothGattCallback mGattCallback -> l
    boolean isSupported() -> a
    android.bluetooth.BluetoothAdapter getBluetoothAdapter() -> b
    boolean initialize() -> c
    boolean connect(java.lang.String) -> a
    void disconnect() -> d
    void close() -> e
    android.bluetooth.BluetoothAdapter getCurrentBluetoothAdapter() -> f
    boolean requestBatteryLevel() -> g
    java.lang.String access$000() -> h
com.cardiomood.heartrate.bluetooth.AndroidLeHRMonitor$1 -> com.cardiomood.heartrate.bluetooth.b:
    com.cardiomood.heartrate.bluetooth.AndroidLeHRMonitor this$0 -> a
    void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int) -> onConnectionStateChange
    void onServicesDiscovered(android.bluetooth.BluetoothGatt,int) -> onServicesDiscovered
    void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int) -> onCharacteristicRead
    void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic) -> onCharacteristicChanged
    void processCharacteristic(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic) -> a
com.cardiomood.heartrate.bluetooth.FallbackMonitor -> com.cardiomood.heartrate.bluetooth.c:
    boolean isSupported() -> a
    boolean initialize() -> c
    boolean connect(java.lang.String) -> a
    void disconnect() -> d
    void close() -> e
    android.bluetooth.BluetoothAdapter getCurrentBluetoothAdapter() -> f
com.cardiomood.heartrate.bluetooth.HeartRateLeService -> com.cardiomood.heartrate.bluetooth.HeartRateLeService:
    java.lang.String TAG -> a
    android.os.IBinder mBinder -> b
    com.cardiomood.heartrate.bluetooth.LeHRMonitor monitor -> c
    com.cardiomood.heartrate.bluetooth.HeartRateLeService$DataCollector dataCollector -> d
    android.content.BroadcastReceiver receiver -> e
    boolean receiverRegistered -> f
    void onReceiveBroadcast(android.content.Context,android.content.Intent) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    boolean initialize(android.app.Activity) -> a
    boolean connect(java.lang.String) -> a
    void disconnect() -> a
    com.cardiomood.heartrate.bluetooth.LeHRMonitor getMonitor() -> b
    void close() -> c
    com.cardiomood.heartrate.bluetooth.HeartRateLeService$DataCollector getDataCollector() -> d
    void setDataCollector(com.cardiomood.heartrate.bluetooth.HeartRateLeService$DataCollector) -> a
    android.content.IntentFilter makeGattUpdateIntentFilter() -> e
com.cardiomood.heartrate.bluetooth.HeartRateLeService$1 -> com.cardiomood.heartrate.bluetooth.d:
    com.cardiomood.heartrate.bluetooth.HeartRateLeService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cardiomood.heartrate.bluetooth.HeartRateLeService$DataCollector -> com.cardiomood.heartrate.bluetooth.e:
    void onConnected() -> a
    void addData(int,short[]) -> a
    void onDisconnected() -> e
com.cardiomood.heartrate.bluetooth.HeartRateLeService$LocalBinder -> com.cardiomood.heartrate.bluetooth.f:
    com.cardiomood.heartrate.bluetooth.HeartRateLeService this$0 -> a
    com.cardiomood.heartrate.bluetooth.HeartRateLeService getService() -> a
com.cardiomood.heartrate.bluetooth.LeHRMonitor -> com.cardiomood.heartrate.bluetooth.g:
    java.lang.String TAG -> a
    int lastBPM -> b
    int batteryLevel -> c
    int connectionStatus -> d
    android.content.Context context -> e
    com.cardiomood.heartrate.bluetooth.LeHRMonitor getMonitor(android.content.Context) -> a
    boolean isSupported() -> a
    boolean initialize() -> c
    boolean connect(java.lang.String) -> a
    void disconnect() -> d
    void close() -> e
    android.bluetooth.BluetoothAdapter getCurrentBluetoothAdapter() -> f
    boolean requestBatteryLevel() -> g
    android.bluetooth.BluetoothAdapter getBluetoothAdapter() -> b
    android.content.Context getContext() -> i
    void setBatteryLevel(int) -> a
    int getLastBPM() -> j
    void setLastBPM(int) -> b
    int getConnectionStatus() -> k
    void setConnectionStatus(int) -> c
    void notifyBatteryLevel(int) -> d
    void notifyConnectionStatusChanged(int,int) -> a
    void notifyBPMChanged(int,int) -> b
    void notifyHeartRateDataReceived(int,short,short[]) -> a
com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor -> com.cardiomood.heartrate.bluetooth.h:
    java.lang.String TAG -> c
    android.os.ParcelUuid HRM -> a
    java.lang.String hrmUUID -> b
    android.content.Context mContext -> d
    android.bluetooth.BluetoothDevice device -> e
    android.bluetooth.BluetoothAdapter bluetoothAdapter -> f
    android.content.ServiceConnection mConnection -> g
    com.motorola.bluetoothle.hrm.IBluetoothHrm hrmService -> h
    boolean bleBound -> i
    boolean leDisconnected -> j
    com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor$BLECallback callback1 -> k
    boolean receiverRegistered -> l
    android.content.IntentFilter filterScan -> m
    android.content.BroadcastReceiver broadcastReceiver -> n
    byte[] previousData -> o
    boolean isSupported() -> a
    boolean initialize() -> c
    boolean connect(java.lang.String) -> a
    void disconnect() -> d
    void close() -> e
    android.bluetooth.BluetoothAdapter getCurrentBluetoothAdapter() -> f
    void parseData(int,byte[]) -> a
    short[] getRRIntervals(byte[],int) -> a
    com.motorola.bluetoothle.hrm.IBluetoothHrm access$002(com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor,com.motorola.bluetoothle.hrm.IBluetoothHrm) -> a
    boolean access$102(com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor,boolean) -> a
    java.lang.String access$200() -> h
    boolean access$302(com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor,boolean) -> b
    android.bluetooth.BluetoothDevice access$400(com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor) -> a
    com.motorola.bluetoothle.hrm.IBluetoothHrm access$000(com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor) -> b
    android.bluetooth.BluetoothDevice access$402(com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor,android.bluetooth.BluetoothDevice) -> a
    void access$500(com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor,int,byte[]) -> a
com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor$1 -> com.cardiomood.heartrate.bluetooth.i:
    com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor$2 -> com.cardiomood.heartrate.bluetooth.j:
    com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor$BLECallback -> com.cardiomood.heartrate.bluetooth.k:
    java.lang.String service -> b
    com.cardiomood.heartrate.bluetooth.MotorolaLeHRMonitor this$0 -> a
    void indicationLeCb(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[]) -> indicationLeCb
    void notificationLeCb(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[]) -> notificationLeCb
com.cardiomood.math.DataWindowSet -> com.cardiomood.math.a:
    double totalDuration -> a
    int totalCount -> b
    java.util.Set windows -> c
    void addElementToWindows(double) -> a
    void addWindow(com.cardiomood.math.window.DataWindow) -> a
    void addIntervals(double[]) -> a
    void clear() -> a
com.cardiomood.math.HeartRateUtils -> com.cardiomood.math.b:
    com.cardiomood.math.parameters.AbstractSingleValue mRR -> a
    com.cardiomood.math.parameters.AbstractSingleValue SDNN -> b
    com.cardiomood.math.parameters.AbstractSingleValue RMSSD -> c
    com.cardiomood.math.parameters.AbstractSingleValue PNN50 -> d
    com.cardiomood.math.parameters.AbstractSingleValue SI -> e
    com.cardiomood.math.parameters.AbstractSingleValue A -> f
    double getMRR(double[]) -> a
    double getMRR(double[],int,int) -> a
    double getSDNN(double[]) -> b
    double getSDNN(double[],int,int) -> b
    double getRMSSD(double[]) -> c
    double getRMSSD(double[],int,int) -> c
    double getPNN50(double[]) -> d
    double getPNN50(double[],int,int) -> d
    double getSI(double[]) -> e
    double getSI(double[],int,int) -> e
    double[][] getSI(double[],com.cardiomood.math.window.DataWindow) -> a
    double getA(double[]) -> f
    double getA(double[],int,int) -> f
    double[][] getA(double[],com.cardiomood.math.window.DataWindow) -> b
    double[][] getA(double[],int,int,com.cardiomood.math.window.DataWindow) -> a
    double[][] getSI(double[],int,int,com.cardiomood.math.window.DataWindow) -> b
    double[][] getSDNN(double[],com.cardiomood.math.window.DataWindow) -> c
    double[][] getSDNN(double[],int,int,com.cardiomood.math.window.DataWindow) -> c
    double getSum(double[]) -> g
    double getSum(double[],int,int) -> g
com.cardiomood.math.HeartRateUtils$1 -> com.cardiomood.math.c:
    org.apache.commons.math3.util.DoubleArray val$time -> a
    org.apache.commons.math3.util.DoubleArray val$values -> b
    void onStep(com.cardiomood.math.window.DataWindow,int,double,double) -> a
com.cardiomood.math.HeartRateUtils$2 -> com.cardiomood.math.d:
    org.apache.commons.math3.util.DoubleArray val$time -> a
    org.apache.commons.math3.util.DoubleArray val$values -> b
    void onStep(com.cardiomood.math.window.DataWindow,int,double,double) -> a
com.cardiomood.math.HeartRateUtils$3 -> com.cardiomood.math.e:
    org.apache.commons.math3.util.DoubleArray val$time -> a
    org.apache.commons.math3.util.DoubleArray val$values -> b
    void onStep(com.cardiomood.math.window.DataWindow,int,double,double) -> a
com.cardiomood.math.filter.ArtifactFilter -> com.cardiomood.math.a.a:
    double[] doFilter(double[]) -> a
    int getArtifactsCount(double[]) -> b
com.cardiomood.math.filter.PisarukArtifactFilter -> com.cardiomood.math.a.b:
    double[] doFilter(double[]) -> a
    int getArtifactsCount(double[]) -> b
com.cardiomood.math.histogram.Histogram -> com.cardiomood.math.b.a:
    double[] values -> a
    int[] count -> b
    double step -> c
    double Mo -> d
    double AMo -> e
    double mxDMn -> f
    double SI -> g
    double mRR -> h
    double IAB -> i
    double ARRP -> j
    int height -> k
    double WN4 -> l
    void init() -> h
    double getA() -> a
    double getWidthAbove(int) -> a
    int getCountFor(double) -> a
    double getWN(double) -> b
    double getMo() -> b
    double getAMo() -> c
    double getMxDMn() -> d
    double getSI() -> e
    int getHeight() -> f
    double getWN4() -> g
com.cardiomood.math.histogram.Histogram128Ext -> com.cardiomood.math.b.b:
    double HRVTi -> c
    double WN1 -> d
    double WN5 -> e
    double WN10 -> f
    void init() -> k
    double getWN1() -> h
    double getWN5() -> i
    double getHRVTi() -> j
com.cardiomood.math.parameters.AValue -> com.cardiomood.math.c.a:
    double evaluate(double[],double[],int,int) -> a
com.cardiomood.math.parameters.AbstractSingleValue -> com.cardiomood.math.c.b:
    double evaluate(double[],double[],int,int) -> a
com.cardiomood.math.parameters.MRRValue -> com.cardiomood.math.c.c:
    double evaluate(double[],double[],int,int) -> a
com.cardiomood.math.parameters.PNN50Value -> com.cardiomood.math.c.d:
    double evaluate(double[],double[],int,int) -> a
com.cardiomood.math.parameters.RMSSDValue -> com.cardiomood.math.c.e:
    double evaluate(double[],double[],int,int) -> a
com.cardiomood.math.parameters.SDNNValue -> com.cardiomood.math.c.f:
    com.cardiomood.math.filter.ArtifactFilter FILTER -> a
    double evaluate(double[],double[],int,int) -> a
com.cardiomood.math.parameters.SIValue -> com.cardiomood.math.c.g:
    double evaluate(double[],double[],int,int) -> a
com.cardiomood.math.spectrum.ACF -> com.cardiomood.math.spectrum.a:
    double[] rr -> a
    double[] r -> b
    double[] g -> c
    int n -> d
    void init() -> b
    double[] getPower() -> a
    double toFrequency(int) -> a
com.cardiomood.math.spectrum.FFT -> com.cardiomood.math.spectrum.b:
    double[] t -> a
    double[] y -> b
    org.apache.commons.math3.complex.Complex[] result -> c
    int n -> d
    double duration -> e
    double maxFreq -> f
    double toFrequency(int) -> a
    double[] getPower() -> a
    org.apache.commons.math3.complex.Complex[] transform(double[],double[],int,int,int) -> a
com.cardiomood.math.spectrum.SpectralAnalysis -> com.cardiomood.math.spectrum.SpectralAnalysis:
    com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm algorithm -> a
    com.cardiomood.math.spectrum.SpectralPowerEvaluator spe -> b
    double[] power -> c
    double TP -> d
    double ULF -> e
    double VLF -> f
    double LF -> g
    double HF -> h
    void init() -> h
    double[] getPower() -> a
    double getTP() -> b
    double getULF() -> c
    double getVLF() -> d
    double getLF() -> e
    double getHF() -> f
    double toFrequency(int) -> a
    org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction getSplinePower() -> g
com.cardiomood.math.spectrum.SpectralAnalysis$1 -> com.cardiomood.math.spectrum.c:
    int[] $SwitchMap$com$cardiomood$math$spectrum$SpectralAnalysis$Algorithm -> a
com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm -> com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm:
    com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm FFT -> a
    com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm ACF -> b
    com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm[] $VALUES -> c
    com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm[] values() -> values
    com.cardiomood.math.spectrum.SpectralAnalysis$Algorithm valueOf(java.lang.String) -> valueOf
    com.cardiomood.math.spectrum.SpectralPowerEvaluator getInstance(double[],double[]) -> a
com.cardiomood.math.spectrum.SpectralPowerEvaluator -> com.cardiomood.math.spectrum.d:
    double[] getPower() -> a
    double toFrequency(int) -> a
com.cardiomood.math.window.DataWindow -> com.cardiomood.math.d.a:
    org.apache.commons.math3.util.DoubleArray intervals -> a
    org.apache.commons.math3.util.DoubleArray time -> b
    double duration -> c
    double windowSize -> d
    double stepSize -> e
    double timePosition -> f
    int indexPosition -> g
    com.cardiomood.math.window.DataWindow$Callback callback -> h
    boolean addIntervalAndMove(double) -> a
    void add(double[]) -> a
    void clear() -> a
    org.apache.commons.math3.util.DoubleArray getIntervals() -> b
    double getWindowSize() -> c
    double getStepSize() -> d
    void setCallback(com.cardiomood.math.window.DataWindow$Callback) -> a
    double getDuration() -> e
    double getTimePosition() -> f
    int getIndexPosition() -> g
    int getCount() -> h
    com.cardiomood.math.window.DataWindow$Callback access$100(com.cardiomood.math.window.DataWindow) -> a
    double access$200(com.cardiomood.math.window.DataWindow) -> b
    double access$300(com.cardiomood.math.window.DataWindow) -> c
    org.apache.commons.math3.util.DoubleArray access$400(com.cardiomood.math.window.DataWindow) -> d
    double access$218(com.cardiomood.math.window.DataWindow,double) -> a
    int access$508(com.cardiomood.math.window.DataWindow) -> e
    double access$318(com.cardiomood.math.window.DataWindow,double) -> b
com.cardiomood.math.window.DataWindow$1 -> com.cardiomood.math.d.b:
com.cardiomood.math.window.DataWindow$Callback -> com.cardiomood.math.d.c:
    void onMove(com.cardiomood.math.window.DataWindow,double,double) -> a
    double onAdd(com.cardiomood.math.window.DataWindow,double,double) -> b
    void onStep(com.cardiomood.math.window.DataWindow,int,double,double) -> a
com.cardiomood.math.window.DataWindow$CallbackAdapter -> com.cardiomood.math.d.d:
    void onMove(com.cardiomood.math.window.DataWindow,double,double) -> a
    double onAdd(com.cardiomood.math.window.DataWindow,double,double) -> b
    void onStep(com.cardiomood.math.window.DataWindow,int,double,double) -> a
com.cardiomood.math.window.DataWindow$IntervalsCount -> com.cardiomood.math.d.e:
    int lastPosition -> a
    boolean addIntervalAndMove(double) -> a
com.cardiomood.math.window.DataWindow$LocalResizableDoubleArray -> com.cardiomood.math.d.f:
    com.cardiomood.math.window.DataWindow this$0 -> a
    double addElementRolling(double) -> addElementRolling
    void addElement(double) -> addElement
com.cardiomood.math.window.DataWindow$Timed -> com.cardiomood.math.d.g:
    double lastPosition -> a
    boolean addIntervalAndMove(double) -> a
com.commonsware.cwac.adapter.AdapterWrapper -> com.commonsware.cwac.adapter.a:
    android.widget.ListAdapter wrapped -> a
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    android.widget.ListAdapter getWrappedAdapter() -> c
com.commonsware.cwac.adapter.AdapterWrapper$1 -> com.commonsware.cwac.adapter.b:
    com.commonsware.cwac.adapter.AdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.commonsware.cwac.adapter.demo.AdapterWrapperDemo -> com.commonsware.cwac.adapter.demo.AdapterWrapperDemo:
    void onCreate(android.os.Bundle) -> onCreate
com.commonsware.cwac.endless.EndlessAdapter -> com.commonsware.cwac.a.a:
    android.view.View pendingView -> a
    java.util.concurrent.atomic.AtomicBoolean keepOnAppending -> b
    android.content.Context context -> c
    int pendingResource -> d
    boolean isSerialized -> e
    boolean runInBackground -> f
    boolean cacheInBackground() -> a
    void appendCachedData() -> b
    void onDataReady() -> d
    int getCount() -> getCount
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    java.lang.Object getItem(int) -> getItem
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean onException(android.view.View,java.lang.Exception) -> a
    com.commonsware.cwac.endless.EndlessAdapter$AppendTask buildTask() -> e
    void executeAsyncTask(android.os.AsyncTask,java.lang.Object[]) -> a
    void setKeepOnAppending(boolean) -> a
    android.view.View getPendingView(android.view.ViewGroup) -> a
    void access$0(com.commonsware.cwac.endless.EndlessAdapter,boolean) -> a
    android.view.View access$1(com.commonsware.cwac.endless.EndlessAdapter) -> a
com.commonsware.cwac.endless.EndlessAdapter$AppendTask -> com.commonsware.cwac.a.b:
    com.commonsware.cwac.endless.EndlessAdapter adapter -> a
    boolean tempKeep -> b
    java.lang.Exception doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Exception) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.AccessToken -> com.facebook.AccessToken:
    long serialVersionUID -> serialVersionUID
    java.util.Date MIN_DATE -> b
    java.util.Date MAX_DATE -> c
    java.util.Date DEFAULT_EXPIRATION_TIME -> d
    java.util.Date DEFAULT_LAST_REFRESH_TIME -> e
    com.facebook.AccessTokenSource DEFAULT_ACCESS_TOKEN_SOURCE -> f
    java.util.Date ALREADY_EXPIRED_EXPIRATION_TIME -> g
    java.util.Date expires -> h
    java.util.List permissions -> i
    java.util.List declinedPermissions -> j
    java.lang.String token -> k
    com.facebook.AccessTokenSource source -> l
    java.util.Date lastRefresh -> m
    boolean $assertionsDisabled -> a
    java.lang.String getToken() -> a
    java.util.Date getExpires() -> b
    java.util.List getPermissions() -> c
    java.util.List getDeclinedPermissions() -> d
    com.facebook.AccessTokenSource getSource() -> e
    java.util.Date getLastRefresh() -> f
    java.lang.String toString() -> toString
    com.facebook.AccessToken createEmptyToken() -> g
    com.facebook.AccessToken createFromString(java.lang.String,java.util.List,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromNativeLogin(android.os.Bundle,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromWebBundle(java.util.List,android.os.Bundle,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromRefresh(com.facebook.AccessToken,android.os.Bundle) -> a
    com.facebook.AccessToken createFromTokenWithRefreshedPermissions(com.facebook.AccessToken,java.util.List,java.util.List) -> a
    com.facebook.AccessToken createNew(java.util.List,java.util.List,java.lang.String,java.util.Date,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromCache(android.os.Bundle) -> a
    java.util.List getPermissionsFromBundle(android.os.Bundle,java.lang.String) -> a
    android.os.Bundle toCacheBundle() -> h
    boolean isInvalid() -> i
    java.lang.String tokenToString() -> j
    void appendPermissions(java.lang.StringBuilder) -> a
    java.lang.Object writeReplace() -> writeReplace
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Date getBundleLongAsDate(android.os.Bundle,java.lang.String,java.util.Date) -> a
com.facebook.AccessToken$1 -> com.facebook.a:
com.facebook.AccessToken$SerializationProxyV2 -> com.facebook.b:
    long serialVersionUID -> serialVersionUID
    java.util.Date expires -> a
    java.util.List permissions -> b
    java.util.List declinedPermissions -> c
    java.lang.String token -> d
    com.facebook.AccessTokenSource source -> e
    java.util.Date lastRefresh -> f
    java.lang.Object readResolve() -> readResolve
com.facebook.AccessTokenSource -> com.facebook.AccessTokenSource:
    com.facebook.AccessTokenSource NONE -> a
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_WEB -> b
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_NATIVE -> c
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_SERVICE -> d
    com.facebook.AccessTokenSource WEB_VIEW -> e
    com.facebook.AccessTokenSource TEST_USER -> f
    com.facebook.AccessTokenSource CLIENT_TOKEN -> g
    boolean canExtendToken -> h
    com.facebook.AccessTokenSource[] $VALUES -> i
    com.facebook.AccessTokenSource[] values() -> values
    com.facebook.AccessTokenSource valueOf(java.lang.String) -> valueOf
    boolean canExtendToken() -> a
com.facebook.AppEventsLogger -> com.facebook.AppEventsLogger:
    java.lang.String TAG -> a
    android.content.Context context -> b
    com.facebook.AppEventsLogger$AccessTokenAppIdPair accessTokenAppId -> c
    java.util.Map stateMap -> d
    java.util.Timer flushTimer -> e
    java.util.Timer supportsAttributionRecheckTimer -> f
    com.facebook.AppEventsLogger$FlushBehavior flushBehavior -> g
    boolean requestInFlight -> h
    android.content.Context applicationContext -> i
    java.lang.Object staticLock -> j
    java.lang.String hashedDeviceAndAppId -> k
    java.util.Map mapEventsToSuppressionTime -> l
    java.util.Map mapEventNameToSuppress -> m
    com.facebook.AppEventsLogger newLogger(android.content.Context) -> a
    com.facebook.AppEventsLogger newLogger(android.content.Context,com.facebook.Session) -> a
    com.facebook.AppEventsLogger newLogger(android.content.Context,java.lang.String) -> a
    com.facebook.AppEventsLogger$FlushBehavior getFlushBehavior() -> a
    void logEvent(java.lang.String,android.os.Bundle) -> a
    void logSdkEvent(java.lang.String,java.lang.Double,android.os.Bundle) -> a
    java.lang.String getApplicationId() -> b
    void initializeTimersIfNeeded() -> g
    void logEvent(java.lang.String,java.lang.Double,android.os.Bundle,boolean) -> a
    void logEvent(android.content.Context,com.facebook.AppEventsLogger$AppEvent,com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    boolean shouldSuppressEvent(com.facebook.AppEventsLogger$AppEvent) -> a
    void flushIfNecessary() -> h
    int getAccumulatedEventCount() -> i
    com.facebook.AppEventsLogger$SessionEventsState getSessionEventsState(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    com.facebook.AppEventsLogger$SessionEventsState getSessionEventsState(com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    void flush(com.facebook.AppEventsLogger$FlushReason) -> b
    void flushAndWait(com.facebook.AppEventsLogger$FlushReason) -> c
    com.facebook.AppEventsLogger$FlushStatistics buildAndExecuteRequests(com.facebook.AppEventsLogger$FlushReason,java.util.Set) -> a
    com.facebook.Request buildRequestForSession(com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.AppEventsLogger$SessionEventsState,boolean,com.facebook.AppEventsLogger$FlushStatistics) -> a
    void handleResponse(com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.Request,com.facebook.Response,com.facebook.AppEventsLogger$SessionEventsState,com.facebook.AppEventsLogger$FlushStatistics) -> b
    int accumulatePersistedEvents() -> j
    void access$100(com.facebook.AppEventsLogger$FlushReason) -> a
    java.lang.Object access$200() -> c
    java.util.Map access$300() -> d
    void access$500(com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.Request,com.facebook.Response,com.facebook.AppEventsLogger$SessionEventsState,com.facebook.AppEventsLogger$FlushStatistics) -> a
    android.content.Context access$600() -> e
    java.lang.String access$900() -> f
com.facebook.AppEventsLogger$1 -> com.facebook.c:
com.facebook.AppEventsLogger$2 -> com.facebook.d:
    void run() -> run
com.facebook.AppEventsLogger$3 -> com.facebook.e:
    void run() -> run
com.facebook.AppEventsLogger$4 -> com.facebook.f:
    com.facebook.AppEventsLogger$FlushReason val$reason -> a
    void run() -> run
com.facebook.AppEventsLogger$5 -> com.facebook.g:
    com.facebook.AppEventsLogger$AccessTokenAppIdPair val$accessTokenAppId -> a
    com.facebook.Request val$postRequest -> b
    com.facebook.AppEventsLogger$SessionEventsState val$sessionEventsState -> c
    com.facebook.AppEventsLogger$FlushStatistics val$flushState -> d
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.AppEventsLogger$AccessTokenAppIdPair -> com.facebook.h:
    long serialVersionUID -> serialVersionUID
    java.lang.String accessToken -> a
    java.lang.String applicationId -> b
    java.lang.String getAccessToken() -> a
    java.lang.String getApplicationId() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object writeReplace() -> writeReplace
com.facebook.AppEventsLogger$AccessTokenAppIdPair$SerializationProxyV1 -> com.facebook.i:
    long serialVersionUID -> serialVersionUID
    java.lang.String accessToken -> a
    java.lang.String appId -> b
    java.lang.Object readResolve() -> readResolve
com.facebook.AppEventsLogger$AppEvent -> com.facebook.j:
    long serialVersionUID -> serialVersionUID
    org.json.JSONObject jsonObject -> a
    boolean isImplicit -> b
    java.util.HashSet validatedIdentifiers -> c
    java.lang.String name -> d
    java.lang.String getName() -> a
    boolean getIsImplicit() -> b
    org.json.JSONObject getJSONObject() -> c
    void validateIdentifier(java.lang.String) -> a
    java.lang.Object writeReplace() -> writeReplace
    java.lang.String toString() -> toString
com.facebook.AppEventsLogger$AppEvent$SerializationProxyV1 -> com.facebook.k:
    long serialVersionUID -> serialVersionUID
    java.lang.String jsonString -> a
    boolean isImplicit -> b
    java.lang.Object readResolve() -> readResolve
com.facebook.AppEventsLogger$EventSuppression -> com.facebook.l:
    int timeoutPeriod -> a
    com.facebook.AppEventsLogger$SuppressionTimeoutBehavior behavior -> b
    int getTimeoutPeriod() -> a
    com.facebook.AppEventsLogger$SuppressionTimeoutBehavior getBehavior() -> b
com.facebook.AppEventsLogger$FlushBehavior -> com.facebook.AppEventsLogger$FlushBehavior:
    com.facebook.AppEventsLogger$FlushBehavior AUTO -> a
    com.facebook.AppEventsLogger$FlushBehavior EXPLICIT_ONLY -> b
    com.facebook.AppEventsLogger$FlushBehavior[] $VALUES -> c
    com.facebook.AppEventsLogger$FlushBehavior[] values() -> values
    com.facebook.AppEventsLogger$FlushBehavior valueOf(java.lang.String) -> valueOf
com.facebook.AppEventsLogger$FlushReason -> com.facebook.m:
    com.facebook.AppEventsLogger$FlushReason EXPLICIT -> a
    com.facebook.AppEventsLogger$FlushReason TIMER -> b
    com.facebook.AppEventsLogger$FlushReason SESSION_CHANGE -> c
    com.facebook.AppEventsLogger$FlushReason PERSISTED_EVENTS -> d
    com.facebook.AppEventsLogger$FlushReason EVENT_THRESHOLD -> e
    com.facebook.AppEventsLogger$FlushReason EAGER_FLUSHING_EVENT -> f
    com.facebook.AppEventsLogger$FlushReason[] $VALUES -> g
    com.facebook.AppEventsLogger$FlushReason[] values() -> values
    com.facebook.AppEventsLogger$FlushReason valueOf(java.lang.String) -> valueOf
com.facebook.AppEventsLogger$FlushResult -> com.facebook.n:
    com.facebook.AppEventsLogger$FlushResult SUCCESS -> a
    com.facebook.AppEventsLogger$FlushResult SERVER_ERROR -> b
    com.facebook.AppEventsLogger$FlushResult NO_CONNECTIVITY -> c
    com.facebook.AppEventsLogger$FlushResult UNKNOWN_ERROR -> d
    com.facebook.AppEventsLogger$FlushResult[] $VALUES -> e
    com.facebook.AppEventsLogger$FlushResult[] values() -> values
    com.facebook.AppEventsLogger$FlushResult valueOf(java.lang.String) -> valueOf
com.facebook.AppEventsLogger$FlushStatistics -> com.facebook.o:
    int numEvents -> a
    com.facebook.AppEventsLogger$FlushResult result -> b
com.facebook.AppEventsLogger$PersistedEvents -> com.facebook.p:
    java.lang.Object staticLock -> a
    android.content.Context context -> b
    java.util.HashMap persistedEvents -> c
    com.facebook.AppEventsLogger$PersistedEvents readAndClearStore(android.content.Context) -> a
    void persistEvents(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.AppEventsLogger$SessionEventsState) -> a
    void persistEvents(android.content.Context,java.util.Map) -> a
    java.util.Set keySet() -> a
    java.util.List getEvents(com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    void write() -> b
    void readAndClearStore() -> c
    void addEvents(com.facebook.AppEventsLogger$AccessTokenAppIdPair,java.util.List) -> a
com.facebook.AppEventsLogger$SessionEventsState -> com.facebook.q:
    java.util.List accumulatedEvents -> a
    java.util.List inFlightEvents -> b
    int numSkippedEventsDueToFullBuffer -> c
    com.facebook.internal.AttributionIdentifiers attributionIdentifiers -> d
    java.lang.String packageName -> e
    java.lang.String hashedDeviceAndAppId -> f
    int MAX_ACCUMULATED_LOG_EVENTS -> g
    void addEvent(com.facebook.AppEventsLogger$AppEvent) -> a
    int getAccumulatedEventCount() -> a
    void clearInFlightAndStats(boolean) -> a
    int populateRequest(com.facebook.Request,boolean,boolean,boolean) -> a
    java.util.List getEventsToPersist() -> b
    void accumulatePersistedEvents(java.util.List) -> a
    void populateRequest(com.facebook.Request,int,org.json.JSONArray,boolean,boolean) -> a
    byte[] getStringAsByteArray(java.lang.String) -> a
com.facebook.AppEventsLogger$SuppressionTimeoutBehavior -> com.facebook.r:
    com.facebook.AppEventsLogger$SuppressionTimeoutBehavior RESET_TIMEOUT_WHEN_LOG_SUCCESSFUL -> a
    com.facebook.AppEventsLogger$SuppressionTimeoutBehavior RESET_TIMEOUT_WHEN_LOG_ATTEMPTED -> b
    com.facebook.AppEventsLogger$SuppressionTimeoutBehavior[] $VALUES -> c
    com.facebook.AppEventsLogger$SuppressionTimeoutBehavior[] values() -> values
    com.facebook.AppEventsLogger$SuppressionTimeoutBehavior valueOf(java.lang.String) -> valueOf
com.facebook.AuthorizationClient -> com.facebook.s:
    long serialVersionUID -> serialVersionUID
    java.util.List handlersToTry -> a
    com.facebook.AuthorizationClient$AuthHandler currentHandler -> b
    android.content.Context context -> c
    com.facebook.AuthorizationClient$StartActivityDelegate startActivityDelegate -> d
    com.facebook.AuthorizationClient$OnCompletedListener onCompletedListener -> e
    com.facebook.AuthorizationClient$BackgroundProcessingListener backgroundProcessingListener -> f
    boolean checkedInternetPermission -> g
    com.facebook.AuthorizationClient$AuthorizationRequest pendingRequest -> h
    java.util.Map loggingExtras -> i
    com.facebook.AppEventsLogger appEventsLogger -> j
    void setContext(android.content.Context) -> a
    void setContext(android.app.Activity) -> a
    void startOrContinueAuth(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void authorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> b
    void continueAuth() -> a
    boolean getInProgress() -> b
    void cancelCurrentHandler() -> c
    boolean onActivityResult(int,int,android.content.Intent) -> a
    java.util.List getHandlerTypes(com.facebook.AuthorizationClient$AuthorizationRequest) -> c
    boolean checkInternetPermission() -> d
    void tryNextHandler() -> e
    void completeWithFailure() -> i
    void addLoggingExtra(java.lang.String,java.lang.String,boolean) -> a
    boolean tryCurrentHandler() -> f
    void completeAndValidate(com.facebook.AuthorizationClient$Result) -> a
    void complete(com.facebook.AuthorizationClient$Result) -> b
    void setOnCompletedListener(com.facebook.AuthorizationClient$OnCompletedListener) -> a
    void setBackgroundProcessingListener(com.facebook.AuthorizationClient$BackgroundProcessingListener) -> a
    com.facebook.AuthorizationClient$StartActivityDelegate getStartActivityDelegate() -> g
    int checkPermission(java.lang.String) -> a
    void validateSameFbidAndFinish(com.facebook.AuthorizationClient$Result) -> c
    com.facebook.RequestBatch createReauthValidationBatch(com.facebook.AuthorizationClient$Result) -> d
    com.facebook.Request createGetPermissionsRequest(java.lang.String) -> b
    com.facebook.Request createGetProfileIdRequest(java.lang.String) -> c
    com.facebook.AppEventsLogger getAppEventsLogger() -> j
    void notifyOnCompleteListener(com.facebook.AuthorizationClient$Result) -> e
    void notifyBackgroundProcessingStart() -> k
    void notifyBackgroundProcessingStop() -> l
    void logAuthorizationMethodStart(java.lang.String) -> e
    void logAuthorizationMethodComplete(java.lang.String,com.facebook.AuthorizationClient$Result,java.util.Map) -> a
    void logAuthorizationMethodComplete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
    android.os.Bundle newAuthorizationLoggingBundle(java.lang.String) -> d
    java.lang.String getE2E() -> m
    void logWebLoginCompleted(java.lang.String,java.lang.String) -> a
    void access$000(com.facebook.AuthorizationClient) -> a
    java.lang.String access$100() -> h
    void access$200(com.facebook.AuthorizationClient,java.lang.String,java.lang.String) -> a
    void access$300(com.facebook.AuthorizationClient) -> b
com.facebook.AuthorizationClient$1 -> com.facebook.t:
    android.app.Activity val$activity -> a
    com.facebook.AuthorizationClient this$0 -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$2 -> com.facebook.u:
    com.facebook.AuthorizationClient this$0 -> a
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$3 -> com.facebook.v:
    java.util.ArrayList val$fbids -> a
    com.facebook.AuthorizationClient this$0 -> b
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.AuthorizationClient$4 -> com.facebook.w:
    java.util.ArrayList val$grantedPermissions -> a
    java.util.ArrayList val$declinedPermissions -> b
    com.facebook.AuthorizationClient this$0 -> c
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.AuthorizationClient$5 -> com.facebook.x:
    java.util.ArrayList val$fbids -> a
    com.facebook.AuthorizationClient$Result val$pendingResult -> b
    java.util.ArrayList val$grantedPermissions -> c
    java.util.ArrayList val$declinedPermissions -> d
    com.facebook.AuthorizationClient this$0 -> e
    void onBatchCompleted(com.facebook.RequestBatch) -> a
com.facebook.AuthorizationClient$AuthDialogBuilder -> com.facebook.y:
    java.lang.String e2e -> a
    boolean isRerequest -> b
    com.facebook.AuthorizationClient$AuthDialogBuilder setE2E(java.lang.String) -> a
    com.facebook.AuthorizationClient$AuthDialogBuilder setIsRerequest(boolean) -> a
    com.facebook.widget.WebDialog build() -> a
com.facebook.AuthorizationClient$AuthHandler -> com.facebook.z:
    long serialVersionUID -> serialVersionUID
    java.util.Map methodLoggingExtras -> a
    com.facebook.AuthorizationClient this$0 -> b
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    java.lang.String getNameForLogging() -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    boolean needsRestart() -> b
    boolean needsInternetPermission() -> c
    void cancel() -> d
    void addLoggingExtra(java.lang.String,java.lang.Object) -> a
com.facebook.AuthorizationClient$AuthorizationRequest -> com.facebook.aa:
    long serialVersionUID -> serialVersionUID
    com.facebook.AuthorizationClient$StartActivityDelegate startActivityDelegate -> a
    com.facebook.SessionLoginBehavior loginBehavior -> b
    int requestCode -> c
    boolean isLegacy -> d
    java.util.List permissions -> e
    com.facebook.SessionDefaultAudience defaultAudience -> f
    java.lang.String applicationId -> g
    java.lang.String previousAccessToken -> h
    java.lang.String authId -> i
    boolean isRerequest -> j
    com.facebook.AuthorizationClient$StartActivityDelegate getStartActivityDelegate() -> a
    java.util.List getPermissions() -> b
    void setPermissions(java.util.List) -> a
    com.facebook.SessionLoginBehavior getLoginBehavior() -> c
    int getRequestCode() -> d
    java.lang.String getApplicationId() -> e
    boolean isLegacy() -> f
    java.lang.String getPreviousAccessToken() -> g
    boolean needsNewTokenValidation() -> h
    java.lang.String getAuthId() -> i
    boolean isRerequest() -> j
    void setRerequest(boolean) -> a
com.facebook.AuthorizationClient$BackgroundProcessingListener -> com.facebook.ab:
    void onBackgroundProcessingStarted() -> a
    void onBackgroundProcessingStopped() -> b
com.facebook.AuthorizationClient$GetTokenAuthHandler -> com.facebook.ac:
    long serialVersionUID -> serialVersionUID
    com.facebook.GetTokenClient getTokenClient -> d
    com.facebook.AuthorizationClient this$0 -> c
    java.lang.String getNameForLogging() -> a
    void cancel() -> d
    boolean needsRestart() -> b
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void getTokenCompleted(com.facebook.AuthorizationClient$AuthorizationRequest,android.os.Bundle) -> a
com.facebook.AuthorizationClient$GetTokenAuthHandler$1 -> com.facebook.ad:
    com.facebook.AuthorizationClient$AuthorizationRequest val$request -> a
    com.facebook.AuthorizationClient$GetTokenAuthHandler this$1 -> b
    void completed(android.os.Bundle) -> a
com.facebook.AuthorizationClient$KatanaAuthHandler -> com.facebook.ae:
    long serialVersionUID -> serialVersionUID
    com.facebook.AuthorizationClient this$0 -> c
    boolean tryIntent(android.content.Intent,int) -> a
com.facebook.AuthorizationClient$KatanaProxyAuthHandler -> com.facebook.af:
    long serialVersionUID -> serialVersionUID
    java.lang.String applicationId -> e
    com.facebook.AuthorizationClient this$0 -> d
    java.lang.String getNameForLogging() -> a
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    com.facebook.AuthorizationClient$Result handleResultOk(android.content.Intent) -> a
com.facebook.AuthorizationClient$OnCompletedListener -> com.facebook.ag:
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.AuthorizationClient$Result -> com.facebook.ah:
    long serialVersionUID -> serialVersionUID
    com.facebook.AuthorizationClient$Result$Code code -> a
    com.facebook.AccessToken token -> b
    java.lang.String errorMessage -> c
    java.lang.String errorCode -> d
    com.facebook.AuthorizationClient$AuthorizationRequest request -> e
    java.util.Map loggingExtras -> f
    com.facebook.AuthorizationClient$Result createTokenResult(com.facebook.AuthorizationClient$AuthorizationRequest,com.facebook.AccessToken) -> a
    com.facebook.AuthorizationClient$Result createCancelResult(com.facebook.AuthorizationClient$AuthorizationRequest,java.lang.String) -> a
    com.facebook.AuthorizationClient$Result createErrorResult(com.facebook.AuthorizationClient$AuthorizationRequest,java.lang.String,java.lang.String) -> a
    com.facebook.AuthorizationClient$Result createErrorResult(com.facebook.AuthorizationClient$AuthorizationRequest,java.lang.String,java.lang.String,java.lang.String) -> a
com.facebook.AuthorizationClient$Result$Code -> com.facebook.ai:
    com.facebook.AuthorizationClient$Result$Code SUCCESS -> a
    com.facebook.AuthorizationClient$Result$Code CANCEL -> b
    com.facebook.AuthorizationClient$Result$Code ERROR -> c
    java.lang.String loggingValue -> d
    com.facebook.AuthorizationClient$Result$Code[] $VALUES -> e
    com.facebook.AuthorizationClient$Result$Code[] values() -> values
    com.facebook.AuthorizationClient$Result$Code valueOf(java.lang.String) -> valueOf
    java.lang.String getLoggingValue() -> a
com.facebook.AuthorizationClient$StartActivityDelegate -> com.facebook.aj:
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$WebViewAuthHandler -> com.facebook.ak:
    long serialVersionUID -> serialVersionUID
    com.facebook.widget.WebDialog loginDialog -> d
    java.lang.String applicationId -> e
    java.lang.String e2e -> f
    com.facebook.AuthorizationClient this$0 -> c
    java.lang.String getNameForLogging() -> a
    boolean needsRestart() -> b
    boolean needsInternetPermission() -> c
    void cancel() -> d
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void onWebDialogComplete(com.facebook.AuthorizationClient$AuthorizationRequest,android.os.Bundle,com.facebook.FacebookException) -> a
    void saveCookieToken(java.lang.String) -> a
    java.lang.String loadCookieToken() -> e
com.facebook.AuthorizationClient$WebViewAuthHandler$1 -> com.facebook.al:
    com.facebook.AuthorizationClient$AuthorizationRequest val$request -> a
    com.facebook.AuthorizationClient$WebViewAuthHandler this$1 -> b
    void onComplete(android.os.Bundle,com.facebook.FacebookException) -> a
com.facebook.BoltsMeasurementEventListener -> com.facebook.BoltsMeasurementEventListener:
    com.facebook.BoltsMeasurementEventListener _instance -> a
    android.content.Context applicationContext -> b
    void open() -> a
    void close() -> b
    com.facebook.BoltsMeasurementEventListener getInstance(android.content.Context) -> a
    void finalize() -> finalize
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.facebook.FacebookAuthorizationException -> com.facebook.FacebookAuthorizationException:
    long serialVersionUID -> serialVersionUID
com.facebook.FacebookBroadcastReceiver -> com.facebook.FacebookBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onSuccessfulAppCall(java.lang.String,java.lang.String,android.os.Bundle) -> a
    void onFailedAppCall(java.lang.String,java.lang.String,android.os.Bundle) -> b
com.facebook.FacebookDialogException -> com.facebook.FacebookDialogException:
    long serialVersionUID -> serialVersionUID
    int errorCode -> a
    java.lang.String failingUrl -> b
com.facebook.FacebookException -> com.facebook.FacebookException:
    long serialVersionUID -> serialVersionUID
com.facebook.FacebookGraphObjectException -> com.facebook.FacebookGraphObjectException:
    long serialVersionUID -> serialVersionUID
com.facebook.FacebookOperationCanceledException -> com.facebook.FacebookOperationCanceledException:
    long serialVersionUID -> serialVersionUID
com.facebook.FacebookRequestError -> com.facebook.FacebookRequestError:
    com.facebook.FacebookRequestError$Range EC_RANGE_PERMISSION -> a
    com.facebook.FacebookRequestError$Range HTTP_RANGE_SUCCESS -> b
    com.facebook.FacebookRequestError$Range HTTP_RANGE_CLIENT_ERROR -> c
    com.facebook.FacebookRequestError$Range HTTP_RANGE_SERVER_ERROR -> d
    int userActionMessageId -> e
    boolean shouldNotifyUser -> f
    com.facebook.FacebookRequestError$Category category -> g
    int requestStatusCode -> h
    int errorCode -> i
    int subErrorCode -> j
    java.lang.String errorType -> k
    java.lang.String errorMessage -> l
    org.json.JSONObject requestResult -> m
    org.json.JSONObject requestResultBody -> n
    java.lang.Object batchRequestResult -> o
    java.net.HttpURLConnection connection -> p
    com.facebook.FacebookException exception -> q
    int getRequestStatusCode() -> a
    int getErrorCode() -> b
    java.lang.String getErrorType() -> c
    java.lang.String getErrorMessage() -> d
    com.facebook.FacebookException getException() -> e
    java.lang.String toString() -> toString
    com.facebook.FacebookRequestError checkResponseAndCreateError(org.json.JSONObject,java.lang.Object,java.net.HttpURLConnection) -> a
com.facebook.FacebookRequestError$1 -> com.facebook.am:
com.facebook.FacebookRequestError$Category -> com.facebook.FacebookRequestError$Category:
    com.facebook.FacebookRequestError$Category AUTHENTICATION_RETRY -> a
    com.facebook.FacebookRequestError$Category AUTHENTICATION_REOPEN_SESSION -> b
    com.facebook.FacebookRequestError$Category PERMISSION -> c
    com.facebook.FacebookRequestError$Category SERVER -> d
    com.facebook.FacebookRequestError$Category THROTTLING -> e
    com.facebook.FacebookRequestError$Category OTHER -> f
    com.facebook.FacebookRequestError$Category BAD_REQUEST -> g
    com.facebook.FacebookRequestError$Category CLIENT -> h
    com.facebook.FacebookRequestError$Category[] $VALUES -> i
    com.facebook.FacebookRequestError$Category[] values() -> values
    com.facebook.FacebookRequestError$Category valueOf(java.lang.String) -> valueOf
com.facebook.FacebookRequestError$Range -> com.facebook.an:
    int start -> a
    int end -> b
    boolean contains(int) -> a
com.facebook.FacebookServiceException -> com.facebook.FacebookServiceException:
    com.facebook.FacebookRequestError error -> a
    long serialVersionUID -> serialVersionUID
    com.facebook.FacebookRequestError getRequestError() -> a
    java.lang.String toString() -> toString
com.facebook.GetTokenClient -> com.facebook.ao:
    void populateRequestBundle(android.os.Bundle) -> a
com.facebook.HttpMethod -> com.facebook.HttpMethod:
    com.facebook.HttpMethod GET -> a
    com.facebook.HttpMethod POST -> b
    com.facebook.HttpMethod DELETE -> c
    com.facebook.HttpMethod[] $VALUES -> d
    com.facebook.HttpMethod[] values() -> values
    com.facebook.HttpMethod valueOf(java.lang.String) -> valueOf
com.facebook.LegacyHelper -> com.facebook.ap:
    void extendTokenCompleted(com.facebook.Session,android.os.Bundle) -> a
com.facebook.LoggingBehavior -> com.facebook.LoggingBehavior:
    com.facebook.LoggingBehavior REQUESTS -> a
    com.facebook.LoggingBehavior INCLUDE_ACCESS_TOKENS -> b
    com.facebook.LoggingBehavior INCLUDE_RAW_RESPONSES -> c
    com.facebook.LoggingBehavior CACHE -> d
    com.facebook.LoggingBehavior APP_EVENTS -> e
    com.facebook.LoggingBehavior DEVELOPER_ERRORS -> f
    com.facebook.LoggingBehavior INSIGHTS -> g
    com.facebook.LoggingBehavior[] $VALUES -> h
    com.facebook.LoggingBehavior[] values() -> values
    com.facebook.LoggingBehavior valueOf(java.lang.String) -> valueOf
com.facebook.LoginActivity -> com.facebook.LoginActivity:
    java.lang.String TAG -> a
    java.lang.String callingPackage -> b
    com.facebook.AuthorizationClient authorizationClient -> c
    com.facebook.AuthorizationClient$AuthorizationRequest request -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onAuthClientCompleted(com.facebook.AuthorizationClient$Result) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.os.Bundle populateIntentExtras(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void access$000(com.facebook.LoginActivity,com.facebook.AuthorizationClient$Result) -> a
com.facebook.LoginActivity$1 -> com.facebook.aq:
    com.facebook.LoginActivity this$0 -> a
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.LoginActivity$2 -> com.facebook.ar:
    com.facebook.LoginActivity this$0 -> a
    void onBackgroundProcessingStarted() -> a
    void onBackgroundProcessingStopped() -> b
com.facebook.NativeAppCallAttachmentStore -> com.facebook.as:
    java.lang.String TAG -> a
    java.io.File attachmentsDirectory -> b
    void cleanupAttachmentsForCall(android.content.Context,java.util.UUID) -> a
    java.io.File openAttachment(java.util.UUID,java.lang.String) -> a
    java.io.File getAttachmentsDirectoryForCall(java.util.UUID,boolean) -> a
    java.io.File getAttachmentFile(java.util.UUID,java.lang.String,boolean) -> a
com.facebook.NativeAppCallContentProvider -> com.facebook.NativeAppCallContentProvider:
    java.lang.String TAG -> a
    com.facebook.NativeAppCallContentProvider$AttachmentDataSource dataSource -> b
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.util.Pair parseCallIdAndAttachmentName(android.net.Uri) -> a
com.facebook.NativeAppCallContentProvider$AttachmentDataSource -> com.facebook.at:
    java.io.File openAttachment(java.util.UUID,java.lang.String) -> a
com.facebook.ProgressNoopOutputStream -> com.facebook.au:
    java.util.Map progressMap -> a
    android.os.Handler callbackHandler -> b
    com.facebook.Request currentRequest -> c
    com.facebook.RequestProgress currentRequestProgress -> d
    int batchMax -> e
    void setCurrentRequest(com.facebook.Request) -> a
    int getMaxProgress() -> a
    java.util.Map getProgressMap() -> b
    void addProgress(long) -> a
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
com.facebook.ProgressOutputStream -> com.facebook.av:
    java.util.Map progressMap -> a
    com.facebook.RequestBatch requests -> b
    long threshold -> c
    long batchProgress -> d
    long lastReportedProgress -> e
    long maxProgress -> f
    com.facebook.RequestProgress currentRequestProgress -> g
    void addProgress(long) -> a
    void reportBatchProgress() -> a
    void setCurrentRequest(com.facebook.Request) -> a
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    com.facebook.RequestBatch access$000(com.facebook.ProgressOutputStream) -> a
    long access$100(com.facebook.ProgressOutputStream) -> b
    long access$200(com.facebook.ProgressOutputStream) -> c
com.facebook.ProgressOutputStream$1 -> com.facebook.aw:
    com.facebook.RequestBatch$OnProgressCallback val$progressCallback -> a
    com.facebook.ProgressOutputStream this$0 -> b
    void run() -> run
com.facebook.Request -> com.facebook.Request:
    java.lang.String TAG -> a
    java.lang.String defaultBatchApplicationId -> b
    java.util.regex.Pattern versionPattern -> c
    com.facebook.Session session -> d
    com.facebook.HttpMethod httpMethod -> e
    java.lang.String graphPath -> f
    com.facebook.model.GraphObject graphObject -> g
    java.lang.String restMethod -> h
    java.lang.String batchEntryName -> i
    java.lang.String batchEntryDependsOn -> j
    boolean batchEntryOmitResultOnSuccess -> k
    android.os.Bundle parameters -> l
    com.facebook.Request$Callback callback -> m
    java.lang.String overriddenURL -> n
    java.lang.Object tag -> o
    java.lang.String version -> p
    java.lang.String userAgent -> q
    com.facebook.Request newPostRequest(com.facebook.Session,java.lang.String,com.facebook.model.GraphObject,com.facebook.Request$Callback) -> a
    com.facebook.Request newMeRequest(com.facebook.Session,com.facebook.Request$GraphUserCallback) -> a
    com.facebook.Request newGraphPathRequest(com.facebook.Session,java.lang.String,com.facebook.Request$Callback) -> a
    com.facebook.Request newPlacesSearchRequest(com.facebook.Session,android.location.Location,int,int,java.lang.String,com.facebook.Request$GraphPlaceListCallback) -> a
    com.facebook.model.GraphObject getGraphObject() -> a
    void setGraphObject(com.facebook.model.GraphObject) -> a
    com.facebook.HttpMethod getHttpMethod() -> b
    void setHttpMethod(com.facebook.HttpMethod) -> a
    android.os.Bundle getParameters() -> c
    void setParameters(android.os.Bundle) -> a
    com.facebook.Session getSession() -> d
    com.facebook.Request$Callback getCallback() -> e
    void setCallback(com.facebook.Request$Callback) -> a
    void setTag(java.lang.Object) -> a
    java.lang.Object getTag() -> f
    com.facebook.Response executeAndWait() -> g
    com.facebook.RequestAsyncTask executeAsync() -> h
    java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch) -> a
    com.facebook.Response executeAndWait(com.facebook.Request) -> a
    java.util.List executeBatchAndWait(com.facebook.Request[]) -> a
    java.util.List executeBatchAndWait(java.util.Collection) -> a
    java.util.List executeBatchAndWait(com.facebook.RequestBatch) -> b
    com.facebook.RequestAsyncTask executeBatchAsync(com.facebook.Request[]) -> b
    com.facebook.RequestAsyncTask executeBatchAsync(java.util.Collection) -> b
    com.facebook.RequestAsyncTask executeBatchAsync(com.facebook.RequestBatch) -> c
    java.util.List executeConnectionAndWait(java.net.HttpURLConnection,com.facebook.RequestBatch) -> a
    java.lang.String toString() -> toString
    void runCallbacks(com.facebook.RequestBatch,java.util.List) -> a
    java.net.HttpURLConnection createConnection(java.net.URL) -> a
    void addCommonParameters() -> k
    java.lang.String appendParametersToBaseUrl(java.lang.String) -> a
    java.lang.String getUrlForBatchedRequest() -> i
    java.lang.String getUrlForSingleRequest() -> j
    java.lang.String getGraphPathWithVersion() -> l
    java.lang.String getRestPathWithVersion() -> m
    void serializeToBatch(org.json.JSONArray,java.util.Map) -> a
    void validate() -> n
    boolean hasOnProgressCallbacks(com.facebook.RequestBatch) -> d
    void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection) -> a
    void processRequest(com.facebook.RequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream) -> a
    boolean isMeRequest(java.lang.String) -> b
    void processGraphObject(com.facebook.model.GraphObject,java.lang.String,com.facebook.Request$KeyValueSerializer) -> a
    void processGraphObjectProperty(java.lang.String,java.lang.Object,com.facebook.Request$KeyValueSerializer,boolean) -> a
    void serializeParameters(android.os.Bundle,com.facebook.Request$Serializer,com.facebook.Request) -> a
    void serializeAttachments(java.util.Map,com.facebook.Request$Serializer) -> a
    void serializeRequestsAsJSON(com.facebook.Request$Serializer,java.util.Collection,java.util.Map) -> a
    java.lang.String getMimeContentType() -> o
    java.lang.String getUserAgent() -> p
    java.lang.String getBatchAppId(com.facebook.RequestBatch) -> e
    java.util.List typedListFromResponse(com.facebook.Response,java.lang.Class) -> b
    boolean isSupportedAttachmentType(java.lang.Object) -> d
    boolean isSupportedParameterType(java.lang.Object) -> e
    java.lang.String parameterToString(java.lang.Object) -> f
    java.util.List access$000(com.facebook.Response,java.lang.Class) -> a
    boolean access$100(java.lang.Object) -> b
    java.lang.String access$200(java.lang.Object) -> c
com.facebook.Request$1 -> com.facebook.ax:
    com.facebook.Request$GraphUserCallback val$callback -> a
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.Request$3 -> com.facebook.ay:
    com.facebook.Request$GraphPlaceListCallback val$callback -> a
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.Request$4 -> com.facebook.az:
    java.util.ArrayList val$callbacks -> a
    com.facebook.RequestBatch val$requests -> b
    void run() -> run
com.facebook.Request$5 -> com.facebook.ba:
    java.util.ArrayList val$keysAndValues -> a
    com.facebook.Request this$0 -> b
    void writeString(java.lang.String,java.lang.String) -> a
com.facebook.Request$Attachment -> com.facebook.bb:
    com.facebook.Request request -> a
    java.lang.Object value -> b
    com.facebook.Request getRequest() -> a
    java.lang.Object getValue() -> b
com.facebook.Request$Callback -> com.facebook.bc:
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.Request$GraphPlaceListCallback -> com.facebook.bd:
    void onCompleted(java.util.List,com.facebook.Response) -> a
com.facebook.Request$GraphUserCallback -> com.facebook.be:
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.facebook.Request$KeyValueSerializer -> com.facebook.bf:
    void writeString(java.lang.String,java.lang.String) -> a
com.facebook.Request$OnProgressCallback -> com.facebook.bg:
    void onProgress(long,long) -> a
com.facebook.Request$ParcelFileDescriptorWithMimeType -> com.facebook.Request$ParcelFileDescriptorWithMimeType:
    java.lang.String mimeType -> a
    android.os.ParcelFileDescriptor fileDescriptor -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getMimeType() -> a
    android.os.ParcelFileDescriptor getFileDescriptor() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.facebook.Request$ParcelFileDescriptorWithMimeType$1 -> com.facebook.bh:
    com.facebook.Request$ParcelFileDescriptorWithMimeType createFromParcel(android.os.Parcel) -> a
    com.facebook.Request$ParcelFileDescriptorWithMimeType[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.facebook.Request$Serializer -> com.facebook.bi:
    java.io.OutputStream outputStream -> a
    com.facebook.internal.Logger logger -> b
    boolean firstWrite -> c
    void writeObject(java.lang.String,java.lang.Object,com.facebook.Request) -> a
    void writeRequestsAsJson(java.lang.String,org.json.JSONArray,java.util.Collection) -> a
    void writeString(java.lang.String,java.lang.String) -> a
    void writeBitmap(java.lang.String,android.graphics.Bitmap) -> a
    void writeBytes(java.lang.String,byte[]) -> a
    void writeFile(java.lang.String,com.facebook.Request$ParcelFileDescriptorWithMimeType) -> a
    void writeFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String) -> a
    void writeRecordBoundary() -> a
    void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String) -> a
    void write(java.lang.String,java.lang.Object[]) -> a
    void writeLine(java.lang.String,java.lang.Object[]) -> b
com.facebook.RequestAsyncTask -> com.facebook.bj:
    java.lang.String TAG -> a
    java.lang.reflect.Method executeOnExecutorMethod -> b
    java.net.HttpURLConnection connection -> c
    com.facebook.RequestBatch requests -> d
    java.lang.Exception exception -> e
    java.lang.String toString() -> toString
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    com.facebook.RequestAsyncTask executeOnSettingsExecutor() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.RequestBatch -> com.facebook.bk:
    java.util.concurrent.atomic.AtomicInteger idGenerator -> a
    android.os.Handler callbackHandler -> b
    java.util.List requests -> c
    int timeoutInMilliseconds -> d
    java.lang.String id -> e
    java.util.List callbacks -> f
    java.lang.String batchApplicationId -> g
    int getTimeout() -> a
    void addCallback(com.facebook.RequestBatch$Callback) -> a
    boolean add(com.facebook.Request) -> a
    void add(int,com.facebook.Request) -> a
    void clear() -> clear
    com.facebook.Request get(int) -> a
    com.facebook.Request remove(int) -> b
    com.facebook.Request set(int,com.facebook.Request) -> b
    int size() -> size
    java.lang.String getId() -> b
    android.os.Handler getCallbackHandler() -> c
    void setCallbackHandler(android.os.Handler) -> a
    java.util.List getRequests() -> d
    java.util.List getCallbacks() -> e
    java.lang.String getBatchApplicationId() -> f
    void setBatchApplicationId(java.lang.String) -> a
    java.util.List executeAndWait() -> g
    com.facebook.RequestAsyncTask executeAsync() -> h
    java.util.List executeAndWaitImpl() -> i
    com.facebook.RequestAsyncTask executeAsyncImpl() -> j
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
    java.lang.Object get(int) -> get
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
com.facebook.RequestBatch$Callback -> com.facebook.bl:
    void onBatchCompleted(com.facebook.RequestBatch) -> a
com.facebook.RequestBatch$OnProgressCallback -> com.facebook.bm:
    void onBatchProgress(com.facebook.RequestBatch,long,long) -> a
com.facebook.RequestOutputStream -> com.facebook.bn:
    void setCurrentRequest(com.facebook.Request) -> a
com.facebook.RequestProgress -> com.facebook.bo:
    com.facebook.Request request -> a
    android.os.Handler callbackHandler -> b
    long threshold -> c
    long progress -> d
    long lastReportedProgress -> e
    long maxProgress -> f
    void addProgress(long) -> a
    void addToMax(long) -> b
    void reportProgress() -> a
com.facebook.RequestProgress$1 -> com.facebook.bp:
    com.facebook.Request$OnProgressCallback val$callbackCopy -> a
    long val$currentCopy -> b
    long val$maxProgressCopy -> c
    com.facebook.RequestProgress this$0 -> d
    void run() -> run
com.facebook.Response -> com.facebook.Response:
    java.net.HttpURLConnection connection -> b
    com.facebook.model.GraphObject graphObject -> c
    com.facebook.model.GraphObjectList graphObjectList -> d
    boolean isFromCache -> e
    com.facebook.FacebookRequestError error -> f
    java.lang.String rawResponse -> g
    com.facebook.Request request -> h
    com.facebook.internal.FileLruCache responseCache -> i
    boolean $assertionsDisabled -> a
    com.facebook.FacebookRequestError getError() -> a
    com.facebook.model.GraphObject getGraphObject() -> b
    com.facebook.model.GraphObject getGraphObjectAs(java.lang.Class) -> a
    com.facebook.Request getRequest() -> c
    com.facebook.Request getRequestForPagedResults(com.facebook.Response$PagingDirection) -> a
    java.lang.String toString() -> toString
    boolean getIsFromCache() -> d
    com.facebook.internal.FileLruCache getResponseCache() -> e
    java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch) -> a
    java.util.List createResponsesFromStream(java.io.InputStream,java.net.HttpURLConnection,com.facebook.RequestBatch,boolean) -> a
    java.util.List createResponsesFromString(java.lang.String,java.net.HttpURLConnection,com.facebook.RequestBatch,boolean) -> a
    java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean) -> a
    com.facebook.Response createResponseFromObject(com.facebook.Request,java.net.HttpURLConnection,java.lang.Object,boolean,java.lang.Object) -> a
    java.util.List constructErrorResponses(java.util.List,java.net.HttpURLConnection,com.facebook.FacebookException) -> a
com.facebook.Response$PagedResults -> com.facebook.bq:
    com.facebook.Response$PagingInfo getPaging() -> a
com.facebook.Response$PagingDirection -> com.facebook.Response$PagingDirection:
    com.facebook.Response$PagingDirection NEXT -> a
    com.facebook.Response$PagingDirection PREVIOUS -> b
    com.facebook.Response$PagingDirection[] $VALUES -> c
    com.facebook.Response$PagingDirection[] values() -> values
    com.facebook.Response$PagingDirection valueOf(java.lang.String) -> valueOf
com.facebook.Response$PagingInfo -> com.facebook.br:
    java.lang.String getNext() -> a
    java.lang.String getPrevious() -> b
com.facebook.Session -> com.facebook.Session:
    long serialVersionUID -> serialVersionUID
    java.lang.String TAG -> a
    java.lang.Object STATIC_LOCK -> b
    com.facebook.Session activeSession -> c
    android.content.Context staticContext -> d
    java.util.Set OTHER_PUBLISH_PERMISSIONS -> e
    java.lang.String applicationId -> f
    com.facebook.SessionState state -> g
    com.facebook.AccessToken tokenInfo -> h
    java.util.Date lastAttemptedTokenExtendDate -> i
    com.facebook.Session$AuthorizationRequest pendingAuthorizationRequest -> j
    com.facebook.AuthorizationClient authorizationClient -> k
    android.os.Bundle authorizationBundle -> l
    java.util.List callbacks -> m
    android.os.Handler handler -> n
    com.facebook.Session$AutoPublishAsyncTask autoPublishAsyncTask -> o
    java.lang.Object lock -> p
    com.facebook.TokenCachingStrategy tokenCachingStrategy -> q
    com.facebook.Session$TokenRefreshRequest currentTokenRefreshRequest -> r
    com.facebook.AppEventsLogger appEventsLogger -> s
    android.os.Bundle getAuthorizationBundle() -> a
    boolean isOpened() -> b
    boolean isClosed() -> c
    com.facebook.SessionState getState() -> d
    java.lang.String getApplicationId() -> e
    java.lang.String getAccessToken() -> f
    java.util.Date getExpirationDate() -> g
    java.util.List getPermissions() -> h
    void openForRead(com.facebook.Session$OpenRequest) -> a
    void openForPublish(com.facebook.Session$OpenRequest) -> b
    com.facebook.Session$PermissionsPair handlePermissionResponse(com.facebook.Response) -> a
    boolean onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void close() -> i
    void closeAndClearTokenInformation() -> j
    void addCallback(com.facebook.Session$StatusCallback) -> a
    void removeCallback(com.facebook.Session$StatusCallback) -> b
    java.lang.String toString() -> toString
    void extendTokenCompleted(android.os.Bundle) -> a
    java.lang.Object writeReplace() -> writeReplace
    void readObject(java.io.ObjectInputStream) -> readObject
    void saveSession(com.facebook.Session,android.os.Bundle) -> a
    com.facebook.Session restoreSession(android.content.Context,com.facebook.TokenCachingStrategy,com.facebook.Session$StatusCallback,android.os.Bundle) -> a
    com.facebook.Session getActiveSession() -> k
    void setActiveSession(com.facebook.Session) -> a
    com.facebook.Session openActiveSessionFromCache(android.content.Context) -> a
    com.facebook.Session openActiveSession(android.content.Context,boolean,com.facebook.Session$OpenRequest) -> a
    android.content.Context getStaticContext() -> l
    void initializeStaticContext(android.content.Context) -> b
    void authorize(com.facebook.Session$AuthorizationRequest) -> a
    void open(com.facebook.Session$OpenRequest,com.facebook.internal.SessionAuthorizationType) -> a
    void validateLoginBehavior(com.facebook.Session$AuthorizationRequest) -> b
    void validatePermissions(com.facebook.Session$AuthorizationRequest,com.facebook.internal.SessionAuthorizationType) -> a
    boolean isPublishPermission(java.lang.String) -> a
    void handleAuthorizationResult(int,com.facebook.AuthorizationClient$Result) -> a
    void logAuthorizationStart() -> r
    void logAuthorizationComplete(com.facebook.AuthorizationClient$Result$Code,java.util.Map,java.lang.Exception) -> a
    boolean tryLoginActivity(com.facebook.Session$AuthorizationRequest) -> c
    boolean resolveIntent(android.content.Intent) -> a
    android.content.Intent getLoginActivityIntent(com.facebook.Session$AuthorizationRequest) -> d
    void tryLegacyAuth(com.facebook.Session$AuthorizationRequest) -> e
    void finishAuthOrReauth(com.facebook.AccessToken,java.lang.Exception) -> a
    void finishAuthorization(com.facebook.AccessToken,java.lang.Exception) -> b
    void finishReauthorization(com.facebook.AccessToken,java.lang.Exception) -> c
    void saveTokenToCache(com.facebook.AccessToken) -> a
    void postStateChange(com.facebook.SessionState,com.facebook.SessionState,java.lang.Exception) -> a
    void postActiveSessionAction(java.lang.String) -> b
    void runWithHandlerOrExecutor(android.os.Handler,java.lang.Runnable) -> b
    void extendAccessTokenIfNeeded() -> m
    void extendAccessToken() -> n
    boolean shouldExtendAccessToken() -> o
    com.facebook.AppEventsLogger getAppEventsLogger() -> s
    com.facebook.AccessToken getTokenInfo() -> p
    void setLastAttemptedTokenExtendDate(java.util.Date) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean areEqual(java.lang.Object,java.lang.Object) -> a
    void autoPublishAsync() -> t
    void access$1100(com.facebook.Session,int,com.facebook.AuthorizationClient$Result) -> a
    java.util.List access$1200(com.facebook.Session) -> b
    android.os.Handler access$1300(com.facebook.Session) -> c
    void access$1400(android.os.Handler,java.lang.Runnable) -> a
    android.content.Context access$1500() -> q
    com.facebook.Session$TokenRefreshRequest access$1600(com.facebook.Session) -> d
    com.facebook.Session$TokenRefreshRequest access$1602(com.facebook.Session,com.facebook.Session$TokenRefreshRequest) -> a
    com.facebook.Session$AutoPublishAsyncTask access$1802(com.facebook.Session,com.facebook.Session$AutoPublishAsyncTask) -> a
com.facebook.Session$1 -> com.facebook.bs:
com.facebook.Session$3 -> com.facebook.bt:
    com.facebook.Session this$0 -> a
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.Session$4 -> com.facebook.bu:
    com.facebook.SessionState val$newState -> a
    java.lang.Exception val$exception -> b
    com.facebook.Session this$0 -> c
    void run() -> run
com.facebook.Session$4$1 -> com.facebook.bv:
    com.facebook.Session$StatusCallback val$callback -> a
    com.facebook.Session$4 this$1 -> b
    void run() -> run
com.facebook.Session$5 -> com.facebook.bw:
    int[] $SwitchMap$com$facebook$SessionState -> a
com.facebook.Session$AuthorizationRequest -> com.facebook.Session$AuthorizationRequest:
    long serialVersionUID -> serialVersionUID
    com.facebook.Session$StartActivityDelegate startActivityDelegate -> a
    com.facebook.SessionLoginBehavior loginBehavior -> b
    int requestCode -> c
    com.facebook.Session$StatusCallback statusCallback -> d
    boolean isLegacy -> e
    java.util.List permissions -> f
    com.facebook.SessionDefaultAudience defaultAudience -> g
    java.lang.String applicationId -> h
    java.lang.String validateSameFbidAsToken -> i
    java.lang.String authId -> j
    java.util.Map loggingExtras -> k
    void setIsLegacy(boolean) -> a
    com.facebook.Session$AuthorizationRequest setCallback(com.facebook.Session$StatusCallback) -> a
    com.facebook.Session$StatusCallback getCallback() -> a
    com.facebook.Session$AuthorizationRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
    com.facebook.SessionLoginBehavior getLoginBehavior() -> b
    com.facebook.Session$AuthorizationRequest setRequestCode(int) -> a
    int getRequestCode() -> c
    com.facebook.Session$AuthorizationRequest setPermissions(java.util.List) -> a
    java.util.List getPermissions() -> d
    com.facebook.Session$AuthorizationRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.Session$StartActivityDelegate getStartActivityDelegate() -> e
    void setApplicationId(java.lang.String) -> a
    java.lang.String getAuthId() -> f
    com.facebook.AuthorizationClient$AuthorizationRequest getAuthorizationClientRequest() -> g
    java.lang.Object writeReplace() -> writeReplace
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Map access$500(com.facebook.Session$AuthorizationRequest) -> a
    boolean access$600(com.facebook.Session$AuthorizationRequest) -> b
    com.facebook.SessionLoginBehavior access$700(com.facebook.Session$AuthorizationRequest) -> c
    int access$800(com.facebook.Session$AuthorizationRequest) -> d
    java.util.List access$900(com.facebook.Session$AuthorizationRequest) -> e
    com.facebook.SessionDefaultAudience access$1000(com.facebook.Session$AuthorizationRequest) -> f
    com.facebook.Session$StartActivityDelegate access$1900(com.facebook.Session$AuthorizationRequest) -> g
com.facebook.Session$AuthorizationRequest$1 -> com.facebook.bx:
    android.app.Activity val$activity -> a
    com.facebook.Session$AuthorizationRequest this$0 -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$2 -> com.facebook.by:
    android.support.v4.app.Fragment val$fragment -> a
    com.facebook.Session$AuthorizationRequest this$0 -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$3 -> com.facebook.bz:
    com.facebook.Session$AuthorizationRequest this$0 -> a
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$4 -> com.facebook.ca:
    com.facebook.Session$AuthorizationRequest this$0 -> a
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$AuthRequestSerializationProxyV1 -> com.facebook.cb:
    long serialVersionUID -> serialVersionUID
    com.facebook.SessionLoginBehavior loginBehavior -> a
    int requestCode -> b
    boolean isLegacy -> c
    java.util.List permissions -> d
    java.lang.String defaultAudience -> e
    java.lang.String applicationId -> f
    java.lang.String validateSameFbidAsToken -> g
    java.lang.Object readResolve() -> readResolve
com.facebook.Session$AutoPublishAsyncTask -> com.facebook.cc:
    java.lang.String mApplicationId -> b
    android.content.Context mApplicationContext -> c
    com.facebook.Session this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.Session$Builder -> com.facebook.cd:
    android.content.Context context -> a
    java.lang.String applicationId -> b
    com.facebook.TokenCachingStrategy tokenCachingStrategy -> c
    com.facebook.Session$Builder setApplicationId(java.lang.String) -> a
    com.facebook.Session$Builder setTokenCachingStrategy(com.facebook.TokenCachingStrategy) -> a
    com.facebook.Session build() -> a
com.facebook.Session$NewPermissionsRequest -> com.facebook.Session$NewPermissionsRequest:
    long serialVersionUID -> serialVersionUID
    com.facebook.Session$NewPermissionsRequest setCallback(com.facebook.Session$StatusCallback) -> b
    com.facebook.Session$NewPermissionsRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> b
    com.facebook.Session$NewPermissionsRequest setRequestCode(int) -> b
    com.facebook.Session$NewPermissionsRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> b
    com.facebook.AuthorizationClient$AuthorizationRequest getAuthorizationClientRequest() -> g
    com.facebook.Session$AuthorizationRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.Session$AuthorizationRequest setRequestCode(int) -> a
    com.facebook.Session$AuthorizationRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
    com.facebook.Session$AuthorizationRequest setCallback(com.facebook.Session$StatusCallback) -> a
com.facebook.Session$OpenRequest -> com.facebook.Session$OpenRequest:
    long serialVersionUID -> serialVersionUID
    com.facebook.Session$OpenRequest setCallback(com.facebook.Session$StatusCallback) -> b
    com.facebook.Session$OpenRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> b
    com.facebook.Session$OpenRequest setRequestCode(int) -> b
    com.facebook.Session$OpenRequest setPermissions(java.util.List) -> b
    com.facebook.Session$OpenRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> b
    com.facebook.Session$AuthorizationRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.Session$AuthorizationRequest setPermissions(java.util.List) -> a
    com.facebook.Session$AuthorizationRequest setRequestCode(int) -> a
    com.facebook.Session$AuthorizationRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
    com.facebook.Session$AuthorizationRequest setCallback(com.facebook.Session$StatusCallback) -> a
com.facebook.Session$PermissionsPair -> com.facebook.ce:
    java.util.List grantedPermissions -> a
    java.util.List declinedPermissions -> b
    java.util.List getGrantedPermissions() -> a
    java.util.List getDeclinedPermissions() -> b
com.facebook.Session$SerializationProxyV1 -> com.facebook.cf:
    long serialVersionUID -> serialVersionUID
    java.lang.String applicationId -> a
    com.facebook.SessionState state -> b
    com.facebook.AccessToken tokenInfo -> c
    java.util.Date lastAttemptedTokenExtendDate -> d
    boolean shouldAutoPublish -> e
    com.facebook.Session$AuthorizationRequest pendingAuthorizationRequest -> f
    java.lang.Object readResolve() -> readResolve
com.facebook.Session$StartActivityDelegate -> com.facebook.cg:
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$StatusCallback -> com.facebook.ch:
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.facebook.Session$TokenRefreshRequest -> com.facebook.ci:
    android.os.Messenger messageReceiver -> a
    android.os.Messenger messageSender -> b
    com.facebook.Session this$0 -> c
    void bind() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void cleanup() -> b
    void refreshToken() -> c
    void access$1700(com.facebook.Session$TokenRefreshRequest) -> a
com.facebook.Session$TokenRefreshRequestHandler -> com.facebook.cj:
    java.lang.ref.WeakReference sessionWeakReference -> a
    java.lang.ref.WeakReference refreshRequestWeakReference -> b
    void handleMessage(android.os.Message) -> handleMessage
com.facebook.SessionDefaultAudience -> com.facebook.SessionDefaultAudience:
    com.facebook.SessionDefaultAudience NONE -> a
    com.facebook.SessionDefaultAudience ONLY_ME -> b
    com.facebook.SessionDefaultAudience FRIENDS -> c
    com.facebook.SessionDefaultAudience EVERYONE -> d
    java.lang.String nativeProtocolAudience -> e
    com.facebook.SessionDefaultAudience[] $VALUES -> f
    com.facebook.SessionDefaultAudience[] values() -> values
    com.facebook.SessionDefaultAudience valueOf(java.lang.String) -> valueOf
com.facebook.SessionLoginBehavior -> com.facebook.SessionLoginBehavior:
    com.facebook.SessionLoginBehavior SSO_WITH_FALLBACK -> a
    com.facebook.SessionLoginBehavior SSO_ONLY -> b
    com.facebook.SessionLoginBehavior SUPPRESS_SSO -> c
    boolean allowsKatanaAuth -> d
    boolean allowsWebViewAuth -> e
    com.facebook.SessionLoginBehavior[] $VALUES -> f
    com.facebook.SessionLoginBehavior[] values() -> values
    com.facebook.SessionLoginBehavior valueOf(java.lang.String) -> valueOf
    boolean allowsKatanaAuth() -> a
    boolean allowsWebViewAuth() -> b
com.facebook.SessionState -> com.facebook.SessionState:
    com.facebook.SessionState CREATED -> a
    com.facebook.SessionState CREATED_TOKEN_LOADED -> b
    com.facebook.SessionState OPENING -> c
    com.facebook.SessionState OPENED -> d
    com.facebook.SessionState OPENED_TOKEN_UPDATED -> e
    com.facebook.SessionState CLOSED_LOGIN_FAILED -> f
    com.facebook.SessionState CLOSED -> g
    com.facebook.SessionState$Category category -> h
    com.facebook.SessionState[] $VALUES -> i
    com.facebook.SessionState[] values() -> values
    com.facebook.SessionState valueOf(java.lang.String) -> valueOf
    boolean isOpened() -> a
    boolean isClosed() -> b
com.facebook.SessionState$Category -> com.facebook.ck:
    com.facebook.SessionState$Category CREATED_CATEGORY -> a
    com.facebook.SessionState$Category OPENED_CATEGORY -> b
    com.facebook.SessionState$Category CLOSED_CATEGORY -> c
    com.facebook.SessionState$Category[] $VALUES -> d
    com.facebook.SessionState$Category[] values() -> values
    com.facebook.SessionState$Category valueOf(java.lang.String) -> valueOf
com.facebook.Settings -> com.facebook.cl:
    java.lang.String TAG -> a
    java.util.HashSet loggingBehaviors -> b
    java.util.concurrent.Executor executor -> c
    boolean shouldAutoPublishInstall -> d
    java.lang.String appVersion -> e
    java.lang.String applicationId -> f
    java.lang.String appClientToken -> g
    boolean defaultsLoaded -> h
    java.lang.String facebookDomain -> i
    java.util.concurrent.atomic.AtomicLong onProgressThreshold -> j
    boolean platformCompatibilityEnabled -> k
    java.lang.Object LOCK -> l
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> m
    java.util.concurrent.BlockingQueue DEFAULT_WORK_QUEUE -> n
    java.util.concurrent.ThreadFactory DEFAULT_THREAD_FACTORY -> o
    java.lang.Boolean sdkInitialized -> p
    void sdkInitialize(android.content.Context) -> a
    boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior) -> a
    java.util.concurrent.Executor getExecutor() -> a
    java.lang.String getFacebookDomain() -> b
    java.util.concurrent.Executor getAsyncTaskExecutor() -> i
    void setShouldAutoPublishInstall(boolean) -> a
    boolean getShouldAutoPublishInstall() -> c
    com.facebook.Response publishInstallAndWaitForResponse(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String getAppVersion() -> d
    boolean getLimitEventAndDataUsage(android.content.Context) -> b
    long getOnProgressThreshold() -> e
    boolean getPlatformCompatibilityEnabled() -> f
    void loadDefaultsFromMetadata(android.content.Context) -> c
    void loadDefaultsFromMetadataIfNeeded(android.content.Context) -> d
    java.lang.String getApplicationId() -> g
    java.lang.String getClientToken() -> h
com.facebook.Settings$1 -> com.facebook.cm:
    java.util.concurrent.atomic.AtomicInteger counter -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.facebook.SharedPreferencesTokenCachingStrategy -> com.facebook.cn:
    java.lang.String TAG -> a
    java.lang.String cacheKey -> b
    android.content.SharedPreferences cache -> c
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
    void serializeKey(java.lang.String,android.os.Bundle,android.content.SharedPreferences$Editor) -> a
    void deserializeKey(java.lang.String,android.os.Bundle) -> a
com.facebook.TestSession -> com.facebook.TestSession:
    long serialVersionUID -> serialVersionUID
    java.util.Map appTestAccounts -> c
    java.lang.String testApplicationSecret -> d
    java.lang.String testApplicationId -> e
    java.lang.String sessionUniqueUserTag -> f
    java.util.List requestedPermissions -> g
    com.facebook.TestSession$Mode mode -> h
    java.lang.String testAccountId -> i
    java.lang.String testAccountUserName -> j
    boolean wasAskedToExtendAccessToken -> k
    boolean $assertionsDisabled -> b
    void retrieveTestAccountsForAppIfNeeded() -> s
    void populateTestAccounts(java.util.Collection,java.util.Collection) -> a
    void storeTestAccount(com.facebook.TestSession$TestAccount) -> a
    com.facebook.TestSession$TestAccount findTestAccountMatchingIdentifier(java.lang.String) -> c
    java.lang.String toString() -> toString
    void authorize(com.facebook.Session$AuthorizationRequest) -> a
    void postStateChange(com.facebook.SessionState,com.facebook.SessionState,java.lang.Exception) -> a
    boolean shouldExtendAccessToken() -> o
    void extendAccessToken() -> n
    java.lang.String getAppAccessToken() -> r
    void findOrCreateSharedTestAccount() -> t
    void finishAuthWithTestAccount(com.facebook.TestSession$TestAccount) -> b
    com.facebook.TestSession$TestAccount createTestAccountAndFinishAuth() -> u
    void deleteTestAccount(java.lang.String,java.lang.String) -> a
    java.lang.String getPermissionsString() -> v
    java.lang.String getSharedTestAccountIdentifier() -> w
    java.lang.String validNameStringFromInteger(long) -> a
com.facebook.TestSession$FqlResponse -> com.facebook.co:
    com.facebook.model.GraphObjectList getData() -> a
com.facebook.TestSession$FqlResult -> com.facebook.cp:
    com.facebook.model.GraphObjectList getFqlResultSet() -> a
com.facebook.TestSession$Mode -> com.facebook.cq:
    com.facebook.TestSession$Mode PRIVATE -> a
    com.facebook.TestSession$Mode SHARED -> b
    com.facebook.TestSession$Mode[] $VALUES -> c
    com.facebook.TestSession$Mode[] values() -> values
    com.facebook.TestSession$Mode valueOf(java.lang.String) -> valueOf
com.facebook.TestSession$TestAccount -> com.facebook.cr:
    java.lang.String getId() -> a
    java.lang.String getAccessToken() -> b
    java.lang.String getName() -> c
    void setName(java.lang.String) -> a
com.facebook.TestSession$UserAccount -> com.facebook.cs:
    java.lang.String getUid() -> a
    java.lang.String getName() -> b
com.facebook.TokenCachingStrategy -> com.facebook.ct:
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
    boolean hasTokenInformation(android.os.Bundle) -> b
    java.lang.String getToken(android.os.Bundle) -> c
    void putToken(android.os.Bundle,java.lang.String) -> a
    void putExpirationDate(android.os.Bundle,java.util.Date) -> a
    long getExpirationMilliseconds(android.os.Bundle) -> d
    void putExpirationMilliseconds(android.os.Bundle,long) -> a
    java.util.List getPermissions(android.os.Bundle) -> e
    void putPermissions(android.os.Bundle,java.util.List) -> a
    com.facebook.AccessTokenSource getSource(android.os.Bundle) -> f
    void putSource(android.os.Bundle,com.facebook.AccessTokenSource) -> a
    long getLastRefreshMilliseconds(android.os.Bundle) -> g
    void putLastRefreshMilliseconds(android.os.Bundle,long) -> b
    java.util.Date getDate(android.os.Bundle,java.lang.String) -> b
    void putDate(android.os.Bundle,java.lang.String,java.util.Date) -> a
com.facebook.UiLifecycleHelper -> com.facebook.cu:
    android.app.Activity activity -> a
    com.facebook.Session$StatusCallback callback -> b
    android.content.BroadcastReceiver receiver -> c
    android.support.v4.content.LocalBroadcastManager broadcastManager -> d
    com.facebook.widget.FacebookDialog$PendingCall pendingFacebookDialogCall -> e
    void onCreate(android.os.Bundle) -> a
    void onResume() -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent,com.facebook.widget.FacebookDialog$Callback) -> a
    void onSaveInstanceState(android.os.Bundle) -> b
    void onPause() -> b
    void onDestroy() -> c
    boolean handleFacebookDialogActivityResult(int,int,android.content.Intent,com.facebook.widget.FacebookDialog$Callback) -> b
    void cancelPendingAppCall(com.facebook.widget.FacebookDialog$Callback) -> a
    com.facebook.Session$StatusCallback access$100(com.facebook.UiLifecycleHelper) -> a
com.facebook.UiLifecycleHelper$1 -> com.facebook.cv:
com.facebook.UiLifecycleHelper$ActiveSessionBroadcastReceiver -> com.facebook.cw:
    com.facebook.UiLifecycleHelper this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.facebook.android.DialogError -> com.facebook.android.DialogError:
    long serialVersionUID -> serialVersionUID
    int mErrorCode -> a
    java.lang.String mFailingUrl -> b
com.facebook.android.Facebook -> com.facebook.android.a:
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> a
    java.lang.String DIALOG_BASE_URL -> b
    java.lang.String GRAPH_BASE_URL -> c
    java.lang.String RESTSERVER_URL -> d
    java.lang.Object lock -> e
    java.lang.String accessToken -> f
    long accessExpiresMillisecondsAfterEpoch -> g
    long lastAccessUpdateMillisecondsAfterEpoch -> h
    java.lang.String mAppId -> i
    android.app.Activity pendingAuthorizationActivity -> j
    java.lang.String[] pendingAuthorizationPermissions -> k
    com.facebook.Session session -> l
    boolean sessionInvalidated -> m
    com.facebook.android.Facebook$SetterTokenCachingStrategy tokenCache -> n
    com.facebook.Session userSetSession -> o
    void openSession(com.facebook.Session,com.facebook.Session$OpenRequest,boolean) -> a
    void onSessionCallback(com.facebook.Session,com.facebook.SessionState,java.lang.Exception,com.facebook.android.Facebook$DialogListener) -> a
    boolean validateServiceIntent(android.content.Context,android.content.Intent) -> a
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String) -> a
    boolean extendAccessToken(android.content.Context,com.facebook.android.Facebook$ServiceListener) -> a
    boolean shouldExtendAccessToken() -> a
    boolean isSessionValid() -> b
    void checkUserSession(java.lang.String) -> b
    com.facebook.Session getSession() -> c
    java.lang.String getAccessToken() -> d
    long getAccessExpires() -> e
    void setAccessToken(java.lang.String) -> a
    void setAccessExpires(long) -> a
    com.facebook.TokenCachingStrategy getTokenCache() -> f
    java.lang.String[] stringArray(java.util.List) -> b
    java.util.List stringList(java.lang.String[]) -> b
    void access$000(com.facebook.android.Facebook,com.facebook.Session,com.facebook.SessionState,java.lang.Exception,com.facebook.android.Facebook$DialogListener) -> a
    java.lang.String access$100(com.facebook.android.Facebook) -> a
    com.facebook.Session access$200(com.facebook.android.Facebook) -> b
    long access$400(com.facebook.android.Facebook) -> c
    java.lang.String[] access$500(com.facebook.android.Facebook) -> d
    java.util.List access$600(java.lang.String[]) -> a
    long access$700(com.facebook.android.Facebook) -> e
    java.lang.String access$102(com.facebook.android.Facebook,java.lang.String) -> a
    long access$402(com.facebook.android.Facebook,long) -> a
    java.lang.String[] access$502(com.facebook.android.Facebook,java.lang.String[]) -> a
    java.lang.String[] access$800(java.util.List) -> a
    long access$702(com.facebook.android.Facebook,long) -> b
com.facebook.android.Facebook$1 -> com.facebook.android.b:
    com.facebook.android.Facebook$DialogListener val$listener -> a
    com.facebook.android.Facebook this$0 -> b
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.facebook.android.Facebook$DialogListener -> com.facebook.android.c:
    void onComplete(android.os.Bundle) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onCancel() -> a
com.facebook.android.Facebook$ServiceListener -> com.facebook.android.d:
    void onComplete(android.os.Bundle) -> onComplete
    void onFacebookError(com.facebook.android.FacebookError) -> onFacebookError
    void onError(java.lang.Error) -> onError
com.facebook.android.Facebook$SetterTokenCachingStrategy -> com.facebook.android.e:
    com.facebook.android.Facebook this$0 -> a
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
com.facebook.android.Facebook$TokenRefreshConnectionHandler -> com.facebook.android.f:
    java.lang.ref.WeakReference facebookWeakReference -> a
    java.lang.ref.WeakReference connectionWeakReference -> b
    void handleMessage(android.os.Message) -> handleMessage
com.facebook.android.Facebook$TokenRefreshServiceConnection -> com.facebook.android.g:
    android.os.Messenger messageReceiver -> a
    com.facebook.android.Facebook$ServiceListener serviceListener -> b
    android.content.Context applicationsContext -> c
    android.os.Messenger messageSender -> d
    com.facebook.android.Facebook this$0 -> e
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void refreshToken() -> a
com.facebook.android.FacebookError -> com.facebook.android.FacebookError:
    long serialVersionUID -> serialVersionUID
    int mErrorCode -> a
    java.lang.String mErrorType -> b
com.facebook.android.R -> com.facebook.android.h:
com.facebook.android.R$color -> com.facebook.android.i:
    int com_facebook_blue -> com_facebook_blue
    int com_facebook_loginview_text_color -> com_facebook_loginview_text_color
    int com_facebook_picker_search_bar_background -> com_facebook_picker_search_bar_background
    int com_facebook_picker_search_bar_text -> com_facebook_picker_search_bar_text
    int com_facebook_usersettingsfragment_connected_shadow_color -> com_facebook_usersettingsfragment_connected_shadow_color
    int com_facebook_usersettingsfragment_connected_text_color -> com_facebook_usersettingsfragment_connected_text_color
    int com_facebook_usersettingsfragment_not_connected_text_color -> com_facebook_usersettingsfragment_not_connected_text_color
com.facebook.android.R$dimen -> com.facebook.android.j:
    int com_facebook_loginview_compound_drawable_padding -> com_facebook_loginview_compound_drawable_padding
    int com_facebook_loginview_padding_bottom -> com_facebook_loginview_padding_bottom
    int com_facebook_loginview_padding_left -> com_facebook_loginview_padding_left
    int com_facebook_loginview_padding_right -> com_facebook_loginview_padding_right
    int com_facebook_loginview_padding_top -> com_facebook_loginview_padding_top
    int com_facebook_loginview_text_size -> com_facebook_loginview_text_size
    int com_facebook_picker_divider_width -> com_facebook_picker_divider_width
    int com_facebook_picker_place_image_size -> com_facebook_picker_place_image_size
    int com_facebook_profilepictureview_preset_size_large -> com_facebook_profilepictureview_preset_size_large
    int com_facebook_profilepictureview_preset_size_normal -> com_facebook_profilepictureview_preset_size_normal
    int com_facebook_profilepictureview_preset_size_small -> com_facebook_profilepictureview_preset_size_small
    int com_facebook_tooltip_horizontal_padding -> com_facebook_tooltip_horizontal_padding
    int com_facebook_usersettingsfragment_profile_picture_height -> com_facebook_usersettingsfragment_profile_picture_height
    int com_facebook_usersettingsfragment_profile_picture_width -> com_facebook_usersettingsfragment_profile_picture_width
com.facebook.android.R$drawable -> com.facebook.android.k:
    int com_facebook_button_blue -> com_facebook_button_blue
    int com_facebook_button_blue_focused -> com_facebook_button_blue_focused
    int com_facebook_button_blue_normal -> com_facebook_button_blue_normal
    int com_facebook_button_blue_pressed -> com_facebook_button_blue_pressed
    int com_facebook_button_check -> com_facebook_button_check
    int com_facebook_button_check_off -> com_facebook_button_check_off
    int com_facebook_button_check_on -> com_facebook_button_check_on
    int com_facebook_button_grey_focused -> com_facebook_button_grey_focused
    int com_facebook_button_grey_normal -> com_facebook_button_grey_normal
    int com_facebook_button_grey_pressed -> com_facebook_button_grey_pressed
    int com_facebook_close -> com_facebook_close
    int com_facebook_inverse_icon -> com_facebook_inverse_icon
    int com_facebook_list_divider -> com_facebook_list_divider
    int com_facebook_list_section_header_background -> com_facebook_list_section_header_background
    int com_facebook_loginbutton_silver -> com_facebook_loginbutton_silver
    int com_facebook_logo -> com_facebook_logo
    int com_facebook_picker_default_separator_color -> com_facebook_picker_default_separator_color
    int com_facebook_picker_item_background -> com_facebook_picker_item_background
    int com_facebook_picker_list_focused -> com_facebook_picker_list_focused
    int com_facebook_picker_list_longpressed -> com_facebook_picker_list_longpressed
    int com_facebook_picker_list_pressed -> com_facebook_picker_list_pressed
    int com_facebook_picker_list_selector -> com_facebook_picker_list_selector
    int com_facebook_picker_list_selector_background_transition -> com_facebook_picker_list_selector_background_transition
    int com_facebook_picker_list_selector_disabled -> com_facebook_picker_list_selector_disabled
    int com_facebook_picker_magnifier -> com_facebook_picker_magnifier
    int com_facebook_picker_top_button -> com_facebook_picker_top_button
    int com_facebook_place_default_icon -> com_facebook_place_default_icon
    int com_facebook_profile_default_icon -> com_facebook_profile_default_icon
    int com_facebook_profile_picture_blank_portrait -> com_facebook_profile_picture_blank_portrait
    int com_facebook_profile_picture_blank_square -> com_facebook_profile_picture_blank_square
    int com_facebook_tooltip_black_background -> com_facebook_tooltip_black_background
    int com_facebook_tooltip_black_bottomnub -> com_facebook_tooltip_black_bottomnub
    int com_facebook_tooltip_black_topnub -> com_facebook_tooltip_black_topnub
    int com_facebook_tooltip_black_xout -> com_facebook_tooltip_black_xout
    int com_facebook_tooltip_blue_background -> com_facebook_tooltip_blue_background
    int com_facebook_tooltip_blue_bottomnub -> com_facebook_tooltip_blue_bottomnub
    int com_facebook_tooltip_blue_topnub -> com_facebook_tooltip_blue_topnub
    int com_facebook_tooltip_blue_xout -> com_facebook_tooltip_blue_xout
    int com_facebook_top_background -> com_facebook_top_background
    int com_facebook_top_button -> com_facebook_top_button
    int com_facebook_usersettingsfragment_background_gradient -> com_facebook_usersettingsfragment_background_gradient
com.facebook.android.R$id -> com.facebook.android.l:
    int com_facebook_body_frame -> com_facebook_body_frame
    int com_facebook_button_xout -> com_facebook_button_xout
    int com_facebook_login_activity_progress_bar -> com_facebook_login_activity_progress_bar
    int com_facebook_picker_activity_circle -> com_facebook_picker_activity_circle
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_checkbox_stub -> com_facebook_picker_checkbox_stub
    int com_facebook_picker_divider -> com_facebook_picker_divider
    int com_facebook_picker_done_button -> com_facebook_picker_done_button
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_list_view -> com_facebook_picker_list_view
    int com_facebook_picker_profile_pic_stub -> com_facebook_picker_profile_pic_stub
    int com_facebook_picker_row_activity_circle -> com_facebook_picker_row_activity_circle
    int com_facebook_picker_search_text -> com_facebook_picker_search_text
    int com_facebook_picker_title -> com_facebook_picker_title
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_picker_top_bar -> com_facebook_picker_top_bar
    int com_facebook_search_bar_view -> com_facebook_search_bar_view
    int com_facebook_tooltip_bubble_view_bottom_pointer -> com_facebook_tooltip_bubble_view_bottom_pointer
    int com_facebook_tooltip_bubble_view_text_body -> com_facebook_tooltip_bubble_view_text_body
    int com_facebook_tooltip_bubble_view_top_pointer -> com_facebook_tooltip_bubble_view_top_pointer
    int com_facebook_usersettingsfragment_login_button -> com_facebook_usersettingsfragment_login_button
    int com_facebook_usersettingsfragment_logo_image -> com_facebook_usersettingsfragment_logo_image
    int com_facebook_usersettingsfragment_profile_name -> com_facebook_usersettingsfragment_profile_name
    int large -> large
    int normal -> normal
    int picker_subtitle -> picker_subtitle
    int small -> small
com.facebook.android.R$layout -> com.facebook.android.m:
    int com_facebook_friendpickerfragment -> com_facebook_friendpickerfragment
    int com_facebook_login_activity_layout -> com_facebook_login_activity_layout
    int com_facebook_picker_activity_circle_row -> com_facebook_picker_activity_circle_row
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_row -> com_facebook_picker_list_row
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_search_box -> com_facebook_picker_search_box
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_placepickerfragment -> com_facebook_placepickerfragment
    int com_facebook_placepickerfragment_list_row -> com_facebook_placepickerfragment_list_row
    int com_facebook_search_bar_layout -> com_facebook_search_bar_layout
    int com_facebook_tooltip_bubble -> com_facebook_tooltip_bubble
    int com_facebook_usersettingsfragment -> com_facebook_usersettingsfragment
com.facebook.android.R$string -> com.facebook.android.n:
    int com_facebook_choose_friends -> com_facebook_choose_friends
    int com_facebook_dialogloginactivity_ok_button -> com_facebook_dialogloginactivity_ok_button
    int com_facebook_internet_permission_error_message -> com_facebook_internet_permission_error_message
    int com_facebook_internet_permission_error_title -> com_facebook_internet_permission_error_title
    int com_facebook_loading -> com_facebook_loading
    int com_facebook_loginview_cancel_action -> com_facebook_loginview_cancel_action
    int com_facebook_loginview_log_in_button -> com_facebook_loginview_log_in_button
    int com_facebook_loginview_log_out_action -> com_facebook_loginview_log_out_action
    int com_facebook_loginview_log_out_button -> com_facebook_loginview_log_out_button
    int com_facebook_loginview_logged_in_as -> com_facebook_loginview_logged_in_as
    int com_facebook_loginview_logged_in_using_facebook -> com_facebook_loginview_logged_in_using_facebook
    int com_facebook_logo_content_description -> com_facebook_logo_content_description
    int com_facebook_nearby -> com_facebook_nearby
    int com_facebook_picker_done_button_text -> com_facebook_picker_done_button_text
    int com_facebook_placepicker_subtitle_catetory_only_format -> com_facebook_placepicker_subtitle_catetory_only_format
    int com_facebook_placepicker_subtitle_format -> com_facebook_placepicker_subtitle_format
    int com_facebook_placepicker_subtitle_were_here_only_format -> com_facebook_placepicker_subtitle_were_here_only_format
    int com_facebook_requesterror_password_changed -> com_facebook_requesterror_password_changed
    int com_facebook_requesterror_permissions -> com_facebook_requesterror_permissions
    int com_facebook_requesterror_reconnect -> com_facebook_requesterror_reconnect
    int com_facebook_requesterror_relogin -> com_facebook_requesterror_relogin
    int com_facebook_requesterror_web_login -> com_facebook_requesterror_web_login
    int com_facebook_tooltip_default -> com_facebook_tooltip_default
    int com_facebook_usersettingsfragment_log_in_button -> com_facebook_usersettingsfragment_log_in_button
    int com_facebook_usersettingsfragment_logged_in -> com_facebook_usersettingsfragment_logged_in
    int com_facebook_usersettingsfragment_not_logged_in -> com_facebook_usersettingsfragment_not_logged_in
com.facebook.android.R$styleable -> com.facebook.android.o:
    int[] com_facebook_friend_picker_fragment -> com_facebook_friend_picker_fragment
    int com_facebook_friend_picker_fragment_multi_select -> com_facebook_friend_picker_fragment_multi_select
    int[] com_facebook_login_view -> com_facebook_login_view
    int com_facebook_login_view_confirm_logout -> com_facebook_login_view_confirm_logout
    int com_facebook_login_view_fetch_user_info -> com_facebook_login_view_fetch_user_info
    int com_facebook_login_view_login_text -> com_facebook_login_view_login_text
    int com_facebook_login_view_logout_text -> com_facebook_login_view_logout_text
    int[] com_facebook_picker_fragment -> com_facebook_picker_fragment
    int com_facebook_picker_fragment_done_button_background -> com_facebook_picker_fragment_done_button_background
    int com_facebook_picker_fragment_done_button_text -> com_facebook_picker_fragment_done_button_text
    int com_facebook_picker_fragment_extra_fields -> com_facebook_picker_fragment_extra_fields
    int com_facebook_picker_fragment_show_pictures -> com_facebook_picker_fragment_show_pictures
    int com_facebook_picker_fragment_show_title_bar -> com_facebook_picker_fragment_show_title_bar
    int com_facebook_picker_fragment_title_bar_background -> com_facebook_picker_fragment_title_bar_background
    int com_facebook_picker_fragment_title_text -> com_facebook_picker_fragment_title_text
    int[] com_facebook_place_picker_fragment -> com_facebook_place_picker_fragment
    int com_facebook_place_picker_fragment_radius_in_meters -> com_facebook_place_picker_fragment_radius_in_meters
    int com_facebook_place_picker_fragment_results_limit -> com_facebook_place_picker_fragment_results_limit
    int com_facebook_place_picker_fragment_search_text -> com_facebook_place_picker_fragment_search_text
    int com_facebook_place_picker_fragment_show_search_box -> com_facebook_place_picker_fragment_show_search_box
    int[] com_facebook_profile_picture_view -> com_facebook_profile_picture_view
    int com_facebook_profile_picture_view_is_cropped -> com_facebook_profile_picture_view_is_cropped
    int com_facebook_profile_picture_view_preset_size -> com_facebook_profile_picture_view_preset_size
com.facebook.android.Util -> com.facebook.android.p:
    android.os.Bundle decodeUrl(java.lang.String) -> a
    android.os.Bundle parseUrl(java.lang.String) -> b
com.facebook.internal.AttributionIdentifiers -> com.facebook.internal.a:
    java.lang.String TAG -> a
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> b
    java.lang.String attributionId -> c
    java.lang.String androidAdvertiserId -> d
    boolean limitTracking -> e
    long fetchTime -> f
    com.facebook.internal.AttributionIdentifiers recentlyFetchedIdentifiers -> g
    com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context) -> b
    com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context) -> a
    java.lang.String getAttributionId() -> a
    java.lang.String getAndroidAdvertiserId() -> b
    boolean isTrackingLimited() -> c
com.facebook.internal.CacheableRequestBatch -> com.facebook.internal.b:
    java.lang.String cacheKey -> a
    boolean forceRoundTrip -> b
    java.lang.String getCacheKeyOverride() -> k
    boolean getForceRoundTrip() -> l
    void setForceRoundTrip(boolean) -> a
com.facebook.internal.FileLruCache -> com.facebook.internal.c:
    java.lang.String TAG -> a
    java.util.concurrent.atomic.AtomicLong bufferIndex -> b
    java.lang.String tag -> c
    com.facebook.internal.FileLruCache$Limits limits -> d
    java.io.File directory -> e
    boolean isTrimPending -> f
    boolean isTrimInProgress -> g
    java.lang.Object lock -> h
    java.util.concurrent.atomic.AtomicLong lastClearCacheTime -> i
    java.io.InputStream get(java.lang.String) -> a
    java.io.InputStream get(java.lang.String,java.lang.String) -> a
    java.io.OutputStream openPutStream(java.lang.String) -> b
    java.io.OutputStream openPutStream(java.lang.String,java.lang.String) -> b
    void clearCache() -> a
    void renameToTargetAndTrim(java.lang.String,java.io.File) -> a
    java.io.InputStream interceptAndPut(java.lang.String,java.io.InputStream) -> a
    java.lang.String toString() -> toString
    void postTrim() -> c
    void trim() -> d
    java.util.concurrent.atomic.AtomicLong access$000(com.facebook.internal.FileLruCache) -> a
    void access$100(com.facebook.internal.FileLruCache,java.lang.String,java.io.File) -> a
    void access$200(com.facebook.internal.FileLruCache) -> b
    java.util.concurrent.atomic.AtomicLong access$300() -> b
com.facebook.internal.FileLruCache$1 -> com.facebook.internal.d:
    long val$bufferFileCreateTime -> a
    java.io.File val$buffer -> b
    java.lang.String val$key -> c
    com.facebook.internal.FileLruCache this$0 -> d
    void onClose() -> a
com.facebook.internal.FileLruCache$2 -> com.facebook.internal.e:
    java.io.File[] val$filesToDelete -> a
    com.facebook.internal.FileLruCache this$0 -> b
    void run() -> run
com.facebook.internal.FileLruCache$3 -> com.facebook.internal.f:
    com.facebook.internal.FileLruCache this$0 -> a
    void run() -> run
com.facebook.internal.FileLruCache$BufferFile -> com.facebook.internal.g:
    java.io.FilenameFilter filterExcludeBufferFiles -> a
    java.io.FilenameFilter filterExcludeNonBufferFiles -> b
    void deleteAll(java.io.File) -> a
    java.io.FilenameFilter excludeBufferFiles() -> a
    java.io.FilenameFilter excludeNonBufferFiles() -> b
    java.io.File newFile(java.io.File) -> b
com.facebook.internal.FileLruCache$BufferFile$1 -> com.facebook.internal.h:
    boolean accept(java.io.File,java.lang.String) -> accept
com.facebook.internal.FileLruCache$BufferFile$2 -> com.facebook.internal.i:
    boolean accept(java.io.File,java.lang.String) -> accept
com.facebook.internal.FileLruCache$CloseCallbackOutputStream -> com.facebook.internal.j:
    java.io.OutputStream innerStream -> a
    com.facebook.internal.FileLruCache$StreamCloseCallback callback -> b
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
com.facebook.internal.FileLruCache$CopyingInputStream -> com.facebook.internal.k:
    java.io.InputStream input -> a
    java.io.OutputStream output -> b
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.facebook.internal.FileLruCache$Limits -> com.facebook.internal.l:
    int byteCount -> a
    int fileCount -> b
    int getByteCount() -> a
    int getFileCount() -> b
com.facebook.internal.FileLruCache$ModifiedFile -> com.facebook.internal.m:
    java.io.File file -> a
    long modified -> b
    java.io.File getFile() -> a
    long getModified() -> b
    int compareTo(com.facebook.internal.FileLruCache$ModifiedFile) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
com.facebook.internal.FileLruCache$StreamCloseCallback -> com.facebook.internal.n:
    void onClose() -> a
com.facebook.internal.FileLruCache$StreamHeader -> com.facebook.internal.o:
    void writeHeader(java.io.OutputStream,org.json.JSONObject) -> a
    org.json.JSONObject readHeader(java.io.InputStream) -> a
com.facebook.internal.ImageDownloader -> com.facebook.internal.p:
    android.os.Handler handler -> a
    com.facebook.internal.WorkQueue downloadQueue -> b
    com.facebook.internal.WorkQueue cacheReadQueue -> c
    java.util.Map pendingRequests -> d
    void downloadAsync(com.facebook.internal.ImageRequest) -> a
    boolean cancelRequest(com.facebook.internal.ImageRequest) -> b
    void prioritizeRequest(com.facebook.internal.ImageRequest) -> c
    void clearCache(android.content.Context) -> a
    void enqueueCacheRead(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,boolean) -> a
    void enqueueDownload(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey) -> a
    void enqueueRequest(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,com.facebook.internal.WorkQueue,java.lang.Runnable) -> a
    void issueResponse(com.facebook.internal.ImageDownloader$RequestKey,java.lang.Exception,android.graphics.Bitmap,boolean) -> a
    void readFromCache(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context,boolean) -> b
    void download(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context) -> b
    android.os.Handler getHandler() -> a
    com.facebook.internal.ImageDownloader$DownloaderContext removePendingRequest(com.facebook.internal.ImageDownloader$RequestKey) -> a
    void access$100(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context,boolean) -> a
    void access$200(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context) -> a
com.facebook.internal.ImageDownloader$1 -> com.facebook.internal.q:
    com.facebook.internal.ImageRequest val$request -> a
    java.lang.Exception val$error -> b
    boolean val$isCachedRedirect -> c
    android.graphics.Bitmap val$bitmap -> d
    com.facebook.internal.ImageRequest$Callback val$callback -> e
    void run() -> run
com.facebook.internal.ImageDownloader$CacheReadWorkItem -> com.facebook.internal.r:
    android.content.Context context -> a
    com.facebook.internal.ImageDownloader$RequestKey key -> b
    boolean allowCachedRedirects -> c
    void run() -> run
com.facebook.internal.ImageDownloader$DownloadImageWorkItem -> com.facebook.internal.s:
    android.content.Context context -> a
    com.facebook.internal.ImageDownloader$RequestKey key -> b
    void run() -> run
com.facebook.internal.ImageDownloader$DownloaderContext -> com.facebook.internal.t:
    com.facebook.internal.WorkQueue$WorkItem workItem -> a
    com.facebook.internal.ImageRequest request -> b
    boolean isCancelled -> c
com.facebook.internal.ImageDownloader$RequestKey -> com.facebook.internal.u:
    java.net.URI uri -> a
    java.lang.Object tag -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.facebook.internal.ImageRequest -> com.facebook.internal.v:
    android.content.Context context -> a
    java.net.URI imageUri -> b
    com.facebook.internal.ImageRequest$Callback callback -> c
    boolean allowCachedRedirects -> d
    java.lang.Object callerTag -> e
    java.net.URI getProfilePictureUrl(java.lang.String,int,int) -> a
    android.content.Context getContext() -> a
    java.net.URI getImageUri() -> b
    com.facebook.internal.ImageRequest$Callback getCallback() -> c
    boolean isCachedRedirectAllowed() -> d
    java.lang.Object getCallerTag() -> e
com.facebook.internal.ImageRequest$1 -> com.facebook.internal.w:
com.facebook.internal.ImageRequest$Builder -> com.facebook.internal.x:
    android.content.Context context -> a
    java.net.URI imageUrl -> b
    com.facebook.internal.ImageRequest$Callback callback -> c
    boolean allowCachedRedirects -> d
    java.lang.Object callerTag -> e
    com.facebook.internal.ImageRequest$Builder setCallback(com.facebook.internal.ImageRequest$Callback) -> a
    com.facebook.internal.ImageRequest$Builder setCallerTag(java.lang.Object) -> a
    com.facebook.internal.ImageRequest$Builder setAllowCachedRedirects(boolean) -> a
    com.facebook.internal.ImageRequest build() -> a
    android.content.Context access$000(com.facebook.internal.ImageRequest$Builder) -> a
    java.net.URI access$100(com.facebook.internal.ImageRequest$Builder) -> b
    com.facebook.internal.ImageRequest$Callback access$200(com.facebook.internal.ImageRequest$Builder) -> c
    boolean access$300(com.facebook.internal.ImageRequest$Builder) -> d
    java.lang.Object access$400(com.facebook.internal.ImageRequest$Builder) -> e
com.facebook.internal.ImageRequest$Callback -> com.facebook.internal.y:
    void onCompleted(com.facebook.internal.ImageResponse) -> a
com.facebook.internal.ImageResponse -> com.facebook.internal.z:
    com.facebook.internal.ImageRequest request -> a
    java.lang.Exception error -> b
    boolean isCachedRedirect -> c
    android.graphics.Bitmap bitmap -> d
    com.facebook.internal.ImageRequest getRequest() -> a
    java.lang.Exception getError() -> b
    android.graphics.Bitmap getBitmap() -> c
    boolean isCachedRedirect() -> d
com.facebook.internal.ImageResponseCache -> com.facebook.internal.aa:
    java.lang.String TAG -> a
    com.facebook.internal.FileLruCache imageCache -> b
    com.facebook.internal.FileLruCache getCache(android.content.Context) -> a
    java.io.InputStream getCachedImageStream(java.net.URI,android.content.Context) -> a
    java.io.InputStream interceptAndCacheImageStream(android.content.Context,java.net.HttpURLConnection) -> a
    boolean isCDNURL(java.net.URI) -> a
    void clearCache(android.content.Context) -> b
com.facebook.internal.ImageResponseCache$BufferedHttpInputStream -> com.facebook.internal.ab:
    java.net.HttpURLConnection connection -> a
    void close() -> close
com.facebook.internal.Logger -> com.facebook.internal.ac:
    java.util.HashMap stringsToReplace -> a
    com.facebook.LoggingBehavior behavior -> b
    java.lang.String tag -> c
    java.lang.StringBuilder contents -> d
    int priority -> e
    void registerStringToReplace(java.lang.String,java.lang.String) -> a
    void registerAccessToken(java.lang.String) -> a
    void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String) -> a
    void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String) -> a
    java.lang.String replaceStrings(java.lang.String) -> d
    void log() -> a
    void logString(java.lang.String) -> b
    void append(java.lang.String) -> c
    void append(java.lang.String,java.lang.Object[]) -> a
    void appendKeyValue(java.lang.String,java.lang.Object) -> a
    boolean shouldLog() -> b
com.facebook.internal.NativeProtocol -> com.facebook.internal.ad:
    com.facebook.internal.NativeProtocol$NativeAppInfo FACEBOOK_APP_INFO -> a
    java.util.List facebookAppInfoList -> b
    java.util.Map actionToAppInfoMap -> c
    java.util.List KNOWN_PROTOCOL_VERSIONS -> d
    java.util.List buildFacebookAppList() -> a
    java.util.Map buildActionToAppInfoMap() -> b
    android.content.Intent validateActivityIntent(android.content.Context,android.content.Intent,com.facebook.internal.NativeProtocol$NativeAppInfo) -> a
    android.content.Intent validateServiceIntent(android.content.Context,android.content.Intent,com.facebook.internal.NativeProtocol$NativeAppInfo) -> b
    android.content.Intent createProxyAuthIntent(android.content.Context,java.lang.String,java.util.List,java.lang.String,boolean) -> a
    android.content.Intent createTokenRefreshIntent(android.content.Context) -> a
    android.content.Intent createPlatformServiceIntent(android.content.Context) -> b
    boolean isErrorResult(android.content.Intent) -> a
    java.lang.Exception getErrorFromResult(android.content.Intent) -> b
    int getLatestAvailableProtocolVersionForService(android.content.Context,int) -> a
    int getLatestAvailableProtocolVersionForAppInfoList(android.content.Context,java.util.List,int) -> a
    int getLatestAvailableProtocolVersionForAppInfo(android.content.Context,com.facebook.internal.NativeProtocol$NativeAppInfo,int) -> a
    android.net.Uri buildPlatformProviderVersionURI(com.facebook.internal.NativeProtocol$NativeAppInfo) -> a
com.facebook.internal.NativeProtocol$1 -> com.facebook.internal.ae:
com.facebook.internal.NativeProtocol$KatanaAppInfo -> com.facebook.internal.af:
    java.lang.String getPackage() -> a
com.facebook.internal.NativeProtocol$MessengerAppInfo -> com.facebook.internal.ag:
    java.lang.String getPackage() -> a
com.facebook.internal.NativeProtocol$NativeAppInfo -> com.facebook.internal.ah:
    java.util.HashSet validAppSignatureHashes -> a
    java.lang.String getPackage() -> a
    java.util.HashSet buildAppSignatureHashes() -> b
    boolean validateSignature(android.content.Context,java.lang.String) -> a
com.facebook.internal.NativeProtocol$WakizashiAppInfo -> com.facebook.internal.ai:
    java.lang.String getPackage() -> a
com.facebook.internal.PlatformServiceClient -> com.facebook.internal.aj:
    android.content.Context context -> a
    android.os.Handler handler -> b
    com.facebook.internal.PlatformServiceClient$CompletedListener listener -> c
    boolean running -> d
    android.os.Messenger sender -> e
    int requestMessage -> f
    int replyMessage -> g
    java.lang.String applicationId -> h
    int protocolVersion -> i
    void setCompletedListener(com.facebook.internal.PlatformServiceClient$CompletedListener) -> a
    boolean start() -> a
    void cancel() -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void sendMessage() -> c
    void populateRequestBundle(android.os.Bundle) -> a
    void handleMessage(android.os.Message) -> a
    void callback(android.os.Bundle) -> b
com.facebook.internal.PlatformServiceClient$1 -> com.facebook.internal.ak:
    com.facebook.internal.PlatformServiceClient this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.facebook.internal.PlatformServiceClient$CompletedListener -> com.facebook.internal.al:
    void completed(android.os.Bundle) -> a
com.facebook.internal.ServerProtocol -> com.facebook.internal.am:
    java.util.Collection errorsProxyAuthDisabled -> a
    java.util.Collection errorsUserCanceled -> b
    java.lang.String getDialogAuthority() -> a
    java.lang.String getGraphUrlBase() -> b
    java.lang.String getGraphVideoUrlBase() -> c
    java.lang.String getRestUrlBase() -> d
    java.lang.String getAPIVersion() -> e
com.facebook.internal.SessionAuthorizationType -> com.facebook.internal.SessionAuthorizationType:
    com.facebook.internal.SessionAuthorizationType READ -> a
    com.facebook.internal.SessionAuthorizationType PUBLISH -> b
    com.facebook.internal.SessionAuthorizationType[] $VALUES -> c
    com.facebook.internal.SessionAuthorizationType[] values() -> values
    com.facebook.internal.SessionAuthorizationType valueOf(java.lang.String) -> valueOf
com.facebook.internal.SessionTracker -> com.facebook.internal.an:
    com.facebook.Session session -> a
    com.facebook.Session$StatusCallback callback -> b
    android.content.BroadcastReceiver receiver -> c
    android.support.v4.content.LocalBroadcastManager broadcastManager -> d
    boolean isTracking -> e
    com.facebook.Session getSession() -> a
    com.facebook.Session getOpenSession() -> b
    void setSession(com.facebook.Session) -> a
    void startTracking() -> c
    void stopTracking() -> d
    boolean isTracking() -> e
    void addBroadcastReceiver() -> f
    com.facebook.Session$StatusCallback access$100(com.facebook.internal.SessionTracker) -> a
    com.facebook.Session access$200(com.facebook.internal.SessionTracker) -> b
com.facebook.internal.SessionTracker$1 -> com.facebook.internal.ao:
com.facebook.internal.SessionTracker$ActiveSessionBroadcastReceiver -> com.facebook.internal.ap:
    com.facebook.internal.SessionTracker this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.facebook.internal.SessionTracker$CallbackWrapper -> com.facebook.internal.aq:
    com.facebook.Session$StatusCallback wrapped -> b
    com.facebook.internal.SessionTracker this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.facebook.internal.UrlRedirectCache -> com.facebook.internal.ar:
    java.lang.String TAG -> a
    java.lang.String REDIRECT_CONTENT_TAG -> b
    com.facebook.internal.FileLruCache urlRedirectCache -> c
    com.facebook.internal.FileLruCache getCache(android.content.Context) -> a
    java.net.URI getRedirectedUri(android.content.Context,java.net.URI) -> a
    void cacheUriRedirect(android.content.Context,java.net.URI,java.net.URI) -> a
    void clearCache(android.content.Context) -> b
com.facebook.internal.Utility -> com.facebook.internal.as:
    java.lang.String[] APP_SETTING_FIELDS -> a
    java.util.Map fetchedAppSettings -> b
    int sNumCPUCores -> c
    long sTotalExternalStorageBytes -> d
    long sAvailableExternalStorageBytes -> e
    java.lang.String sCarrierName -> f
    boolean isSubset(java.util.Collection,java.util.Collection) -> a
    boolean isNullOrEmpty(java.util.Collection) -> a
    boolean isNullOrEmpty(java.lang.String) -> a
    java.util.Collection unmodifiableCollection(java.lang.Object[]) -> a
    java.lang.String md5hash(java.lang.String) -> b
    java.lang.String sha1hash(java.lang.String) -> c
    java.lang.String sha1hash(byte[]) -> a
    java.lang.String hashWithAlgorithm(java.lang.String,java.lang.String) -> c
    java.lang.String hashWithAlgorithm(java.lang.String,byte[]) -> a
    java.lang.String hashBytes(java.security.MessageDigest,byte[]) -> a
    android.net.Uri buildUri(java.lang.String,java.lang.String,android.os.Bundle) -> a
    void closeQuietly(java.io.Closeable) -> a
    void disconnectQuietly(java.net.URLConnection) -> a
    java.lang.String getMetadataApplicationId(android.content.Context) -> a
    java.lang.Object getStringPropertyAsJSON(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String readStreamToString(java.io.InputStream) -> a
    boolean stringsEqualOrEmpty(java.lang.String,java.lang.String) -> a
    void clearCookiesForDomain(android.content.Context,java.lang.String) -> b
    void clearFacebookCookies(android.content.Context) -> b
    void logd(java.lang.String,java.lang.Exception) -> a
    void logd(java.lang.String,java.lang.String) -> b
    boolean areObjectsEqual(java.lang.Object,java.lang.Object) -> a
    com.facebook.internal.Utility$FetchedAppSettings queryAppSettings(java.lang.String,boolean) -> a
    boolean safeGetBooleanFromResponse(com.facebook.model.GraphObject,java.lang.String) -> a
    java.lang.String safeGetStringFromResponse(com.facebook.model.GraphObject,java.lang.String) -> b
    void clearCaches(android.content.Context) -> c
    void deleteDirectory(java.io.File) -> a
    java.util.List asListNoNulls(java.lang.Object[]) -> b
    java.lang.String getHashedDeviceAndAppID(android.content.Context,java.lang.String) -> a
    void setAppEventAttributionParameters(com.facebook.model.GraphObject,com.facebook.internal.AttributionIdentifiers,java.lang.String,boolean) -> a
    void setAppEventExtendedDeviceInfoParameters(com.facebook.model.GraphObject,android.content.Context) -> a
    java.lang.reflect.Method getMethodQuietly(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.reflect.Method getMethodQuietly(java.lang.String,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object invokeMethodQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.String getActivityName(android.content.Context) -> d
com.facebook.internal.Utility$1 -> com.facebook.internal.at:
com.facebook.internal.Utility$FetchedAppSettings -> com.facebook.internal.au:
    boolean supportsAttribution -> a
    boolean supportsImplicitLogging -> b
    java.lang.String nuxContent -> c
    boolean nuxEnabled -> d
    boolean supportsAttribution() -> a
    boolean supportsImplicitLogging() -> b
    java.lang.String getNuxContent() -> c
    boolean getNuxEnabled() -> d
com.facebook.internal.Validate -> com.facebook.internal.av:
    void notNull(java.lang.Object,java.lang.String) -> a
    void notEmpty(java.util.Collection,java.lang.String) -> a
    void containsNoNulls(java.util.Collection,java.lang.String) -> b
    void notEmptyAndContainsNoNulls(java.util.Collection,java.lang.String) -> c
    void notNullOrEmpty(java.lang.String,java.lang.String) -> a
com.facebook.internal.WorkQueue -> com.facebook.internal.aw:
    java.lang.Object workLock -> b
    com.facebook.internal.WorkQueue$WorkNode pendingJobs -> c
    int maxConcurrent -> d
    java.util.concurrent.Executor executor -> e
    com.facebook.internal.WorkQueue$WorkNode runningJobs -> f
    int runningCount -> g
    boolean $assertionsDisabled -> a
    com.facebook.internal.WorkQueue$WorkItem addActiveWorkItem(java.lang.Runnable) -> a
    com.facebook.internal.WorkQueue$WorkItem addActiveWorkItem(java.lang.Runnable,boolean) -> a
    void startItem() -> a
    void finishItemAndStartNew(com.facebook.internal.WorkQueue$WorkNode) -> a
    void execute(com.facebook.internal.WorkQueue$WorkNode) -> b
    void access$000(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode) -> a
    java.lang.Object access$100(com.facebook.internal.WorkQueue) -> a
    com.facebook.internal.WorkQueue$WorkNode access$202(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode) -> b
    com.facebook.internal.WorkQueue$WorkNode access$200(com.facebook.internal.WorkQueue) -> b
com.facebook.internal.WorkQueue$1 -> com.facebook.internal.ax:
    com.facebook.internal.WorkQueue$WorkNode val$node -> a
    com.facebook.internal.WorkQueue this$0 -> b
    void run() -> run
com.facebook.internal.WorkQueue$WorkItem -> com.facebook.internal.ay:
    boolean cancel() -> a
    void moveToFront() -> b
com.facebook.internal.WorkQueue$WorkNode -> com.facebook.internal.az:
    java.lang.Runnable callback -> c
    com.facebook.internal.WorkQueue$WorkNode next -> d
    com.facebook.internal.WorkQueue$WorkNode prev -> e
    boolean isRunning -> f
    boolean $assertionsDisabled -> a
    com.facebook.internal.WorkQueue this$0 -> b
    boolean cancel() -> a
    void moveToFront() -> b
    boolean isRunning() -> c
    java.lang.Runnable getCallback() -> d
    void setIsRunning(boolean) -> a
    com.facebook.internal.WorkQueue$WorkNode addToList(com.facebook.internal.WorkQueue$WorkNode,boolean) -> a
    com.facebook.internal.WorkQueue$WorkNode removeFromList(com.facebook.internal.WorkQueue$WorkNode) -> a
com.facebook.model.CreateGraphObject -> com.facebook.a.a:
    java.lang.String value() -> a
com.facebook.model.GraphMultiResult -> com.facebook.a.b:
    com.facebook.model.GraphObjectList getData() -> a
com.facebook.model.GraphObject -> com.facebook.a.c:
    com.facebook.model.GraphObject cast(java.lang.Class) -> a
    java.util.Map asMap() -> d
    org.json.JSONObject getInnerJSONObject() -> e
    java.lang.Object getProperty(java.lang.String) -> b
    void setProperty(java.lang.String,java.lang.Object) -> a
com.facebook.model.GraphObject$Factory -> com.facebook.a.d:
    java.util.HashSet verifiedGraphObjectClasses -> a
    java.text.SimpleDateFormat[] dateFormats -> b
    com.facebook.model.GraphObject create(org.json.JSONObject) -> a
    com.facebook.model.GraphObject create(org.json.JSONObject,java.lang.Class) -> a
    com.facebook.model.GraphObject create() -> a
    com.facebook.model.GraphObject create(java.lang.Class) -> a
    boolean hasSameId(com.facebook.model.GraphObject,com.facebook.model.GraphObject) -> a
    com.facebook.model.GraphObjectList createList(org.json.JSONArray,java.lang.Class) -> a
    com.facebook.model.GraphObjectList createList(java.lang.Class) -> b
    com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class,org.json.JSONObject) -> b
    java.util.Map createGraphObjectProxyForMap(org.json.JSONObject) -> c
    boolean hasClassBeenVerified(java.lang.Class) -> c
    void recordClassHasBeenVerified(java.lang.Class) -> d
    void verifyCanProxyClass(java.lang.Class) -> e
    java.lang.Object coerceValueToExpectedType(java.lang.Object,java.lang.Class,java.lang.reflect.ParameterizedType) -> a
    java.lang.String convertCamelCaseToLowercaseWithUnderscores(java.lang.String) -> a
    java.lang.Object getUnderlyingJSONObject(java.lang.Object) -> b
    com.facebook.model.GraphObject access$000(java.lang.Class,org.json.JSONObject) -> a
    java.util.Map access$100(org.json.JSONObject) -> b
    java.lang.Object access$200(java.lang.Object) -> a
com.facebook.model.GraphObject$Factory$GraphObjectListImpl -> com.facebook.a.e:
    org.json.JSONArray state -> a
    java.lang.Class itemType -> b
    java.lang.String toString() -> toString
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object get(int) -> get
    int size() -> size
    com.facebook.model.GraphObjectList castToListOf(java.lang.Class) -> a
    org.json.JSONArray getInnerJSONArray() -> a
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void checkIndex(int) -> a
    void put(int,java.lang.Object) -> a
com.facebook.model.GraphObject$Factory$GraphObjectProxy -> com.facebook.a.f:
    java.lang.Class graphObjectClass -> b
    java.lang.String toString() -> toString
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object proxyMapMethods(java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object proxyGraphObjectMethods(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> b
    java.lang.Object createGraphObjectsFromParameters(com.facebook.model.CreateGraphObject,java.lang.Object) -> a
    java.lang.Object proxyGraphObjectGettersAndSetters(java.lang.reflect.Method,java.lang.Object[]) -> b
    java.lang.Object setJSONProperty(java.lang.Object[]) -> a
com.facebook.model.GraphObject$Factory$GraphObjectProxy$1 -> com.facebook.a.g:
    java.lang.Class val$expectedType -> a
    com.facebook.model.GraphObject$Factory$GraphObjectProxy this$0 -> b
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.facebook.model.GraphObject$Factory$ProxyBase -> com.facebook.a.h:
    java.lang.Object state -> a
    java.lang.Object throwUnexpectedMethodSignature(java.lang.reflect.Method) -> a
    java.lang.Object proxyObjectMethods(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
com.facebook.model.GraphObjectList -> com.facebook.a.i:
    com.facebook.model.GraphObjectList castToListOf(java.lang.Class) -> a
    org.json.JSONArray getInnerJSONArray() -> a
com.facebook.model.GraphPlace -> com.facebook.a.j:
    java.lang.String getCategory() -> a
com.facebook.model.GraphUser -> com.facebook.a.k:
    java.lang.String getId() -> a
    java.lang.String getName() -> b
    java.lang.String getFirstName() -> c
    java.lang.String getLastName() -> f
com.facebook.model.JsonUtil -> com.facebook.a.l:
    void jsonObjectClear(org.json.JSONObject) -> a
    boolean jsonObjectContainsValue(org.json.JSONObject,java.lang.Object) -> a
    java.util.Set jsonObjectEntrySet(org.json.JSONObject) -> b
    java.util.Set jsonObjectKeySet(org.json.JSONObject) -> c
    void jsonObjectPutAll(org.json.JSONObject,java.util.Map) -> a
    java.util.Collection jsonObjectValues(org.json.JSONObject) -> d
com.facebook.model.JsonUtil$JSONObjectEntry -> com.facebook.a.m:
    java.lang.String key -> a
    java.lang.Object value -> b
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getKey() -> getKey
com.facebook.model.PropertyName -> com.facebook.a.n:
    java.lang.String value() -> a
com.facebook.widget.FacebookDialog -> com.facebook.widget.FacebookDialog:
    com.facebook.NativeAppCallAttachmentStore attachmentStore -> a
    boolean handleActivityResult(android.content.Context,com.facebook.widget.FacebookDialog$PendingCall,int,android.content.Intent,com.facebook.widget.FacebookDialog$Callback) -> a
com.facebook.widget.FacebookDialog$1 -> com.facebook.widget.a:
com.facebook.widget.FacebookDialog$Callback -> com.facebook.widget.b:
    void onComplete(com.facebook.widget.FacebookDialog$PendingCall,android.os.Bundle) -> a
    void onError(com.facebook.widget.FacebookDialog$PendingCall,java.lang.Exception,android.os.Bundle) -> a
com.facebook.widget.FacebookDialog$MessageDialogFeature -> com.facebook.widget.FacebookDialog$MessageDialogFeature:
    com.facebook.widget.FacebookDialog$MessageDialogFeature MESSAGE_DIALOG -> a
    com.facebook.widget.FacebookDialog$MessageDialogFeature PHOTOS -> b
    int minVersion -> c
    com.facebook.widget.FacebookDialog$MessageDialogFeature[] $VALUES -> d
    com.facebook.widget.FacebookDialog$MessageDialogFeature[] values() -> values
    com.facebook.widget.FacebookDialog$MessageDialogFeature valueOf(java.lang.String) -> valueOf
com.facebook.widget.FacebookDialog$OpenGraphActionDialogFeature -> com.facebook.widget.FacebookDialog$OpenGraphActionDialogFeature:
    com.facebook.widget.FacebookDialog$OpenGraphActionDialogFeature OG_ACTION_DIALOG -> a
    int minVersion -> b
    com.facebook.widget.FacebookDialog$OpenGraphActionDialogFeature[] $VALUES -> c
    com.facebook.widget.FacebookDialog$OpenGraphActionDialogFeature[] values() -> values
    com.facebook.widget.FacebookDialog$OpenGraphActionDialogFeature valueOf(java.lang.String) -> valueOf
com.facebook.widget.FacebookDialog$OpenGraphMessageDialogFeature -> com.facebook.widget.FacebookDialog$OpenGraphMessageDialogFeature:
    com.facebook.widget.FacebookDialog$OpenGraphMessageDialogFeature OG_MESSAGE_DIALOG -> a
    int minVersion -> b
    com.facebook.widget.FacebookDialog$OpenGraphMessageDialogFeature[] $VALUES -> c
    com.facebook.widget.FacebookDialog$OpenGraphMessageDialogFeature[] values() -> values
    com.facebook.widget.FacebookDialog$OpenGraphMessageDialogFeature valueOf(java.lang.String) -> valueOf
com.facebook.widget.FacebookDialog$PendingCall -> com.facebook.widget.FacebookDialog$PendingCall:
    java.util.UUID callId -> a
    android.content.Intent requestIntent -> b
    int requestCode -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.content.Intent getRequestIntent() -> a
    java.util.UUID getCallId() -> b
    int getRequestCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.facebook.widget.FacebookDialog$PendingCall$1 -> com.facebook.widget.c:
    com.facebook.widget.FacebookDialog$PendingCall createFromParcel(android.os.Parcel) -> a
    com.facebook.widget.FacebookDialog$PendingCall[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.facebook.widget.FacebookDialog$ShareDialogFeature -> com.facebook.widget.FacebookDialog$ShareDialogFeature:
    com.facebook.widget.FacebookDialog$ShareDialogFeature SHARE_DIALOG -> a
    com.facebook.widget.FacebookDialog$ShareDialogFeature PHOTOS -> b
    int minVersion -> c
    com.facebook.widget.FacebookDialog$ShareDialogFeature[] $VALUES -> d
    com.facebook.widget.FacebookDialog$ShareDialogFeature[] values() -> values
    com.facebook.widget.FacebookDialog$ShareDialogFeature valueOf(java.lang.String) -> valueOf
com.facebook.widget.FacebookFragment -> com.facebook.widget.d:
    com.facebook.internal.SessionTracker sessionTracker -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onSessionStateChange(com.facebook.SessionState,java.lang.Exception) -> a
    com.facebook.Session getSession() -> a
    boolean isSessionOpen() -> b
com.facebook.widget.FacebookFragment$1 -> com.facebook.widget.e:
com.facebook.widget.FacebookFragment$DefaultSessionStatusCallback -> com.facebook.widget.f:
    com.facebook.widget.FacebookFragment this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.facebook.widget.FriendPickerFragment -> com.facebook.widget.FriendPickerFragment:
    java.lang.String userId -> c
    boolean multiSelect -> d
    com.facebook.widget.FriendPickerFragment$FriendPickerType friendPickerType -> e
    java.util.List preSelectedFriendIds -> f
    void setUserId(java.lang.String) -> a
    void setMultiSelect(boolean) -> a
    java.util.List getSelection() -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void setSettingsFromBundle(android.os.Bundle) -> a
    void saveSettingsToBundle(android.os.Bundle) -> b
    com.facebook.widget.PickerFragment$PickerFragmentAdapter createAdapter() -> b
    com.facebook.widget.PickerFragment$LoadingStrategy createLoadingStrategy() -> c
    com.facebook.widget.PickerFragment$SelectionStrategy createSelectionStrategy() -> d
    com.facebook.Request getRequestForLoadData(com.facebook.Session) -> a
    java.lang.String getDefaultTitleText() -> e
    void logAppEvents(boolean) -> b
    void loadData(boolean) -> c
    com.facebook.Request createRequest(java.lang.String,java.util.Set,com.facebook.Session) -> a
    void setFriendPickerSettingsFromBundle(android.os.Bundle) -> c
    com.facebook.widget.FriendPickerFragment$FriendPickerType access$100(com.facebook.widget.FriendPickerFragment) -> a
com.facebook.widget.FriendPickerFragment$1 -> com.facebook.widget.g:
    com.facebook.widget.FriendPickerFragment this$0 -> a
    int getGraphObjectRowLayoutId(com.facebook.model.GraphUser) -> a
    int getDefaultPicture() -> a
    int getGraphObjectRowLayoutId(com.facebook.model.GraphObject) -> a
com.facebook.widget.FriendPickerFragment$FriendPickerType -> com.facebook.widget.FriendPickerFragment$FriendPickerType:
    com.facebook.widget.FriendPickerFragment$FriendPickerType FRIENDS -> a
    com.facebook.widget.FriendPickerFragment$FriendPickerType TAGGABLE_FRIENDS -> b
    com.facebook.widget.FriendPickerFragment$FriendPickerType INVITABLE_FRIENDS -> c
    java.lang.String requestPath -> d
    boolean requestIsCacheable -> e
    com.facebook.widget.FriendPickerFragment$FriendPickerType[] $VALUES -> f
    com.facebook.widget.FriendPickerFragment$FriendPickerType[] values() -> values
    com.facebook.widget.FriendPickerFragment$FriendPickerType valueOf(java.lang.String) -> valueOf
    java.lang.String getRequestPath() -> a
    boolean isCacheable() -> b
com.facebook.widget.FriendPickerFragment$ImmediateLoadingStrategy -> com.facebook.widget.h:
    com.facebook.widget.FriendPickerFragment this$0 -> a
    void onLoadFinished(com.facebook.widget.GraphObjectPagingLoader,com.facebook.widget.SimpleGraphObjectCursor) -> a
    boolean canSkipRoundTripIfCached() -> a
    void followNextLink() -> f
com.facebook.widget.GraphObjectAdapter -> com.facebook.widget.GraphObjectAdapter:
    java.util.Map pendingRequests -> a
    android.view.LayoutInflater inflater -> c
    java.util.List sectionKeys -> d
    java.util.Map graphObjectsBySection -> e
    java.util.Map graphObjectsById -> f
    boolean displaySections -> g
    java.util.List sortFields -> h
    java.lang.String groupByField -> i
    boolean showPicture -> j
    boolean showCheckbox -> k
    com.facebook.widget.GraphObjectAdapter$Filter filter -> l
    com.facebook.widget.GraphObjectAdapter$DataNeededListener dataNeededListener -> m
    com.facebook.widget.GraphObjectCursor cursor -> n
    android.content.Context context -> o
    java.util.Map prefetchedPictureCache -> p
    java.util.ArrayList prefetchedProfilePictureIds -> q
    com.facebook.widget.GraphObjectAdapter$OnErrorListener onErrorListener -> r
    boolean $assertionsDisabled -> b
    void setSortFields(java.util.List) -> a
    void setGroupByField(java.lang.String) -> a
    boolean getShowPicture() -> b
    void setShowPicture(boolean) -> a
    boolean getShowCheckbox() -> c
    void setShowCheckbox(boolean) -> b
    void setDataNeededListener(com.facebook.widget.GraphObjectAdapter$DataNeededListener) -> a
    void setOnErrorListener(com.facebook.widget.GraphObjectAdapter$OnErrorListener) -> a
    boolean changeCursor(com.facebook.widget.GraphObjectCursor) -> a
    void rebuildAndNotify() -> d
    void prioritizeViewRange(int,int,int) -> a
    java.lang.String getSectionKeyOfGraphObject(com.facebook.model.GraphObject) -> b
    java.lang.CharSequence getTitleOfGraphObject(com.facebook.model.GraphObject) -> c
    java.lang.CharSequence getSubTitleOfGraphObject(com.facebook.model.GraphObject) -> d
    java.net.URI getPictureUriOfGraphObject(com.facebook.model.GraphObject) -> e
    android.view.View getSectionHeaderView(java.lang.String,android.view.View,android.view.ViewGroup) -> a
    android.view.View getGraphObjectView(com.facebook.model.GraphObject,android.view.View,android.view.ViewGroup) -> a
    android.view.View getActivityCircleView(android.view.View,android.view.ViewGroup) -> a
    int getGraphObjectRowLayoutId(com.facebook.model.GraphObject) -> a
    int getDefaultPicture() -> a
    android.view.View createGraphObjectView(com.facebook.model.GraphObject) -> f
    void populateGraphObjectView(android.view.View,com.facebook.model.GraphObject) -> a
    java.lang.String getIdOfGraphObject(com.facebook.model.GraphObject) -> g
    boolean filterIncludesItem(com.facebook.model.GraphObject) -> h
    void setFilter(com.facebook.widget.GraphObjectAdapter$Filter) -> a
    boolean isGraphObjectSelected(java.lang.String) -> b
    void updateCheckboxState(android.widget.CheckBox,boolean) -> a
    java.lang.String getPictureFieldSpecifier() -> e
    boolean shouldShowActivityCircleCell() -> f
    void rebuildSections() -> g
    com.facebook.widget.GraphObjectAdapter$SectionAndItem getSectionAndItem(int) -> a
    int getPosition(java.lang.String,com.facebook.model.GraphObject) -> a
    boolean isEmpty() -> isEmpty
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean hasStableIds() -> hasStableIds
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object[] getSections() -> getSections
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.util.List getGraphObjectsById(java.util.Collection) -> a
    void downloadProfilePicture(java.lang.String,java.net.URI,android.widget.ImageView) -> a
    void callOnErrorListener(java.lang.Exception) -> a
    void processImageResponse(com.facebook.internal.ImageResponse,java.lang.String,android.widget.ImageView) -> a
    int compareGraphObjects(com.facebook.model.GraphObject,com.facebook.model.GraphObject,java.util.Collection,java.text.Collator) -> b
    java.util.List access$000(com.facebook.widget.GraphObjectAdapter) -> a
    int access$100(com.facebook.model.GraphObject,com.facebook.model.GraphObject,java.util.Collection,java.text.Collator) -> a
    void access$200(com.facebook.widget.GraphObjectAdapter,com.facebook.internal.ImageResponse,java.lang.String,android.widget.ImageView) -> a
com.facebook.widget.GraphObjectAdapter$1 -> com.facebook.widget.i:
    java.text.Collator val$collator -> a
    com.facebook.widget.GraphObjectAdapter this$0 -> b
    int compare(com.facebook.model.GraphObject,com.facebook.model.GraphObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.facebook.widget.GraphObjectAdapter$2 -> com.facebook.widget.j:
    java.lang.String val$profileId -> a
    android.widget.ImageView val$imageView -> b
    com.facebook.widget.GraphObjectAdapter this$0 -> c
    void onCompleted(com.facebook.internal.ImageResponse) -> a
com.facebook.widget.GraphObjectAdapter$3 -> com.facebook.widget.k:
    int[] $SwitchMap$com$facebook$widget$GraphObjectAdapter$SectionAndItem$Type -> a
com.facebook.widget.GraphObjectAdapter$DataNeededListener -> com.facebook.widget.l:
    void onDataNeeded() -> a
com.facebook.widget.GraphObjectAdapter$Filter -> com.facebook.widget.m:
    boolean includeItem(java.lang.Object) -> a
com.facebook.widget.GraphObjectAdapter$ItemPicture -> com.facebook.widget.n:
    com.facebook.widget.GraphObjectAdapter$ItemPictureData getData() -> a
com.facebook.widget.GraphObjectAdapter$ItemPictureData -> com.facebook.widget.o:
    java.lang.String getUrl() -> a
com.facebook.widget.GraphObjectAdapter$OnErrorListener -> com.facebook.widget.p:
    void onError(com.facebook.widget.GraphObjectAdapter,com.facebook.FacebookException) -> a
com.facebook.widget.GraphObjectAdapter$SectionAndItem -> com.facebook.widget.GraphObjectAdapter$SectionAndItem:
    java.lang.String sectionKey -> a
    com.facebook.model.GraphObject graphObject -> b
    com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type getType() -> a
com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type -> com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type:
    com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type GRAPH_OBJECT -> a
    com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type SECTION_HEADER -> b
    com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type ACTIVITY_CIRCLE -> c
    com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type[] $VALUES -> d
    com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type[] values() -> values
    com.facebook.widget.GraphObjectAdapter$SectionAndItem$Type valueOf(java.lang.String) -> valueOf
com.facebook.widget.GraphObjectCursor -> com.facebook.widget.q:
    boolean areMoreObjectsAvailable() -> a
    int getCount() -> b
    boolean moveToFirst() -> c
    boolean moveToNext() -> d
    com.facebook.model.GraphObject getGraphObject() -> e
    void close() -> f
com.facebook.widget.GraphObjectPagingLoader -> com.facebook.widget.r:
    java.lang.Class graphObjectClass -> i
    boolean skipRoundtripIfCached -> j
    com.facebook.Request originalRequest -> k
    com.facebook.Request currentRequest -> l
    com.facebook.Request nextRequest -> m
    com.facebook.widget.GraphObjectPagingLoader$OnErrorListener onErrorListener -> n
    com.facebook.widget.SimpleGraphObjectCursor cursor -> o
    boolean appendResults -> p
    boolean loading -> q
    void setOnErrorListener(com.facebook.widget.GraphObjectPagingLoader$OnErrorListener) -> a
    com.facebook.widget.SimpleGraphObjectCursor getCursor() -> h
    void clearResults() -> i
    boolean isLoading() -> j
    void startLoading(com.facebook.Request,boolean) -> a
    void refreshOriginalRequest(long) -> a
    void followNextLink() -> k
    void deliverResult(com.facebook.widget.SimpleGraphObjectCursor) -> a
    void onStartLoading() -> c
    void startLoading(com.facebook.Request,boolean,long) -> a
    com.facebook.internal.CacheableRequestBatch putRequestIntoBatch(com.facebook.Request,boolean) -> b
    void requestCompleted(com.facebook.Response) -> a
    void addResults(com.facebook.Response) -> b
    void deliverResult(java.lang.Object) -> a
    void access$000(com.facebook.widget.GraphObjectPagingLoader,com.facebook.Response) -> a
com.facebook.widget.GraphObjectPagingLoader$1 -> com.facebook.widget.s:
    com.facebook.widget.GraphObjectPagingLoader this$0 -> a
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.widget.GraphObjectPagingLoader$2 -> com.facebook.widget.t:
    com.facebook.widget.GraphObjectPagingLoader this$0 -> a
    void onCompleted(com.facebook.Response) -> onCompleted
com.facebook.widget.GraphObjectPagingLoader$3 -> com.facebook.widget.u:
    com.facebook.RequestBatch val$batch -> a
    com.facebook.widget.GraphObjectPagingLoader this$0 -> b
    void run() -> run
com.facebook.widget.GraphObjectPagingLoader$OnErrorListener -> com.facebook.widget.v:
    void onError(com.facebook.FacebookException,com.facebook.widget.GraphObjectPagingLoader) -> a
com.facebook.widget.GraphObjectPagingLoader$PagedResults -> com.facebook.widget.w:
    com.facebook.model.GraphObjectList getData() -> a
com.facebook.widget.LoginButton -> com.facebook.widget.LoginButton:
    java.lang.String TAG -> a
    java.lang.String applicationId -> b
    com.facebook.internal.SessionTracker sessionTracker -> c
    com.facebook.model.GraphUser user -> d
    com.facebook.Session userInfoSession -> e
    boolean confirmLogout -> f
    boolean fetchUserInfo -> g
    java.lang.String loginText -> h
    java.lang.String logoutText -> i
    com.facebook.widget.LoginButton$UserInfoChangedCallback userInfoChangedCallback -> j
    android.support.v4.app.Fragment parentFragment -> k
    com.facebook.widget.LoginButton$LoginButtonProperties properties -> l
    java.lang.String loginLogoutEventName -> m
    android.view.View$OnClickListener listenerCallback -> n
    boolean nuxChecked -> o
    com.facebook.widget.ToolTipPopup$Style nuxStyle -> p
    com.facebook.widget.LoginButton$ToolTipMode nuxMode -> q
    long nuxDisplayTime -> r
    com.facebook.widget.ToolTipPopup nuxPopup -> s
    void setOnErrorListener(com.facebook.widget.LoginButton$OnErrorListener) -> setOnErrorListener
    com.facebook.widget.LoginButton$OnErrorListener getOnErrorListener() -> getOnErrorListener
    void setDefaultAudience(com.facebook.SessionDefaultAudience) -> setDefaultAudience
    com.facebook.SessionDefaultAudience getDefaultAudience() -> getDefaultAudience
    void setReadPermissions(java.util.List) -> setReadPermissions
    void setReadPermissions(java.lang.String[]) -> setReadPermissions
    void setPublishPermissions(java.util.List) -> setPublishPermissions
    void setPublishPermissions(java.lang.String[]) -> setPublishPermissions
    void setLoginBehavior(com.facebook.SessionLoginBehavior) -> setLoginBehavior
    com.facebook.SessionLoginBehavior getLoginBehavior() -> getLoginBehavior
    void setApplicationId(java.lang.String) -> setApplicationId
    com.facebook.widget.LoginButton$UserInfoChangedCallback getUserInfoChangedCallback() -> getUserInfoChangedCallback
    void setUserInfoChangedCallback(com.facebook.widget.LoginButton$UserInfoChangedCallback) -> setUserInfoChangedCallback
    void setSessionStatusCallback(com.facebook.Session$StatusCallback) -> setSessionStatusCallback
    com.facebook.Session$StatusCallback getSessionStatusCallback() -> getSessionStatusCallback
    void setToolTipStyle(com.facebook.widget.ToolTipPopup$Style) -> setToolTipStyle
    void setToolTipMode(com.facebook.widget.LoginButton$ToolTipMode) -> setToolTipMode
    com.facebook.widget.LoginButton$ToolTipMode getToolTipMode() -> getToolTipMode
    void setToolTipDisplayTime(long) -> setToolTipDisplayTime
    long getToolTipDisplayTime() -> getToolTipDisplayTime
    void dismissToolTip() -> a
    void setSession(com.facebook.Session) -> setSession
    void onFinishInflate() -> onFinishInflate
    void finishInit() -> c
    void setFragment(android.support.v4.app.Fragment) -> setFragment
    void onAttachedToWindow() -> onAttachedToWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void showNuxPerSettings(com.facebook.internal.Utility$FetchedAppSettings) -> a
    void displayNux(java.lang.String) -> a
    void checkNuxSettings() -> d
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    java.util.List getPermissions() -> getPermissions
    void setProperties(com.facebook.widget.LoginButton$LoginButtonProperties) -> setProperties
    void setLoginLogoutEventName(java.lang.String) -> setLoginLogoutEventName
    void parseAttributes(android.util.AttributeSet) -> a
    void setButtonText() -> e
    boolean initializeActiveSessionWithCachedToken(android.content.Context) -> a
    void fetchUserInfo() -> f
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void handleError(java.lang.Exception) -> a
    java.lang.String access$000() -> b
    void access$300(com.facebook.widget.LoginButton,com.facebook.internal.Utility$FetchedAppSettings) -> a
    com.facebook.internal.SessionTracker access$400(com.facebook.widget.LoginButton) -> a
    com.facebook.model.GraphUser access$502(com.facebook.widget.LoginButton,com.facebook.model.GraphUser) -> a
    com.facebook.widget.LoginButton$UserInfoChangedCallback access$600(com.facebook.widget.LoginButton) -> b
    com.facebook.model.GraphUser access$500(com.facebook.widget.LoginButton) -> c
    boolean access$700(com.facebook.widget.LoginButton) -> d
    java.lang.String access$800(com.facebook.widget.LoginButton) -> e
    android.support.v4.app.Fragment access$900(com.facebook.widget.LoginButton) -> f
    com.facebook.widget.LoginButton$LoginButtonProperties access$1000(com.facebook.widget.LoginButton) -> g
    java.lang.String access$1500(com.facebook.widget.LoginButton) -> h
    android.view.View$OnClickListener access$1600(com.facebook.widget.LoginButton) -> i
    void access$1700(com.facebook.widget.LoginButton) -> j
    void access$1800(com.facebook.widget.LoginButton) -> k
com.facebook.widget.LoginButton$1 -> com.facebook.widget.x:
    java.lang.String val$appId -> a
    com.facebook.widget.LoginButton this$0 -> b
    com.facebook.internal.Utility$FetchedAppSettings doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.facebook.internal.Utility$FetchedAppSettings) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.widget.LoginButton$2 -> com.facebook.widget.y:
    com.facebook.Session val$currentSession -> a
    com.facebook.widget.LoginButton this$0 -> b
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.facebook.widget.LoginButton$LoginButtonCallback -> com.facebook.widget.z:
    com.facebook.widget.LoginButton this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.facebook.widget.LoginButton$LoginButtonProperties -> com.facebook.widget.aa:
    com.facebook.SessionDefaultAudience defaultAudience -> a
    java.util.List permissions -> b
    com.facebook.internal.SessionAuthorizationType authorizationType -> c
    com.facebook.widget.LoginButton$OnErrorListener onErrorListener -> d
    com.facebook.SessionLoginBehavior loginBehavior -> e
    com.facebook.Session$StatusCallback sessionStatusCallback -> f
    void setOnErrorListener(com.facebook.widget.LoginButton$OnErrorListener) -> a
    com.facebook.widget.LoginButton$OnErrorListener getOnErrorListener() -> a
    void setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.SessionDefaultAudience getDefaultAudience() -> b
    void setReadPermissions(java.util.List,com.facebook.Session) -> a
    void setPublishPermissions(java.util.List,com.facebook.Session) -> b
    boolean validatePermissions(java.util.List,com.facebook.internal.SessionAuthorizationType,com.facebook.Session) -> a
    java.util.List getPermissions() -> c
    void setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
    com.facebook.SessionLoginBehavior getLoginBehavior() -> d
    void setSessionStatusCallback(com.facebook.Session$StatusCallback) -> a
    com.facebook.Session$StatusCallback getSessionStatusCallback() -> e
    com.facebook.SessionDefaultAudience access$1100(com.facebook.widget.LoginButton$LoginButtonProperties) -> a
    java.util.List access$1200(com.facebook.widget.LoginButton$LoginButtonProperties) -> b
    com.facebook.SessionLoginBehavior access$1300(com.facebook.widget.LoginButton$LoginButtonProperties) -> c
    com.facebook.internal.SessionAuthorizationType access$1400(com.facebook.widget.LoginButton$LoginButtonProperties) -> d
    com.facebook.Session$StatusCallback access$1900(com.facebook.widget.LoginButton$LoginButtonProperties) -> e
    com.facebook.widget.LoginButton$OnErrorListener access$2000(com.facebook.widget.LoginButton$LoginButtonProperties) -> f
com.facebook.widget.LoginButton$LoginClickListener -> com.facebook.widget.ab:
    com.facebook.widget.LoginButton this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.LoginButton$LoginClickListener$1 -> com.facebook.widget.ac:
    com.facebook.Session val$openSession -> a
    com.facebook.widget.LoginButton$LoginClickListener this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.facebook.widget.LoginButton$OnErrorListener -> com.facebook.widget.ad:
    void onError(com.facebook.FacebookException) -> a
com.facebook.widget.LoginButton$ToolTipMode -> com.facebook.widget.LoginButton$ToolTipMode:
    com.facebook.widget.LoginButton$ToolTipMode DEFAULT -> a
    com.facebook.widget.LoginButton$ToolTipMode DISPLAY_ALWAYS -> b
    com.facebook.widget.LoginButton$ToolTipMode NEVER_DISPLAY -> c
    com.facebook.widget.LoginButton$ToolTipMode[] $VALUES -> d
    com.facebook.widget.LoginButton$ToolTipMode[] values() -> values
    com.facebook.widget.LoginButton$ToolTipMode valueOf(java.lang.String) -> valueOf
com.facebook.widget.LoginButton$UserInfoChangedCallback -> com.facebook.widget.ae:
    void onUserInfoFetched(com.facebook.model.GraphUser) -> a
com.facebook.widget.PickerFragment -> com.facebook.widget.PickerFragment:
    int layout -> c
    com.facebook.widget.PickerFragment$OnErrorListener onErrorListener -> d
    com.facebook.widget.PickerFragment$OnDataChangedListener onDataChangedListener -> e
    com.facebook.widget.PickerFragment$OnSelectionChangedListener onSelectionChangedListener -> f
    com.facebook.widget.PickerFragment$OnDoneButtonClickedListener onDoneButtonClickedListener -> g
    com.facebook.widget.PickerFragment$GraphObjectFilter filter -> h
    boolean showPictures -> i
    boolean showTitleBar -> j
    android.widget.ListView listView -> k
    java.util.HashSet extraFields -> a
    com.facebook.widget.GraphObjectAdapter adapter -> b
    java.lang.Class graphObjectClass -> l
    com.facebook.widget.PickerFragment$LoadingStrategy loadingStrategy -> m
    com.facebook.widget.PickerFragment$SelectionStrategy selectionStrategy -> n
    android.widget.ProgressBar activityCircle -> o
    com.facebook.internal.SessionTracker sessionTracker -> p
    java.lang.String titleText -> q
    java.lang.String doneButtonText -> r
    android.widget.TextView titleTextView -> s
    android.widget.Button doneButton -> t
    android.graphics.drawable.Drawable titleBarBackground -> u
    android.graphics.drawable.Drawable doneButtonBackground -> v
    boolean appEventsLogged -> w
    android.widget.AbsListView$OnScrollListener onScrollListener -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onDetach() -> onDetach
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void setArguments(android.os.Bundle) -> setArguments
    com.facebook.widget.PickerFragment$OnErrorListener getOnErrorListener() -> f
    com.facebook.Session getSession() -> g
    boolean getShowPictures() -> h
    void setShowPictures(boolean) -> d
    void setExtraFields(java.util.Collection) -> a
    java.lang.String getTitleText() -> i
    java.lang.String getDoneButtonText() -> j
    void loadData(boolean) -> c
    void setSettingsFromBundle(android.os.Bundle) -> a
    void setupViews(android.view.ViewGroup) -> a
    boolean filterIncludesItem(com.facebook.model.GraphObject) -> a
    java.util.List getSelectedGraphObjects() -> k
    void setSelectedGraphObjects(java.util.List) -> a
    void saveSettingsToBundle(android.os.Bundle) -> b
    com.facebook.Request getRequestForLoadData(com.facebook.Session) -> a
    com.facebook.widget.PickerFragment$PickerFragmentAdapter createAdapter() -> b
    com.facebook.widget.PickerFragment$LoadingStrategy createLoadingStrategy() -> c
    com.facebook.widget.PickerFragment$SelectionStrategy createSelectionStrategy() -> d
    void onLoadingData() -> l
    java.lang.String getDefaultTitleText() -> e
    java.lang.String getDefaultDoneButtonText() -> m
    void displayActivityCircle() -> n
    void layoutActivityCircle() -> o
    void hideActivityCircle() -> p
    void setSelectionStrategy(com.facebook.widget.PickerFragment$SelectionStrategy) -> a
    void logAppEvents(boolean) -> b
    void setAlpha(android.view.View,float) -> a
    void setPickerFragmentSettingsFromBundle(android.os.Bundle) -> c
    void inflateTitleBar(android.view.ViewGroup) -> b
    void onListItemClick(android.widget.ListView,android.view.View,int) -> a
    void loadDataSkippingRoundTripIfCached() -> a
    void clearResults() -> q
    void updateAdapter(com.facebook.widget.SimpleGraphObjectCursor) -> a
    void reprioritizeDownloads() -> r
    void access$000(com.facebook.widget.PickerFragment,android.widget.ListView,android.view.View,int) -> a
    void access$100(com.facebook.widget.PickerFragment) -> a
    boolean access$202(com.facebook.widget.PickerFragment,boolean) -> a
    com.facebook.widget.PickerFragment$OnDoneButtonClickedListener access$300(com.facebook.widget.PickerFragment) -> b
    void access$400(com.facebook.widget.PickerFragment) -> c
    com.facebook.widget.PickerFragment$OnErrorListener access$500(com.facebook.widget.PickerFragment) -> d
    java.lang.Class access$600(com.facebook.widget.PickerFragment) -> e
    com.facebook.widget.PickerFragment$SelectionStrategy access$700(com.facebook.widget.PickerFragment) -> f
com.facebook.widget.PickerFragment$1 -> com.facebook.widget.af:
    com.facebook.widget.PickerFragment this$0 -> a
    boolean includeItem(com.facebook.model.GraphObject) -> a
    boolean includeItem(java.lang.Object) -> a
com.facebook.widget.PickerFragment$2 -> com.facebook.widget.ag:
    com.facebook.widget.PickerFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.facebook.widget.PickerFragment$3 -> com.facebook.widget.ah:
    com.facebook.widget.PickerFragment this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.facebook.widget.PickerFragment$4 -> com.facebook.widget.ai:
    com.facebook.widget.PickerFragment this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.facebook.widget.PickerFragment$5 -> com.facebook.widget.aj:
    com.facebook.widget.PickerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.PickerFragment$6 -> com.facebook.widget.ak:
    com.facebook.widget.PickerFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.facebook.widget.PickerFragment$GraphObjectFilter -> com.facebook.widget.al:
    boolean includeItem(java.lang.Object) -> a
com.facebook.widget.PickerFragment$LoadingStrategy -> com.facebook.widget.am:
    com.facebook.widget.GraphObjectPagingLoader loader -> b
    com.facebook.widget.GraphObjectAdapter adapter -> c
    com.facebook.widget.PickerFragment this$0 -> d
    void attach(com.facebook.widget.GraphObjectAdapter) -> a
    void detach() -> b
    void clearResults() -> c
    void startLoading(com.facebook.Request) -> a
    boolean isDataPresentOrLoading() -> d
    com.facebook.widget.GraphObjectPagingLoader onCreateLoader() -> e
    void onStartLoading(com.facebook.widget.GraphObjectPagingLoader,com.facebook.Request) -> a
    void onLoadReset(com.facebook.widget.GraphObjectPagingLoader) -> a
    void onLoadFinished(com.facebook.widget.GraphObjectPagingLoader,com.facebook.widget.SimpleGraphObjectCursor) -> a
    boolean canSkipRoundTripIfCached() -> a
com.facebook.widget.PickerFragment$LoadingStrategy$1 -> com.facebook.widget.an:
    com.facebook.widget.PickerFragment$LoadingStrategy this$1 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,com.facebook.widget.SimpleGraphObjectCursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.facebook.widget.PickerFragment$LoadingStrategy$2 -> com.facebook.widget.ao:
    com.facebook.widget.PickerFragment$LoadingStrategy this$1 -> a
    void onError(com.facebook.FacebookException,com.facebook.widget.GraphObjectPagingLoader) -> a
com.facebook.widget.PickerFragment$LoadingStrategy$3 -> com.facebook.widget.ap:
    com.facebook.widget.PickerFragment$LoadingStrategy this$1 -> a
    void onError(com.facebook.widget.GraphObjectAdapter,com.facebook.FacebookException) -> a
com.facebook.widget.PickerFragment$MultiSelectionStrategy -> com.facebook.widget.aq:
    java.util.Set selectedIds -> c
    com.facebook.widget.PickerFragment this$0 -> a
    java.util.Collection getSelectedIds() -> a
    boolean isSelected(java.lang.String) -> a
    void toggleSelection(java.lang.String) -> b
    void saveSelectionToBundle(android.os.Bundle,java.lang.String) -> a
    void readSelectionFromBundle(android.os.Bundle,java.lang.String) -> b
    void clear() -> b
    boolean isEmpty() -> c
    boolean shouldShowCheckBoxIfUnselected() -> d
com.facebook.widget.PickerFragment$OnDataChangedListener -> com.facebook.widget.ar:
    void onDataChanged(com.facebook.widget.PickerFragment) -> a
com.facebook.widget.PickerFragment$OnDoneButtonClickedListener -> com.facebook.widget.as:
    void onDoneButtonClicked(com.facebook.widget.PickerFragment) -> a
com.facebook.widget.PickerFragment$OnErrorListener -> com.facebook.widget.at:
    void onError(com.facebook.widget.PickerFragment,com.facebook.FacebookException) -> a
com.facebook.widget.PickerFragment$OnSelectionChangedListener -> com.facebook.widget.au:
    void onSelectionChanged(com.facebook.widget.PickerFragment) -> a
com.facebook.widget.PickerFragment$PickerFragmentAdapter -> com.facebook.widget.av:
    com.facebook.widget.PickerFragment this$0 -> c
    boolean isGraphObjectSelected(java.lang.String) -> b
    void updateCheckboxState(android.widget.CheckBox,boolean) -> a
com.facebook.widget.PickerFragment$SelectionStrategy -> com.facebook.widget.aw:
    com.facebook.widget.PickerFragment this$0 -> b
    boolean isSelected(java.lang.String) -> a
    void toggleSelection(java.lang.String) -> b
    java.util.Collection getSelectedIds() -> a
    void clear() -> b
    boolean isEmpty() -> c
    boolean shouldShowCheckBoxIfUnselected() -> d
    void saveSelectionToBundle(android.os.Bundle,java.lang.String) -> a
    void readSelectionFromBundle(android.os.Bundle,java.lang.String) -> b
com.facebook.widget.PickerFragment$SingleSelectionStrategy -> com.facebook.widget.ax:
    java.lang.String selectedId -> c
    com.facebook.widget.PickerFragment this$0 -> a
    java.util.Collection getSelectedIds() -> a
    boolean isSelected(java.lang.String) -> a
    void toggleSelection(java.lang.String) -> b
    void saveSelectionToBundle(android.os.Bundle,java.lang.String) -> a
    void readSelectionFromBundle(android.os.Bundle,java.lang.String) -> b
    void clear() -> b
    boolean isEmpty() -> c
    boolean shouldShowCheckBoxIfUnselected() -> d
com.facebook.widget.PlacePickerFragment -> com.facebook.widget.PlacePickerFragment:
    android.location.Location location -> c
    int radiusInMeters -> d
    int resultsLimit -> e
    java.lang.String searchText -> f
    java.util.Timer searchTextTimer -> g
    boolean hasSearchTextChangedSinceLastQuery -> h
    boolean showSearchBox -> i
    android.widget.EditText searchBox -> j
    void setLocation(android.location.Location) -> a
    void setRadiusInMeters(int) -> a
    void setResultsLimit(int) -> b
    void setSearchText(java.lang.String) -> a
    void onSearchBoxTextChanged(java.lang.String,boolean) -> a
    com.facebook.model.GraphPlace getSelection() -> a
    void setSettingsFromBundle(android.os.Bundle) -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void setupViews(android.view.ViewGroup) -> a
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void saveSettingsToBundle(android.os.Bundle) -> b
    void onLoadingData() -> l
    com.facebook.Request getRequestForLoadData(com.facebook.Session) -> a
    java.lang.String getDefaultTitleText() -> e
    void logAppEvents(boolean) -> b
    com.facebook.widget.PickerFragment$PickerFragmentAdapter createAdapter() -> b
    com.facebook.widget.PickerFragment$LoadingStrategy createLoadingStrategy() -> c
    com.facebook.widget.PickerFragment$SelectionStrategy createSelectionStrategy() -> d
    com.facebook.Request createRequest(android.location.Location,int,int,java.lang.String,java.util.Set,com.facebook.Session) -> a
    void setPlacePickerSettingsFromBundle(android.os.Bundle) -> c
    java.util.Timer createSearchTextTimer() -> q
    void onSearchTextTimerTriggered() -> r
    void access$200(com.facebook.widget.PlacePickerFragment) -> a
com.facebook.widget.PlacePickerFragment$1 -> com.facebook.widget.ay:
    com.facebook.widget.PlacePickerFragment this$0 -> a
    java.lang.CharSequence getSubTitleOfGraphObject(com.facebook.model.GraphPlace) -> a
    int getGraphObjectRowLayoutId(com.facebook.model.GraphPlace) -> b
    int getDefaultPicture() -> a
    int getGraphObjectRowLayoutId(com.facebook.model.GraphObject) -> a
    java.lang.CharSequence getSubTitleOfGraphObject(com.facebook.model.GraphObject) -> d
com.facebook.widget.PlacePickerFragment$2 -> com.facebook.widget.az:
    com.facebook.widget.PlacePickerFragment this$0 -> a
    void run() -> run
com.facebook.widget.PlacePickerFragment$3 -> com.facebook.widget.ba:
    com.facebook.widget.PlacePickerFragment this$0 -> a
    void run() -> run
com.facebook.widget.PlacePickerFragment$AsNeededLoadingStrategy -> com.facebook.widget.bb:
    com.facebook.widget.PlacePickerFragment this$0 -> a
    void attach(com.facebook.widget.GraphObjectAdapter) -> a
    void onLoadFinished(com.facebook.widget.GraphObjectPagingLoader,com.facebook.widget.SimpleGraphObjectCursor) -> a
com.facebook.widget.PlacePickerFragment$AsNeededLoadingStrategy$1 -> com.facebook.widget.bc:
    com.facebook.widget.PlacePickerFragment$AsNeededLoadingStrategy this$1 -> a
    void onDataNeeded() -> a
com.facebook.widget.PlacePickerFragment$SearchTextWatcher -> com.facebook.widget.bd:
    com.facebook.widget.PlacePickerFragment this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.facebook.widget.ProfilePictureView -> com.facebook.widget.ProfilePictureView:
    java.lang.String TAG -> a
    java.lang.String profileId -> b
    int queryHeight -> c
    int queryWidth -> d
    boolean isCropped -> e
    android.graphics.Bitmap imageContents -> f
    android.widget.ImageView image -> g
    int presetSizeType -> h
    com.facebook.internal.ImageRequest lastRequest -> i
    com.facebook.widget.ProfilePictureView$OnErrorListener onErrorListener -> j
    android.graphics.Bitmap customizedDefaultProfilePicture -> k
    int getPresetSize() -> getPresetSize
    void setPresetSize(int) -> setPresetSize
    boolean isCropped() -> a
    void setCropped(boolean) -> setCropped
    java.lang.String getProfileId() -> getProfileId
    void setProfileId(java.lang.String) -> setProfileId
    com.facebook.widget.ProfilePictureView$OnErrorListener getOnErrorListener() -> getOnErrorListener
    void setOnErrorListener(com.facebook.widget.ProfilePictureView$OnErrorListener) -> setOnErrorListener
    void setDefaultProfilePicture(android.graphics.Bitmap) -> setDefaultProfilePicture
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void initialize(android.content.Context) -> a
    void parseAttributes(android.util.AttributeSet) -> a
    void refreshImage(boolean) -> a
    void setBlankProfilePicture() -> b
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void sendImageRequest(boolean) -> b
    void processResponse(com.facebook.internal.ImageResponse) -> a
    boolean updateImageQueryParameters() -> c
    int getPresetSizeInPixels(boolean) -> c
    void access$000(com.facebook.widget.ProfilePictureView,com.facebook.internal.ImageResponse) -> a
com.facebook.widget.ProfilePictureView$1 -> com.facebook.widget.be:
    com.facebook.widget.ProfilePictureView this$0 -> a
    void onCompleted(com.facebook.internal.ImageResponse) -> a
com.facebook.widget.ProfilePictureView$OnErrorListener -> com.facebook.widget.bf:
    void onError(com.facebook.FacebookException) -> a
com.facebook.widget.SimpleGraphObjectCursor -> com.facebook.widget.bg:
    int pos -> a
    boolean closed -> b
    java.util.ArrayList graphObjects -> c
    boolean moreObjectsAvailable -> d
    boolean fromCache -> e
    void addGraphObjects(java.util.Collection,boolean) -> a
    boolean isFromCache() -> g
    void setFromCache(boolean) -> a
    boolean areMoreObjectsAvailable() -> a
    void setMoreObjectsAvailable(boolean) -> b
    int getCount() -> b
    boolean moveToPosition(int) -> a
    boolean moveToFirst() -> c
    boolean moveToNext() -> d
    com.facebook.model.GraphObject getGraphObject() -> e
    void close() -> f
    boolean isClosed() -> h
com.facebook.widget.ToolTipPopup -> com.facebook.widget.ToolTipPopup:
    java.lang.String mText -> a
    java.lang.ref.WeakReference mAnchorViewRef -> b
    android.content.Context mContext -> c
    com.facebook.widget.ToolTipPopup$PopupContentView mPopupContent -> d
    android.widget.PopupWindow mPopupWindow -> e
    com.facebook.widget.ToolTipPopup$Style mStyle -> f
    long mNuxDisplayTime -> g
    android.view.ViewTreeObserver$OnScrollChangedListener mScrollListener -> h
    void setStyle(com.facebook.widget.ToolTipPopup$Style) -> a
    void show() -> a
    void setNuxDisplayTime(long) -> a
    void updateArrows() -> c
    void dismiss() -> b
    void registerObserver() -> d
    void unregisterObserver() -> e
    java.lang.ref.WeakReference access$000(com.facebook.widget.ToolTipPopup) -> a
    android.widget.PopupWindow access$100(com.facebook.widget.ToolTipPopup) -> b
    com.facebook.widget.ToolTipPopup$PopupContentView access$200(com.facebook.widget.ToolTipPopup) -> c
com.facebook.widget.ToolTipPopup$1 -> com.facebook.widget.bh:
    com.facebook.widget.ToolTipPopup this$0 -> a
    void onScrollChanged() -> onScrollChanged
com.facebook.widget.ToolTipPopup$2 -> com.facebook.widget.bi:
    com.facebook.widget.ToolTipPopup this$0 -> a
    void run() -> run
com.facebook.widget.ToolTipPopup$3 -> com.facebook.widget.bj:
    com.facebook.widget.ToolTipPopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.ToolTipPopup$PopupContentView -> com.facebook.widget.bk:
    android.widget.ImageView topArrow -> b
    android.widget.ImageView bottomArrow -> c
    android.view.View bodyFrame -> d
    android.widget.ImageView xOut -> e
    com.facebook.widget.ToolTipPopup this$0 -> a
    void init() -> c
    void showTopArrow() -> a
    void showBottomArrow() -> b
    void onMeasure(int,int) -> onMeasure
    android.view.View access$300(com.facebook.widget.ToolTipPopup$PopupContentView) -> a
    android.widget.ImageView access$400(com.facebook.widget.ToolTipPopup$PopupContentView) -> b
    android.widget.ImageView access$500(com.facebook.widget.ToolTipPopup$PopupContentView) -> c
    android.widget.ImageView access$600(com.facebook.widget.ToolTipPopup$PopupContentView) -> d
com.facebook.widget.ToolTipPopup$Style -> com.facebook.widget.ToolTipPopup$Style:
    com.facebook.widget.ToolTipPopup$Style BLUE -> a
    com.facebook.widget.ToolTipPopup$Style BLACK -> b
    com.facebook.widget.ToolTipPopup$Style[] $VALUES -> c
    com.facebook.widget.ToolTipPopup$Style[] values() -> values
    com.facebook.widget.ToolTipPopup$Style valueOf(java.lang.String) -> valueOf
com.facebook.widget.UserSettingsFragment -> com.facebook.widget.UserSettingsFragment:
    java.lang.String REQUEST_FIELDS -> a
    com.facebook.widget.LoginButton loginButton -> b
    com.facebook.widget.LoginButton$LoginButtonProperties loginButtonProperties -> c
    android.widget.TextView connectedStateLabel -> d
    com.facebook.model.GraphUser user -> e
    com.facebook.Session userInfoSession -> f
    android.graphics.drawable.Drawable userProfilePic -> g
    java.lang.String userProfilePicID -> h
    com.facebook.Session$StatusCallback sessionStatusCallback -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSessionStateChange(com.facebook.SessionState,java.lang.Exception) -> a
    void fetchUserInfo() -> c
    void updateUI() -> d
    com.facebook.internal.ImageRequest getImageRequest() -> e
    void processImageResponse(java.lang.String,com.facebook.internal.ImageResponse) -> a
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    com.facebook.model.GraphUser access$002(com.facebook.widget.UserSettingsFragment,com.facebook.model.GraphUser) -> a
    void access$100(com.facebook.widget.UserSettingsFragment) -> a
    com.facebook.widget.LoginButton access$200(com.facebook.widget.UserSettingsFragment) -> b
    com.facebook.model.GraphUser access$000(com.facebook.widget.UserSettingsFragment) -> c
    void access$300(com.facebook.widget.UserSettingsFragment,java.lang.String,com.facebook.internal.ImageResponse) -> a
com.facebook.widget.UserSettingsFragment$1 -> com.facebook.widget.bl:
    com.facebook.Session val$currentSession -> a
    com.facebook.widget.UserSettingsFragment this$0 -> b
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.facebook.widget.UserSettingsFragment$2 -> com.facebook.widget.bm:
    com.facebook.widget.UserSettingsFragment this$0 -> a
    void onCompleted(com.facebook.internal.ImageResponse) -> a
com.facebook.widget.WebDialog -> com.facebook.widget.bn:
    java.lang.String url -> a
    com.facebook.widget.WebDialog$OnCompleteListener onCompleteListener -> b
    android.webkit.WebView webView -> c
    android.app.ProgressDialog spinner -> d
    android.widget.ImageView crossImageView -> e
    android.widget.FrameLayout contentFrameLayout -> f
    boolean listenerCalled -> g
    boolean isDetached -> h
    void dismiss() -> dismiss
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onCreate(android.os.Bundle) -> onCreate
    void calculateSize() -> a
    int getScaledSize(int,float,int,int) -> a
    void sendSuccessToListener(android.os.Bundle) -> a
    void sendErrorToListener(java.lang.Throwable) -> a
    void sendCancelToListener() -> b
    void createCrossImage() -> c
    void setUpWebView(int) -> a
    void access$000(com.facebook.widget.WebDialog) -> a
    void access$200(com.facebook.widget.WebDialog,android.os.Bundle) -> a
    void access$300(com.facebook.widget.WebDialog,java.lang.Throwable) -> a
    boolean access$400(com.facebook.widget.WebDialog) -> b
    android.app.ProgressDialog access$500(com.facebook.widget.WebDialog) -> c
    android.widget.FrameLayout access$600(com.facebook.widget.WebDialog) -> d
    android.webkit.WebView access$700(com.facebook.widget.WebDialog) -> e
    android.widget.ImageView access$800(com.facebook.widget.WebDialog) -> f
com.facebook.widget.WebDialog$1 -> com.facebook.widget.bo:
    com.facebook.widget.WebDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.widget.WebDialog$2 -> com.facebook.widget.bp:
    com.facebook.widget.WebDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.widget.WebDialog$3 -> com.facebook.widget.bq:
    com.facebook.widget.WebDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.WebDialog$Builder -> com.facebook.widget.br:
    com.facebook.widget.WebDialog build() -> a
com.facebook.widget.WebDialog$BuilderBase -> com.facebook.widget.bs:
    android.content.Context context -> a
    com.facebook.Session session -> b
    java.lang.String applicationId -> c
    java.lang.String action -> d
    int theme -> e
    com.facebook.widget.WebDialog$OnCompleteListener listener -> f
    android.os.Bundle parameters -> g
    com.facebook.widget.WebDialog$BuilderBase setOnCompleteListener(com.facebook.widget.WebDialog$OnCompleteListener) -> a
    com.facebook.widget.WebDialog build() -> a
    java.lang.String getApplicationId() -> b
    android.content.Context getContext() -> c
    int getTheme() -> d
    android.os.Bundle getParameters() -> e
    com.facebook.widget.WebDialog$OnCompleteListener getListener() -> f
    void finishInit(android.content.Context,java.lang.String,android.os.Bundle) -> a
com.facebook.widget.WebDialog$DialogWebViewClient -> com.facebook.widget.bt:
    com.facebook.widget.WebDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.facebook.widget.WebDialog$OnCompleteListener -> com.facebook.widget.bu:
    void onComplete(android.os.Bundle,com.facebook.FacebookException) -> a
com.flurry.android.FlurryAgent -> com.flurry.android.a:
    java.lang.String a -> a
    int getAgentVersion() -> a
    void onStartSession(android.content.Context,java.lang.String) -> a
    void onEndSession(android.content.Context) -> a
    void logEvent(java.lang.String) -> a
    void logEvent(java.lang.String,java.util.Map) -> a
    void onError(java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.flurry.android.InstallReceiver -> com.flurry.android.InstallReceiver:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.flurry.sdk.bx -> com.flurry.sdk.a:
    java.lang.String a -> a
    com.flurry.sdk.bx b -> b
    java.lang.String c -> c
    boolean d -> d
    com.flurry.sdk.cl e -> e
    java.util.Map f -> f
    com.flurry.sdk.cd g -> g
    void p() -> g
    void a(java.lang.String,java.lang.Object) -> a
    com.flurry.sdk.bx a() -> a
    int b() -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context) -> a
    void q() -> h
    java.util.Map b(android.content.Context) -> b
    void a(com.flurry.sdk.cl) -> a
    com.flurry.sdk.cl h() -> c
    void a(java.lang.String) -> a
    void a(java.lang.String,java.util.Map) -> a
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    int m() -> d
    android.location.Location n() -> e
    com.flurry.sdk.cd o() -> f
    void b(boolean) -> a
    void d(java.lang.String) -> b
com.flurry.sdk.bx$a -> com.flurry.sdk.b:
    int a -> a
com.flurry.sdk.by -> com.flurry.sdk.c:
    java.lang.String b -> b
    com.flurry.sdk.bz c -> c
    java.io.File d -> d
    java.lang.String e -> e
    boolean a -> a
    void a() -> a
    java.util.Map a(boolean) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b() -> b
    void c() -> c
com.flurry.sdk.bz -> com.flurry.sdk.d:
    java.lang.String a -> a
    java.util.Map a(java.lang.String) -> a
com.flurry.sdk.ca -> com.flurry.sdk.e:
    int a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.Throwable f -> f
    int a() -> a
    byte[] b() -> b
    java.lang.String c() -> c
com.flurry.sdk.cb -> com.flurry.sdk.f:
    int a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    long d -> d
    boolean e -> e
    boolean f -> f
    long g -> g
    boolean a() -> a
    boolean b() -> b
    void a(long) -> a
    int d() -> c
    byte[] e() -> d
com.flurry.sdk.cc -> com.flurry.sdk.g:
    java.lang.String a -> a
    byte[] b -> b
    byte[] a() -> a
com.flurry.sdk.cd -> com.flurry.sdk.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean j -> j
    void b() -> g
    void a(java.lang.String,java.lang.Object) -> a
    void b(java.lang.String) -> b
    java.lang.String a() -> a
    void a(byte[],java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int) -> a
com.flurry.sdk.cd$1 -> com.flurry.sdk.i:
    com.flurry.sdk.cd a -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.flurry.sdk.cd$1$1 -> com.flurry.sdk.j:
    int a -> a
    com.flurry.sdk.cd$1 b -> b
    void run() -> run
com.flurry.sdk.cd$2 -> com.flurry.sdk.k:
    int a -> a
    com.flurry.sdk.cd b -> b
    void run() -> run
com.flurry.sdk.ce -> com.flurry.sdk.l:
    java.lang.String g -> i
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    byte[] e -> e
    com.flurry.sdk.ch f -> f
    void a() -> a
com.flurry.sdk.cf -> com.flurry.sdk.m:
    java.lang.String d -> d
    java.util.Set e -> e
    java.util.concurrent.ExecutorService f -> f
    java.util.concurrent.ExecutorService g -> g
    com.flurry.sdk.ci h -> h
    java.lang.String i -> i
    void a(java.lang.String) -> a
    void b(boolean) -> a
    void b(byte[],java.lang.String,java.lang.String) -> b
    void a(byte[],java.lang.String,java.lang.String,com.flurry.sdk.cf$a) -> a
    int c() -> b
    void c(byte[],java.lang.String,java.lang.String) -> c
    void d() -> c
    void a(com.flurry.sdk.cf$a) -> a
    void a(byte[],java.lang.String,java.lang.String) -> a
    boolean e() -> d
    void f() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String d(byte[],java.lang.String,java.lang.String) -> d
    void g() -> f
    void a(java.lang.String,java.lang.String,int) -> a
    void b(java.lang.String,java.lang.String) -> b
com.flurry.sdk.cf$1 -> com.flurry.sdk.n:
    java.lang.String a -> a
    com.flurry.sdk.cf b -> b
    void run() -> run
com.flurry.sdk.cf$2 -> com.flurry.sdk.o:
    byte[] a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.flurry.sdk.cf d -> d
    void run() -> run
com.flurry.sdk.cf$3 -> com.flurry.sdk.p:
    com.flurry.sdk.cf$a a -> a
    com.flurry.sdk.cf b -> b
    void run() -> run
com.flurry.sdk.cf$4 -> com.flurry.sdk.q:
    java.lang.String a -> a
    java.lang.String b -> b
    com.flurry.sdk.cf c -> c
    void run() -> run
com.flurry.sdk.cf$5 -> com.flurry.sdk.r:
    java.lang.String a -> a
    com.flurry.sdk.cf b -> b
    void run() -> run
com.flurry.sdk.cf$a -> com.flurry.sdk.s:
    void a() -> a
com.flurry.sdk.cg -> com.flurry.sdk.t:
    java.lang.String d -> d
    java.lang.String a -> a
    long b -> b
    int c -> c
    java.io.File e -> e
    java.lang.String a() -> a
    boolean a(byte[]) -> a
    byte[] b() -> b
    boolean c() -> c
com.flurry.sdk.ch -> com.flurry.sdk.u:
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.flurry.sdk.ci -> com.flurry.sdk.v:
    java.lang.String d -> d
    java.lang.Integer a -> a
    java.lang.String b -> b
    java.util.LinkedHashMap c -> c
    void a(java.lang.String) -> a
    void c() -> c
    void a(com.flurry.sdk.cg,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    java.util.List a() -> a
    java.util.List c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    boolean a(java.io.File) -> a
    void b() -> b
    java.util.List e(java.lang.String) -> e
    boolean a(java.lang.String,java.util.List) -> a
com.flurry.sdk.cj -> com.flurry.sdk.w:
    java.lang.String b -> b
    byte[] a -> a
    byte[] a() -> a
    double a(double) -> a
com.flurry.sdk.ck -> com.flurry.sdk.x:
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    android.location.Location i -> i
    int j -> j
    byte k -> k
    java.lang.Long l -> l
    java.util.Map m -> m
    java.util.List n -> n
    boolean o -> o
    int p -> p
    java.util.List q -> q
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(long) -> a
    long b() -> b
    void b(long) -> b
    long c() -> c
    void c(long) -> c
    long d() -> d
    void b(java.lang.String) -> b
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void a(int) -> a
    int g() -> g
    void d(java.lang.String) -> d
    java.lang.String h() -> h
    void a(android.location.Location) -> a
    android.location.Location i() -> i
    void b(int) -> b
    int j() -> j
    void a(byte) -> a
    byte k() -> k
    void a(java.lang.Long) -> a
    java.lang.Long l() -> l
    void a(java.util.Map) -> a
    java.util.Map m() -> m
    void a(java.util.List) -> a
    java.util.List n() -> n
    void a(boolean) -> a
    boolean o() -> o
    void c(int) -> c
    int p() -> p
    void b(java.util.List) -> b
    java.util.List q() -> q
com.flurry.sdk.cl -> com.flurry.sdk.y:
    java.lang.String g -> g
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    java.util.concurrent.atomic.AtomicInteger h -> h
    java.util.concurrent.atomic.AtomicInteger i -> i
    java.util.concurrent.atomic.AtomicInteger j -> j
    java.io.File k -> k
    boolean l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.List o -> o
    java.util.Map p -> p
    boolean q -> q
    long r -> r
    java.util.List s -> s
    java.lang.String t -> t
    long u -> u
    long v -> v
    long w -> w
    long x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    byte A -> A
    boolean B -> B
    java.lang.String C -> C
    byte D -> D
    long E -> E
    long F -> F
    java.util.Map G -> G
    java.util.List H -> H
    boolean I -> I
    int J -> J
    java.util.List K -> K
    int L -> L
    int M -> M
    com.flurry.sdk.by N -> N
    java.util.Map O -> O
    android.os.Handler P -> P
    com.flurry.sdk.cn Q -> Q
    com.flurry.sdk.cl$a R -> R
    int S -> S
    boolean T -> T
    void a(java.util.Map) -> a
    java.util.Map a() -> a
    void a(com.flurry.sdk.fi) -> a
    void b() -> b
    void r() -> q
    void a(java.lang.String,java.lang.Object) -> a
    void c() -> c
    void s() -> r
    void t() -> s
    void d() -> d
    void a(android.content.Context) -> a
    void e() -> e
    void u() -> t
    void a(long) -> a
    void v() -> u
    void w() -> v
    void b(android.content.Context) -> b
    com.flurry.sdk.cj f() -> f
    int h() -> g
    void a(java.lang.String,java.util.Map,boolean) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void c(android.content.Context) -> c
    void a(byte[]) -> a
    void x() -> w
    void d(android.content.Context) -> d
    void y() -> x
    void z() -> y
    int i() -> h
    java.lang.String A() -> z
    int B() -> A
    int C() -> B
    java.lang.String j() -> i
    java.lang.String D() -> C
    java.lang.String k() -> j
    java.lang.String l() -> k
    java.lang.String m() -> l
    android.location.Location E() -> D
    void n() -> m
    java.util.List o() -> n
    java.util.List p() -> o
    java.util.Map q() -> p
    boolean a(com.flurry.sdk.cl) -> a
    void a(com.flurry.sdk.cl,android.content.Context) -> a
    void b(com.flurry.sdk.cl,android.content.Context) -> b
    java.lang.String a(com.flurry.sdk.cl,java.lang.String) -> a
    java.util.List b(com.flurry.sdk.cl) -> b
    void c(com.flurry.sdk.cl) -> c
    void c(com.flurry.sdk.cl,android.content.Context) -> c
com.flurry.sdk.cl$1 -> com.flurry.sdk.z:
    com.flurry.sdk.cl a -> a
    void a() -> a
com.flurry.sdk.cl$2 -> com.flurry.sdk.aa:
    com.flurry.sdk.cl a -> a
    void a() -> a
com.flurry.sdk.cl$3 -> com.flurry.sdk.ab:
    com.flurry.sdk.cl a -> a
    void a() -> a
com.flurry.sdk.cl$4 -> com.flurry.sdk.ac:
    com.flurry.sdk.cl a -> a
    void a() -> a
com.flurry.sdk.cl$a -> com.flurry.sdk.ad:
    void d(java.lang.String) -> b
com.flurry.sdk.cm -> com.flurry.sdk.ae:
    java.lang.String a -> a
    boolean b -> b
    java.util.List c -> c
    long d -> d
    void a(boolean) -> a
    boolean a() -> a
    void a(java.util.List) -> a
    java.util.List b() -> b
    void a(long) -> a
    long c() -> c
    void a(java.io.DataOutputStream,java.lang.String,java.lang.String) -> a
    boolean a(java.io.DataInputStream,java.lang.String) -> a
    boolean a(java.lang.String,java.io.DataInputStream) -> a
    java.lang.String a(java.lang.String) -> a
com.flurry.sdk.cn -> com.flurry.sdk.af:
    java.util.Timer a -> a
    com.flurry.sdk.cn$a b -> b
    com.flurry.sdk.cn$b c -> c
    void a(long) -> a
    void a() -> a
    boolean b() -> b
com.flurry.sdk.cn$a -> com.flurry.sdk.ag:
    com.flurry.sdk.cn$b b -> b
    com.flurry.sdk.cn a -> a
    void run() -> run
com.flurry.sdk.cn$b -> com.flurry.sdk.ah:
    void n() -> m
com.flurry.sdk.eg -> com.flurry.sdk.ai:
    com.flurry.sdk.eg a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    android.os.Handler d -> d
    void a(android.content.Context) -> a
    com.flurry.sdk.eg a() -> a
    android.content.Context b() -> b
    void a(java.lang.Runnable) -> a
com.flurry.sdk.eh -> com.flurry.sdk.aj:
    java.lang.Integer a -> a
    java.lang.String b -> b
    java.lang.Boolean c -> c
    java.lang.Boolean d -> d
    java.lang.String e -> e
    java.lang.Boolean f -> f
    android.location.Criteria g -> g
    java.lang.Long h -> h
    java.lang.Boolean i -> i
    java.lang.Long j -> j
    java.lang.Byte k -> k
    com.flurry.sdk.ei l -> l
    com.flurry.sdk.ei a() -> a
    void b() -> b
com.flurry.sdk.ei -> com.flurry.sdk.ak:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(java.lang.String,java.lang.Object) -> a
    boolean a(java.lang.Object,java.lang.Object) -> a
    void b(java.lang.String,java.lang.Object) -> b
    java.lang.Object a(java.lang.String) -> a
    void a(java.lang.String,com.flurry.sdk.ei$a) -> a
    boolean b(java.lang.String,com.flurry.sdk.ei$a) -> b
com.flurry.sdk.ei$a -> com.flurry.sdk.al:
    void a(java.lang.String,java.lang.Object) -> a
com.flurry.sdk.ej -> com.flurry.sdk.ej:
    com.flurry.sdk.ej a -> a
    com.flurry.sdk.ej b -> b
    int c -> c
    boolean d -> d
    com.flurry.sdk.ej[] e -> e
    com.flurry.sdk.ej[] values() -> values
    com.flurry.sdk.ej valueOf(java.lang.String) -> valueOf
com.flurry.sdk.el -> com.flurry.sdk.am:
    java.lang.String a -> a
    android.content.pm.PackageInfo a(android.content.Context) -> a
    java.lang.String c(android.content.Context) -> b
com.flurry.sdk.em -> com.flurry.sdk.an:
    java.lang.String a -> a
    byte[] b -> b
    byte[] a() -> a
    void b() -> b
com.flurry.sdk.en -> com.flurry.sdk.ao:
    java.lang.String c -> c
    long d -> d
    long e -> e
    android.location.LocationManager f -> f
    android.location.Criteria g -> g
    android.location.Location h -> h
    com.flurry.sdk.en$a i -> i
    java.lang.String j -> j
    boolean a -> a
    boolean b -> b
    int k -> k
    com.flurry.sdk.en l -> l
    com.flurry.sdk.en a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void g() -> g
    void h() -> h
    java.lang.String i() -> i
    void a(java.lang.String) -> a
    android.location.Location b(java.lang.String) -> b
    android.location.Location e() -> e
    void f() -> f
    void a(java.lang.String,java.lang.Object) -> a
    android.location.Location a(com.flurry.sdk.en,android.location.Location) -> a
com.flurry.sdk.en$a -> com.flurry.sdk.ap:
    com.flurry.sdk.en a -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.flurry.sdk.eo -> com.flurry.sdk.aq:
    java.lang.String a -> a
    java.util.Set b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String g() -> g
    java.lang.String b() -> b
    java.lang.String c() -> c
    boolean a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    void a(java.lang.String,java.io.File) -> a
    java.lang.String e() -> e
    java.lang.String f() -> f
    void a(java.lang.String,java.io.DataOutput) -> a
    java.lang.String a(java.io.DataInput) -> a
    java.lang.String b(java.io.DataInput) -> b
    java.lang.String h() -> h
    boolean c(java.lang.String) -> c
    java.util.Set i() -> i
com.flurry.sdk.eo$1 -> com.flurry.sdk.ar:
    boolean accept(java.io.File,java.lang.String) -> accept
com.flurry.sdk.ep -> com.flurry.sdk.as:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
com.flurry.sdk.eq -> com.flurry.sdk.at:
    com.flurry.sdk.eq a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    java.util.Map c -> c
    com.flurry.sdk.eq a() -> a
    void a(java.lang.Thread$UncaughtExceptionHandler) -> a
    java.util.Set b() -> b
    void a(java.lang.Thread,java.lang.Throwable) -> a
    void b(java.lang.Thread,java.lang.Throwable) -> b
    void a(com.flurry.sdk.eq,java.lang.Thread,java.lang.Throwable) -> a
    void b(com.flurry.sdk.eq,java.lang.Thread,java.lang.Throwable) -> b
com.flurry.sdk.eq$1 -> com.flurry.sdk.au:
com.flurry.sdk.eq$a -> com.flurry.sdk.av:
    com.flurry.sdk.eq a -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.flurry.sdk.er -> com.flurry.sdk.aw:
    java.util.zip.CRC32 a -> a
    void engineReset() -> engineReset
    void engineUpdate(byte) -> engineUpdate
    void engineUpdate(byte[],int,int) -> engineUpdate
    byte[] engineDigest() -> engineDigest
    byte[] a() -> a
com.flurry.sdk.et -> com.flurry.sdk.ax:
    java.lang.String a -> a
    boolean a(java.io.File) -> a
    java.lang.String b(java.io.File) -> b
    void a(java.io.File,java.lang.String) -> a
com.flurry.sdk.eu -> com.flurry.sdk.ay:
    javax.net.ssl.SSLContext a -> a
    javax.net.ssl.SSLContext a() -> a
    javax.net.ssl.SSLContext b() -> b
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.flurry.sdk.ev -> com.flurry.sdk.az:
    javax.net.ssl.X509TrustManager a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.flurry.sdk.ew -> com.flurry.sdk.ba:
    org.apache.http.conn.scheme.SchemeRegistry a -> a
    org.apache.http.conn.scheme.SchemeRegistry a() -> a
    org.apache.http.client.HttpClient b(org.apache.http.params.HttpParams) -> a
com.flurry.sdk.ex -> com.flurry.sdk.bb:
    int a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    int c() -> a
    boolean d() -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void e(java.lang.String,java.lang.String) -> c
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void b(int,java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void b(int,java.lang.String,java.lang.String) -> b
    void c(int,java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void c(int,java.lang.String,java.lang.String) -> c
    void d(int,java.lang.String,java.lang.String) -> d
com.flurry.sdk.ey -> com.flurry.sdk.bc:
    com.flurry.sdk.ey a -> a
    java.util.List b -> b
    com.flurry.sdk.ey a() -> a
    void f(android.content.Context) -> a
    void g(android.content.Context) -> b
    java.util.List b() -> b
com.flurry.sdk.ez -> com.flurry.sdk.bd:
    int a -> a
    com.flurry.sdk.fc a(java.lang.String,int) -> a
    boolean b(java.lang.String,int) -> b
com.flurry.sdk.fa -> com.flurry.sdk.be:
    java.lang.String a -> a
    com.flurry.sdk.fc a(java.lang.String) -> a
com.flurry.sdk.fb -> com.flurry.sdk.bf:
    com.flurry.sdk.fc a -> a
    void f(android.content.Context) -> a
    void g(android.content.Context) -> b
com.flurry.sdk.fc -> com.flurry.sdk.bg:
    void f(android.content.Context) -> a
    void g(android.content.Context) -> b
com.flurry.sdk.fd -> com.flurry.sdk.bh:
    void b(boolean) -> a
com.flurry.sdk.fe -> com.flurry.sdk.fe:
    boolean a -> a
    java.lang.Boolean b -> b
    java.util.List c -> c
    boolean d -> d
    com.flurry.sdk.fe e -> e
    com.flurry.sdk.fe a() -> a
    void b() -> b
    void a(com.flurry.sdk.fd) -> a
    boolean c() -> c
    void d() -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(android.content.Context) -> a
com.flurry.sdk.fe$a -> com.flurry.sdk.fe$a:
    com.flurry.sdk.fe$a a -> a
    com.flurry.sdk.fe$a b -> b
    com.flurry.sdk.fe$a c -> c
    int d -> d
    com.flurry.sdk.fe$a[] e -> e
    com.flurry.sdk.fe$a[] values() -> values
    com.flurry.sdk.fe$a valueOf(java.lang.String) -> valueOf
com.flurry.sdk.ff -> com.flurry.sdk.bi:
    java.lang.ThreadGroup a -> a
    int b -> b
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.flurry.sdk.fh -> com.flurry.sdk.bj:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,int) -> a
    java.lang.String c(java.lang.String) -> b
    void a(java.io.Closeable) -> a
    byte[] d(java.lang.String) -> c
com.flurry.sdk.fi -> com.flurry.sdk.bk:
    java.lang.String a -> a
    java.io.PrintStream i -> g
    java.io.PrintWriter j -> h
    void a() -> a
    void run() -> run
com.google.gson.ExclusionStrategy -> com.google.gson.a:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.google.gson.b:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> a
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> b
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> c
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> d
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> e
    com.google.gson.FieldNamingPolicy[] $VALUES -> f
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.c:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.d:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> com.google.gson.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> com.google.gson.i:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.String toJson(java.lang.Object) -> a
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> a
    java.lang.String toJson(com.google.gson.JsonElement) -> a
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> a
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> a
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
com.google.gson.Gson$1 -> com.google.gson.j:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$2 -> com.google.gson.k:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.google.gson.l:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$4 -> com.google.gson.m:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> com.google.gson.n:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.o:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.InstanceCreator -> com.google.gson.p:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.google.gson.q:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.google.gson.r:
com.google.gson.JsonElement -> com.google.gson.s:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.t:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.google.gson.u:
    com.google.gson.internal.LinkedTreeMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonPrimitive -> com.google.gson.v:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.google.gson.w:
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy[] $VALUES -> c
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.x:
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.y:
com.google.gson.TypeAdapter -> com.google.gson.z:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> com.google.gson.aa:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> com.google.gson.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> com.google.gson.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> com.google.gson.a.c:
    double value() -> a
com.google.gson.annotations.Until -> com.google.gson.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.c:
    java.lang.reflect.Type componentType -> a
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.g:
    com.google.gson.InstanceCreator val$typeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.h:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.j:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.k:
    com.google.gson.InstanceCreator val$rawTypeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.l:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.n:
    java.lang.reflect.Type val$type -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.o:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.p:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.q:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.r:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.google.gson.internal.s:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.t:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.u:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> g
    java.util.Comparator comparator -> a
    com.google.gson.internal.LinkedTreeMap$Node root -> b
    int size -> c
    int modCount -> d
    com.google.gson.internal.LinkedTreeMap$Node header -> e
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> h
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> i
    boolean $assertionsDisabled -> f
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> b
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> b
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.v:
    int compare(java.lang.Comparable,java.lang.Comparable) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.w:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.x:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.y:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.z:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.aa:
    com.google.gson.internal.LinkedTreeMap$Node next -> b
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> c
    int expectedModCount -> d
    com.google.gson.internal.LinkedTreeMap this$0 -> e
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> b
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.ab:
    com.google.gson.internal.LinkedTreeMap$Node parent -> a
    com.google.gson.internal.LinkedTreeMap$Node left -> b
    com.google.gson.internal.LinkedTreeMap$Node right -> c
    com.google.gson.internal.LinkedTreeMap$Node next -> d
    com.google.gson.internal.LinkedTreeMap$Node prev -> e
    java.lang.Object key -> f
    java.lang.Object value -> g
    int height -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> a
    com.google.gson.internal.LinkedTreeMap$Node last() -> b
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ac:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.google.gson.internal.ad:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
com.google.gson.internal.Streams -> com.google.gson.internal.ae:
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.io.Writer writerForAppendable(java.lang.Appendable) -> a
com.google.gson.internal.Streams$1 -> com.google.gson.internal.af:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.ag:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.ah:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.ai:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.aj:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.ak:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.al:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.am:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.a.c:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.a.d:
    com.google.gson.TypeAdapter elementTypeAdapter -> a
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.a.e:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.text.DateFormat iso8601Format -> d
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.a.f:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.a.g:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.a.h:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.a.i:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> j
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.a.j:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.a.k:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.a.l:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.a.m:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.a.n:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.a.o:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.a.p:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.a.q:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.a.r:
    com.google.gson.internal.ObjectConstructor constructor -> a
    java.util.Map boundFields -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.a.s:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.a.t:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.a.u:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.a.v:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.a.w:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.a.x:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.a.y:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapter BIG_DECIMAL -> v
    com.google.gson.TypeAdapter BIG_INTEGER -> w
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUILDER -> y
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> z
    com.google.gson.TypeAdapter STRING_BUFFER -> A
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> B
    com.google.gson.TypeAdapter URL -> C
    com.google.gson.TypeAdapterFactory URL_FACTORY -> D
    com.google.gson.TypeAdapter URI -> E
    com.google.gson.TypeAdapterFactory URI_FACTORY -> F
    com.google.gson.TypeAdapter INET_ADDRESS -> G
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> H
    com.google.gson.TypeAdapter UUID -> I
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> J
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> K
    com.google.gson.TypeAdapter CALENDAR -> L
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> M
    com.google.gson.TypeAdapter LOCALE -> N
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> O
    com.google.gson.TypeAdapter JSON_ELEMENT -> P
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> Q
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> R
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.a.z:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.a.aa:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.a.ab:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.a.ac:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.a.ad:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.a.ae:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.a.af:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.a.ag:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.a.ah:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.a.ai:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.a.aj:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.a.ak:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.a.al:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.a.am:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.a.ao:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.a.ap:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.a.aq:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.a.ar:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.a.at:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.a.au:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.a.av:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.a.aw:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.a.ax:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.a.ay:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.a.az:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.a.ba:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.a.bb:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.a.bc:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.a.bd:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.a.be:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.a.bf:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.reflect.TypeToken -> com.google.gson.b.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.google.gson.stream.a:
    char[] NON_EXECUTE_PREFIX -> a
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int lineStart -> h
    int peeked -> i
    long peekedLong -> j
    int peekedNumberLength -> k
    java.lang.String peekedString -> l
    int[] stack -> m
    int stackSize -> n
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    int doPeek() -> o
    int peekKeyword() -> q
    int peekNumber() -> r
    boolean isLiteral(char) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    java.lang.String nextQuotedValue(char) -> b
    java.lang.String nextUnquotedValue() -> s
    void skipQuotedValue(char) -> c
    void skipUnquotedValue() -> t
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(int) -> a
    boolean fillBuffer(int) -> b
    int getLineNumber() -> u
    int getColumnNumber() -> v
    int nextNonWhitespace(boolean) -> b
    void checkLenient() -> w
    void skipToEndOfLine() -> x
    boolean skipTo(java.lang.String) -> a
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> y
    java.io.IOException syntaxError(java.lang.String) -> b
    void consumeNonExecutePrefix() -> z
    int access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$002(com.google.gson.stream.JsonReader,int) -> a
    int access$200(com.google.gson.stream.JsonReader) -> c
    int access$300(com.google.gson.stream.JsonReader) -> d
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.c:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    int[] stack -> d
    int stackSize -> e
    java.lang.String indent -> f
    java.lang.String separator -> g
    boolean lenient -> h
    boolean htmlSafe -> i
    java.lang.String deferredName -> j
    boolean serializeNulls -> k
    void setIndent(java.lang.String) -> c
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    void setHtmlSafe(boolean) -> c
    boolean isHtmlSafe() -> h
    void setSerializeNulls(boolean) -> d
    boolean getSerializeNulls() -> i
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> a
    void push(int) -> a
    int peek() -> a
    void replaceTop(int) -> b
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> j
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> d
    void newline() -> k
    void beforeName() -> l
    void beforeValue(boolean) -> e
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.AndroidCompiledStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    com.j256.ormlite.android.compat.ApiCompatibility apiCompatibility -> apiCompatibility
    java.lang.String sql -> sql
    android.database.sqlite.SQLiteDatabase db -> db
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    android.database.Cursor cursor -> cursor
    java.util.List args -> args
    java.lang.Integer max -> max
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook cancellationHook -> cancellationHook
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runUpdate() -> runUpdate
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
    android.database.Cursor getCursor() -> getCursor
    java.lang.String toString() -> toString
    int execSql(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.Object[]) -> execSql
    void isInPrep() -> isInPrep
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.String[] getStringArray() -> getStringArray
com.j256.ormlite.android.AndroidCompiledStatement$1 -> com.j256.ormlite.android.AndroidCompiledStatement$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.AndroidConnectionSource:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    boolean isOpen -> isOpen
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.support.DatabaseConnectionProxyFactory connectionProxyFactory -> connectionProxyFactory
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
    void setDatabaseConnectionProxyFactory(com.j256.ormlite.support.DatabaseConnectionProxyFactory) -> setDatabaseConnectionProxyFactory
    boolean isCancelQueriesEnabled() -> isCancelQueriesEnabled
    void setCancelQueriesEnabled(boolean) -> setCancelQueriesEnabled
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.AndroidDatabaseConnection:
    java.lang.String ANDROID_VERSION -> ANDROID_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    android.database.sqlite.SQLiteDatabase db -> db
    boolean readWrite -> readWrite
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    boolean isReadWrite() -> isReadWrite
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> update
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> bindArgs
    java.lang.String[] toStrings(java.lang.Object[]) -> toStrings
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.j256.ormlite.android.AndroidDatabaseConnection$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint -> com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint:
    java.lang.String name -> name
    int getSavepointId() -> getSavepointId
    java.lang.String getSavepointName() -> getSavepointName
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.AndroidDatabaseResults:
    int MIN_NUM_COLUMN_NAMES_MAP -> MIN_NUM_COLUMN_NAMES_MAP
    android.database.Cursor cursor -> cursor
    java.lang.String[] columnNames -> columnNames
    java.util.Map columnNameMap -> columnNameMap
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean next() -> next
    boolean last() -> last
    boolean previous() -> previous
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int getCount() -> getCount
    int getPosition() -> getPosition
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
    android.database.Cursor getRawCursor() -> getRawCursor
    java.lang.String toString() -> toString
    int lookupColumn(java.lang.String) -> lookupColumn
com.j256.ormlite.android.AndroidLog -> com.j256.ormlite.android.AndroidLog:
    java.lang.String ALL_LOGS_NAME -> ALL_LOGS_NAME
    int REFRESH_LEVEL_CACHE_EVERY -> REFRESH_LEVEL_CACHE_EVERY
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    java.lang.String className -> className
    int levelCacheC -> levelCacheC
    boolean[] levelCache -> levelCache
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void refreshLevelCache() -> refreshLevelCache
    boolean isLevelEnabledInternal(int) -> isLevelEnabledInternal
    int levelToAndroidLevel(com.j256.ormlite.logger.Log$Level) -> levelToAndroidLevel
com.j256.ormlite.android.AndroidLog$1 -> com.j256.ormlite.android.AndroidLog$1:
    int[] $SwitchMap$com$j256$ormlite$logger$Log$Level -> $SwitchMap$com$j256$ormlite$logger$Log$Level
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.DatabaseTableConfigUtil:
    java.lang.Class annotationFactoryClazz -> annotationFactoryClazz
    java.lang.reflect.Field elementsField -> elementsField
    java.lang.Class annotationMemberClazz -> annotationMemberClazz
    java.lang.reflect.Field nameField -> nameField
    java.lang.reflect.Field valueField -> valueField
    int workedC -> workedC
    int[] configFieldNums -> configFieldNums
    int COLUMN_NAME -> COLUMN_NAME
    int DATA_TYPE -> DATA_TYPE
    int DEFAULT_VALUE -> DEFAULT_VALUE
    int WIDTH -> WIDTH
    int CAN_BE_NULL -> CAN_BE_NULL
    int ID -> ID
    int GENERATED_ID -> GENERATED_ID
    int GENERATED_ID_SEQUENCE -> GENERATED_ID_SEQUENCE
    int FOREIGN -> FOREIGN
    int USE_GET_SET -> USE_GET_SET
    int UNKNOWN_ENUM_NAME -> UNKNOWN_ENUM_NAME
    int THROW_IF_NULL -> THROW_IF_NULL
    int PERSISTED -> PERSISTED
    int FORMAT -> FORMAT
    int UNIQUE -> UNIQUE
    int UNIQUE_COMBO -> UNIQUE_COMBO
    int INDEX -> INDEX
    int UNIQUE_INDEX -> UNIQUE_INDEX
    int INDEX_NAME -> INDEX_NAME
    int UNIQUE_INDEX_NAME -> UNIQUE_INDEX_NAME
    int FOREIGN_AUTO_REFRESH -> FOREIGN_AUTO_REFRESH
    int MAX_FOREIGN_AUTO_REFRESH_LEVEL -> MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int PERSISTER_CLASS -> PERSISTER_CLASS
    int ALLOW_GENERATED_ID_INSERT -> ALLOW_GENERATED_ID_INSERT
    int COLUMN_DEFINITON -> COLUMN_DEFINITON
    int FOREIGN_AUTO_CREATE -> FOREIGN_AUTO_CREATE
    int VERSION -> VERSION
    int FOREIGN_COLUMN_NAME -> FOREIGN_COLUMN_NAME
    int READ_ONLY -> READ_ONLY
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    int getWorkedC() -> getWorkedC
    int[] lookupClasses() -> lookupClasses
    int configFieldNameToNum(java.lang.String) -> configFieldNameToNum
    com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> configFromField
    com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> buildConfig
    void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> assignConfigField
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample:
    java.lang.String field -> field
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.OpenHelperManager:
    java.lang.String HELPER_CLASS_RESOURCE_NAME -> HELPER_CLASS_RESOURCE_NAME
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class helperClass -> helperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean wasClosed -> wasClosed
    int instanceCount -> instanceCount
    void setOpenHelperClass(java.lang.Class) -> setOpenHelperClass
    void setHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> setHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class) -> getHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> getHelper
    void release() -> release
    void releaseHelper() -> releaseHelper
    void innerSetHelperClass(java.lang.Class) -> innerSetHelperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class) -> loadHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> constructHelper
    java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> lookupHelperClass
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
    java.lang.String toString() -> toString
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteConfigUtil -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil:
    java.lang.String RESOURCE_DIR_NAME -> RESOURCE_DIR_NAME
    java.lang.String RAW_DIR_NAME -> RAW_DIR_NAME
    int maxFindSourceLevel -> maxFindSourceLevel
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    void main(java.lang.String[]) -> main
    void writeConfigFile(java.lang.String) -> writeConfigFile
    void writeConfigFile(java.lang.String,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.lang.Class[]) -> writeConfigFile
    java.io.File findRawDir(java.io.File) -> findRawDir
    void writeHeader(java.io.BufferedWriter) -> writeHeader
    void findAnnotatedClasses(java.util.List,java.io.File,int) -> findAnnotatedClasses
    void writeConfigForTable(java.io.BufferedWriter,java.lang.Class) -> writeConfigForTable
    boolean classHasAnnotations(java.lang.Class) -> classHasAnnotations
    java.lang.String getPackageOfClass(java.io.File) -> getPackageOfClass
    java.io.File findResRawDir(java.io.File) -> findResRawDir
com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1 -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1:
    boolean accept(java.io.File) -> accept
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> connectionSource
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isOpen -> isOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    boolean isOpen() -> isOpen
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> getDao
    com.j256.ormlite.dao.RuntimeExceptionDao getRuntimeExceptionDao(java.lang.Class) -> getRuntimeExceptionDao
    java.lang.String toString() -> toString
    java.io.InputStream openFileId(android.content.Context,int) -> openFileId
    java.io.InputStream openFile(java.io.File) -> openFile
com.j256.ormlite.android.compat.ApiCompatibility -> com.j256.ormlite.android.compat.ApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook -> com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook:
    void cancel() -> cancel
com.j256.ormlite.android.compat.ApiCompatibilityUtils -> com.j256.ormlite.android.compat.ApiCompatibilityUtils:
    com.j256.ormlite.android.compat.ApiCompatibility compatibility -> compatibility
    int BASE -> BASE
    int BASE_1_1 -> BASE_1_1
    int CUPCAKE -> CUPCAKE
    int DONUT -> DONUT
    int ECLAIR -> ECLAIR
    int ECLAIR_0_1 -> ECLAIR_0_1
    int ECLAIR_MR1 -> ECLAIR_MR1
    int FROYO -> FROYO
    int GINGERBREAD -> GINGERBREAD
    int GINGERBREAD_MR1 -> GINGERBREAD_MR1
    int HONEYCOMB -> HONEYCOMB
    int HONEYCOMB_MR1 -> HONEYCOMB_MR1
    int HONEYCOMB_MR2 -> HONEYCOMB_MR2
    int ICE_CREAM_SANDWICH -> ICE_CREAM_SANDWICH
    int ICE_CREAM_SANDWICH_MR1 -> ICE_CREAM_SANDWICH_MR1
    int JELLY_BEAN -> JELLY_BEAN
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    int JELLY_BEAN_MR2 -> JELLY_BEAN_MR2
    com.j256.ormlite.android.compat.ApiCompatibility getCompatibility() -> getCompatibility
com.j256.ormlite.android.compat.BasicApiCompatibility -> com.j256.ormlite.android.compat.BasicApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook:
    android.os.CancellationSignal cancellationSignal -> cancellationSignal
    void cancel() -> cancel
    android.os.CancellationSignal access$000(com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook) -> access$000
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.dao.BaseDaoImpl:
    boolean initialized -> initialized
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> statementExecutor
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.table.ObjectFactory objectFactory -> objectFactory
    java.lang.ThreadLocal daoConfigLevelLocal -> daoConfigLevelLocal
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> defaultObjectCache
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    void initialize() -> initialize
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    void clearAllInternalObjectCaches() -> clearAllInternalObjectCaches
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> getObjectFactory
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.table.DatabaseTableConfig getTableConfig() -> getTableConfig
    com.j256.ormlite.table.TableInfo getTableInfo() -> getTableInfo
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void setTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setTableConfig
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    void checkForInitialized() -> checkForInitialized
    com.j256.ormlite.dao.ForeignCollection makeEmptyForeignCollection(java.lang.Object,java.lang.String) -> makeEmptyForeignCollection
    com.j256.ormlite.dao.CloseableIterator createIterator(int) -> createIterator
    com.j256.ormlite.dao.CloseableIterator createIterator(com.j256.ormlite.stmt.PreparedQuery,int) -> createIterator
    java.util.List queryForMatching(java.lang.Object,boolean) -> queryForMatching
    java.util.List queryForFieldValues(java.util.Map,boolean) -> queryForFieldValues
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.BaseDaoImpl,int) -> access$000
    com.j256.ormlite.dao.CloseableIterator access$100(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.stmt.PreparedQuery,int) -> access$100
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.dao.BaseDaoImpl$1:
    java.util.List initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$2 -> com.j256.ormlite.dao.BaseDaoImpl$2:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$3 -> com.j256.ormlite.dao.BaseDaoImpl$3:
    com.j256.ormlite.stmt.PreparedQuery val$preparedQuery -> val$preparedQuery
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.dao.BaseDaoImpl$4:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.j256.ormlite.dao.BaseDaoImpl$5:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.dao.BaseForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    java.lang.Object parentId -> parentId
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.lang.String orderColumn -> orderColumn
    boolean orderAscending -> orderAscending
    java.lang.Object parent -> parent
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int update(java.lang.Object) -> update
    int refresh(java.lang.Object) -> refresh
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
    boolean addElement(java.lang.Object) -> addElement
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.dao.CloseableIterable:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.dao.CloseableIterator:
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object moveRelative(int) -> moveRelative
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.dao.CloseableWrappedIterable:
    void close() -> close
com.j256.ormlite.dao.CloseableWrappedIterableImpl -> com.j256.ormlite.dao.CloseableWrappedIterableImpl:
    com.j256.ormlite.dao.CloseableIterable iterable -> iterable
    com.j256.ormlite.dao.CloseableIterator iterator -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.Dao -> com.j256.ormlite.dao.Dao:
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.dao.Dao$CreateOrUpdateStatus:
    boolean created -> created
    boolean updated -> updated
    int numLinesChanged -> numLinesChanged
    boolean isCreated() -> isCreated
    boolean isUpdated() -> isUpdated
    int getNumLinesChanged() -> getNumLinesChanged
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.dao.DaoManager:
    java.util.Map configMap -> configMap
    java.util.Map classMap -> classMap
    java.util.Map tableConfigMap -> tableConfigMap
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> lookupDao
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDao
    void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> unregisterDao
    void registerDaoWithTableConfig(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDaoWithTableConfig
    void clearCache() -> clearCache
    void clearDaoCache() -> clearDaoCache
    void addCachedDatabaseConfigs(java.util.Collection) -> addCachedDatabaseConfigs
    void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToClassMap
    void removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> removeDaoToClassMap
    void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToTableMap
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> lookupDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> lookupDao
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> findConstructor
    java.lang.Object createDaoFromConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDaoFromConfig
    com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> doCreateDao
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.dao.DaoManager$ClassConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.Class clazz -> clazz
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.dao.EagerForeignCollection:
    long serialVersionUID -> serialVersionUID
    java.util.List results -> results
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void close() -> close
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> access$000
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.dao.EagerForeignCollection$1:
    int offset -> offset
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object next() -> next
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object current() -> current
    java.lang.Object previous() -> previous
    java.lang.Object moveRelative(int) -> moveRelative
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.dao.ForeignCollection:
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int update(java.lang.Object) -> update
    int updateAll() -> updateAll
    int refresh(java.lang.Object) -> refresh
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean add(java.lang.Object) -> add
com.j256.ormlite.dao.GenericRawResults -> com.j256.ormlite.dao.GenericRawResults:
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    void close() -> close
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.dao.LazyForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow(int) -> seperateIteratorThrow
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.LazyForeignCollection,int) -> access$000
com.j256.ormlite.dao.LazyForeignCollection$1 -> com.j256.ormlite.dao.LazyForeignCollection$1:
    int val$flags -> val$flags
    com.j256.ormlite.dao.LazyForeignCollection this$0 -> this$0
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LruObjectCache -> com.j256.ormlite.dao.LruObjectCache:
    int capacity -> capacity
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap -> com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.dao.ObjectCache:
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
com.j256.ormlite.dao.RawRowMapper -> com.j256.ormlite.dao.RawRowMapper:
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.dao.RawRowObjectMapper -> com.j256.ormlite.dao.RawRowObjectMapper:
    java.lang.Object mapRow(java.lang.String[],com.j256.ormlite.field.DataType[],java.lang.Object[]) -> mapRow
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.dao.ReferenceObjectCache:
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    boolean useWeak -> useWeak
    com.j256.ormlite.dao.ReferenceObjectCache makeWeakCache() -> makeWeakCache
    com.j256.ormlite.dao.ReferenceObjectCache makeSoftCache() -> makeSoftCache
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    void cleanNullReferences(java.lang.Class) -> cleanNullReferences
    void cleanNullReferencesAll() -> cleanNullReferencesAll
    void cleanMap(java.util.Map) -> cleanMap
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.RuntimeExceptionDao -> com.j256.ormlite.dao.RuntimeExceptionDao:
    com.j256.ormlite.logger.Log$Level LOG_LEVEL -> LOG_LEVEL
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void logMessage(java.lang.Exception,java.lang.String) -> logMessage
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.db.BaseDatabaseType:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> DEFAULT_SEQUENCE_SUFFIX
    java.sql.Driver driver -> driver
    java.lang.String getDriverClassName() -> getDriverClassName
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void appendStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendStringType
    void appendLongStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongStringType
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    void appendCharType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendCharType
    void appendByteType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteType
    void appendShortType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendShortType
    void appendIntegerType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendIntegerType
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void appendFloatType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendFloatType
    void appendDoubleType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDoubleType
    void appendByteArrayType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteArrayType
    void appendSerializableType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendSerializableType
    void appendBigDecimalNumericType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBigDecimalNumericType
    void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> appendDefaultValue
    void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureGeneratedIdSequence
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureId
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
    void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> appendCanBeNull
    void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> addSingleUnique
com.j256.ormlite.db.BaseDatabaseType$1 -> com.j256.ormlite.db.BaseDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter:
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.db.BaseSqliteDatabaseType:
    com.j256.ormlite.field.FieldConverter booleanConverter -> booleanConverter
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.j256.ormlite.db.BaseSqliteDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.db.DatabaseType:
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    java.lang.String getDatabaseName() -> getDatabaseName
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.db.SqliteAndroidDatabaseType:
    void loadDriver() -> loadDriver
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    java.lang.String getDriverClassName() -> getDriverClassName
    java.lang.String getDatabaseName() -> getDatabaseName
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.j256.ormlite.db.SqliteAndroidDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.field.BaseFieldConverter -> com.j256.ormlite.field.BaseFieldConverter:
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isStreamType() -> isStreamType
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.field.DataPersister:
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.field.DataPersisterManager:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> DEFAULT_ENUM_PERSISTER
    java.util.Map builtInMap -> builtInMap
    java.util.List registeredPersisters -> registeredPersisters
    void registerDataPersisters(com.j256.ormlite.field.DataPersister[]) -> registerDataPersisters
    void clear() -> clear
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> lookupForField
com.j256.ormlite.field.DataType -> com.j256.ormlite.field.DataType:
    com.j256.ormlite.field.DataType STRING -> STRING
    com.j256.ormlite.field.DataType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.DataType STRING_BYTES -> STRING_BYTES
    com.j256.ormlite.field.DataType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> BOOLEAN_OBJ
    com.j256.ormlite.field.DataType DATE -> DATE
    com.j256.ormlite.field.DataType DATE_LONG -> DATE_LONG
    com.j256.ormlite.field.DataType DATE_STRING -> DATE_STRING
    com.j256.ormlite.field.DataType CHAR -> CHAR
    com.j256.ormlite.field.DataType CHAR_OBJ -> CHAR_OBJ
    com.j256.ormlite.field.DataType BYTE -> BYTE
    com.j256.ormlite.field.DataType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.DataType BYTE_OBJ -> BYTE_OBJ
    com.j256.ormlite.field.DataType SHORT -> SHORT
    com.j256.ormlite.field.DataType SHORT_OBJ -> SHORT_OBJ
    com.j256.ormlite.field.DataType INTEGER -> INTEGER
    com.j256.ormlite.field.DataType INTEGER_OBJ -> INTEGER_OBJ
    com.j256.ormlite.field.DataType LONG -> LONG
    com.j256.ormlite.field.DataType LONG_OBJ -> LONG_OBJ
    com.j256.ormlite.field.DataType FLOAT -> FLOAT
    com.j256.ormlite.field.DataType FLOAT_OBJ -> FLOAT_OBJ
    com.j256.ormlite.field.DataType DOUBLE -> DOUBLE
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> DOUBLE_OBJ
    com.j256.ormlite.field.DataType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.DataType ENUM_STRING -> ENUM_STRING
    com.j256.ormlite.field.DataType ENUM_INTEGER -> ENUM_INTEGER
    com.j256.ormlite.field.DataType UUID -> UUID
    com.j256.ormlite.field.DataType BIG_INTEGER -> BIG_INTEGER
    com.j256.ormlite.field.DataType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> BIG_DECIMAL_NUMERIC
    com.j256.ormlite.field.DataType DATE_TIME -> DATE_TIME
    com.j256.ormlite.field.DataType SQL_DATE -> SQL_DATE
    com.j256.ormlite.field.DataType TIME_STAMP -> TIME_STAMP
    com.j256.ormlite.field.DataType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    com.j256.ormlite.field.DataType[] $VALUES -> $VALUES
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.field.DatabaseField:
    java.lang.String DEFAULT_STRING -> DEFAULT_STRING
    int NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED -> NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String columnName() -> columnName
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean foreign() -> foreign
    boolean useGetSet() -> useGetSet
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    boolean persisted() -> persisted
    java.lang.String format() -> format
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass() -> persisterClass
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
    java.lang.String columnDefinition() -> columnDefinition
    boolean foreignAutoCreate() -> foreignAutoCreate
    boolean version() -> version
    java.lang.String foreignColumnName() -> foreignColumnName
    boolean readOnly() -> readOnly
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.field.DatabaseFieldConfig:
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> DEFAULT_DATA_TYPE
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    boolean DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING -> DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String fieldName -> fieldName
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DataType dataType -> dataType
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.String defaultValue -> defaultValue
    int width -> width
    boolean canBeNull -> canBeNull
    boolean id -> id
    boolean generatedId -> generatedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    boolean foreign -> foreign
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> foreignTableConfig
    boolean useGetSet -> useGetSet
    java.lang.Enum unknownEnumValue -> unknownEnumValue
    boolean throwIfNull -> throwIfNull
    boolean persisted -> persisted
    java.lang.String format -> format
    boolean unique -> unique
    boolean uniqueCombo -> uniqueCombo
    boolean index -> index
    java.lang.String indexName -> indexName
    boolean uniqueIndex -> uniqueIndex
    java.lang.String uniqueIndexName -> uniqueIndexName
    boolean foreignAutoRefresh -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass -> persisterClass
    boolean allowGeneratedIdInsert -> allowGeneratedIdInsert
    java.lang.String columnDefinition -> columnDefinition
    boolean foreignAutoCreate -> foreignAutoCreate
    boolean version -> version
    java.lang.String foreignColumnName -> foreignColumnName
    boolean readOnly -> readOnly
    boolean foreignCollection -> foreignCollection
    boolean foreignCollectionEager -> foreignCollectionEager
    int foreignCollectionMaxEagerLevel -> foreignCollectionMaxEagerLevel
    java.lang.String foreignCollectionColumnName -> foreignCollectionColumnName
    java.lang.String foreignCollectionOrderColumnName -> foreignCollectionOrderColumnName
    boolean foreignCollectionOrderAscending -> foreignCollectionOrderAscending
    java.lang.String foreignCollectionForeignFieldName -> foreignCollectionForeignFieldName
    java.lang.String getFieldName() -> getFieldName
    void setFieldName(java.lang.String) -> setFieldName
    java.lang.String getColumnName() -> getColumnName
    void setColumnName(java.lang.String) -> setColumnName
    com.j256.ormlite.field.DataType getDataType() -> getDataType
    void setDataType(com.j256.ormlite.field.DataType) -> setDataType
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> setDataPersister
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    boolean isCanBeNull() -> isCanBeNull
    void setCanBeNull(boolean) -> setCanBeNull
    boolean isId() -> isId
    void setId(boolean) -> setId
    boolean isGeneratedId() -> isGeneratedId
    void setGeneratedId(boolean) -> setGeneratedId
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    void setGeneratedIdSequence(java.lang.String) -> setGeneratedIdSequence
    boolean isForeign() -> isForeign
    void setForeign(boolean) -> setForeign
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> getForeignTableConfig
    void setForeignTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setForeignTableConfig
    boolean isUseGetSet() -> isUseGetSet
    void setUseGetSet(boolean) -> setUseGetSet
    java.lang.Enum getUnknownEnumValue() -> getUnknownEnumValue
    void setUnknownEnumValue(java.lang.Enum) -> setUnknownEnumValue
    boolean isThrowIfNull() -> isThrowIfNull
    void setThrowIfNull(boolean) -> setThrowIfNull
    boolean isPersisted() -> isPersisted
    void setPersisted(boolean) -> setPersisted
    java.lang.String getFormat() -> getFormat
    void setFormat(java.lang.String) -> setFormat
    boolean isUnique() -> isUnique
    void setUnique(boolean) -> setUnique
    boolean isUniqueCombo() -> isUniqueCombo
    void setUniqueCombo(boolean) -> setUniqueCombo
    boolean isIndex() -> isIndex
    void setIndex(boolean) -> setIndex
    java.lang.String getIndexName(java.lang.String) -> getIndexName
    void setIndexName(java.lang.String) -> setIndexName
    boolean isUniqueIndex() -> isUniqueIndex
    void setUniqueIndex(boolean) -> setUniqueIndex
    java.lang.String getUniqueIndexName(java.lang.String) -> getUniqueIndexName
    void setUniqueIndexName(java.lang.String) -> setUniqueIndexName
    void setForeignAutoRefresh(boolean) -> setForeignAutoRefresh
    boolean isForeignAutoRefresh() -> isForeignAutoRefresh
    int getMaxForeignAutoRefreshLevel() -> getMaxForeignAutoRefreshLevel
    void setMaxForeignAutoRefreshLevel(int) -> setMaxForeignAutoRefreshLevel
    boolean isForeignCollection() -> isForeignCollection
    void setForeignCollection(boolean) -> setForeignCollection
    boolean isForeignCollectionEager() -> isForeignCollectionEager
    void setForeignCollectionEager(boolean) -> setForeignCollectionEager
    int getForeignCollectionMaxEagerLevel() -> getForeignCollectionMaxEagerLevel
    void setForeignCollectionMaxEagerLevel(int) -> setForeignCollectionMaxEagerLevel
    void setMaxEagerForeignCollectionLevel(int) -> setMaxEagerForeignCollectionLevel
    void setForeignCollectionMaxEagerForeignCollectionLevel(int) -> setForeignCollectionMaxEagerForeignCollectionLevel
    java.lang.String getForeignCollectionColumnName() -> getForeignCollectionColumnName
    void setForeignCollectionColumnName(java.lang.String) -> setForeignCollectionColumnName
    java.lang.String getForeignCollectionOrderColumnName() -> getForeignCollectionOrderColumnName
    void setForeignCollectionOrderColumn(java.lang.String) -> setForeignCollectionOrderColumn
    void setForeignCollectionOrderColumnName(java.lang.String) -> setForeignCollectionOrderColumnName
    boolean isForeignCollectionOrderAscending() -> isForeignCollectionOrderAscending
    void setForeignCollectionOrderAscending(boolean) -> setForeignCollectionOrderAscending
    java.lang.String getForeignCollectionForeignFieldName() -> getForeignCollectionForeignFieldName
    void setForeignCollectionForeignColumnName(java.lang.String) -> setForeignCollectionForeignColumnName
    void setForeignCollectionForeignFieldName(java.lang.String) -> setForeignCollectionForeignFieldName
    java.lang.Class getPersisterClass() -> getPersisterClass
    void setPersisterClass(java.lang.Class) -> setPersisterClass
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    void setAllowGeneratedIdInsert(boolean) -> setAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    void setColumnDefinition(java.lang.String) -> setColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    void setForeignAutoCreate(boolean) -> setForeignAutoCreate
    boolean isVersion() -> isVersion
    void setVersion(boolean) -> setVersion
    java.lang.String getForeignColumnName() -> getForeignColumnName
    void setForeignColumnName(java.lang.String) -> setForeignColumnName
    boolean isReadOnly() -> isReadOnly
    void setReadOnly(boolean) -> setReadOnly
    com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> fromField
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> findGetMethod
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> findSetMethod
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> fromDatabaseField
    void postProcess() -> postProcess
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> findMatchingEnumVal
    com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> fromForeignCollection
    java.lang.String findIndexName(java.lang.String) -> findIndexName
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> methodFromField
com.j256.ormlite.field.DatabaseFieldConfigLoader -> com.j256.ormlite.field.DatabaseFieldConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    java.lang.String FIELD_NAME_FIELD_NAME -> FIELD_NAME_FIELD_NAME
    java.lang.String FIELD_NAME_COLUMN_NAME -> FIELD_NAME_COLUMN_NAME
    java.lang.String FIELD_NAME_DATA_PERSISTER -> FIELD_NAME_DATA_PERSISTER
    java.lang.String FIELD_NAME_DEFAULT_VALUE -> FIELD_NAME_DEFAULT_VALUE
    java.lang.String FIELD_NAME_WIDTH -> FIELD_NAME_WIDTH
    java.lang.String FIELD_NAME_CAN_BE_NULL -> FIELD_NAME_CAN_BE_NULL
    java.lang.String FIELD_NAME_ID -> FIELD_NAME_ID
    java.lang.String FIELD_NAME_GENERATED_ID -> FIELD_NAME_GENERATED_ID
    java.lang.String FIELD_NAME_GENERATED_ID_SEQUENCE -> FIELD_NAME_GENERATED_ID_SEQUENCE
    java.lang.String FIELD_NAME_FOREIGN -> FIELD_NAME_FOREIGN
    java.lang.String FIELD_NAME_USE_GET_SET -> FIELD_NAME_USE_GET_SET
    java.lang.String FIELD_NAME_UNKNOWN_ENUM_VALUE -> FIELD_NAME_UNKNOWN_ENUM_VALUE
    java.lang.String FIELD_NAME_THROW_IF_NULL -> FIELD_NAME_THROW_IF_NULL
    java.lang.String FIELD_NAME_FORMAT -> FIELD_NAME_FORMAT
    java.lang.String FIELD_NAME_UNIQUE -> FIELD_NAME_UNIQUE
    java.lang.String FIELD_NAME_UNIQUE_COMBO -> FIELD_NAME_UNIQUE_COMBO
    java.lang.String FIELD_NAME_INDEX -> FIELD_NAME_INDEX
    java.lang.String FIELD_NAME_INDEX_NAME -> FIELD_NAME_INDEX_NAME
    java.lang.String FIELD_NAME_UNIQUE_INDEX -> FIELD_NAME_UNIQUE_INDEX
    java.lang.String FIELD_NAME_UNIQUE_INDEX_NAME -> FIELD_NAME_UNIQUE_INDEX_NAME
    java.lang.String FIELD_NAME_FOREIGN_AUTO_REFRESH -> FIELD_NAME_FOREIGN_AUTO_REFRESH
    java.lang.String FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String FIELD_NAME_PERSISTER_CLASS -> FIELD_NAME_PERSISTER_CLASS
    java.lang.String FIELD_NAME_ALLOW_GENERATED_ID_INSERT -> FIELD_NAME_ALLOW_GENERATED_ID_INSERT
    java.lang.String FIELD_NAME_COLUMN_DEFINITION -> FIELD_NAME_COLUMN_DEFINITION
    java.lang.String FIELD_NAME_FOREIGN_AUTO_CREATE -> FIELD_NAME_FOREIGN_AUTO_CREATE
    java.lang.String FIELD_NAME_VERSION -> FIELD_NAME_VERSION
    java.lang.String FIELD_NAME_FOREIGN_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLUMN_NAME
    java.lang.String FIELD_NAME_READ_ONLY -> FIELD_NAME_READ_ONLY
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION -> FIELD_NAME_FOREIGN_COLLECTION
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_EAGER -> FIELD_NAME_FOREIGN_COLLECTION_EAGER
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME
    com.j256.ormlite.field.DatabaseFieldConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> writeConfig
    void readField(com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String,java.lang.String) -> readField
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.field.FieldConverter:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    boolean isStreamType() -> isStreamType
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.FieldType -> com.j256.ormlite.field.FieldType:
    java.lang.String FOREIGN_ID_FIELD_SUFFIX -> FOREIGN_ID_FIELD_SUFFIX
    boolean DEFAULT_VALUE_BOOLEAN -> DEFAULT_VALUE_BOOLEAN
    byte DEFAULT_VALUE_BYTE -> DEFAULT_VALUE_BYTE
    char DEFAULT_VALUE_CHAR -> DEFAULT_VALUE_CHAR
    short DEFAULT_VALUE_SHORT -> DEFAULT_VALUE_SHORT
    int DEFAULT_VALUE_INT -> DEFAULT_VALUE_INT
    long DEFAULT_VALUE_LONG -> DEFAULT_VALUE_LONG
    float DEFAULT_VALUE_FLOAT -> DEFAULT_VALUE_FLOAT
    double DEFAULT_VALUE_DOUBLE -> DEFAULT_VALUE_DOUBLE
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.String tableName -> tableName
    java.lang.reflect.Field field -> field
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> fieldConfig
    boolean isId -> isId
    boolean isGeneratedId -> isGeneratedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    java.lang.reflect.Method fieldGetMethod -> fieldGetMethod
    java.lang.reflect.Method fieldSetMethod -> fieldSetMethod
    java.lang.Class parentClass -> parentClass
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object dataTypeConfigObj -> dataTypeConfigObj
    com.j256.ormlite.field.FieldConverter fieldConverter -> fieldConverter
    com.j256.ormlite.field.FieldType foreignIdField -> foreignIdField
    com.j256.ormlite.table.TableInfo foreignTableInfo -> foreignTableInfo
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    com.j256.ormlite.dao.BaseDaoImpl foreignDao -> foreignDao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    java.lang.ThreadLocal threadLevelCounters -> threadLevelCounters
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> configDaoInformation
    java.lang.reflect.Field getField() -> getField
    java.lang.String getTableName() -> getTableName
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getType() -> getType
    java.lang.String getColumnName() -> getColumnName
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    java.lang.Object getDataTypeConfigObj() -> getDataTypeConfigObj
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object getDefaultValue() -> getDefaultValue
    int getWidth() -> getWidth
    boolean isCanBeNull() -> isCanBeNull
    boolean isId() -> isId
    boolean isGeneratedId() -> isGeneratedId
    boolean isGeneratedIdSequence() -> isGeneratedIdSequence
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    boolean isForeign() -> isForeign
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> assignField
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> extractRawJavaFieldValue
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> extractJavaFieldValue
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> extractJavaFieldToSqlArgValue
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> convertJavaFieldToSqlArgValue
    java.lang.Object convertStringToJavaField(java.lang.String,int) -> convertStringToJavaField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.FieldType getForeignIdField() -> getForeignIdField
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Enum getUnknownEnumVal() -> getUnknownEnumVal
    java.lang.String getFormat() -> getFormat
    boolean isUnique() -> isUnique
    boolean isUniqueCombo() -> isUniqueCombo
    java.lang.String getIndexName() -> getIndexName
    java.lang.String getUniqueIndexName() -> getUniqueIndexName
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isComparable() -> isComparable
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isForeignCollection() -> isForeignCollection
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object) -> buildForeignCollection
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> resultToJava
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    boolean isVersion() -> isVersion
    java.lang.Object generateId() -> generateId
    boolean isReadOnly() -> isReadOnly
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> getFieldValueIfNotDefault
    boolean isObjectsFieldValueDefault(java.lang.Object) -> isObjectsFieldValueDefault
    java.lang.Object getJavaDefaultValueDefault() -> getJavaDefaultValueDefault
    int createWithForeignDao(java.lang.Object) -> createWithForeignDao
    com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> createFieldType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isFieldValueDefault(java.lang.Object) -> isFieldValueDefault
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> findForeignFieldType
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> assignDataType
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.field.FieldType$1:
    com.j256.ormlite.field.FieldType$LevelCounters initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.field.FieldType$LevelCounters:
    int autoRefreshLevel -> autoRefreshLevel
    int autoRefreshLevelMax -> autoRefreshLevelMax
    int foreignCollectionLevel -> foreignCollectionLevel
    int foreignCollectionLevelMax -> foreignCollectionLevelMax
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.field.ForeignCollectionField:
    int MAX_EAGER_LEVEL -> MAX_EAGER_LEVEL
    boolean eager() -> eager
    int maxEagerForeignCollectionLevel() -> maxEagerForeignCollectionLevel
    int maxEagerLevel() -> maxEagerLevel
    java.lang.String columnName() -> columnName
    java.lang.String orderColumnName() -> orderColumnName
    boolean orderAscending() -> orderAscending
    java.lang.String foreignColumnName() -> foreignColumnName
    java.lang.String foreignFieldName() -> foreignFieldName
com.j256.ormlite.field.SqlType -> com.j256.ormlite.field.SqlType:
    com.j256.ormlite.field.SqlType STRING -> STRING
    com.j256.ormlite.field.SqlType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.SqlType DATE -> DATE
    com.j256.ormlite.field.SqlType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.SqlType CHAR -> CHAR
    com.j256.ormlite.field.SqlType BYTE -> BYTE
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.SqlType SHORT -> SHORT
    com.j256.ormlite.field.SqlType INTEGER -> INTEGER
    com.j256.ormlite.field.SqlType LONG -> LONG
    com.j256.ormlite.field.SqlType FLOAT -> FLOAT
    com.j256.ormlite.field.SqlType DOUBLE -> DOUBLE
    com.j256.ormlite.field.SqlType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.SqlType BLOB -> BLOB
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.SqlType OTHER -> OTHER
    com.j256.ormlite.field.SqlType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.SqlType[] $VALUES -> $VALUES
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.field.types.BaseDataType:
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Class[] classes -> classes
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.field.types.BaseDateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> convertDateStringConfig
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> parseDateString
    java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> normalizeDateString
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig:
    java.lang.ThreadLocal threadLocal -> threadLocal
    java.lang.String dateFormatStr -> dateFormatStr
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$0 -> this$0
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.field.types.BaseEnumType:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> enumVal
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.field.types.BigDecimalNumericType:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.field.types.BigDecimalStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.field.types.BigIntegerType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.field.types.BooleanObjectType:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.field.types.BooleanType:
    com.j256.ormlite.field.types.BooleanType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.field.types.ByteArrayType:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.field.types.ByteObjectType:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.field.types.ByteType:
    com.j256.ormlite.field.types.ByteType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.field.types.CharType:
    com.j256.ormlite.field.types.CharType singleTon -> singleTon
    com.j256.ormlite.field.types.CharType getSingleton() -> getSingleton
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.field.types.CharacterObjectType:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.field.types.DateLongType:
    com.j256.ormlite.field.types.DateLongType singleTon -> singleTon
    com.j256.ormlite.field.types.DateLongType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.field.types.DateStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.DateStringType singleTon -> singleTon
    com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateTimeType -> com.j256.ormlite.field.types.DateTimeType:
    com.j256.ormlite.field.types.DateTimeType singleTon -> singleTon
    java.lang.Class dateTimeClass -> dateTimeClass
    java.lang.reflect.Method getMillisMethod -> getMillisMethod
    java.lang.reflect.Constructor millisConstructor -> millisConstructor
    java.lang.String[] associatedClassNames -> associatedClassNames
    com.j256.ormlite.field.types.DateTimeType getSingleton() -> getSingleton
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.reflect.Method getMillisMethod() -> getMillisMethod
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.Class getDateTimeClass() -> getDateTimeClass
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.field.types.DateType:
    com.j256.ormlite.field.types.DateType singleTon -> singleTon
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.field.types.DoubleObjectType:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.field.types.DoubleType:
    com.j256.ormlite.field.types.DoubleType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.field.types.EnumIntegerType:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.field.types.EnumStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.EnumStringType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.field.types.FloatObjectType:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.field.types.FloatType:
    com.j256.ormlite.field.types.FloatType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.field.types.IntType:
    com.j256.ormlite.field.types.IntType singleTon -> singleTon
    com.j256.ormlite.field.types.IntType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.field.types.IntegerObjectType:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.field.types.LongObjectType:
    com.j256.ormlite.field.types.LongObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.field.types.LongStringType:
    com.j256.ormlite.field.types.LongStringType singleTon -> singleTon
    com.j256.ormlite.field.types.LongStringType getSingleton() -> getSingleton
    boolean isAppropriateId() -> isAppropriateId
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.field.types.LongType:
    com.j256.ormlite.field.types.LongType singleTon -> singleTon
    com.j256.ormlite.field.types.LongType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.field.types.SerializableType:
    com.j256.ormlite.field.types.SerializableType singleTon -> singleTon
    com.j256.ormlite.field.types.SerializableType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isStreamType() -> isStreamType
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.field.types.ShortObjectType:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.field.types.ShortType:
    com.j256.ormlite.field.types.ShortType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SqlDateType -> com.j256.ormlite.field.types.SqlDateType:
    com.j256.ormlite.field.types.SqlDateType singleTon -> singleTon
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> sqlDateFormatConfig
    com.j256.ormlite.field.types.SqlDateType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.field.types.StringBytesType:
    java.lang.String DEFAULT_STRING_BYTES_CHARSET_NAME -> DEFAULT_STRING_BYTES_CHARSET_NAME
    com.j256.ormlite.field.types.StringBytesType singleTon -> singleTon
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> getCharsetName
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.field.types.StringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.StringType singleTon -> singleTon
    com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.TimeStampType -> com.j256.ormlite.field.types.TimeStampType:
    com.j256.ormlite.field.types.TimeStampType singleTon -> singleTon
    com.j256.ormlite.field.types.TimeStampType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.field.types.UuidType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.UuidType singleTon -> singleTon
    com.j256.ormlite.field.types.UuidType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.field.types.VoidType:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.logger.LocalLog:
    java.lang.String LOCAL_LOG_LEVEL_PROPERTY -> LOCAL_LOG_LEVEL_PROPERTY
    java.lang.String LOCAL_LOG_FILE_PROPERTY -> LOCAL_LOG_FILE_PROPERTY
    java.lang.String LOCAL_LOG_PROPERTIES_FILE -> LOCAL_LOG_PROPERTIES_FILE
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.ThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    java.io.PrintStream printStream -> printStream
    java.util.List classLevels -> classLevels
    java.lang.String className -> className
    com.j256.ormlite.logger.Log$Level level -> level
    void openLogFile(java.lang.String) -> openLogFile
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void flush() -> flush
    java.util.List readLevelResourceFile(java.io.InputStream) -> readLevelResourceFile
    java.util.List configureClassLevels(java.io.InputStream) -> configureClassLevels
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> printMessage
com.j256.ormlite.logger.LocalLog$1 -> com.j256.ormlite.logger.LocalLog$1:
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.logger.LocalLog$PatternLevel:
    java.util.regex.Pattern pattern -> pattern
    com.j256.ormlite.logger.Log$Level level -> level
com.j256.ormlite.logger.Log -> com.j256.ormlite.logger.Log:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.logger.Log$Level:
    com.j256.ormlite.logger.Log$Level TRACE -> TRACE
    com.j256.ormlite.logger.Log$Level DEBUG -> DEBUG
    com.j256.ormlite.logger.Log$Level INFO -> INFO
    com.j256.ormlite.logger.Log$Level WARNING -> WARNING
    com.j256.ormlite.logger.Log$Level ERROR -> ERROR
    com.j256.ormlite.logger.Log$Level FATAL -> FATAL
    int level -> level
    com.j256.ormlite.logger.Log$Level[] $VALUES -> $VALUES
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> isEnabled
com.j256.ormlite.logger.Logger -> com.j256.ormlite.logger.Logger:
    java.lang.String ARG_STRING -> ARG_STRING
    int ARG_STRING_LENGTH -> ARG_STRING_LENGTH
    java.lang.Object UNKNOWN_ARG -> UNKNOWN_ARG
    com.j256.ormlite.logger.Log log -> log
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.String) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.String) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.String) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.String) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.String) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void fatal(java.lang.String) -> fatal
    void fatal(java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object[]) -> fatal
    void fatal(java.lang.Throwable,java.lang.String) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> fatal
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object[]) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    void innerLog(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> innerLog
    java.lang.String buildFullMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> buildFullMessage
    void appendArg(java.lang.StringBuilder,java.lang.Object) -> appendArg
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.logger.LoggerFactory:
    java.lang.String LOG_TYPE_SYSTEM_PROPERTY -> LOG_TYPE_SYSTEM_PROPERTY
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> logType
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> getLogger
    com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> getLogger
    java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> findLogType
com.j256.ormlite.logger.LoggerFactory$1 -> com.j256.ormlite.logger.LoggerFactory$1:
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.logger.LoggerFactory$LogType:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> ANDROID
    com.j256.ormlite.logger.LoggerFactory$LogType SLF4J -> SLF4J
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> COMMONS_LOGGING
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J2 -> LOG4J2
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> LOG4J
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> LOCAL
    java.lang.String detectClassName -> detectClassName
    java.lang.String logClassName -> logClassName
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> $VALUES
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> createLogFromClassName
    boolean isAvailableTestClass() -> isAvailableTestClass
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.logger.LoggerFactory$LogType$1:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.misc.BaseDaoEnabled:
    com.j256.ormlite.dao.Dao dao -> dao
    int create() -> create
    int refresh() -> refresh
    int update() -> update
    int updateId(java.lang.Object) -> updateId
    int delete() -> delete
    java.lang.String objectToString() -> objectToString
    java.lang.Object extractId() -> extractId
    boolean objectsEqual(java.lang.Object) -> objectsEqual
    void setDao(com.j256.ormlite.dao.Dao) -> setDao
    com.j256.ormlite.dao.Dao getDao() -> getDao
    void checkForDao() -> checkForDao
com.j256.ormlite.misc.JavaxPersistence -> com.j256.ormlite.misc.JavaxPersistence:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    java.lang.String getEntityName(java.lang.Class) -> getEntityName
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.misc.SqlExceptionUtil:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> create
com.j256.ormlite.misc.TransactionManager -> com.j256.ormlite.misc.TransactionManager:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String SAVE_POINT_PREFIX -> SAVE_POINT_PREFIX
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.util.concurrent.atomic.AtomicInteger savePointCounter -> savePointCounter
    void initialize() -> initialize
    java.lang.Object callInTransaction(java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,boolean,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void commit(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> rollBack
com.j256.ormlite.misc.VersionUtils -> com.j256.ormlite.misc.VersionUtils:
    java.lang.String CORE_VERSION -> CORE_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    boolean thrownOnErrors -> thrownOnErrors
    java.lang.String coreVersion -> coreVersion
    void checkCoreVersusJdbcVersions(java.lang.String) -> checkCoreVersusJdbcVersions
    void checkCoreVersusAndroidVersions(java.lang.String) -> checkCoreVersusAndroidVersions
    java.lang.String getCoreVersion() -> getCoreVersion
    void setThrownOnErrors(boolean) -> setThrownOnErrors
    void logVersionWarnings(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> logVersionWarnings
    void warning(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[]) -> warning
    com.j256.ormlite.logger.Logger getLogger() -> getLogger
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.stmt.ArgumentHolder:
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.stmt.BaseArgumentHolder:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.ColumnArg -> com.j256.ormlite.stmt.ColumnArg:
    java.lang.String tableName -> tableName
    java.lang.String columnName -> columnName
    java.lang.String getTableName() -> getTableName
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.DeleteBuilder -> com.j256.ormlite.stmt.DeleteBuilder:
    com.j256.ormlite.stmt.PreparedDelete prepare() -> prepare
    int delete() -> delete
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.stmt.GenericRowMapper:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.NullArgHolder -> com.j256.ormlite.stmt.NullArgHolder:
    java.lang.String getColumnName() -> getColumnName
    void setValue(java.lang.Object) -> setValue
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.stmt.PreparedDelete:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.stmt.PreparedQuery:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.stmt.PreparedStmt:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.stmt.PreparedUpdate:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.stmt.QueryBuilder:
    com.j256.ormlite.field.FieldType idField -> idField
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> resultFieldTypes
    boolean distinct -> distinct
    boolean selectIdColumn -> selectIdColumn
    java.util.List selectColumnList -> selectColumnList
    java.util.List selectRawList -> selectRawList
    java.util.List orderByList -> orderByList
    java.lang.String orderByRaw -> orderByRaw
    com.j256.ormlite.stmt.ArgumentHolder[] orderByArgs -> orderByArgs
    java.util.List groupByList -> groupByList
    java.lang.String groupByRaw -> groupByRaw
    boolean isInnerQuery -> isInnerQuery
    boolean isCountOfQuery -> isCountOfQuery
    java.lang.String having -> having
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    java.util.List joinList -> joinList
    void enableInnerQuery() -> enableInnerQuery
    int getSelectColumnCount() -> getSelectColumnCount
    java.util.List getSelectColumns() -> getSelectColumns
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.String[]) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.Iterable) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> selectRaw
    com.j256.ormlite.stmt.QueryBuilder groupBy(java.lang.String) -> groupBy
    com.j256.ormlite.stmt.QueryBuilder groupByRaw(java.lang.String) -> groupByRaw
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> orderBy
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder distinct() -> distinct
    com.j256.ormlite.stmt.QueryBuilder limit(int) -> limit
    com.j256.ormlite.stmt.QueryBuilder limit(java.lang.Long) -> limit
    com.j256.ormlite.stmt.QueryBuilder offset(int) -> offset
    com.j256.ormlite.stmt.QueryBuilder offset(java.lang.Long) -> offset
    com.j256.ormlite.stmt.QueryBuilder setCountOf(boolean) -> setCountOf
    com.j256.ormlite.stmt.QueryBuilder having(java.lang.String) -> having
    com.j256.ormlite.stmt.QueryBuilder join(com.j256.ormlite.stmt.QueryBuilder) -> join
    com.j256.ormlite.stmt.QueryBuilder joinOr(com.j256.ormlite.stmt.QueryBuilder) -> joinOr
    com.j256.ormlite.stmt.QueryBuilder leftJoin(com.j256.ormlite.stmt.QueryBuilder) -> leftJoin
    com.j256.ormlite.stmt.QueryBuilder leftJoinOr(com.j256.ormlite.stmt.QueryBuilder) -> leftJoinOr
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    long countOf() -> countOf
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    void setAddTableName(boolean) -> setAddTableName
    void addJoinInfo(java.lang.String,com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> addJoinInfo
    void matchJoinedFields(com.j256.ormlite.stmt.QueryBuilder$JoinInfo,com.j256.ormlite.stmt.QueryBuilder) -> matchJoinedFields
    void addSelectColumnToList(java.lang.String) -> addSelectColumnToList
    void appendJoinSql(java.lang.StringBuilder) -> appendJoinSql
    void appendSelectRaw(java.lang.StringBuilder) -> appendSelectRaw
    void appendColumns(java.lang.StringBuilder) -> appendColumns
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    void appendLimit(java.lang.StringBuilder) -> appendLimit
    void appendOffset(java.lang.StringBuilder) -> appendOffset
    void appendGroupBys(java.lang.StringBuilder) -> appendGroupBys
    boolean hasGroupStuff() -> hasGroupStuff
    void appendGroupBys(java.lang.StringBuilder,boolean) -> appendGroupBys
    void appendOrderBys(java.lang.StringBuilder,java.util.List) -> appendOrderBys
    boolean hasOrderStuff() -> hasOrderStuff
    void appendOrderBys(java.lang.StringBuilder,boolean,java.util.List) -> appendOrderBys
    void appendColumnName(java.lang.StringBuilder,java.lang.String) -> appendColumnName
    void appendHaving(java.lang.StringBuilder) -> appendHaving
com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper -> com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper:
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
com.j256.ormlite.stmt.QueryBuilder$JoinInfo -> com.j256.ormlite.stmt.QueryBuilder$JoinInfo:
    java.lang.String type -> type
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    com.j256.ormlite.field.FieldType localField -> localField
    com.j256.ormlite.field.FieldType remoteField -> remoteField
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation operation -> operation
    com.j256.ormlite.stmt.QueryBuilder this$0 -> this$0
com.j256.ormlite.stmt.RawResultsImpl -> com.j256.ormlite.stmt.RawResultsImpl:
    com.j256.ormlite.stmt.SelectIterator iterator -> iterator
    java.lang.String[] columnNames -> columnNames
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.stmt.RawRowMapperImpl -> com.j256.ormlite.stmt.RawRowMapperImpl:
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.stmt.SelectArg:
    boolean hasBeenSet -> hasBeenSet
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.stmt.SelectIterator:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.dao.Dao classDao -> classDao
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    com.j256.ormlite.support.CompiledStatement compiledStmt -> compiledStmt
    com.j256.ormlite.support.DatabaseResults results -> results
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> rowMapper
    java.lang.String statement -> statement
    boolean first -> first
    boolean closed -> closed
    boolean alreadyMoved -> alreadyMoved
    java.lang.Object last -> last
    int rowC -> rowC
    boolean hasNextThrow() -> hasNextThrow
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object next() -> next
    java.lang.Object moveRelative(int) -> moveRelative
    void removeThrow() -> removeThrow
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object getCurrent() -> getCurrent
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.stmt.StatementBuilder:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.String tableName -> tableName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean addTableName -> addTableName
    com.j256.ormlite.stmt.Where where -> where
    com.j256.ormlite.stmt.Where where() -> where
    void setWhere(com.j256.ormlite.stmt.Where) -> setWhere
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement(java.lang.Long) -> prepareStatement
    java.lang.String prepareStatementString() -> prepareStatementString
    com.j256.ormlite.stmt.StatementBuilder$StatementInfo prepareStatementInfo() -> prepareStatementInfo
    void clear() -> clear
    void reset() -> reset
    java.lang.String buildStatementString(java.util.List) -> buildStatementString
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> verifyColumnName
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.StatementBuilder$1 -> com.j256.ormlite.stmt.StatementBuilder$1:
com.j256.ormlite.stmt.StatementBuilder$StatementInfo -> com.j256.ormlite.stmt.StatementBuilder$StatementInfo:
    java.lang.String statement -> statement
    java.util.List argList -> argList
    java.lang.String getStatement() -> getStatement
    java.util.List getArgList() -> getArgList
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.stmt.StatementBuilder$StatementType:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> SELECT
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> SELECT_LONG
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> SELECT_RAW
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> UPDATE
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> DELETE
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> EXECUTE
    boolean okForStatementBuilder -> okForStatementBuilder
    boolean okForQuery -> okForQuery
    boolean okForUpdate -> okForUpdate
    boolean okForExecute -> okForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    boolean isOkForStatementBuilder() -> isOkForStatementBuilder
    boolean isOkForQuery() -> isOkForQuery
    boolean isOkForUpdate() -> isOkForUpdate
    boolean isOkForExecute() -> isOkForExecute
com.j256.ormlite.stmt.StatementBuilder$WhereOperation -> com.j256.ormlite.stmt.StatementBuilder$WhereOperation:
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation FIRST -> FIRST
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation AND -> AND
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation OR -> OR
    java.lang.String before -> before
    java.lang.String after -> after
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation valueOf(java.lang.String) -> valueOf
    void appendBefore(java.lang.StringBuilder) -> appendBefore
    void appendAfter(java.lang.StringBuilder) -> appendAfter
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.stmt.StatementExecutor:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> preparedQueryForAll
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> mappedInsert
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> mappedUpdate
    com.j256.ormlite.stmt.mapped.MappedUpdateId mappedUpdateId -> mappedUpdateId
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> mappedDelete
    com.j256.ormlite.stmt.mapped.MappedRefresh mappedRefresh -> mappedRefresh
    java.lang.String countStarQuery -> countStarQuery
    java.lang.String ifExistsQuery -> ifExistsQuery
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> ifExistsFieldTypes
    com.j256.ormlite.dao.RawRowMapper rawRowMapper -> rawRowMapper
    java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> queryForFirst
    java.util.List queryForAll(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> queryForAll
    long queryForCountStar(com.j256.ormlite.support.DatabaseConnection) -> queryForCountStar
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt) -> queryForLong
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> queryForLong
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> query
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,int,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache,int) -> buildIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    int updateRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> updateRaw
    int executeRawNoArgs(com.j256.ormlite.support.DatabaseConnection,java.lang.String) -> executeRawNoArgs
    int executeRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> executeRaw
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> create
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    int updateId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> updateId
    int update(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> refresh
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
    int deleteObjects(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    int delete(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedDelete) -> delete
    java.lang.Object callBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> ifExists
    void assignStatementArguments(com.j256.ormlite.support.CompiledStatement,java.lang.String[]) -> assignStatementArguments
    void prepareQueryForAll() -> prepareQueryForAll
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper -> com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper:
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.Object[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper:
    com.j256.ormlite.dao.RawRowMapper mapper -> mapper
    com.j256.ormlite.stmt.GenericRowMapper stringRowMapper -> stringRowMapper
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper:
    com.j256.ormlite.dao.RawRowObjectMapper mapper -> mapper
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.ThreadLocalSelectArg -> com.j256.ormlite.stmt.ThreadLocalSelectArg:
    java.lang.ThreadLocal threadValue -> threadValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper -> com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper:
    java.lang.Object value -> value
com.j256.ormlite.stmt.UpdateBuilder -> com.j256.ormlite.stmt.UpdateBuilder:
    java.util.List updateClauseList -> updateClauseList
    com.j256.ormlite.stmt.PreparedUpdate prepare() -> prepare
    com.j256.ormlite.stmt.StatementBuilder updateColumnValue(java.lang.String,java.lang.Object) -> updateColumnValue
    com.j256.ormlite.stmt.StatementBuilder updateColumnExpression(java.lang.String,java.lang.String) -> updateColumnExpression
    void escapeColumnName(java.lang.StringBuilder,java.lang.String) -> escapeColumnName
    java.lang.String escapeColumnName(java.lang.String) -> escapeColumnName
    void escapeValue(java.lang.StringBuilder,java.lang.String) -> escapeValue
    java.lang.String escapeValue(java.lang.String) -> escapeValue
    int update() -> update
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    void addUpdateColumnToList(java.lang.String,com.j256.ormlite.stmt.query.Clause) -> addUpdateColumnToList
com.j256.ormlite.stmt.Where -> com.j256.ormlite.stmt.Where:
    int CLAUSE_STACK_START_SIZE -> CLAUSE_STACK_START_SIZE
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> statementBuilder
    com.j256.ormlite.field.FieldType idFieldType -> idFieldType
    java.lang.String idColumnName -> idColumnName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> clauseStack
    int clauseStackLevel -> clauseStackLevel
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> needsFuture
    com.j256.ormlite.stmt.Where and() -> and
    com.j256.ormlite.stmt.Where and(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> and
    com.j256.ormlite.stmt.Where and(int) -> and
    com.j256.ormlite.stmt.Where between(java.lang.String,java.lang.Object,java.lang.Object) -> between
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> eq
    com.j256.ormlite.stmt.Where ge(java.lang.String,java.lang.Object) -> ge
    com.j256.ormlite.stmt.Where gt(java.lang.String,java.lang.Object) -> gt
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Iterable) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Iterable) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> notIn
    com.j256.ormlite.stmt.Where exists(com.j256.ormlite.stmt.QueryBuilder) -> exists
    com.j256.ormlite.stmt.Where isNull(java.lang.String) -> isNull
    com.j256.ormlite.stmt.Where isNotNull(java.lang.String) -> isNotNull
    com.j256.ormlite.stmt.Where le(java.lang.String,java.lang.Object) -> le
    com.j256.ormlite.stmt.Where lt(java.lang.String,java.lang.Object) -> lt
    com.j256.ormlite.stmt.Where like(java.lang.String,java.lang.Object) -> like
    com.j256.ormlite.stmt.Where ne(java.lang.String,java.lang.Object) -> ne
    com.j256.ormlite.stmt.Where not() -> not
    com.j256.ormlite.stmt.Where not(com.j256.ormlite.stmt.Where) -> not
    com.j256.ormlite.stmt.Where or() -> or
    com.j256.ormlite.stmt.Where or(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> or
    com.j256.ormlite.stmt.Where or(int) -> or
    com.j256.ormlite.stmt.Where idEq(java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where idEq(com.j256.ormlite.dao.Dao,java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where raw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> raw
    com.j256.ormlite.stmt.Where rawComparison(java.lang.String,java.lang.String,java.lang.Object) -> rawComparison
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    long countOf() -> countOf
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.stmt.Where clear() -> clear
    com.j256.ormlite.stmt.Where reset() -> reset
    java.lang.String getStatement() -> getStatement
    void appendSql(java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
    com.j256.ormlite.stmt.QueryBuilder checkQueryBuilderMethod(java.lang.String) -> checkQueryBuilderMethod
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.query.Clause[] buildClauseArray(com.j256.ormlite.stmt.Where[],java.lang.String) -> buildClauseArray
    void addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause) -> addNeedsFuture
    void addClause(com.j256.ormlite.stmt.query.Clause) -> addClause
    com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> findColumnFieldType
    void push(com.j256.ormlite.stmt.query.Clause) -> push
    com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> pop
    com.j256.ormlite.stmt.query.Clause peek() -> peek
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.stmt.mapped.BaseMappedQuery:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> resultsFieldTypes
    java.util.Map columnPositions -> columnPositions
    java.lang.Object parent -> parent
    java.lang.Object parentId -> parentId
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    void setParentInformation(java.lang.Object,java.lang.Object) -> setParentInformation
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.stmt.mapped.BaseMappedStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Class clazz -> clazz
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.String statement -> statement
    com.j256.ormlite.field.FieldType[] argFieldTypes -> argFieldTypes
    java.lang.Object[] getFieldObjects(java.lang.Object) -> getFieldObjects
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> convertIdToFieldObject
    void appendWhereFieldEq(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> appendWhereFieldEq
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTableName
    void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.stmt.mapped.MappedCreate:
    java.lang.String queryNextSequenceStmt -> queryNextSequenceStmt
    java.lang.String dataClassName -> dataClassName
    int versionFieldTypeIndex -> versionFieldTypeIndex
    int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> insert
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> foreignCollectionsAreAssigned
    boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> isFieldCreatable
    java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> buildQueryNextSequence
    void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> assignSequenceId
    void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
com.j256.ormlite.stmt.mapped.MappedCreate$1 -> com.j256.ormlite.stmt.mapped.MappedCreate$1:
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder:
    java.lang.Number key -> key
    java.lang.Number getKey() -> getKey
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.stmt.mapped.MappedDelete:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
com.j256.ormlite.stmt.mapped.MappedDeleteCollection -> com.j256.ormlite.stmt.mapped.MappedDeleteCollection:
    int deleteObjects(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    com.j256.ormlite.stmt.mapped.MappedDeleteCollection build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,int) -> build
    int updateRows(com.j256.ormlite.support.DatabaseConnection,java.lang.Class,com.j256.ormlite.stmt.mapped.MappedDeleteCollection,java.lang.Object[],com.j256.ormlite.dao.ObjectCache) -> updateRows
    void appendWhereIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int,com.j256.ormlite.field.FieldType[]) -> appendWhereIds
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.stmt.mapped.MappedPreparedStmt:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> argHolders
    java.lang.Long limit -> limit
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
    com.j256.ormlite.support.CompiledStatement assignStatementArguments(com.j256.ormlite.support.CompiledStatement) -> assignStatementArguments
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.stmt.mapped.MappedQueryForId:
    java.lang.String label -> label
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> build
    java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> buildStatement
    void logArgs(java.lang.Object[]) -> logArgs
com.j256.ormlite.stmt.mapped.MappedRefresh -> com.j256.ormlite.stmt.mapped.MappedRefresh:
    int executeRefresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> executeRefresh
    com.j256.ormlite.stmt.mapped.MappedRefresh build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.stmt.mapped.MappedUpdate:
    com.j256.ormlite.field.FieldType versionFieldType -> versionFieldType
    int versionFieldTypeIndex -> versionFieldTypeIndex
    com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> isFieldUpdatable
com.j256.ormlite.stmt.mapped.MappedUpdateId -> com.j256.ormlite.stmt.mapped.MappedUpdateId:
    int execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedUpdateId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    java.lang.Object extractIdToFieldObject(java.lang.Object) -> extractIdToFieldObject
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.stmt.query.BaseComparison:
    java.lang.String NUMBER_CHARACTERS -> NUMBER_CHARACTERS
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    java.lang.Object value -> value
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Between -> com.j256.ormlite.stmt.query.Between:
    java.lang.Object low -> low
    java.lang.Object high -> high
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.stmt.query.Clause:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.stmt.query.Comparison:
    java.lang.String getColumnName() -> getColumnName
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
com.j256.ormlite.stmt.query.Exists -> com.j256.ormlite.stmt.query.Exists:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.In -> com.j256.ormlite.stmt.query.In:
    java.lang.Iterable objects -> objects
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.InSubQuery -> com.j256.ormlite.stmt.query.InSubQuery:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNotNull -> com.j256.ormlite.stmt.query.IsNotNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNull -> com.j256.ormlite.stmt.query.IsNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.ManyClause -> com.j256.ormlite.stmt.query.ManyClause:
    java.lang.String AND_OPERATION -> AND_OPERATION
    java.lang.String OR_OPERATION -> OR_OPERATION
    com.j256.ormlite.stmt.query.Clause first -> first
    com.j256.ormlite.stmt.query.Clause second -> second
    com.j256.ormlite.stmt.query.Clause[] others -> others
    int startOthersAt -> startOthersAt
    java.lang.String operation -> operation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.stmt.query.NeedsFutureClause:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.Not -> com.j256.ormlite.stmt.query.Not:
    com.j256.ormlite.stmt.query.Comparison comparison -> comparison
    com.j256.ormlite.stmt.query.Exists exists -> exists
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.stmt.query.OrderBy:
    java.lang.String columnName -> columnName
    boolean ascending -> ascending
    java.lang.String getColumnName() -> getColumnName
    boolean isAscending() -> isAscending
com.j256.ormlite.stmt.query.Raw -> com.j256.ormlite.stmt.query.Raw:
    java.lang.String statement -> statement
    com.j256.ormlite.stmt.ArgumentHolder[] args -> args
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetExpression -> com.j256.ormlite.stmt.query.SetExpression:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetValue -> com.j256.ormlite.stmt.query.SetValue:
    com.j256.ormlite.stmt.ArgumentHolder nullValue -> nullValue
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.stmt.query.SimpleComparison:
    java.lang.String EQUAL_TO_OPERATION -> EQUAL_TO_OPERATION
    java.lang.String GREATER_THAN_OPERATION -> GREATER_THAN_OPERATION
    java.lang.String GREATER_THAN_EQUAL_TO_OPERATION -> GREATER_THAN_EQUAL_TO_OPERATION
    java.lang.String LESS_THAN_OPERATION -> LESS_THAN_OPERATION
    java.lang.String LESS_THAN_EQUAL_TO_OPERATION -> LESS_THAN_EQUAL_TO_OPERATION
    java.lang.String LIKE_OPERATION -> LIKE_OPERATION
    java.lang.String NOT_EQUAL_TO_OPERATION -> NOT_EQUAL_TO_OPERATION
    java.lang.String operation -> operation
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.support.BaseConnectionSource:
    java.lang.ThreadLocal specialConnection -> specialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> getSavedConnection
    boolean isSavedConnection(com.j256.ormlite.support.DatabaseConnection) -> isSavedConnection
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> saveSpecial
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> clearSpecial
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.support.BaseConnectionSource$NestedConnection:
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    int nestedC -> nestedC
    void increment() -> increment
    int decrementAndGet() -> decrementAndGet
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.support.CompiledStatement:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    int runUpdate() -> runUpdate
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.support.ConnectionSource:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.support.DatabaseConnection:
    java.lang.Object MORE_THAN_ONE -> MORE_THAN_ONE
    int DEFAULT_RESULT_FLAGS -> DEFAULT_RESULT_FLAGS
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxy -> com.j256.ormlite.support.DatabaseConnectionProxy:
    com.j256.ormlite.support.DatabaseConnection proxy -> proxy
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxyFactory -> com.j256.ormlite.support.DatabaseConnectionProxyFactory:
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.support.DatabaseResults:
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean previous() -> previous
    boolean next() -> next
    boolean last() -> last
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.support.GeneratedKeyHolder:
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory -> com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory:
    java.lang.Class proxyClass -> proxyClass
    java.lang.reflect.Constructor constructor -> constructor
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.table.DatabaseTable:
    java.lang.String tableName() -> tableName
    java.lang.Class daoClass() -> daoClass
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.table.DatabaseTableConfig:
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    java.util.List fieldConfigs -> fieldConfigs
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    java.lang.reflect.Constructor constructor -> constructor
    void initialize() -> initialize
    java.lang.Class getDataClass() -> getDataClass
    void setDataClass(java.lang.Class) -> setDataClass
    java.lang.String getTableName() -> getTableName
    void setTableName(java.lang.String) -> setTableName
    void setFieldConfigs(java.util.List) -> setFieldConfigs
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> getFieldTypes
    java.util.List getFieldConfigs() -> getFieldConfigs
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    void setConstructor(java.lang.reflect.Constructor) -> setConstructor
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    java.lang.String extractTableName(java.lang.Class) -> extractTableName
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> findNoArgConstructor
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> convertFieldConfigs
com.j256.ormlite.table.DatabaseTableConfigLoader -> com.j256.ormlite.table.DatabaseTableConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    java.lang.String CONFIG_FILE_FIELDS_START -> CONFIG_FILE_FIELDS_START
    java.lang.String CONFIG_FILE_FIELDS_END -> CONFIG_FILE_FIELDS_END
    java.lang.String FIELD_NAME_DATA_CLASS -> FIELD_NAME_DATA_CLASS
    java.lang.String FIELD_NAME_TABLE_NAME -> FIELD_NAME_TABLE_NAME
    java.util.List loadDatabaseConfigFromReader(java.io.BufferedReader) -> loadDatabaseConfigFromReader
    com.j256.ormlite.table.DatabaseTableConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> writeConfig
    void readTableField(com.j256.ormlite.table.DatabaseTableConfig,java.lang.String,java.lang.String) -> readTableField
    void readFields(java.io.BufferedReader,com.j256.ormlite.table.DatabaseTableConfig) -> readFields
com.j256.ormlite.table.ObjectFactory -> com.j256.ormlite.table.ObjectFactory:
    java.lang.Object createObject(java.lang.reflect.Constructor,java.lang.Class) -> createObject
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.table.TableInfo:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> NO_FOREIGN_COLLECTIONS
    com.j256.ormlite.dao.BaseDaoImpl baseDaoImpl -> baseDaoImpl
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    com.j256.ormlite.field.FieldType[] foreignCollections -> foreignCollections
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.reflect.Constructor constructor -> constructor
    boolean foreignAutoCreate -> foreignAutoCreate
    java.util.Map fieldNameMap -> fieldNameMap
    java.lang.Class getDataClass() -> getDataClass
    java.lang.String getTableName() -> getTableName
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> getFieldTypes
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> getFieldTypeByColumnName
    com.j256.ormlite.field.FieldType getIdField() -> getIdField
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.String objectToString(java.lang.Object) -> objectToString
    java.lang.Object createObject() -> createObject
    boolean isUpdatable() -> isUpdatable
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    com.j256.ormlite.field.FieldType[] getForeignCollections() -> getForeignCollections
    boolean hasColumnName(java.lang.String) -> hasColumnName
    void wireNewInstance(com.j256.ormlite.dao.BaseDaoImpl,java.lang.Object) -> wireNewInstance
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.table.TableUtils:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTableIfNotExists
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTableIfNotExists
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> getCreateTableStatements
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> getCreateTableStatements
    int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> dropTable
    int dropTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> dropTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> clearTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> clearTable
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> createTable
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> createTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.String) -> clearTable
    int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doDropTable
    void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropIndexStatements
    void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> addCreateTableStatements
    void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> addCreateIndexStatements
    void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropTableStatements
    int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doCreateTable
    int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean,boolean) -> doStatements
    int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> doCreateTestQueries
    java.util.List addCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> addCreateTableStatements
com.jjoe64.graphview.GraphView -> com.jjoe64.graphview.GraphView:
    java.lang.String[] horlabels -> a
    java.lang.String[] verlabels -> b
    boolean scrollable -> c
    double viewportStart -> d
    double viewportSize -> e
    com.jjoe64.graphview.compatible.ScaleGestureDetector scaleDetector -> f
    boolean scalable -> g
    java.util.List graphSeries -> h
    boolean showLegend -> i
    float legendWidth -> j
    com.jjoe64.graphview.GraphView$LegendAlign legendAlign -> k
    boolean manualYAxis -> l
    double manualMaxYValue -> m
    double manualMinYValue -> n
    com.jjoe64.graphview.GraphView$GraphViewData[] _values(int) -> a
    com.jjoe64.graphview.GraphView$LegendAlign getLegendAlign() -> getLegendAlign
    float getLegendWidth() -> getLegendWidth
    double getMaxY() -> getMaxY
    double getMinY() -> getMinY
    void setHorizontalLabels(java.lang.String[]) -> setHorizontalLabels
    void setLegendAlign(com.jjoe64.graphview.GraphView$LegendAlign) -> setLegendAlign
    void setLegendWidth(float) -> setLegendWidth
    void setManualYAxis(boolean) -> setManualYAxis
    void setScalable(boolean) -> setScalable
    void setScrollable(boolean) -> setScrollable
    void setShowLegend(boolean) -> setShowLegend
    void setVerticalLabels(java.lang.String[]) -> setVerticalLabels
com.jjoe64.graphview.GraphView$1 -> com.jjoe64.graphview.a:
    com.jjoe64.graphview.GraphView this$0 -> a
com.jjoe64.graphview.GraphView$GraphViewData -> com.jjoe64.graphview.b:
    double valueX -> a
    double valueY -> b
com.jjoe64.graphview.GraphView$LegendAlign -> com.jjoe64.graphview.GraphView$LegendAlign:
    com.jjoe64.graphview.GraphView$LegendAlign TOP -> a
    com.jjoe64.graphview.GraphView$LegendAlign MIDDLE -> b
    com.jjoe64.graphview.GraphView$LegendAlign BOTTOM -> c
    com.jjoe64.graphview.GraphView$LegendAlign[] ENUM$VALUES -> d
    com.jjoe64.graphview.GraphView$LegendAlign[] values() -> values
    com.jjoe64.graphview.GraphView$LegendAlign valueOf(java.lang.String) -> valueOf
com.jjoe64.graphview.GraphViewSeries -> com.jjoe64.graphview.c:
    com.jjoe64.graphview.GraphView$GraphViewData[] values -> a
com.jjoe64.graphview.compatible.RealScaleGestureDetector -> com.jjoe64.graphview.a.a:
com.jjoe64.graphview.compatible.ScaleGestureDetector -> com.jjoe64.graphview.a.b:
    java.lang.Object realScaleGestureDetector -> a
    java.lang.reflect.Method method_getScaleFactor -> b
    java.lang.reflect.Method method_isInProgress -> c
    java.lang.reflect.Method method_onTouchEvent -> d
com.jjoe64.graphview.compatible.ScaleGestureDetector$SimpleOnScaleGestureListener -> com.jjoe64.graphview.a.c:
com.motorola.bluetooth.bluetoothle.IBluetoothGattCallback -> com.motorola.bluetooth.bluetoothle.IBluetoothGattCallback:
    void indicationGattCb(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String,java.lang.String[]) -> indicationGattCb
    void notificationGattCb(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String,byte[]) -> notificationGattCb
com.motorola.bluetooth.bluetoothle.IBluetoothGattCallback$Stub -> com.motorola.bluetooth.bluetoothle.IBluetoothGattCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_indicationGattCb -> TRANSACTION_indicationGattCb
    int TRANSACTION_notificationGattCb -> TRANSACTION_notificationGattCb
    com.motorola.bluetooth.bluetoothle.IBluetoothGattCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.motorola.bluetooth.bluetoothle.IBluetoothGattCallback$Stub$Proxy -> com.motorola.bluetooth.bluetoothle.IBluetoothGattCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void indicationGattCb(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String,java.lang.String[]) -> indicationGattCb
    void notificationGattCb(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String,byte[]) -> notificationGattCb
com.motorola.bluetoothle.BluetoothGatt -> com.motorola.bluetoothle.BluetoothGatt:
    java.lang.String ACTION_GATT_CHARACTERISTICS_GET -> ACTION_GATT_CHARACTERISTICS_GET
    java.lang.String ACTION_GATT_CHARACTERISTICS_READ -> ACTION_GATT_CHARACTERISTICS_READ
    java.lang.String ACTION_GATT_CHARACTERISTICS_WRITE -> ACTION_GATT_CHARACTERISTICS_WRITE
    java.lang.String ACTION_GATT_CONNECTED -> ACTION_GATT_CONNECTED
    java.lang.String ACTION_GATT_DISCONNECTED -> ACTION_GATT_DISCONNECTED
    java.lang.String ACTION_GATT_STATE_CHANGED -> ACTION_GATT_STATE_CHANGED
    java.lang.String ACTION_START_LE -> ACTION_START_LE
    int CONNECTION_EXISTS -> CONNECTION_EXISTS
    java.lang.String CONNECT_COMPLETE -> CONNECT_COMPLETE
    boolean DBG -> DBG
    java.lang.String DISCONNECT_COMPLETE -> DISCONNECT_COMPLETE
    java.lang.String EXTRA_CHARCATERISTICS_HANDLE -> EXTRA_CHARCATERISTICS_HANDLE
    java.lang.String EXTRA_CHARCATERISTICS_UUIDS -> EXTRA_CHARCATERISTICS_UUIDS
    java.lang.String EXTRA_CHARCATERISTIC_READ_VALUE -> EXTRA_CHARCATERISTIC_READ_VALUE
    java.lang.String EXTRA_CHAR_HANDLE -> EXTRA_CHAR_HANDLE
    java.lang.String EXTRA_CONNECT_RESULT -> EXTRA_CONNECT_RESULT
    java.lang.String EXTRA_DESCRIPTOR_CONFIGURATION -> EXTRA_DESCRIPTOR_CONFIGURATION
    java.lang.String EXTRA_GATT_STATE -> EXTRA_GATT_STATE
    java.lang.String EXTRA_PRIMARY_UUID -> EXTRA_PRIMARY_UUID
    java.lang.String EXTRA_WRITE_STATUS -> EXTRA_WRITE_STATUS
    int FAILURE -> FAILURE
    int FORBIDDEN -> FORBIDDEN
    java.lang.String GET_COMPLETE -> GET_COMPLETE
    int INVALID_OPERATION -> INVALID_OPERATION
    int OPERATION_DISABLE_INDICATION -> OPERATION_DISABLE_INDICATION
    int OPERATION_DISABLE_NOTIFICATION -> OPERATION_DISABLE_NOTIFICATION
    int OPERATION_ENABLE_INDICATION -> OPERATION_ENABLE_INDICATION
    int OPERATION_ENABLE_NOTIFICATION -> OPERATION_ENABLE_NOTIFICATION
    int OPERATION_READ_CHARACTERISTICS -> OPERATION_READ_CHARACTERISTICS
    int OPERATION_READ_PRIMARY_SERVICES -> OPERATION_READ_PRIMARY_SERVICES
    int OPERATION_READ_SENSOR_LOCATION -> OPERATION_READ_SENSOR_LOCATION
    int OPERATION_RESET_ENERGY_EXPENDED -> OPERATION_RESET_ENERGY_EXPENDED
    int PENDING -> PENDING
    int SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    java.lang.String SET_COMPLETE -> SET_COMPLETE
    int STATE_CONNECTED -> STATE_CONNECTED
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_DISCONNECTED -> STATE_DISCONNECTED
    int STATE_DISCONNECTING -> STATE_DISCONNECTING
    int SUCCESS -> SUCCESS
    java.lang.String TAG -> TAG
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
com.motorola.bluetoothle.hrm.IBluetoothHrm -> com.motorola.bluetoothle.hrm.IBluetoothHrm:
    int connectLe(android.bluetooth.BluetoothDevice,java.lang.String,com.motorola.bluetoothle.hrm.IBluetoothHrmCallback) -> connectLe
    int disconnectLe(android.bluetooth.BluetoothDevice,java.lang.String) -> disconnectLe
    int getLeData(android.bluetooth.BluetoothDevice,java.lang.String,int) -> getLeData
    int setLeData(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[],int) -> setLeData
com.motorola.bluetoothle.hrm.IBluetoothHrm$Stub -> com.motorola.bluetoothle.hrm.IBluetoothHrm$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_connectLe -> TRANSACTION_connectLe
    int TRANSACTION_disconnectLe -> TRANSACTION_disconnectLe
    int TRANSACTION_getLeData -> TRANSACTION_getLeData
    int TRANSACTION_setLeData -> TRANSACTION_setLeData
    com.motorola.bluetoothle.hrm.IBluetoothHrm asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.motorola.bluetoothle.hrm.IBluetoothHrm$Stub$Proxy -> com.motorola.bluetoothle.hrm.IBluetoothHrm$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int connectLe(android.bluetooth.BluetoothDevice,java.lang.String,com.motorola.bluetoothle.hrm.IBluetoothHrmCallback) -> connectLe
    int disconnectLe(android.bluetooth.BluetoothDevice,java.lang.String) -> disconnectLe
    int getLeData(android.bluetooth.BluetoothDevice,java.lang.String,int) -> getLeData
    int setLeData(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[],int) -> setLeData
com.motorola.bluetoothle.hrm.IBluetoothHrmCallback -> com.motorola.bluetoothle.hrm.IBluetoothHrmCallback:
    void indicationLeCb(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[]) -> indicationLeCb
    void notificationLeCb(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[]) -> notificationLeCb
com.motorola.bluetoothle.hrm.IBluetoothHrmCallback$Stub -> com.motorola.bluetoothle.hrm.IBluetoothHrmCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_indicationLeCb -> TRANSACTION_indicationLeCb
    int TRANSACTION_notificationLeCb -> TRANSACTION_notificationLeCb
    com.motorola.bluetoothle.hrm.IBluetoothHrmCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.motorola.bluetoothle.hrm.IBluetoothHrmCallback$Stub$Proxy -> com.motorola.bluetoothle.hrm.IBluetoothHrmCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void indicationLeCb(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[]) -> indicationLeCb
    void notificationLeCb(android.bluetooth.BluetoothDevice,java.lang.String,int,byte[]) -> notificationLeCb
com.parse.BackgroundTask -> com.parse.BackgroundTask:
    com.parse.ParseCallback callback -> callback
    java.lang.Object result -> result
    com.parse.ParseException exception -> exception
    java.lang.Object run() -> run
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void executeInThisThread() -> executeInThisThread
    int executeTask(com.parse.BackgroundTask) -> executeTask
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.parse.BuildConfig -> com.parse.BuildConfig:
    boolean DEBUG -> DEBUG
com.parse.Capture -> com.parse.Capture:
    java.lang.Object value -> value
    java.lang.Object get() -> get
    void set(java.lang.Object) -> set
com.parse.ConnectivityNotifier -> com.parse.ConnectivityNotifier:
    java.lang.String TAG -> TAG
    com.parse.ConnectivityNotifier singleton -> singleton
    java.util.Set listeners -> listeners
    boolean hasRegisteredReceiver -> hasRegisteredReceiver
    java.lang.Object lock -> lock
    com.parse.ConnectivityNotifier getNotifier() -> getNotifier
    void addListener(com.parse.ConnectivityNotifier$ConnectivityListener,android.content.Context) -> addListener
    void removeListener(com.parse.ConnectivityNotifier$ConnectivityListener) -> removeListener
    boolean tryToRegisterForNetworkStatusNotifications() -> tryToRegisterForNetworkStatusNotifications
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isConnected() -> isConnected
com.parse.ConnectivityNotifier$ConnectivityListener -> com.parse.ConnectivityNotifier$ConnectivityListener:
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.Continuation -> com.parse.Continuation:
    java.lang.Object then(com.parse.Task) -> then
com.parse.CountCallback -> com.parse.CountCallback:
    void done(int,com.parse.ParseException) -> done
    void internalDone(java.lang.Integer,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.CountingMultipartEntity -> com.parse.CountingMultipartEntity:
    com.parse.ProgressCallback progressCallback -> progressCallback
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.CountingMultipartEntity$CountingOutputStream -> com.parse.CountingMultipartEntity$CountingOutputStream:
    com.parse.ProgressCallback progressCallback -> progressCallback
    long uploadedSize -> uploadedSize
    long totalSize -> totalSize
    boolean hasReportedDone -> hasReportedDone
    void write(byte[],int,int) -> write
    void write(int) -> write
    void notifyCallback() -> notifyCallback
com.parse.DeleteCallback -> com.parse.DeleteCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.FindCallback -> com.parse.FindCallback:
    void done(java.util.List,com.parse.ParseException) -> done
    void internalDone(java.util.List,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.FunctionCallback -> com.parse.FunctionCallback:
    void done(java.lang.Object,com.parse.ParseException) -> done
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.GcmBroadcastReceiver -> com.parse.GcmBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar -> com.parse.GcmRegistrar:
    java.lang.String TAG -> TAG
    java.lang.String REGISTRATION_ID_EXTRA -> REGISTRATION_ID_EXTRA
    java.lang.String ERROR_EXTRA -> ERROR_EXTRA
    java.lang.String SENDER_ID -> SENDER_ID
    java.lang.String REGISTER_ACTION -> REGISTER_ACTION
    java.lang.String REGISTER_RESPONSE_ACTION -> REGISTER_RESPONSE_ACTION
    java.lang.Object lock -> lock
    com.parse.GcmRegistrar$Request request -> request
    android.content.Context context -> context
    com.parse.GcmRegistrar getInstance() -> getInstance
    void updateAsync() -> updateAsync
    void register() -> register
    void update() -> update
    void sendRegistrationRequest() -> sendRegistrationRequest
    boolean isRegistrationIntent(android.content.Intent) -> isRegistrationIntent
    void handleRegistrationIntent(android.content.Intent) -> handleRegistrationIntent
    int getRequestIdentifier() -> getRequestIdentifier
    java.lang.Object access$000(com.parse.GcmRegistrar) -> access$000
    com.parse.GcmRegistrar$Request access$102(com.parse.GcmRegistrar,com.parse.GcmRegistrar$Request) -> access$102
com.parse.GcmRegistrar$1 -> com.parse.GcmRegistrar$1:
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.GcmRegistrar$2 -> com.parse.GcmRegistrar$2:
    com.parse.GcmRegistrar this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.GcmRegistrar$Request -> com.parse.GcmRegistrar$Request:
    java.lang.String RETRY_ACTION -> RETRY_ACTION
    int MAX_RETRIES -> MAX_RETRIES
    int BACKOFF_INTERVAL_MS -> BACKOFF_INTERVAL_MS
    android.content.Context context -> context
    java.lang.String senderId -> senderId
    java.util.Random random -> random
    int identifier -> identifier
    com.parse.Task$TaskCompletionSource tcs -> tcs
    android.app.PendingIntent appIntent -> appIntent
    java.util.concurrent.atomic.AtomicInteger tries -> tries
    android.app.PendingIntent retryIntent -> retryIntent
    android.content.BroadcastReceiver retryReceiver -> retryReceiver
    com.parse.GcmRegistrar$Request createAndSend(android.content.Context,java.lang.String) -> createAndSend
    com.parse.Task getTask() -> getTask
    void send() -> send
    void onReceiveResponseIntent(android.content.Intent) -> onReceiveResponseIntent
    void finish(java.lang.String,java.lang.String) -> finish
    int access$200(com.parse.GcmRegistrar$Request) -> access$200
    void access$300(com.parse.GcmRegistrar$Request) -> access$300
com.parse.GcmRegistrar$Request$1 -> com.parse.GcmRegistrar$Request$1:
    com.parse.GcmRegistrar$Request this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar$Singleton -> com.parse.GcmRegistrar$Singleton:
    com.parse.GcmRegistrar INSTANCE -> INSTANCE
com.parse.GetCallback -> com.parse.GetCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseObject,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.GetDataCallback -> com.parse.GetDataCallback:
    void done(byte[],com.parse.ParseException) -> done
    void internalDone(byte[],com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.KnownParseObjectDecoder -> com.parse.KnownParseObjectDecoder:
    java.util.Map fetchedObjects -> fetchedObjects
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
com.parse.LocalIdManager -> com.parse.LocalIdManager:
    com.parse.LocalIdManager defaultInstance -> defaultInstance
    java.io.File diskPath -> diskPath
    java.util.Random random -> random
    com.parse.LocalIdManager getDefaultInstance() -> getDefaultInstance
    boolean isLocalId(java.lang.String) -> isLocalId
    com.parse.LocalIdManager$MapEntry getMapEntry(java.lang.String) -> getMapEntry
    void putMapEntry(java.lang.String,com.parse.LocalIdManager$MapEntry) -> putMapEntry
    void removeMapEntry(java.lang.String) -> removeMapEntry
    java.lang.String createLocalId() -> createLocalId
    void retainLocalIdOnDisk(java.lang.String) -> retainLocalIdOnDisk
    void releaseLocalIdOnDisk(java.lang.String) -> releaseLocalIdOnDisk
    java.lang.String getObjectId(java.lang.String) -> getObjectId
    void setObjectId(java.lang.String,java.lang.String) -> setObjectId
    boolean clear() -> clear
com.parse.LocalIdManager$1 -> com.parse.LocalIdManager$1:
com.parse.LocalIdManager$MapEntry -> com.parse.LocalIdManager$MapEntry:
    java.lang.String objectId -> objectId
    int retainCount -> retainCount
    com.parse.LocalIdManager this$0 -> this$0
com.parse.LocationCallback -> com.parse.LocationCallback:
    void done(com.parse.ParseGeoPoint,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseGeoPoint,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.LocationNotifier -> com.parse.LocationNotifier:
    java.lang.String testProviderName -> testProviderName
    android.location.Location fakeLocation -> fakeLocation
    com.parse.Task getCurrentLocationAsync(long,android.location.Criteria) -> getCurrentLocationAsync
    void setFakeLocation(android.location.Location) -> setFakeLocation
com.parse.LocationNotifier$1 -> com.parse.LocationNotifier$1:
    com.parse.Capture val$timeoutFuture -> val$timeoutFuture
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.parse.LocationNotifier$2 -> com.parse.LocationNotifier$2:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    android.location.LocationListener val$listener -> val$listener
    void run() -> run
com.parse.LockSet -> com.parse.LockSet:
    java.util.WeakHashMap stableIds -> stableIds
    long nextStableId -> nextStableId
    java.util.Set locks -> locks
    java.lang.Long getStableId(java.util.concurrent.locks.Lock) -> getStableId
    void lock() -> lock
    void unlock() -> unlock
    java.lang.Long access$000(java.util.concurrent.locks.Lock) -> access$000
com.parse.LockSet$1 -> com.parse.LockSet$1:
    com.parse.LockSet this$0 -> this$0
    int compare(java.util.concurrent.locks.Lock,java.util.concurrent.locks.Lock) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.LogInCallback -> com.parse.LogInCallback:
    void done(com.parse.ParseUser,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseUser,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ManifestInfo -> com.parse.ManifestInfo:
    java.lang.String TAG -> TAG
    java.lang.Object lock -> lock
    long lastModified -> lastModified
    int versionCode -> versionCode
    int iconId -> iconId
    java.lang.String displayName -> displayName
    com.parse.PushType pushType -> pushType
    long getLastModified() -> getLastModified
    int getVersionCode() -> getVersionCode
    java.lang.String getDisplayName() -> getDisplayName
    int getIconId() -> getIconId
    void setPushType(com.parse.PushType) -> setPushType
    com.parse.PushType getPushType() -> getPushType
    java.lang.String getNonePushTypeLogMessage() -> getNonePushTypeLogMessage
    android.content.Context getContext() -> getContext
    java.lang.String getPackageName() -> getPackageName
    android.content.pm.PackageManager getPackageManager() -> getPackageManager
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
    android.content.pm.PackageInfo getPackageInfo(java.lang.String) -> getPackageInfo
    android.content.pm.ServiceInfo getServiceInfo(java.lang.Class) -> getServiceInfo
    android.content.pm.ActivityInfo getReceiverInfo(java.lang.Class) -> getReceiverInfo
    boolean hasPermissions(java.lang.String[]) -> hasPermissions
    boolean checkResolveInfo(java.lang.Class,java.util.List) -> checkResolveInfo
    boolean checkReceiver(java.lang.Class,java.lang.String,android.content.Intent[]) -> checkReceiver
    boolean hasAnyGcmSpecificDeclaration() -> hasAnyGcmSpecificDeclaration
    boolean deviceSupportsGcm() -> deviceSupportsGcm
    com.parse.ManifestInfo$ManifestCheckResult gcmSupportLevel() -> gcmSupportLevel
    com.parse.ManifestInfo$ManifestCheckResult ppnsSupportLevel() -> ppnsSupportLevel
    java.lang.String getGcmManifestMessage() -> getGcmManifestMessage
    java.lang.String getPpnsManifestMessage() -> getPpnsManifestMessage
com.parse.ManifestInfo$ManifestCheckResult -> com.parse.ManifestInfo$ManifestCheckResult:
    com.parse.ManifestInfo$ManifestCheckResult HAS_ALL_DECLARATIONS -> HAS_ALL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_OPTIONAL_DECLARATIONS -> MISSING_OPTIONAL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_REQUIRED_DECLARATIONS -> MISSING_REQUIRED_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult[] $VALUES -> $VALUES
    com.parse.ManifestInfo$ManifestCheckResult[] values() -> values
    com.parse.ManifestInfo$ManifestCheckResult valueOf(java.lang.String) -> valueOf
com.parse.NoObjectsEncodingStrategy -> com.parse.NoObjectsEncodingStrategy:
    com.parse.NoObjectsEncodingStrategy instance -> instance
    com.parse.NoObjectsEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.Parse -> com.parse.Parse:
    java.lang.String TAG -> TAG
    android.content.Context applicationContext -> applicationContext
    java.lang.String applicationId -> applicationId
    java.lang.String clientKey -> clientKey
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARNING -> LOG_LEVEL_WARNING
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    int logLevel -> logLevel
    int maxParseFileSize -> maxParseFileSize
    int maxKeyValueCacheBytes -> maxKeyValueCacheBytes
    int maxKeyValueCacheFiles -> maxKeyValueCacheFiles
    com.parse.ParseCommandCache commandCache -> commandCache
    java.lang.Object lock -> lock
    java.text.DateFormat dateFormat -> dateFormat
    java.util.concurrent.Executor uiThreadExecutor -> uiThreadExecutor
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    android.content.Context getApplicationContext() -> getApplicationContext
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void log(int,java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void logV(java.lang.String,java.lang.String,java.lang.Throwable) -> logV
    void logV(java.lang.String,java.lang.String) -> logV
    void logD(java.lang.String,java.lang.String,java.lang.Throwable) -> logD
    void logD(java.lang.String,java.lang.String) -> logD
    void logI(java.lang.String,java.lang.String,java.lang.Throwable) -> logI
    void logI(java.lang.String,java.lang.String) -> logI
    void logW(java.lang.String,java.lang.String,java.lang.Throwable) -> logW
    void logW(java.lang.String,java.lang.String) -> logW
    void logE(java.lang.String,java.lang.String,java.lang.Throwable) -> logE
    void logE(java.lang.String,java.lang.String) -> logE
    void setContextIfNeeded(android.content.Context) -> setContextIfNeeded
    java.io.File getParseDir() -> getParseDir
    java.io.File getParseCacheDir(java.lang.String) -> getParseCacheDir
    java.io.File getParseFilesDir(java.lang.String) -> getParseFilesDir
    void recursiveDelete(java.io.File) -> recursiveDelete
    void checkCacheApplicationId() -> checkCacheApplicationId
    java.io.File getKeyValueCacheDir() -> getKeyValueCacheDir
    java.io.File getKeyValueCacheFile(java.lang.String) -> getKeyValueCacheFile
    long getKeyValueCacheAge(java.io.File) -> getKeyValueCacheAge
    java.io.File createKeyValueCacheFile(java.lang.String) -> createKeyValueCacheFile
    void clearCacheDir() -> clearCacheDir
    void saveToKeyValueCache(java.lang.String,java.lang.String) -> saveToKeyValueCache
    void clearFromKeyValueCache(java.lang.String) -> clearFromKeyValueCache
    java.lang.String loadFromKeyValueCache(java.lang.String,long) -> loadFromKeyValueCache
    java.lang.Object jsonFromKeyValueCache(java.lang.String,long) -> jsonFromKeyValueCache
    com.parse.ParseCommandCache getCommandCache() -> getCommandCache
    void checkInit() -> checkInit
    void checkContext() -> checkContext
    boolean hasPermission(java.lang.String) -> hasPermission
    void requirePermission(java.lang.String) -> requirePermission
    boolean isValidType(java.lang.Object) -> isValidType
    java.lang.Object encode(java.lang.Object,com.parse.ParseObjectEncodingStrategy) -> encode
    java.util.Date stringToDate(java.lang.String) -> stringToDate
    java.lang.String dateToString(java.util.Date) -> dateToString
    org.json.JSONObject encodeDate(java.util.Date) -> encodeDate
    java.lang.Iterable keys(org.json.JSONObject) -> keys
    boolean isContainerObject(java.lang.Object) -> isContainerObject
    java.lang.Number addNumbers(java.lang.Number,java.lang.Number) -> addNumbers
    java.lang.Number subtractNumbers(java.lang.Number,java.lang.Number) -> subtractNumbers
    int compareNumbers(java.lang.Number,java.lang.Number) -> compareNumbers
    java.lang.String join(java.util.Collection,java.lang.String) -> join
    java.lang.Object waitForTask(com.parse.Task) -> waitForTask
    com.parse.Task callbackOnMainThreadAsync(com.parse.Task,com.parse.ParseCallback) -> callbackOnMainThreadAsync
    com.parse.Task callbackOnMainThreadAsync(com.parse.Task,com.parse.ParseCallback,boolean) -> callbackOnMainThreadAsync
com.parse.Parse$1 -> com.parse.Parse$1:
    void run() -> run
com.parse.Parse$2 -> com.parse.Parse$2:
    java.lang.String val$suffix -> val$suffix
    boolean accept(java.io.File,java.lang.String) -> accept
com.parse.Parse$3 -> com.parse.Parse$3:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.Parse$4 -> com.parse.Parse$4:
    org.json.JSONObject val$finalObject -> val$finalObject
    java.util.Iterator iterator() -> iterator
com.parse.Parse$5 -> com.parse.Parse$5:
    void execute(java.lang.Runnable) -> execute
com.parse.Parse$6 -> com.parse.Parse$6:
    boolean val$reportCancellation -> val$reportCancellation
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCallback val$callback -> val$callback
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Parse$6$1 -> com.parse.Parse$6$1:
    com.parse.Task val$task -> val$task
    com.parse.Parse$6 this$0 -> this$0
    void run() -> run
com.parse.ParseACL -> com.parse.ParseACL:
    java.lang.String PUBLIC_KEY -> PUBLIC_KEY
    java.lang.String UNRESOLVED_KEY -> UNRESOLVED_KEY
    com.parse.ParseACL defaultACL -> defaultACL
    boolean defaultACLUsesCurrentUser -> defaultACLUsesCurrentUser
    java.lang.ref.WeakReference lastCurrentUser -> lastCurrentUser
    com.parse.ParseACL defaultACLWithCurrentUser -> defaultACLWithCurrentUser
    boolean shared -> shared
    com.parse.ParseUser unresolvedUser -> unresolvedUser
    org.json.JSONObject permissionsById -> permissionsById
    com.parse.ParseACL copy() -> copy
    boolean isShared() -> isShared
    void setShared(boolean) -> setShared
    org.json.JSONObject toJSONObject() -> toJSONObject
    com.parse.ParseACL createACLFromJSONObject(org.json.JSONObject) -> createACLFromJSONObject
    void resolveUser(com.parse.ParseUser) -> resolveUser
    boolean hasUnresolvedUser() -> hasUnresolvedUser
    void setAccess(java.lang.String,java.lang.String,boolean) -> setAccess
    boolean getAccess(java.lang.String,java.lang.String) -> getAccess
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    boolean getPublicReadAccess() -> getPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
    boolean getPublicWriteAccess() -> getPublicWriteAccess
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    boolean getReadAccess(java.lang.String) -> getReadAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    boolean getWriteAccess(java.lang.String) -> getWriteAccess
    void setReadAccess(com.parse.ParseUser,boolean) -> setReadAccess
    void setUnresolvedReadAccess(com.parse.ParseUser,boolean) -> setUnresolvedReadAccess
    void setUnresolvedWriteAccess(com.parse.ParseUser,boolean) -> setUnresolvedWriteAccess
    void prepareUnresolvedUser(com.parse.ParseUser) -> prepareUnresolvedUser
    boolean getReadAccess(com.parse.ParseUser) -> getReadAccess
    void setWriteAccess(com.parse.ParseUser,boolean) -> setWriteAccess
    boolean getWriteAccess(com.parse.ParseUser) -> getWriteAccess
    boolean getRoleReadAccess(java.lang.String) -> getRoleReadAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(java.lang.String) -> getRoleWriteAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void validateRoleState(com.parse.ParseRole) -> validateRoleState
    boolean getRoleReadAccess(com.parse.ParseRole) -> getRoleReadAccess
    void setRoleReadAccess(com.parse.ParseRole,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(com.parse.ParseRole) -> getRoleWriteAccess
    void setRoleWriteAccess(com.parse.ParseRole,boolean) -> setRoleWriteAccess
    void setDefaultACL(com.parse.ParseACL,boolean) -> setDefaultACL
    com.parse.ParseACL getDefaultACL() -> getDefaultACL
    void access$000(com.parse.ParseACL,com.parse.ParseUser) -> access$000
com.parse.ParseACL$UserResolutionListener -> com.parse.ParseACL$UserResolutionListener:
    java.lang.ref.WeakReference parent -> parent
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
com.parse.ParseAddOperation -> com.parse.ParseAddOperation:
    java.util.ArrayList objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseAddUniqueOperation -> com.parse.ParseAddUniqueOperation:
    java.util.LinkedHashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseAnalytics -> com.parse.ParseAnalytics:
    java.lang.String TAG -> TAG
    void trackAppOpened(android.content.Intent) -> trackAppOpened
    void trackEvent(java.lang.String) -> trackEvent
    void trackEvent(java.lang.String,java.util.Map) -> trackEvent
    void trackAppOpened(java.lang.String) -> trackAppOpened
com.parse.ParseAnonymousUtils -> com.parse.ParseAnonymousUtils:
    com.parse.auth.AnonymousAuthenticationProvider provider -> provider
    java.lang.String ANONYMOUS_AUTH_TYPE -> ANONYMOUS_AUTH_TYPE
    void initialize() -> initialize
    boolean isLinked(com.parse.ParseUser) -> isLinked
    void logIn(com.parse.LogInCallback) -> logIn
    void lazyLogIn() -> lazyLogIn
com.parse.ParseBroadcastReceiver -> com.parse.ParseBroadcastReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.ParseCallback -> com.parse.ParseCallback:
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ParseClassName -> com.parse.ParseClassName:
    java.lang.String value() -> value
com.parse.ParseCloud -> com.parse.ParseCloud:
    com.parse.ParseCommand constructCallCommand(java.lang.String,java.util.Map) -> constructCallCommand
    java.lang.Object convertCloudResponse(java.lang.Object) -> convertCloudResponse
    com.parse.Task callFunctionAsync(java.lang.String,java.util.Map) -> callFunctionAsync
    java.lang.Object callFunction(java.lang.String,java.util.Map) -> callFunction
    void callFunctionInBackground(java.lang.String,java.util.Map,com.parse.FunctionCallback) -> callFunctionInBackground
    java.lang.Object access$000(java.lang.Object) -> access$000
com.parse.ParseCloud$1 -> com.parse.ParseCloud$1:
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand -> com.parse.ParseCommand:
    java.util.concurrent.ScheduledExecutorService networkThreadPool -> networkThreadPool
    org.apache.http.client.HttpClient testClient -> testClient
    java.lang.String op -> op
    org.json.JSONObject params -> params
    java.lang.String localId -> localId
    java.lang.String sessionToken -> sessionToken
    org.apache.http.client.HttpClient client -> client
    org.apache.http.client.methods.HttpPost post -> post
    boolean retryEnabled -> retryEnabled
    int attemptsMade -> attemptsMade
    long delay -> delay
    java.util.concurrent.atomic.AtomicReference currentTask -> currentTask
    int SOCKET_TIMEOUT -> SOCKET_TIMEOUT
    int CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    int INITIAL_DELAY -> INITIAL_DELAY
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,org.json.JSONArray) -> put
    void put(java.lang.String,org.json.JSONObject) -> put
    void setOp(java.lang.String) -> setOp
    java.lang.String getLocalId() -> getLocalId
    void setLocalId(java.lang.String) -> setLocalId
    org.json.JSONObject toJSONObject() -> toJSONObject
    java.lang.String getCacheKey() -> getCacheKey
    java.lang.String toDeterministicString(java.lang.Object) -> toDeterministicString
    void addToStringer(org.json.JSONStringer,java.lang.Object) -> addToStringer
    com.parse.Task performAsync() -> performAsync
    com.parse.ParseException connectionFailed(java.lang.String,java.lang.Exception) -> connectionFailed
    void preparePost() -> preparePost
    com.parse.Task performAsync(boolean) -> performAsync
    com.parse.Task sendRequestWithRetriesAsync() -> sendRequestWithRetriesAsync
    void maybeSetupHttpProxy() -> maybeSetupHttpProxy
    com.parse.Task sendRequestAsync(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost) -> sendRequestAsync
    void calculateNextDelay() -> calculateNextDelay
    void enableRetrying() -> enableRetrying
    void setInitialDelay(double) -> setInitialDelay
    void cancel() -> cancel
    void getLocalPointersIn(java.lang.Object,java.util.ArrayList) -> getLocalPointersIn
    void maybeChangeServerOperation() -> maybeChangeServerOperation
    void resolveLocalIds() -> resolveLocalIds
    void retainLocalIds() -> retainLocalIds
    void releaseLocalIds() -> releaseLocalIds
    com.parse.Task access$000(com.parse.ParseCommand) -> access$000
    org.apache.http.client.methods.HttpPost access$100(com.parse.ParseCommand) -> access$100
    java.util.concurrent.atomic.AtomicReference access$200(com.parse.ParseCommand) -> access$200
    int access$308(com.parse.ParseCommand) -> access$308
    boolean access$400(com.parse.ParseCommand) -> access$400
    int access$300(com.parse.ParseCommand) -> access$300
    long access$500(com.parse.ParseCommand) -> access$500
    void access$600(com.parse.ParseCommand) -> access$600
com.parse.ParseCommand$1 -> com.parse.ParseCommand$1:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCommand this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$2 -> com.parse.ParseCommand$2:
    boolean val$saveToCache -> val$saveToCache
    com.parse.ParseCommand this$0 -> this$0
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$3 -> com.parse.ParseCommand$3:
    com.parse.ParseCommand this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$4 -> com.parse.ParseCommand$4:
    com.parse.ParseCommand this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseCommand$5 -> com.parse.ParseCommand$5:
    com.parse.ParseCommand this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$5$1 -> com.parse.ParseCommand$5$1:
    com.parse.Task$TaskCompletionSource val$delayTaskSource -> val$delayTaskSource
    com.parse.ParseCommand$5 this$1 -> this$1
    void run() -> run
com.parse.ParseCommand$5$2 -> com.parse.ParseCommand$5$2:
    com.parse.ParseCommand$5 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$6 -> com.parse.ParseCommand$6:
    org.apache.http.client.HttpClient val$client -> val$client
    org.apache.http.client.methods.HttpPost val$post -> val$post
    com.parse.ParseCommand this$0 -> this$0
    org.json.JSONObject call() -> call
    java.lang.Object call() -> call
com.parse.ParseCommandCache -> com.parse.ParseCommandCache:
    java.lang.String TAG -> TAG
    java.io.File cachePath -> cachePath
    int timeoutMaxRetries -> timeoutMaxRetries
    double timeoutRetryWaitSeconds -> timeoutRetryWaitSeconds
    int maxCacheSizeBytes -> maxCacheSizeBytes
    int filenameCounter -> filenameCounter
    boolean shouldStop -> shouldStop
    boolean connected -> connected
    boolean unprocessedCommandsExist -> unprocessedCommandsExist
    java.util.HashMap pendingTasks -> pendingTasks
    java.lang.Object lock -> lock
    boolean running -> running
    java.lang.Object runningLock -> runningLock
    java.util.logging.Logger log -> log
    com.parse.ParseCommandCache$TestHelper testHelper -> testHelper
    com.parse.ConnectivityNotifier$ConnectivityListener connectivityListener -> connectivityListener
    void setTimeoutMaxRetries(int) -> setTimeoutMaxRetries
    void setTimeoutRetryWaitSeconds(double) -> setTimeoutRetryWaitSeconds
    void setMaxCacheSizeBytes(int) -> setMaxCacheSizeBytes
    void resume() -> resume
    void pause() -> pause
    void removeFile(java.io.File) -> removeFile
    void simulateReboot() -> simulateReboot
    void fakeObjectUpdate() -> fakeObjectUpdate
    com.parse.Task runEventuallyAsync(com.parse.ParseCommand,com.parse.ParseObject) -> runEventuallyAsync
    com.parse.Task runEventuallyInternalAsync(com.parse.ParseCommand,boolean,com.parse.ParseObject) -> runEventuallyInternalAsync
    int pendingCount() -> pendingCount
    void clear() -> clear
    void setConnected(boolean) -> setConnected
    java.lang.Object waitForTaskWithoutLock(com.parse.Task) -> waitForTaskWithoutLock
    void maybeRunAllCommandsNow(int) -> maybeRunAllCommandsNow
    void runLoop() -> runLoop
    com.parse.ParseCommandCache$TestHelper getTestHelper() -> getTestHelper
    void access$000(com.parse.ParseCommandCache) -> access$000
    java.lang.Object access$100() -> access$100
com.parse.ParseCommandCache$1 -> com.parse.ParseCommandCache$1:
    com.parse.ParseCommandCache this$0 -> this$0
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.ParseCommandCache$2 -> com.parse.ParseCommandCache$2:
    com.parse.ParseCommandCache this$0 -> this$0
    void run() -> run
com.parse.ParseCommandCache$3 -> com.parse.ParseCommandCache$3:
    com.parse.Capture val$finished -> val$finished
    com.parse.ParseCommandCache this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommandCache$4 -> com.parse.ParseCommandCache$4:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.String val$localId -> val$localId
    com.parse.ParseCommandCache this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommandCache$TestHelper -> com.parse.ParseCommandCache$TestHelper:
    int MAX_EVENTS -> MAX_EVENTS
    int COMMAND_SUCCESSFUL -> COMMAND_SUCCESSFUL
    int COMMAND_FAILED -> COMMAND_FAILED
    int COMMAND_ENQUEUED -> COMMAND_ENQUEUED
    int COMMAND_NOT_ENQUEUED -> COMMAND_NOT_ENQUEUED
    int OBJECT_UPDATED -> OBJECT_UPDATED
    int OBJECT_REMOVED -> OBJECT_REMOVED
    java.util.HashMap events -> events
    com.parse.ParseCommandCache this$0 -> this$0
    void clear() -> clear
    int unexpectedEvents() -> unexpectedEvents
    void notify(int) -> notify
    boolean waitFor(int) -> waitFor
com.parse.ParseDecoder -> com.parse.ParseDecoder:
    java.util.List convertJSONArrayToList(org.json.JSONArray) -> convertJSONArrayToList
    java.util.Map convertJSONObjectToMap(org.json.JSONObject) -> convertJSONObjectToMap
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.ParseDeleteOperation -> com.parse.ParseDeleteOperation:
    com.parse.ParseDeleteOperation defaultInstance -> defaultInstance
    com.parse.ParseDeleteOperation getInstance() -> getInstance
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseException -> com.parse.ParseException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    int OTHER_CAUSE -> OTHER_CAUSE
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int CONNECTION_FAILED -> CONNECTION_FAILED
    int OBJECT_NOT_FOUND -> OBJECT_NOT_FOUND
    int INVALID_QUERY -> INVALID_QUERY
    int INVALID_CLASS_NAME -> INVALID_CLASS_NAME
    int MISSING_OBJECT_ID -> MISSING_OBJECT_ID
    int INVALID_KEY_NAME -> INVALID_KEY_NAME
    int INVALID_POINTER -> INVALID_POINTER
    int INVALID_JSON -> INVALID_JSON
    int COMMAND_UNAVAILABLE -> COMMAND_UNAVAILABLE
    int NOT_INITIALIZED -> NOT_INITIALIZED
    int INCORRECT_TYPE -> INCORRECT_TYPE
    int INVALID_CHANNEL_NAME -> INVALID_CHANNEL_NAME
    int PUSH_MISCONFIGURED -> PUSH_MISCONFIGURED
    int OBJECT_TOO_LARGE -> OBJECT_TOO_LARGE
    int OPERATION_FORBIDDEN -> OPERATION_FORBIDDEN
    int CACHE_MISS -> CACHE_MISS
    int INVALID_NESTED_KEY -> INVALID_NESTED_KEY
    int INVALID_FILE_NAME -> INVALID_FILE_NAME
    int INVALID_ACL -> INVALID_ACL
    int TIMEOUT -> TIMEOUT
    int INVALID_EMAIL_ADDRESS -> INVALID_EMAIL_ADDRESS
    int DUPLICATE_VALUE -> DUPLICATE_VALUE
    int INVALID_ROLE_NAME -> INVALID_ROLE_NAME
    int EXCEEDED_QUOTA -> EXCEEDED_QUOTA
    int SCRIPT_ERROR -> SCRIPT_ERROR
    int VALIDATION_ERROR -> VALIDATION_ERROR
    int FILE_DELETE_ERROR -> FILE_DELETE_ERROR
    int USERNAME_MISSING -> USERNAME_MISSING
    int PASSWORD_MISSING -> PASSWORD_MISSING
    int USERNAME_TAKEN -> USERNAME_TAKEN
    int EMAIL_TAKEN -> EMAIL_TAKEN
    int EMAIL_MISSING -> EMAIL_MISSING
    int EMAIL_NOT_FOUND -> EMAIL_NOT_FOUND
    int SESSION_MISSING -> SESSION_MISSING
    int MUST_CREATE_USER_THROUGH_SIGNUP -> MUST_CREATE_USER_THROUGH_SIGNUP
    int ACCOUNT_ALREADY_LINKED -> ACCOUNT_ALREADY_LINKED
    int LINKED_ID_MISSING -> LINKED_ID_MISSING
    int INVALID_LINKED_SESSION -> INVALID_LINKED_SESSION
    int UNSUPPORTED_SERVICE -> UNSUPPORTED_SERVICE
    int getCode() -> getCode
com.parse.ParseFacebookUtils -> com.parse.ParseFacebookUtils:
    com.parse.auth.FacebookAuthenticationProvider provider -> provider
    boolean isInitialized -> isInitialized
    com.facebook.android.Facebook getFacebook() -> getFacebook
    com.facebook.Session getSession() -> getSession
    boolean isLinked(com.parse.ParseUser) -> isLinked
    void initialize(java.lang.String) -> initialize
    void checkInitialization() -> checkInitialization
    void unlink(com.parse.ParseUser) -> unlink
    void unlinkInBackground(com.parse.ParseUser) -> unlinkInBackground
    void unlinkInBackground(com.parse.ParseUser,com.parse.SaveCallback) -> unlinkInBackground
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.util.Date) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.util.Date,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,int,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,int) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity) -> link
    void link(com.parse.ParseUser,android.app.Activity,int,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,android.app.Activity,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,android.app.Activity,int) -> link
    void link(com.parse.ParseUser,android.app.Activity) -> link
    void logIn(java.lang.String,java.lang.String,java.util.Date,com.parse.LogInCallback) -> logIn
    void logIn(java.util.Collection,android.app.Activity,int,com.parse.LogInCallback) -> logIn
    void logIn(android.app.Activity,int,com.parse.LogInCallback) -> logIn
    void logIn(java.util.Collection,android.app.Activity,com.parse.LogInCallback) -> logIn
    void logIn(android.app.Activity,com.parse.LogInCallback) -> logIn
    void finishAuthentication(int,int,android.content.Intent) -> finishAuthentication
    void saveLatestSessionData(com.parse.ParseUser,com.parse.SaveCallback) -> saveLatestSessionData
    void saveLatestSessionData(com.parse.ParseUser) -> saveLatestSessionData
    boolean shouldExtendAccessToken(com.parse.ParseUser) -> shouldExtendAccessToken
    void extendAccessToken(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> extendAccessToken
    boolean extendAccessTokenIfNeeded(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> extendAccessTokenIfNeeded
    com.parse.auth.FacebookAuthenticationProvider access$000() -> access$000
com.parse.ParseFacebookUtils$1 -> com.parse.ParseFacebookUtils$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.SaveCallback val$callback -> val$callback
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
com.parse.ParseFacebookUtils$Permissions -> com.parse.ParseFacebookUtils$Permissions:
com.parse.ParseFacebookUtils$Permissions$Extended -> com.parse.ParseFacebookUtils$Permissions$Extended:
    java.lang.String READ_FRIEND_LISTS -> READ_FRIEND_LISTS
    java.lang.String READ_INSIGHTS -> READ_INSIGHTS
    java.lang.String READ_MAILBOX -> READ_MAILBOX
    java.lang.String READ_REQUESTS -> READ_REQUESTS
    java.lang.String READ_STREAM -> READ_STREAM
    java.lang.String XMPP_LOGIN -> XMPP_LOGIN
    java.lang.String ADS_MANAGEMENT -> ADS_MANAGEMENT
    java.lang.String CREATE_EVENT -> CREATE_EVENT
    java.lang.String MANAGE_FRIEND_LISTS -> MANAGE_FRIEND_LISTS
    java.lang.String MANAGE_NOTIFICATIONS -> MANAGE_NOTIFICATIONS
    java.lang.String OFFLINE_ACCESS -> OFFLINE_ACCESS
    java.lang.String PUBLISH_CHECKINS -> PUBLISH_CHECKINS
    java.lang.String PUBLISH_STREAM -> PUBLISH_STREAM
    java.lang.String RSVP_EVENT -> RSVP_EVENT
    java.lang.String PUBLISH_ACTIONS -> PUBLISH_ACTIONS
com.parse.ParseFacebookUtils$Permissions$Friends -> com.parse.ParseFacebookUtils$Permissions$Friends:
    java.lang.String ABOUT_ME -> ABOUT_ME
    java.lang.String ACTIVITIES -> ACTIVITIES
    java.lang.String BIRTHDAY -> BIRTHDAY
    java.lang.String CHECKINS -> CHECKINS
    java.lang.String EDUCATION_HISTORY -> EDUCATION_HISTORY
    java.lang.String EVENTS -> EVENTS
    java.lang.String GROUPS -> GROUPS
    java.lang.String HOMETOWN -> HOMETOWN
    java.lang.String INTERESTS -> INTERESTS
    java.lang.String LIKES -> LIKES
    java.lang.String LOCATION -> LOCATION
    java.lang.String NOTES -> NOTES
    java.lang.String ONLINE_PRESENCE -> ONLINE_PRESENCE
    java.lang.String PHOTOS -> PHOTOS
    java.lang.String QUESTIONS -> QUESTIONS
    java.lang.String RELATIONSHIPS -> RELATIONSHIPS
    java.lang.String RELATIONSHIP_DETAILS -> RELATIONSHIP_DETAILS
    java.lang.String RELIGION_POLITICS -> RELIGION_POLITICS
    java.lang.String STATUS -> STATUS
    java.lang.String VIDEOS -> VIDEOS
    java.lang.String WEBSITE -> WEBSITE
    java.lang.String WORK_HISTORY -> WORK_HISTORY
com.parse.ParseFacebookUtils$Permissions$Page -> com.parse.ParseFacebookUtils$Permissions$Page:
    java.lang.String MANAGE_PAGES -> MANAGE_PAGES
com.parse.ParseFacebookUtils$Permissions$User -> com.parse.ParseFacebookUtils$Permissions$User:
    java.lang.String ABOUT_ME -> ABOUT_ME
    java.lang.String ACTIVITIES -> ACTIVITIES
    java.lang.String BIRTHDAY -> BIRTHDAY
    java.lang.String CHECKINS -> CHECKINS
    java.lang.String EDUCATION_HISTORY -> EDUCATION_HISTORY
    java.lang.String EVENTS -> EVENTS
    java.lang.String GROUPS -> GROUPS
    java.lang.String HOMETOWN -> HOMETOWN
    java.lang.String INTERESTS -> INTERESTS
    java.lang.String LIKES -> LIKES
    java.lang.String LOCATION -> LOCATION
    java.lang.String NOTES -> NOTES
    java.lang.String ONLINE_PRESENCE -> ONLINE_PRESENCE
    java.lang.String PHOTOS -> PHOTOS
    java.lang.String QUESTIONS -> QUESTIONS
    java.lang.String RELATIONSHIPS -> RELATIONSHIPS
    java.lang.String RELATIONSHIP_DETAILS -> RELATIONSHIP_DETAILS
    java.lang.String RELIGION_POLITICS -> RELIGION_POLITICS
    java.lang.String STATUS -> STATUS
    java.lang.String VIDEOS -> VIDEOS
    java.lang.String WEBSITE -> WEBSITE
    java.lang.String WORK_HISTORY -> WORK_HISTORY
    java.lang.String EMAIL -> EMAIL
com.parse.ParseFieldOperation -> com.parse.ParseFieldOperation:
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
com.parse.ParseFieldOperations -> com.parse.ParseFieldOperations:
    java.util.Map opDecoderMap -> opDecoderMap
    void registerDecoder(java.lang.String,com.parse.ParseFieldOperations$ParseFieldOperationFactory) -> registerDecoder
    void registerDefaultDecoders() -> registerDefaultDecoders
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
    java.util.ArrayList jsonArrayAsArrayList(org.json.JSONArray) -> jsonArrayAsArrayList
com.parse.ParseFieldOperations$1 -> com.parse.ParseFieldOperations$1:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$2 -> com.parse.ParseFieldOperations$2:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$3 -> com.parse.ParseFieldOperations$3:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$4 -> com.parse.ParseFieldOperations$4:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$5 -> com.parse.ParseFieldOperations$5:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$6 -> com.parse.ParseFieldOperations$6:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$7 -> com.parse.ParseFieldOperations$7:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$8 -> com.parse.ParseFieldOperations$8:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$ParseFieldOperationFactory -> com.parse.ParseFieldOperations$ParseFieldOperationFactory:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFile -> com.parse.ParseFile:
    boolean dirty -> dirty
    java.lang.String name -> name
    java.lang.String url -> url
    java.lang.String contentType -> contentType
    byte[] data -> data
    org.apache.http.client.methods.HttpPost fileUploadPost -> fileUploadPost
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Set currentTasks -> currentTasks
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getFilesDir() -> getFilesDir
    void clearCache() -> clearCache
    java.lang.String getFilename() -> getFilename
    java.io.File getCacheFile() -> getCacheFile
    java.io.File getFilesFile() -> getFilesFile
    java.lang.String getName() -> getName
    boolean isDirty() -> isDirty
    boolean isDataAvailable() -> isDataAvailable
    java.lang.String getUrl() -> getUrl
    byte[] getCachedData() -> getCachedData
    boolean isPinned() -> isPinned
    void pin() -> pin
    void unpin() -> unpin
    void pinInBackground() -> pinInBackground
    void unpinInBackground() -> unpinInBackground
    void pinInBackground(com.parse.ParseCallback) -> pinInBackground
    void unpinInBackground(com.parse.ParseCallback) -> unpinInBackground
    void setPinned(boolean) -> setPinned
    void setPinnedInBackground(boolean,com.parse.ParseCallback) -> setPinnedInBackground
    com.parse.Task setPinnedAsync(boolean) -> setPinnedAsync
    com.parse.ParseCommand constructFileUploadCommand(java.lang.String) -> constructFileUploadCommand
    void prepareFileUploadPost(org.json.JSONObject,com.parse.ProgressCallback) -> prepareFileUploadPost
    com.parse.Task handleFileUploadResultAsync(org.json.JSONObject,com.parse.ProgressCallback) -> handleFileUploadResultAsync
    void save() -> save
    void save(com.parse.ProgressCallback) -> save
    com.parse.Task saveAsync(com.parse.ProgressCallback,com.parse.Task) -> saveAsync
    com.parse.Task saveAsync(com.parse.ProgressCallback) -> saveAsync
    void saveInBackground(com.parse.SaveCallback,com.parse.ProgressCallback) -> saveInBackground
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    void saveInBackground() -> saveInBackground
    byte[] getData() -> getData
    com.parse.Task getDataAsync(com.parse.ProgressCallback,com.parse.Task) -> getDataAsync
    com.parse.Task getDataAsync(com.parse.ProgressCallback) -> getDataAsync
    void getDataInBackground(com.parse.GetDataCallback,com.parse.ProgressCallback) -> getDataInBackground
    void getDataInBackground(com.parse.GetDataCallback) -> getDataInBackground
    void cancel() -> cancel
    java.util.Set access$000(com.parse.ParseFile) -> access$000
    boolean access$102(com.parse.ParseFile,boolean) -> access$102
    com.parse.Task access$200(com.parse.ParseFile,org.json.JSONObject,com.parse.ProgressCallback) -> access$200
    com.parse.ParseCommand access$300(com.parse.ParseFile,java.lang.String) -> access$300
    java.lang.String access$400(com.parse.ParseFile) -> access$400
    byte[] access$500(com.parse.ParseFile) -> access$500
    com.parse.Task access$600(com.parse.ParseFile,com.parse.ProgressCallback,com.parse.Task) -> access$600
com.parse.ParseFile$1 -> com.parse.ParseFile$1:
    boolean val$pinned -> val$pinned
    com.parse.ParseFile this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$2 -> com.parse.ParseFile$2:
    com.parse.ParseFile this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$3 -> com.parse.ParseFile$3:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$3$1 -> com.parse.ParseFile$3$1:
    com.parse.ParseFile$3 this$1 -> this$1
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$3$2 -> com.parse.ParseFile$3$2:
    com.parse.ParseFile$3 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$3$3 -> com.parse.ParseFile$3$3:
    com.parse.ParseFile$3 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$3$4 -> com.parse.ParseFile$3$4:
    com.parse.ParseFile$3 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$3$5 -> com.parse.ParseFile$3$5:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseFile$3 this$1 -> this$1
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseFile$3$5$1 -> com.parse.ParseFile$3$5$1:
    com.parse.ParseCommand val$command -> val$command
    com.parse.ParseFile$3$5 this$2 -> this$2
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$4 -> com.parse.ParseFile$4:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$5 -> com.parse.ParseFile$5:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$5$1 -> com.parse.ParseFile$5$1:
    com.parse.ParseFile$5 this$1 -> this$1
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$5$2 -> com.parse.ParseFile$5$2:
    com.parse.ParseFile$5 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$6 -> com.parse.ParseFile$6:
    com.parse.ParseFile this$0 -> this$0
    byte[] then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$7 -> com.parse.ParseFile$7:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFileUtils -> com.parse.ParseFileUtils:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long FILE_COPY_BUFFER_SIZE -> FILE_COPY_BUFFER_SIZE
    byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    java.io.FileOutputStream openOutputStream(java.io.File) -> openOutputStream
    void moveFile(java.io.File,java.io.File) -> moveFile
    void copyFile(java.io.File,java.io.File) -> copyFile
    void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    void doCopyFile(java.io.File,java.io.File,boolean) -> doCopyFile
    void deleteDirectory(java.io.File) -> deleteDirectory
    boolean deleteQuietly(java.io.File) -> deleteQuietly
    void cleanDirectory(java.io.File) -> cleanDirectory
    void forceDelete(java.io.File) -> forceDelete
    boolean isSymlink(java.io.File) -> isSymlink
com.parse.ParseGeoPoint -> com.parse.ParseGeoPoint:
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double EARTH_MEAN_RADIUS_MILE -> EARTH_MEAN_RADIUS_MILE
    double latitude -> latitude
    double longitude -> longitude
    void setLatitude(double) -> setLatitude
    double getLatitude() -> getLatitude
    void setLongitude(double) -> setLongitude
    double getLongitude() -> getLongitude
    double distanceInRadiansTo(com.parse.ParseGeoPoint) -> distanceInRadiansTo
    double distanceInKilometersTo(com.parse.ParseGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(com.parse.ParseGeoPoint) -> distanceInMilesTo
    void getCurrentLocationInBackground(long,com.parse.LocationCallback) -> getCurrentLocationInBackground
    void getCurrentLocationInBackground(long,android.location.Criteria,com.parse.LocationCallback) -> getCurrentLocationInBackground
com.parse.ParseIOUtils -> com.parse.ParseIOUtils:
    int EOF -> EOF
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int SKIP_BUFFER_SIZE -> SKIP_BUFFER_SIZE
    byte[] SKIP_BYTE_BUFFER -> SKIP_BYTE_BUFFER
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long) -> copyLarge
    long skip(java.io.InputStream,long) -> skip
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[]) -> copyLarge
    void skipFully(java.io.InputStream,long) -> skipFully
    void closeQuietly(java.io.InputStream) -> closeQuietly
    void closeQuietly(java.io.OutputStream) -> closeQuietly
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.parse.ParseImageView -> com.parse.ParseImageView:
    com.parse.ParseFile file -> file
    android.graphics.drawable.Drawable placeholder -> placeholder
    boolean isLoaded -> isLoaded
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setPlaceholder(android.graphics.drawable.Drawable) -> setPlaceholder
    void setParseFile(com.parse.ParseFile) -> setParseFile
    void loadInBackground() -> loadInBackground
    void loadInBackground(com.parse.GetDataCallback) -> loadInBackground
    com.parse.ParseFile access$000(com.parse.ParseImageView) -> access$000
com.parse.ParseImageView$1 -> com.parse.ParseImageView$1:
    com.parse.ParseFile val$loadingFile -> val$loadingFile
    com.parse.GetDataCallback val$completionCallback -> val$completionCallback
    com.parse.ParseImageView this$0 -> this$0
    void done(byte[],com.parse.ParseException) -> done
com.parse.ParseIncrementOperation -> com.parse.ParseIncrementOperation:
    java.lang.Number amount -> amount
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseInstallation -> com.parse.ParseInstallation:
    java.lang.String TAG -> TAG
    java.lang.Object installationLock -> installationLock
    com.parse.ParseInstallation currentInstallation -> currentInstallation
    java.lang.String installationId -> installationId
    java.lang.String INSTALLATION_ID_LOCATION -> INSTALLATION_ID_LOCATION
    java.lang.String STORAGE_LOCATION -> STORAGE_LOCATION
    java.util.List readonlyFields -> readonlyFields
    void setDefaultValues() -> setDefaultValues
    boolean hasCurrentInstallation() -> hasCurrentInstallation
    com.parse.ParseInstallation getCurrentInstallation() -> getCurrentInstallation
    com.parse.ParseQuery getQuery() -> getQuery
    java.lang.String getOrCreateCurrentInstallationId() -> getOrCreateCurrentInstallationId
    void setCurrentInstallationId(java.lang.String) -> setCurrentInstallationId
    java.lang.String getInstallationId() -> getInstallationId
    void checkKeyIsMutable(java.lang.String) -> checkKeyIsMutable
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    com.parse.Task saveAsync(com.parse.Task) -> saveAsync
    void saveEventually(com.parse.SaveCallback) -> saveEventually
    com.parse.Task fetchAsync(com.parse.Task) -> fetchAsync
    void handleSaveResult(java.lang.String,org.json.JSONObject,java.util.Map) -> handleSaveResult
    void handleFetchResult(org.json.JSONObject) -> handleFetchResult
    void maybeUpdateInstallationIdOnDisk() -> maybeUpdateInstallationIdOnDisk
    void updateTimezone() -> updateTimezone
    void updateVersionInfo() -> updateVersionInfo
    void updateDeviceInfo() -> updateDeviceInfo
    com.parse.PushType getPushType() -> getPushType
    void setPushType(com.parse.PushType) -> setPushType
    void removePushType() -> removePushType
    java.lang.String getDeviceToken() -> getDeviceToken
    boolean isDeviceTokenStale() -> isDeviceTokenStale
    void setDeviceTokenLastModified(long) -> setDeviceTokenLastModified
    void setDeviceToken(java.lang.String) -> setDeviceToken
    void removeDeviceToken() -> removeDeviceToken
    void maybeFlushToDisk(com.parse.ParseInstallation) -> maybeFlushToDisk
    void clearCurrentInstallationFromMemory() -> clearCurrentInstallationFromMemory
    void clearCurrentInstallationFromDisk(android.content.Context) -> clearCurrentInstallationFromDisk
    boolean needsDefaultACL() -> needsDefaultACL
    com.parse.Task access$001(com.parse.ParseInstallation,com.parse.Task) -> access$001
com.parse.ParseInstallation$1 -> com.parse.ParseInstallation$1:
    com.parse.Task val$toAwait -> val$toAwait
    com.parse.ParseInstallation this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseJSONCacheItem -> com.parse.ParseJSONCacheItem:
    org.json.JSONObject json -> json
    java.lang.String hashValue -> hashValue
    boolean equals(com.parse.ParseJSONCacheItem) -> equals
    java.lang.String getHashValue() -> getHashValue
    java.lang.Object getJSONObject() -> getJSONObject
com.parse.ParseMulticastDelegate -> com.parse.ParseMulticastDelegate:
    java.util.List callbacks -> callbacks
    void subscribe(com.parse.ParseCallback) -> subscribe
    void unsubscribe(com.parse.ParseCallback) -> unsubscribe
    void invoke(java.lang.Object,com.parse.ParseException) -> invoke
    void clear() -> clear
com.parse.ParseNotificationManager -> com.parse.ParseNotificationManager:
    java.lang.String TAG -> TAG
    java.lang.Object lock -> lock
    java.util.concurrent.atomic.AtomicInteger notificationCount -> notificationCount
    boolean shouldShowNotifications -> shouldShowNotifications
    android.util.SparseIntArray iconIds -> iconIds
    com.parse.ParseNotificationManager getInstance() -> getInstance
    boolean getShouldShowNotifications() -> getShouldShowNotifications
    void setShouldShowNotifications(boolean) -> setShouldShowNotifications
    int getNotificationCount() -> getNotificationCount
    boolean isValidIconId(android.content.Context,int) -> isValidIconId
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.Class,int,android.os.Bundle) -> createNotification
    void showNotification(android.content.Context,android.app.Notification) -> showNotification
    void showNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.Class,int,android.os.Bundle) -> showNotification
com.parse.ParseNotificationManager$Singleton -> com.parse.ParseNotificationManager$Singleton:
    com.parse.ParseNotificationManager INSTANCE -> INSTANCE
    com.parse.ParseNotificationManager access$000() -> access$000
com.parse.ParseObject -> com.parse.ParseObject:
    java.lang.String TAG -> TAG
    java.lang.String server -> server
    java.lang.String API_VERSION -> API_VERSION
    java.lang.String AUTO_CLASS_NAME -> AUTO_CLASS_NAME
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.util.Map classNames -> classNames
    java.util.Map objectTypes -> objectTypes
    java.text.DateFormat impreciseDateFormat -> impreciseDateFormat
    boolean dirty -> dirty
    java.lang.String objectId -> objectId
    java.lang.String localId -> localId
    java.lang.String className -> className
    com.parse.ParseMulticastDelegate saveEvent -> saveEvent
    java.util.Map serverData -> serverData
    java.util.LinkedList operationSetQueue -> operationSetQueue
    java.util.Map estimatedData -> estimatedData
    java.util.Map dataAvailability -> dataAvailability
    java.lang.Object mutex -> mutex
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Map hashedObjects -> hashedObjects
    boolean hasBeenFetched -> hasBeenFetched
    java.util.Date updatedAt -> updatedAt
    java.util.Date createdAt -> createdAt
    java.lang.ThreadLocal isCreatingPointer -> isCreatingPointer
    com.parse.ParseObject create(java.lang.String) -> create
    com.parse.ParseObject create(java.lang.Class) -> create
    com.parse.ParseObject createWithoutData(java.lang.String,java.lang.String) -> createWithoutData
    com.parse.ParseObject createWithoutData(java.lang.Class,java.lang.String) -> createWithoutData
    boolean isAccessible(java.lang.reflect.Member) -> isAccessible
    void registerSubclass(java.lang.Class) -> registerSubclass
    void unregisterSubclass(java.lang.String) -> unregisterSubclass
    java.lang.String getApplicationId() -> getApplicationId
    com.parse.Task enqueueForAll(java.util.List,com.parse.Continuation) -> enqueueForAll
    java.util.Date impreciseParseDate(java.lang.String) -> impreciseParseDate
    org.json.JSONObject getDiskObject(android.content.Context,java.lang.String) -> getDiskObject
    org.json.JSONObject getDiskObject(java.io.File) -> getDiskObject
    void saveDiskObject(android.content.Context,java.lang.String,org.json.JSONObject) -> saveDiskObject
    void saveDiskObject(java.io.File,org.json.JSONObject) -> saveDiskObject
    void deleteDiskObject(android.content.Context,java.lang.String) -> deleteDiskObject
    void saveToDisk(android.content.Context,java.lang.String) -> saveToDisk
    void addToHashedObjects(java.lang.Object) -> addToHashedObjects
    com.parse.ParseObject getFromDisk(android.content.Context,java.lang.String) -> getFromDisk
    com.parse.ParseObject fromJSONObjectForDataFile(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> fromJSONObjectForDataFile
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean) -> fromJSON
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean,com.parse.ParseDecoder) -> fromJSON
    java.lang.String getClassName() -> getClassName
    java.util.Set keySet() -> keySet
    java.util.Date getUpdatedAt() -> getUpdatedAt
    java.util.Date getCreatedAt() -> getCreatedAt
    void copyChangesFrom(com.parse.ParseObject) -> copyChangesFrom
    void mergeFromObject(com.parse.ParseObject) -> mergeFromObject
    void revert() -> revert
    void mergeAfterFetch(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeAfterFetch
    void mergeAfterSave(org.json.JSONObject,com.parse.ParseDecoder,boolean,java.util.Map) -> mergeAfterSave
    java.util.Map collectFetchedObjects() -> collectFetchedObjects
    void mergeFromServer(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeFromServer
    org.json.JSONObject toRest(com.parse.ParseObjectEncodingStrategy) -> toRest
    com.parse.ParseObject fromREST(org.json.JSONObject,com.parse.ParseDecoder) -> fromREST
    void mergeREST(org.json.JSONObject,com.parse.ParseDecoder) -> mergeREST
    boolean hasDirtyChildren() -> hasDirtyChildren
    boolean isDirty() -> isDirty
    boolean isDirty(boolean) -> isDirty
    boolean isDirty(java.lang.String) -> isDirty
    void checkpointAllMutableContainers() -> checkpointAllMutableContainers
    void checkpointMutableContainer(java.lang.Object) -> checkpointMutableContainer
    void checkForChangesToMutableContainer(java.lang.String,java.lang.Object) -> checkForChangesToMutableContainer
    void checkForChangesToMutableContainers() -> checkForChangesToMutableContainers
    java.lang.String getObjectId() -> getObjectId
    java.lang.String getOrCreateLocalId() -> getOrCreateLocalId
    void setObjectId(java.lang.String) -> setObjectId
    void setObjectIdInternal(java.lang.String) -> setObjectIdInternal
    void findUnsavedChildren(java.lang.Object,java.util.List) -> findUnsavedChildren
    com.parse.ParseCommand constructSaveCommand(java.util.Map,com.parse.ParseObjectEncodingStrategy,java.lang.String) -> constructSaveCommand
    org.json.JSONObject toJSONObjectForDataFile(boolean,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForDataFile
    org.json.JSONObject toJSONObjectForSaving(java.util.Map,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForSaving
    void handleSaveResult(java.lang.String,org.json.JSONObject,java.util.Map) -> handleSaveResult
    java.util.Map startSave() -> startSave
    void validateSave() -> validateSave
    void save() -> save
    com.parse.Task saveAsync(com.parse.Task) -> saveAsync
    com.parse.Task saveAsync() -> saveAsync
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    void saveInBackground() -> saveInBackground
    void saveEventually() -> saveEventually
    void saveEventually(com.parse.SaveCallback) -> saveEventually
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.parse.DeleteCallback) -> deleteEventually
    void handleFetchResult(org.json.JSONObject) -> handleFetchResult
    void refresh() -> refresh
    void refreshInBackground(com.parse.RefreshCallback) -> refreshInBackground
    com.parse.ParseObject fetch() -> fetch
    com.parse.Task fetchAsync(com.parse.Task) -> fetchAsync
    com.parse.Task fetchAsync() -> fetchAsync
    void fetchInBackground(com.parse.GetCallback) -> fetchInBackground
    com.parse.Task fetchIfNeededAsync() -> fetchIfNeededAsync
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    void fetchIfNeededInBackground(com.parse.GetCallback) -> fetchIfNeededInBackground
    com.parse.ParseCommand constructDeleteCommand(boolean,java.lang.String) -> constructDeleteCommand
    void validateDelete() -> validateDelete
    com.parse.Task deleteAsync(com.parse.Task) -> deleteAsync
    com.parse.Task deleteAsync() -> deleteAsync
    void delete() -> delete
    void deleteInBackground(com.parse.DeleteCallback) -> deleteInBackground
    void deleteInBackground() -> deleteInBackground
    com.parse.Task deleteAllAsync(java.util.List,java.lang.String) -> deleteAllAsync
    void deleteAll(java.util.List) -> deleteAll
    void deleteAllInBackground(java.util.List,com.parse.DeleteCallback) -> deleteAllInBackground
    void collectDirtyChildren(java.lang.Object,java.util.List,java.util.List,java.util.IdentityHashMap,java.util.IdentityHashMap) -> collectDirtyChildren
    void collectDirtyChildren(java.lang.Object,java.util.List,java.util.List) -> collectDirtyChildren
    boolean canBeSerializedAsValue(java.lang.Object) -> canBeSerializedAsValue
    boolean canBeSerialized() -> canBeSerialized
    com.parse.Task deepSaveAsync(java.lang.Object,java.lang.String) -> deepSaveAsync
    com.parse.Task saveAllAsync(java.util.List) -> saveAllAsync
    void saveAll(java.util.List) -> saveAll
    com.parse.Task fetchAllIfNeededAsync(java.util.List,com.parse.Task) -> fetchAllIfNeededAsync
    com.parse.Task fetchAllIfNeededAsync(java.util.List) -> fetchAllIfNeededAsync
    java.util.List fetchAllIfNeeded(java.util.List) -> fetchAllIfNeeded
    void fetchAllIfNeededInBackground(java.util.List,com.parse.FindCallback) -> fetchAllIfNeededInBackground
    com.parse.Task fetchAllAsync(java.util.List,com.parse.Task) -> fetchAllAsync
    com.parse.Task fetchAllAsync(java.util.List) -> fetchAllAsync
    java.util.List fetchAll(java.util.List) -> fetchAll
    void fetchAllInBackground(java.util.List,com.parse.FindCallback) -> fetchAllInBackground
    void saveAllInBackground(java.util.List,com.parse.SaveCallback) -> saveAllInBackground
    void saveAllInBackground(java.util.List) -> saveAllInBackground
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.util.Map currentOperations() -> currentOperations
    void applyOperations(java.util.Map,java.util.Map) -> applyOperations
    void rebuildEstimatedData() -> rebuildEstimatedData
    void performOperation(java.lang.String,com.parse.ParseFieldOperation) -> performOperation
    void put(java.lang.String,java.lang.Object) -> put
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.String getString(java.lang.String) -> getString
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.Number getNumber(java.lang.String) -> getNumber
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.util.List getList(java.lang.String) -> getList
    java.util.Map getMap(java.lang.String) -> getMap
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    int getInt(java.lang.String) -> getInt
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    boolean getBoolean(java.lang.String) -> getBoolean
    java.util.Date getDate(java.lang.String) -> getDate
    com.parse.ParseObject getParseObject(java.lang.String) -> getParseObject
    com.parse.ParseUser getParseUser(java.lang.String) -> getParseUser
    com.parse.ParseFile getParseFile(java.lang.String) -> getParseFile
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String) -> getParseGeoPoint
    com.parse.ParseACL getACL() -> getACL
    com.parse.ParseACL getACL(boolean) -> getACL
    void setACL(com.parse.ParseACL) -> setACL
    boolean isDataAvailable() -> isDataAvailable
    boolean isDataAvailable(java.lang.String) -> isDataAvailable
    com.parse.ParseRelation getRelation(java.lang.String) -> getRelation
    java.lang.Object get(java.lang.String) -> get
    void checkGetAccess(java.lang.String) -> checkGetAccess
    boolean hasSameId(com.parse.ParseObject) -> hasSameId
    void registerSaveListener(com.parse.GetCallback) -> registerSaveListener
    void unregisterSaveListener(com.parse.GetCallback) -> unregisterSaveListener
    java.lang.String getClassName(java.lang.Class) -> getClassName
    void setDefaultValues() -> setDefaultValues
    boolean needsDefaultACL() -> needsDefaultACL
    void registerParseSubclasses() -> registerParseSubclasses
    java.lang.String access$000(com.parse.ParseObject) -> access$000
    java.util.Map access$100(com.parse.ParseObject) -> access$100
    com.parse.Task access$200(java.lang.Object,java.lang.String) -> access$200
    boolean access$300(com.parse.ParseObject,java.lang.String) -> access$300
    com.parse.ParseACL access$400(com.parse.ParseObject,boolean) -> access$400
    java.lang.String access$500(com.parse.ParseObject) -> access$500
    com.parse.ParseCommand access$600(com.parse.ParseObject,boolean,java.lang.String) -> access$600
    com.parse.Task access$700(com.parse.ParseObject,com.parse.Task) -> access$700
    boolean access$800(com.parse.ParseObject) -> access$800
    com.parse.Task access$900(java.util.List,com.parse.Task) -> access$900
    com.parse.Task access$1000(java.util.List,com.parse.Task) -> access$1000
com.parse.ParseObject$1 -> com.parse.ParseObject$1:
    java.lang.Boolean initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.parse.ParseObject$10 -> com.parse.ParseObject$10:
    com.parse.ParseCommand val$command -> val$command
    java.util.Map val$operations -> val$operations
    com.parse.Capture val$succeeded -> val$succeeded
    com.parse.ParseObject this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$11 -> com.parse.ParseObject$11:
    com.parse.ParseCommandCache val$cache -> val$cache
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$12 -> com.parse.ParseObject$12:
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseObject then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$13 -> com.parse.ParseObject$13:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$14 -> com.parse.ParseObject$14:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$15 -> com.parse.ParseObject$15:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$16 -> com.parse.ParseObject$16:
    com.parse.ParseObject this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$17 -> com.parse.ParseObject$17:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$18 -> com.parse.ParseObject$18:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$19 -> com.parse.ParseObject$19:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$2 -> com.parse.ParseObject$2:
    java.util.List val$childTasks -> val$childTasks
    com.parse.Task val$fullTask -> val$fullTask
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$20 -> com.parse.ParseObject$20:
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$20$1 -> com.parse.ParseObject$20$1:
    com.parse.ParseObject$20 this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$20$1$1 -> com.parse.ParseObject$20$1$1:
    com.parse.ParseObject$20$1 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21 -> com.parse.ParseObject$21:
    java.util.List val$objects -> val$objects
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$1 -> com.parse.ParseObject$21$1:
    com.parse.Capture val$remaining -> val$remaining
    com.parse.ParseObject$21 this$0 -> this$0
    java.lang.Boolean call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$21$2 -> com.parse.ParseObject$21$2:
    com.parse.Capture val$remaining -> val$remaining
    com.parse.ParseObject$21 this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$1 -> com.parse.ParseObject$21$2$1:
    java.util.List val$current -> val$current
    com.parse.ParseObject$21$2 this$1 -> this$1
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$2 -> com.parse.ParseObject$21$2$2:
    com.parse.ParseObject$21$2 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3 -> com.parse.ParseObject$21$2$3:
    java.util.List val$current -> val$current
    java.util.List val$operations -> val$operations
    java.util.List val$ops -> val$ops
    com.parse.ParseObject$21$2 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3$1 -> com.parse.ParseObject$21$2$3$1:
    com.parse.ParseObject$21$2$3 this$2 -> this$2
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3$1$1 -> com.parse.ParseObject$21$2$3$1$1:
    com.parse.ParseObject$21$2$3$1 this$3 -> this$3
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3$1$1$1 -> com.parse.ParseObject$21$2$3$1$1$1:
    com.parse.ParseObject$21$2$3$1$1 this$4 -> this$4
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$22 -> com.parse.ParseObject$22:
    java.util.List val$objects -> val$objects
    java.util.List then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$23 -> com.parse.ParseObject$23:
    com.parse.ParseQuery val$query -> val$query
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$24 -> com.parse.ParseObject$24:
    java.util.List val$objects -> val$objects
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$25 -> com.parse.ParseObject$25:
    java.util.List val$objects -> val$objects
    java.util.List then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$26 -> com.parse.ParseObject$26:
    com.parse.ParseQuery val$query -> val$query
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$27 -> com.parse.ParseObject$27:
    java.util.List val$objects -> val$objects
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$3 -> com.parse.ParseObject$3:
    com.parse.Task$TaskCompletionSource val$readyToStart -> val$readyToStart
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$4 -> com.parse.ParseObject$4:
    java.util.Map val$fetchedObjects -> val$fetchedObjects
    com.parse.ParseObject this$0 -> this$0
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$5 -> com.parse.ParseObject$5:
    com.parse.Capture val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$5$1 -> com.parse.ParseObject$5$1:
    com.parse.ParseCommand val$command -> val$command
    com.parse.ParseObject$5 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$6 -> com.parse.ParseObject$6:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$7 -> com.parse.ParseObject$7:
    com.parse.Capture val$operations -> val$operations
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$7$1 -> com.parse.ParseObject$7$1:
    com.parse.ParseObject$7 this$1 -> this$1
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$8 -> com.parse.ParseObject$8:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$9 -> com.parse.ParseObject$9:
    com.parse.Capture val$succeeded -> val$succeeded
    com.parse.ParseCommandCache val$cache -> val$cache
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObjectEncodingStrategy -> com.parse.ParseObjectEncodingStrategy:
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.ParsePush -> com.parse.ParsePush:
    java.lang.String TAG -> TAG
    java.util.Set channelSet -> channelSet
    com.parse.ParseQuery query -> query
    java.lang.Long expirationTime -> expirationTime
    java.lang.Long expirationTimeInterval -> expirationTimeInterval
    java.lang.Boolean pushToIOS -> pushToIOS
    java.lang.Boolean pushToAndroid -> pushToAndroid
    org.json.JSONObject data -> data
    void sendMessageInBackground(java.lang.String,com.parse.ParseQuery) -> sendMessageInBackground
    void sendMessageInBackground(java.lang.String,com.parse.ParseQuery,com.parse.SendCallback) -> sendMessageInBackground
    void sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery) -> sendDataInBackground
    void sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery,com.parse.SendCallback) -> sendDataInBackground
    void setChannel(java.lang.String) -> setChannel
    void setChannels(java.util.Collection) -> setChannels
    void setQuery(com.parse.ParseQuery) -> setQuery
    void setExpirationTime(long) -> setExpirationTime
    void setExpirationTimeInterval(long) -> setExpirationTimeInterval
    void clearExpiration() -> clearExpiration
    void setPushToIOS(boolean) -> setPushToIOS
    void setPushToAndroid(boolean) -> setPushToAndroid
    void setData(org.json.JSONObject) -> setData
    void setMessage(java.lang.String) -> setMessage
    com.parse.Task sendAsync() -> sendAsync
    void send() -> send
    void sendInBackground(com.parse.SendCallback) -> sendInBackground
    void sendInBackground() -> sendInBackground
    com.parse.ParseCommand buildCommand(java.lang.String) -> buildCommand
com.parse.ParsePush$1 -> com.parse.ParsePush$1:
    com.parse.ParsePush this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery -> com.parse.ParseQuery:
    java.lang.String TAG -> TAG
    java.lang.String className -> className
    com.parse.ParseQuery$QueryConstraints where -> where
    java.util.ArrayList include -> include
    java.util.ArrayList selectedKeys -> selectedKeys
    int limit -> limit
    boolean trace -> trace
    int skip -> skip
    java.lang.String order -> order
    long queryStart -> queryStart
    long querySent -> querySent
    long queryReceived -> queryReceived
    long objectsParsed -> objectsParsed
    java.lang.Object isRunningLock -> isRunningLock
    com.parse.ParseCommand currentCommand -> currentCommand
    boolean isRunning -> isRunning
    java.util.HashMap extraOptions -> extraOptions
    com.parse.ParseQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    com.parse.ParseQuery or(java.util.List) -> or
    com.parse.ParseQuery getQuery(java.lang.Class) -> getQuery
    com.parse.ParseQuery getQuery(java.lang.String) -> getQuery
    com.parse.ParseQuery getUserQuery() -> getUserQuery
    void checkIfRunning() -> checkIfRunning
    void checkIfRunning(boolean) -> checkIfRunning
    com.parse.ParseQuery$QueryConstraints getConstraints() -> getConstraints
    org.json.JSONObject toREST() -> toREST
    org.json.JSONObject toJSON() -> toJSON
    com.parse.ParseCommand makeFindCommand(java.lang.String) -> makeFindCommand
    java.util.List convertFindResponse(org.json.JSONObject) -> convertFindResponse
    com.parse.Task runCommandWithPolicyAsync(com.parse.ParseQuery$CommandDelegate,com.parse.ParseQuery$CachePolicy) -> runCommandWithPolicyAsync
    com.parse.Task countWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy) -> countWithCachePolicyAsync
    com.parse.Task findWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy) -> findWithCachePolicyAsync
    com.parse.Task getFirstWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy) -> getFirstWithCachePolicyAsync
    com.parse.Task getWithCachePolicyAsync(java.lang.String,com.parse.ParseQuery$CachePolicy) -> getWithCachePolicyAsync
    void cancel() -> cancel
    java.util.List find() -> find
    com.parse.ParseObject getFirst() -> getFirst
    com.parse.Task findFromNetworkAsync(boolean) -> findFromNetworkAsync
    void setCachePolicy(com.parse.ParseQuery$CachePolicy) -> setCachePolicy
    com.parse.ParseQuery$CachePolicy getCachePolicy() -> getCachePolicy
    void setMaxCacheAge(long) -> setMaxCacheAge
    long getMaxCacheAge() -> getMaxCacheAge
    java.util.List findFromCache() -> findFromCache
    java.lang.Integer countFromCache() -> countFromCache
    com.parse.Task doWithRunningCheck(java.util.concurrent.Callable) -> doWithRunningCheck
    void doInBackground(com.parse.ParseQuery$CallableWithCachePolicy,com.parse.ParseCallback) -> doInBackground
    void findInBackground(com.parse.FindCallback) -> findInBackground
    void getFirstInBackground(com.parse.GetCallback) -> getFirstInBackground
    com.parse.ParseCommand makeCountCommand(java.lang.String) -> makeCountCommand
    int count() -> count
    com.parse.Task countFromNetworkAsync() -> countFromNetworkAsync
    void countInBackground(com.parse.CountCallback) -> countInBackground
    com.parse.ParseObject get(java.lang.String) -> get
    boolean hasCachedResult() -> hasCachedResult
    void clearCachedResult() -> clearCachedResult
    void clearAllCachedResults() -> clearAllCachedResults
    void getInBackground(java.lang.String,com.parse.GetCallback) -> getInBackground
    com.parse.ParseQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    void addCondition(java.lang.String,java.lang.String,java.lang.Object) -> addCondition
    com.parse.ParseQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.parse.ParseQuery whereNotEqualTo(java.lang.String,java.lang.Object) -> whereNotEqualTo
    com.parse.ParseQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.parse.ParseQuery whereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualTo
    com.parse.ParseQuery whereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualTo
    com.parse.ParseQuery whereContainedIn(java.lang.String,java.util.Collection) -> whereContainedIn
    com.parse.ParseQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.parse.ParseQuery whereMatchesQuery(java.lang.String,com.parse.ParseQuery) -> whereMatchesQuery
    com.parse.ParseQuery whereDoesNotMatchQuery(java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchQuery
    com.parse.ParseQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereMatchesKeyInQuery
    com.parse.ParseQuery whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchKeyInQuery
    com.parse.ParseQuery whereSatifiesAnyOf(java.util.List) -> whereSatifiesAnyOf
    com.parse.ParseQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> whereNotContainedIn
    com.parse.ParseQuery whereNear(java.lang.String,com.parse.ParseGeoPoint) -> whereNear
    com.parse.ParseQuery whereWithinMiles(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinMiles
    com.parse.ParseQuery whereWithinKilometers(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinKilometers
    com.parse.ParseQuery whereWithinRadians(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinRadians
    com.parse.ParseQuery whereWithinGeoBox(java.lang.String,com.parse.ParseGeoPoint,com.parse.ParseGeoPoint) -> whereWithinGeoBox
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.parse.ParseQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.parse.ParseQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    void include(java.lang.String) -> include
    java.util.List getIncludes() -> getIncludes
    void selectKeys(java.util.Collection) -> selectKeys
    com.parse.ParseQuery whereExists(java.lang.String) -> whereExists
    com.parse.ParseQuery whereDoesNotExist(java.lang.String) -> whereDoesNotExist
    com.parse.ParseQuery whereRelatedTo(com.parse.ParseObject,java.lang.String) -> whereRelatedTo
    com.parse.ParseQuery redirectClassNameForKey(java.lang.String) -> redirectClassNameForKey
    com.parse.ParseQuery orderByAscending(java.lang.String) -> orderByAscending
    com.parse.ParseQuery addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.parse.ParseQuery orderByDescending(java.lang.String) -> orderByDescending
    com.parse.ParseQuery addDescendingOrder(java.lang.String) -> addDescendingOrder
    java.lang.String[] sortKeys() -> sortKeys
    void setLimit(int) -> setLimit
    void setTrace(boolean) -> setTrace
    int getLimit() -> getLimit
    void setSkip(int) -> setSkip
    int getSkip() -> getSkip
    java.lang.String getClassName() -> getClassName
    com.parse.Task access$000(com.parse.ParseQuery) -> access$000
    java.lang.Integer access$100(com.parse.ParseQuery) -> access$100
    com.parse.Task access$200(com.parse.ParseQuery,boolean) -> access$200
    java.util.List access$300(com.parse.ParseQuery) -> access$300
    com.parse.ParseQuery$CachePolicy access$400(com.parse.ParseQuery) -> access$400
    com.parse.Task access$500(com.parse.ParseQuery,com.parse.ParseQuery$CachePolicy) -> access$500
    com.parse.ParseCommand access$600(com.parse.ParseQuery) -> access$600
    long access$702(com.parse.ParseQuery,long) -> access$702
    long access$802(com.parse.ParseQuery,long) -> access$802
    java.util.List access$900(com.parse.ParseQuery,org.json.JSONObject) -> access$900
    java.lang.Object access$1000(com.parse.ParseQuery) -> access$1000
    boolean access$1102(com.parse.ParseQuery,boolean) -> access$1102
    com.parse.ParseCommand access$602(com.parse.ParseQuery,com.parse.ParseCommand) -> access$602
    com.parse.Task access$1200(com.parse.ParseQuery,com.parse.ParseQuery$CachePolicy) -> access$1200
    com.parse.Task access$1300(com.parse.ParseQuery,java.lang.String,com.parse.ParseQuery$CachePolicy) -> access$1300
com.parse.ParseQuery$1 -> com.parse.ParseQuery$1:
    com.parse.ParseQuery$CommandDelegate val$c -> val$c
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$10 -> com.parse.ParseQuery$10:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$11 -> com.parse.ParseQuery$11:
    com.parse.ParseQuery$CallableWithCachePolicy val$callable -> val$callable
    com.parse.ParseCallback val$callback -> val$callback
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$11$1 -> com.parse.ParseQuery$11$1:
    com.parse.ParseQuery$11 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$12 -> com.parse.ParseQuery$12:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$13 -> com.parse.ParseQuery$13:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$14 -> com.parse.ParseQuery$14:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$15 -> com.parse.ParseQuery$15:
    com.parse.ParseQuery this$0 -> this$0
    java.lang.Integer then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$16 -> com.parse.ParseQuery$16:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$17 -> com.parse.ParseQuery$17:
    java.lang.String val$theObjectId -> val$theObjectId
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$18 -> com.parse.ParseQuery$18:
    java.lang.String val$objectId -> val$objectId
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$19 -> com.parse.ParseQuery$19:
    int[] $SwitchMap$com$parse$ParseQuery$CachePolicy -> $SwitchMap$com$parse$ParseQuery$CachePolicy
com.parse.ParseQuery$2 -> com.parse.ParseQuery$2:
    com.parse.ParseQuery$CommandDelegate val$c -> val$c
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$3 -> com.parse.ParseQuery$3:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    com.parse.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.ParseQuery$3$1 -> com.parse.ParseQuery$3$1:
    com.parse.ParseQuery$3 this$1 -> this$1
    java.lang.Integer call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$4 -> com.parse.ParseQuery$4:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    com.parse.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.ParseQuery$4$1 -> com.parse.ParseQuery$4$1:
    com.parse.ParseQuery$4 this$1 -> this$1
    java.util.List call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$5 -> com.parse.ParseQuery$5:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.ParseObject then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$6 -> com.parse.ParseQuery$6:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$7 -> com.parse.ParseQuery$7:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$8 -> com.parse.ParseQuery$8:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$8$1 -> com.parse.ParseQuery$8$1:
    com.parse.ParseQuery$8 this$1 -> this$1
    java.util.List then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$9 -> com.parse.ParseQuery$9:
    boolean val$shouldRetry -> val$shouldRetry
    com.parse.ParseQuery this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$CachePolicy -> com.parse.ParseQuery$CachePolicy:
    com.parse.ParseQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    com.parse.ParseQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    com.parse.ParseQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    com.parse.ParseQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    com.parse.ParseQuery$CachePolicy[] $VALUES -> $VALUES
    com.parse.ParseQuery$CachePolicy[] values() -> values
    com.parse.ParseQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.parse.ParseQuery$CallableWithCachePolicy -> com.parse.ParseQuery$CallableWithCachePolicy:
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$CommandDelegate -> com.parse.ParseQuery$CommandDelegate:
    com.parse.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    com.parse.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.ParseQuery$KeyConstraints -> com.parse.ParseQuery$KeyConstraints:
com.parse.ParseQuery$QueryConstraints -> com.parse.ParseQuery$QueryConstraints:
com.parse.ParseQuery$RelationConstraint -> com.parse.ParseQuery$RelationConstraint:
    java.lang.String key -> key
    com.parse.ParseObject object -> object
    java.lang.String getKey() -> getKey
    com.parse.ParseObject getObject() -> getObject
    com.parse.ParseRelation getRelation() -> getRelation
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseQueryAdapter -> com.parse.ParseQueryAdapter:
    java.lang.String textKey -> textKey
    java.lang.String imageKey -> imageKey
    int objectsPerPage -> objectsPerPage
    boolean paginationEnabled -> paginationEnabled
    android.graphics.drawable.Drawable placeholder -> placeholder
    java.util.WeakHashMap imageViewSet -> imageViewSet
    java.util.WeakHashMap dataSetObservers -> dataSetObservers
    boolean autoload -> autoload
    android.content.Context context -> context
    java.util.List objects -> objects
    int currentPage -> currentPage
    java.lang.Integer itemResourceId -> itemResourceId
    boolean hasNextPage -> hasNextPage
    com.parse.ParseQueryAdapter$QueryFactory queryFactory -> queryFactory
    java.util.List onQueryLoadListeners -> onQueryLoadListeners
    int VIEW_TYPE_ITEM -> VIEW_TYPE_ITEM
    int VIEW_TYPE_NEXT_PAGE -> VIEW_TYPE_NEXT_PAGE
    android.content.Context getContext() -> getContext
    com.parse.ParseObject getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void clear() -> clear
    void loadObjects() -> loadObjects
    void loadObjects(int,boolean) -> loadObjects
    void loadNextPage() -> loadNextPage
    int getCount() -> getCount
    android.view.View getItemView(com.parse.ParseObject,android.view.View,android.view.ViewGroup) -> getItemView
    android.view.View getNextPageView(android.view.View,android.view.ViewGroup) -> getNextPageView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setPageOnQuery(int,com.parse.ParseQuery) -> setPageOnQuery
    void setTextKey(java.lang.String) -> setTextKey
    void setImageKey(java.lang.String) -> setImageKey
    void setObjectsPerPage(int) -> setObjectsPerPage
    int getObjectsPerPage() -> getObjectsPerPage
    void setPaginationEnabled(boolean) -> setPaginationEnabled
    void setPlaceholder(android.graphics.drawable.Drawable) -> setPlaceholder
    void setAutoload(boolean) -> setAutoload
    void addOnQueryLoadListener(com.parse.ParseQueryAdapter$OnQueryLoadListener) -> addOnQueryLoadListener
    void removeOnQueryLoadListener(com.parse.ParseQueryAdapter$OnQueryLoadListener) -> removeOnQueryLoadListener
    android.view.View getDefaultView(android.content.Context) -> getDefaultView
    int getPaginationCellRow() -> getPaginationCellRow
    boolean shouldShowPaginationCell() -> shouldShowPaginationCell
    void notifyOnLoadingListeners() -> notifyOnLoadingListeners
    void notifyOnLoadedListeners(java.util.List,java.lang.Exception) -> notifyOnLoadedListeners
    java.lang.Object getItem(int) -> getItem
    boolean access$002(com.parse.ParseQueryAdapter,boolean) -> access$002
    int access$102(com.parse.ParseQueryAdapter,int) -> access$102
    int access$200(com.parse.ParseQueryAdapter) -> access$200
    boolean access$300(com.parse.ParseQueryAdapter) -> access$300
    java.util.List access$400(com.parse.ParseQueryAdapter) -> access$400
    void access$500(com.parse.ParseQueryAdapter,java.util.List,java.lang.Exception) -> access$500
com.parse.ParseQueryAdapter$1 -> com.parse.ParseQueryAdapter$1:
    java.lang.String val$className -> val$className
    com.parse.ParseQuery create() -> create
com.parse.ParseQueryAdapter$2 -> com.parse.ParseQueryAdapter$2:
    java.lang.String val$className -> val$className
    com.parse.ParseQuery create() -> create
com.parse.ParseQueryAdapter$3 -> com.parse.ParseQueryAdapter$3:
    com.parse.ParseQuery val$query -> val$query
    int val$page -> val$page
    boolean val$shouldClear -> val$shouldClear
    com.parse.ParseQueryAdapter this$0 -> this$0
    void done(java.util.List,com.parse.ParseException) -> done
com.parse.ParseQueryAdapter$4 -> com.parse.ParseQueryAdapter$4:
    com.parse.ParseQueryAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.parse.ParseQueryAdapter$OnQueryLoadListener -> com.parse.ParseQueryAdapter$OnQueryLoadListener:
    void onLoading() -> onLoading
    void onLoaded(java.util.List,java.lang.Exception) -> onLoaded
com.parse.ParseQueryAdapter$QueryFactory -> com.parse.ParseQueryAdapter$QueryFactory:
    com.parse.ParseQuery create() -> create
com.parse.ParseRelation -> com.parse.ParseRelation:
    java.lang.Object mutex -> mutex
    com.parse.ParseObject parent -> parent
    java.lang.String key -> key
    java.lang.String targetClass -> targetClass
    java.util.Set knownObjects -> knownObjects
    void ensureParentAndKey(com.parse.ParseObject,java.lang.String) -> ensureParentAndKey
    void add(com.parse.ParseObject) -> add
    void remove(com.parse.ParseObject) -> remove
    com.parse.ParseQuery getQuery() -> getQuery
    org.json.JSONObject encodeToJSON(com.parse.ParseObjectEncodingStrategy) -> encodeToJSON
    java.lang.String getTargetClass() -> getTargetClass
    void setTargetClass(java.lang.String) -> setTargetClass
com.parse.ParseRelationOperation -> com.parse.ParseRelationOperation:
    java.lang.String targetClass -> targetClass
    java.util.Set relationsToAdd -> relationsToAdd
    java.util.Set relationsToRemove -> relationsToRemove
    void addParseObjectToSet(com.parse.ParseObject,java.util.Set) -> addParseObjectToSet
    void addAllParseObjectsToSet(java.util.Collection,java.util.Set) -> addAllParseObjectsToSet
    void removeParseObjectFromSet(com.parse.ParseObject,java.util.Set) -> removeParseObjectFromSet
    void removeAllParseObjectsFromSet(java.util.Collection,java.util.Set) -> removeAllParseObjectsFromSet
    java.lang.String getTargetClass() -> getTargetClass
    org.json.JSONArray convertSetToArray(java.util.Set,com.parse.ParseObjectEncodingStrategy) -> convertSetToArray
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseRemoveOperation -> com.parse.ParseRemoveOperation:
    java.util.HashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseRequestRetryer -> com.parse.ParseRequestRetryer:
    org.apache.http.client.HttpClient client -> client
    org.apache.http.client.methods.HttpUriRequest request -> request
    long delay -> delay
    int maxAttempts -> maxAttempts
    int attemptsMade -> attemptsMade
    org.apache.http.client.HttpClient testClient -> testClient
    com.parse.Task sendOneRequestAsync(com.parse.ProgressCallback) -> sendOneRequestAsync
    com.parse.Task goAsync(com.parse.ProgressCallback) -> goAsync
    com.parse.ParseException connectionFailed(java.lang.String,java.lang.Exception) -> connectionFailed
    org.apache.http.client.methods.HttpUriRequest access$000(com.parse.ParseRequestRetryer) -> access$000
    org.apache.http.client.HttpClient access$100(com.parse.ParseRequestRetryer) -> access$100
    int access$208(com.parse.ParseRequestRetryer) -> access$208
    int access$200(com.parse.ParseRequestRetryer) -> access$200
    int access$300(com.parse.ParseRequestRetryer) -> access$300
    long access$400(com.parse.ParseRequestRetryer) -> access$400
    long access$430(com.parse.ParseRequestRetryer,long) -> access$430
com.parse.ParseRequestRetryer$1 -> com.parse.ParseRequestRetryer$1:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseRequestRetryer this$0 -> this$0
    byte[] call() -> call
    java.lang.Object call() -> call
com.parse.ParseRequestRetryer$2 -> com.parse.ParseRequestRetryer$2:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseRequestRetryer this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseRequestRetryer$2$1 -> com.parse.ParseRequestRetryer$2$1:
    com.parse.Task$TaskCompletionSource val$retryTask -> val$retryTask
    com.parse.ParseRequestRetryer$2 this$1 -> this$1
    void run() -> run
com.parse.ParseRequestRetryer$2$1$1 -> com.parse.ParseRequestRetryer$2$1$1:
    com.parse.ParseRequestRetryer$2$1 this$2 -> this$2
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseRole -> com.parse.ParseRole:
    java.util.regex.Pattern NAME_PATTERN -> NAME_PATTERN
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    com.parse.ParseRelation getUsers() -> getUsers
    com.parse.ParseRelation getRoles() -> getRoles
    void validateSave() -> validateSave
    void put(java.lang.String,java.lang.Object) -> put
    com.parse.ParseQuery getQuery() -> getQuery
com.parse.ParseSetOperation -> com.parse.ParseSetOperation:
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
com.parse.ParseTestUtils -> com.parse.ParseTestUtils:
    java.lang.String TAG -> TAG
    com.parse.Synchronizer synchronizer -> synchronizer
    int totalNotifications -> totalNotifications
    java.util.concurrent.Semaphore awaitStartSemaphore -> awaitStartSemaphore
    java.util.concurrent.Semaphore awaitStopSemaphore -> awaitStopSemaphore
    com.parse.ParseTestUtils$StateTransitionListener listener -> listener
    com.parse.ParseTestUtils$PushRoutedListener globalListener -> globalListener
    java.util.concurrent.atomic.AtomicBoolean strictModeEnabled -> strictModeEnabled
    java.lang.String useServer(java.lang.String) -> useServer
    java.lang.String getTestServer(android.content.Context) -> getTestServer
    java.lang.String useTestServer(android.content.Context) -> useTestServer
    java.lang.String useInvalidServer() -> useInvalidServer
    java.lang.String useBadServerPort(java.lang.String) -> useBadServerPort
    void clearApp() -> clearApp
    void mockV8Client() -> mockV8Client
    void unmockV8Client() -> unmockV8Client
    void useDevPushServer() -> useDevPushServer
    void saveObjectToDisk(com.parse.ParseObject,android.content.Context,java.lang.String) -> saveObjectToDisk
    com.parse.ParseObject getObjectFromDisk(android.content.Context,java.lang.String) -> getObjectFromDisk
    com.parse.ParseUser getUserObjectFromDisk(android.content.Context,java.lang.String) -> getUserObjectFromDisk
    void saveStringToDisk(java.lang.String,android.content.Context,java.lang.String) -> saveStringToDisk
    java.io.File getParseDir(android.content.Context) -> getParseDir
    void initSynchronizer() -> initSynchronizer
    java.util.Set keySet(com.parse.ParseObject) -> keySet
    void start(int) -> start
    void assertFinishes() -> assertFinishes
    void finish() -> finish
    void setCommandInitialDelay(double) -> setCommandInitialDelay
    void recursiveDelete(java.io.File) -> recursiveDelete
    void clearFiles() -> clearFiles
    void reloadPushRouter() -> reloadPushRouter
    void clearCurrentInstallationFromMemory() -> clearCurrentInstallationFromMemory
    java.util.Set pushRoutes(android.content.Context) -> pushRoutes
    int totalNotifications() -> totalNotifications
    java.lang.String getInstallationId(android.content.Context) -> getInstallationId
    org.json.JSONObject getPushRequestJSON() -> getPushRequestJSON
    org.json.JSONObject getSerializedPushStateJSON() -> getSerializedPushStateJSON
    void resetAwaitConnectionStarted() -> resetAwaitConnectionStarted
    void resetAwaitConnectionStopped() -> resetAwaitConnectionStopped
    boolean awaitConnectionStarted() -> awaitConnectionStarted
    boolean awaitConnectionStopped() -> awaitConnectionStopped
    java.util.List getPushConnectionStateTransitions() -> getPushConnectionStateTransitions
    java.util.List getPushConnectionRetryDelays() -> getPushConnectionRetryDelays
    void tearDownPushTest(android.content.Context) -> tearDownPushTest
    void setPushRoutedListener(com.parse.ParseTestUtils$PushRoutedListener) -> setPushRoutedListener
    void setUpPushTest(android.content.Context) -> setUpPushTest
    void startServiceIfRequired(android.content.Context) -> startServiceIfRequired
    void setRetryDelayEnabled(boolean) -> setRetryDelayEnabled
    java.net.ServerSocket mockPushServer() -> mockPushServer
    int numKeyValueCacheFiles() -> numKeyValueCacheFiles
    void setMaxKeyValueCacheFiles(int) -> setMaxKeyValueCacheFiles
    void setMaxKeyValueCacheBytes(int) -> setMaxKeyValueCacheBytes
    void resetCommandCache() -> resetCommandCache
    void disconnectCommandCache() -> disconnectCommandCache
    void reconnectCommandCache() -> reconnectCommandCache
    boolean waitForCommandCacheEnqueue() -> waitForCommandCacheEnqueue
    boolean waitForCommandCacheSuccess() -> waitForCommandCacheSuccess
    boolean waitForCommandCacheFailure() -> waitForCommandCacheFailure
    int commandCacheUnexpectedEvents() -> commandCacheUnexpectedEvents
    int setPushHistoryLength(int) -> setPushHistoryLength
    void setStrictModeEnabledForMainThread(boolean) -> setStrictModeEnabledForMainThread
    void setStrictModeEnabledForThisThread(boolean) -> setStrictModeEnabledForThisThread
    java.util.concurrent.Semaphore access$000() -> access$000
    java.util.concurrent.Semaphore access$100() -> access$100
    com.parse.ParseTestUtils$PushRoutedListener access$200() -> access$200
com.parse.ParseTestUtils$1 -> com.parse.ParseTestUtils$1:
    void onPushHandled(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> onPushHandled
com.parse.ParseTestUtils$2 -> com.parse.ParseTestUtils$2:
    boolean val$enabled -> val$enabled
    java.util.concurrent.Semaphore val$done -> val$done
    void run() -> run
com.parse.ParseTestUtils$PushRoutedListener -> com.parse.ParseTestUtils$PushRoutedListener:
    void onPushRouted(org.json.JSONObject) -> onPushRouted
com.parse.ParseTestUtils$StateTransition -> com.parse.ParseTestUtils$StateTransition:
    long timestamp -> timestamp
    com.parse.PushConnection connection -> connection
    com.parse.PushConnection$State fromState -> fromState
    com.parse.PushConnection$State toState -> toState
    java.lang.String toString() -> toString
com.parse.ParseTestUtils$StateTransitionListener -> com.parse.ParseTestUtils$StateTransitionListener:
    java.util.ArrayList transitions -> transitions
    void onStateChange(com.parse.PushConnection,com.parse.PushConnection$State,com.parse.PushConnection$State) -> onStateChange
    java.util.List getTransitions() -> getTransitions
com.parse.ParseTraverser -> com.parse.ParseTraverser:
    boolean traverseParseObjects -> traverseParseObjects
    boolean yieldRoot -> yieldRoot
    boolean visit(java.lang.Object) -> visit
    void traverseInternal(java.lang.Object,boolean,java.util.IdentityHashMap) -> traverseInternal
    com.parse.ParseTraverser setTraverseParseObjects(boolean) -> setTraverseParseObjects
    com.parse.ParseTraverser setYieldRoot(boolean) -> setYieldRoot
    void traverse(java.lang.Object) -> traverse
com.parse.ParseTwitterUtils -> com.parse.ParseTwitterUtils:
    com.parse.twitter.Twitter twitter -> twitter
    com.parse.auth.TwitterAuthenticationProvider provider -> provider
    boolean isInitialized -> isInitialized
    com.parse.auth.TwitterAuthenticationProvider getAuthenticationProvider() -> getAuthenticationProvider
    com.parse.twitter.Twitter getTwitter() -> getTwitter
    void initialize(java.lang.String,java.lang.String) -> initialize
    void checkInitialization() -> checkInitialization
    boolean isLinked(com.parse.ParseUser) -> isLinked
    void link(com.parse.ParseUser,android.content.Context) -> link
    void link(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.parse.SaveCallback) -> link
    void logIn(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.parse.LogInCallback) -> logIn
    void logIn(android.content.Context,com.parse.LogInCallback) -> logIn
    void unlink(com.parse.ParseUser) -> unlink
    void unlinkInBackground(com.parse.ParseUser) -> unlinkInBackground
    void unlinkInBackground(com.parse.ParseUser,com.parse.SaveCallback) -> unlinkInBackground
com.parse.ParseUser -> com.parse.ParseUser:
    java.lang.String password -> password
    java.lang.String sessionToken -> sessionToken
    org.json.JSONObject authData -> authData
    java.util.Set linkedServiceNames -> linkedServiceNames
    java.util.Set readOnlyLinkedServiceNames -> readOnlyLinkedServiceNames
    boolean isNew -> isNew
    boolean isLazy -> isLazy
    com.parse.ParseUser currentUser -> currentUser
    java.util.Map authenticationProviders -> authenticationProviders
    boolean autoUserEnabled -> autoUserEnabled
    java.lang.Object currentUserMutex -> currentUserMutex
    boolean currentUserMatchesDisk -> currentUserMatchesDisk
    java.lang.String CURRENT_USER_FILENAME -> CURRENT_USER_FILENAME
    boolean isCurrentUser -> isCurrentUser
    com.parse.ParseUser logInLazyUser(java.lang.String,org.json.JSONObject) -> logInLazyUser
    boolean isLazy() -> isLazy
    boolean isAuthenticated() -> isAuthenticated
    void remove(java.lang.String) -> remove
    org.json.JSONObject toJSONObjectForSaving(java.util.Map,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForSaving
    org.json.JSONObject toJSONObjectForDataFile(boolean,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForDataFile
    void mergeFromObject(com.parse.ParseObject) -> mergeFromObject
    void mergeFromServer(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeFromServer
    boolean isCurrentUser() -> isCurrentUser
    void cleanUpAuthData() -> cleanUpAuthData
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getUsername() -> getUsername
    void setPassword(java.lang.String) -> setPassword
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getEmail() -> getEmail
    void put(java.lang.String,java.lang.Object) -> put
    void stripAnonymity() -> stripAnonymity
    void restoreAnonymity(org.json.JSONObject) -> restoreAnonymity
    java.lang.String getSessionToken() -> getSessionToken
    void validateSave() -> validateSave
    com.parse.Task saveAsync(com.parse.Task) -> saveAsync
    void validateDelete() -> validateDelete
    com.parse.ParseUser fetch() -> fetch
    com.parse.Task fetchAsync(com.parse.Task) -> fetchAsync
    com.parse.ParseCommand constructSaveCommand(java.util.Map,com.parse.ParseObjectEncodingStrategy,java.lang.String) -> constructSaveCommand
    com.parse.ParseCommand constructSignUpCommand(java.util.Map,java.lang.String) -> constructSignUpCommand
    com.parse.ParseCommand constructSignUpOrLoginCommand(java.util.Map) -> constructSignUpOrLoginCommand
    com.parse.ParseCommand constructPasswordResetCommand(java.lang.String,java.lang.String) -> constructPasswordResetCommand
    com.parse.Task signUpAsync() -> signUpAsync
    com.parse.Task signUpAsync(com.parse.Task) -> signUpAsync
    void signUp() -> signUp
    void signUpInBackground(com.parse.SignUpCallback) -> signUpInBackground
    com.parse.ParseCommand constructLogInCommand(java.lang.String,java.lang.String) -> constructLogInCommand
    com.parse.Task logInAsync(java.lang.String,java.lang.String) -> logInAsync
    com.parse.ParseCommand constructBecomeCommand(java.lang.String) -> constructBecomeCommand
    com.parse.Task becomeAsync(java.lang.String) -> becomeAsync
    com.parse.ParseUser logIn(java.lang.String,java.lang.String) -> logIn
    void logInInBackground(java.lang.String,java.lang.String,com.parse.LogInCallback) -> logInInBackground
    com.parse.ParseUser become(java.lang.String) -> become
    void becomeInBackground(java.lang.String,com.parse.LogInCallback) -> becomeInBackground
    com.parse.ParseUser getCurrentUser() -> getCurrentUser
    java.lang.String getCurrentSessionToken() -> getCurrentSessionToken
    void saveCurrentUser(com.parse.ParseUser) -> saveCurrentUser
    void logOut() -> logOut
    com.parse.Task requestPasswordResetAsync(java.lang.String) -> requestPasswordResetAsync
    void requestPasswordReset(java.lang.String) -> requestPasswordReset
    void requestPasswordResetInBackground(java.lang.String,com.parse.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void checkApplicationContext() -> checkApplicationContext
    com.parse.ParseUser fetchIfNeeded() -> fetchIfNeeded
    java.util.Set getLinkedServiceNames() -> getLinkedServiceNames
    void synchronizeAuthData(java.lang.String) -> synchronizeAuthData
    void synchronizeAllAuthData() -> synchronizeAllAuthData
    com.parse.Task unlinkFromAsync(java.lang.String) -> unlinkFromAsync
    void registerAuthenticationProvider(com.parse.auth.ParseAuthenticationProvider) -> registerAuthenticationProvider
    com.parse.Task logInWithAsync(java.lang.String) -> logInWithAsync
    com.parse.Task logInWithAsync(java.lang.String,org.json.JSONObject) -> logInWithAsync
    com.parse.Task resolveLazinessAsync(com.parse.Task) -> resolveLazinessAsync
    com.parse.Task authenticateAsync(com.parse.auth.ParseAuthenticationProvider) -> authenticateAsync
    com.parse.Task logInWithAsync(com.parse.auth.ParseAuthenticationProvider) -> logInWithAsync
    com.parse.Task linkWithAsync(java.lang.String,org.json.JSONObject,com.parse.Task) -> linkWithAsync
    com.parse.Task linkWithAsync(java.lang.String,org.json.JSONObject) -> linkWithAsync
    com.parse.Task linkWithAsync(java.lang.String) -> linkWithAsync
    com.parse.Task linkWithAsync(com.parse.auth.ParseAuthenticationProvider) -> linkWithAsync
    void logOutWith(java.lang.String) -> logOutWith
    void logOutWith(com.parse.auth.ParseAuthenticationProvider) -> logOutWith
    boolean isNew() -> isNew
    void disableAutomaticUser() -> disableAutomaticUser
    void enableAutomaticUser() -> enableAutomaticUser
    boolean isAutomaticUserEnabled() -> isAutomaticUserEnabled
    com.parse.ParseQuery getQuery() -> getQuery
    void clearCurrentUserFromMemory() -> clearCurrentUserFromMemory
    boolean needsDefaultACL() -> needsDefaultACL
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    com.parse.ParseObject fetch() -> fetch
    void access$000(com.parse.ParseUser) -> access$000
    com.parse.Task access$100(com.parse.ParseUser,com.parse.Task) -> access$100
    com.parse.ParseCommand access$200(com.parse.ParseUser,java.util.Map,java.lang.String) -> access$200
    boolean access$302(com.parse.ParseUser,boolean) -> access$302
    org.json.JSONObject access$400(com.parse.ParseUser) -> access$400
    java.util.Set access$500(com.parse.ParseUser) -> access$500
    com.parse.ParseCommand access$600(com.parse.ParseUser,java.util.Map) -> access$600
    void access$700(com.parse.ParseUser,java.lang.String) -> access$700
    void access$800(com.parse.ParseUser,org.json.JSONObject) -> access$800
    void access$900(com.parse.ParseUser) -> access$900
    com.parse.Task access$1000(com.parse.ParseUser,com.parse.Task) -> access$1000
    boolean access$1102(com.parse.ParseUser,boolean) -> access$1102
    com.parse.Task access$1200(com.parse.ParseUser,java.lang.String,org.json.JSONObject,com.parse.Task) -> access$1200
com.parse.ParseUser$1 -> com.parse.ParseUser$1:
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$10 -> com.parse.ParseUser$10:
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$10$1 -> com.parse.ParseUser$10$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseUser$10 this$0 -> this$0
    com.parse.ParseUser then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$10$2 -> com.parse.ParseUser$10$2:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseCommand val$command -> val$command
    java.util.Map val$operations -> val$operations
    com.parse.ParseUser$10 this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$11 -> com.parse.ParseUser$11:
    com.parse.ParseUser val$user -> val$user
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    org.json.JSONObject val$oldAnonymousData -> val$oldAnonymousData
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$11$1 -> com.parse.ParseUser$11$1:
    com.parse.ParseUser$11 this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$11$2 -> com.parse.ParseUser$11$2:
    com.parse.ParseUser$11 this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$12 -> com.parse.ParseUser$12:
    com.parse.Continuation val$logInWithTask -> val$logInWithTask
    com.parse.ParseUser val$user -> val$user
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$13 -> com.parse.ParseUser$13:
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$14 -> com.parse.ParseUser$14:
    com.parse.Capture val$operations -> val$operations
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$15 -> com.parse.ParseUser$15:
    com.parse.Capture val$operations -> val$operations
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$16 -> com.parse.ParseUser$16:
    com.parse.ParseUser this$0 -> this$0
    java.util.Map call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$17 -> com.parse.ParseUser$17:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onCancel() -> onCancel
    void onError(java.lang.Throwable) -> onError
com.parse.ParseUser$18 -> com.parse.ParseUser$18:
    com.parse.auth.ParseAuthenticationProvider val$authenticator -> val$authenticator
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$19 -> com.parse.ParseUser$19:
    org.json.JSONObject val$oldAnonymousData -> val$oldAnonymousData
    java.lang.String val$authType -> val$authType
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$2 -> com.parse.ParseUser$2:
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$20 -> com.parse.ParseUser$20:
    com.parse.Task val$toAwait -> val$toAwait
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$21 -> com.parse.ParseUser$21:
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$22 -> com.parse.ParseUser$22:
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$23 -> com.parse.ParseUser$23:
    com.parse.auth.ParseAuthenticationProvider val$authenticator -> val$authenticator
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$3 -> com.parse.ParseUser$3:
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$4 -> com.parse.ParseUser$4:
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$5 -> com.parse.ParseUser$5:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$5$1 -> com.parse.ParseUser$5$1:
    com.parse.ParseCommand val$command -> val$command
    java.util.Map val$operations -> val$operations
    com.parse.ParseUser$5 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$6 -> com.parse.ParseUser$6:
    com.parse.ParseUser this$0 -> this$0
    java.util.Map call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$7 -> com.parse.ParseUser$7:
    com.parse.ParseUser then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$8 -> com.parse.ParseUser$8:
    com.parse.ParseUser then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$9 -> com.parse.ParseUser$9:
    java.lang.String val$authType -> val$authType
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseWakeLock -> com.parse.ParseWakeLock:
    java.lang.String TAG -> TAG
    boolean hasWakeLockPermission -> hasWakeLockPermission
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    com.parse.ParseWakeLock acquireNewWakeLock(android.content.Context,int,java.lang.String,long) -> acquireNewWakeLock
    void release() -> release
com.parse.PointerEncodingStrategy -> com.parse.PointerEncodingStrategy:
    com.parse.PointerEncodingStrategy instance -> instance
    com.parse.PointerEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.PointerOrLocalIdEncodingStrategy -> com.parse.PointerOrLocalIdEncodingStrategy:
    com.parse.PointerOrLocalIdEncodingStrategy instance -> instance
    com.parse.PointerOrLocalIdEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.ProgressCallback -> com.parse.ProgressCallback:
    java.lang.Integer maxProgressSoFar -> maxProgressSoFar
    void done(java.lang.Integer) -> done
    void internalDone(java.lang.Integer,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.PushConnection -> com.parse.PushConnection:
    java.lang.String TAG -> TAG
    int CONNECT_TIMEOUT_MS -> CONNECT_TIMEOUT_MS
    long KEEP_ALIVE_INTERVAL -> KEEP_ALIVE_INTERVAL
    long KEEP_ALIVE_ACK_INTERVAL -> KEEP_ALIVE_ACK_INTERVAL
    boolean ENABLE_QUICK_ACK_CHECK -> ENABLE_QUICK_ACK_CHECK
    boolean ENABLE_RETRY_DELAY -> ENABLE_RETRY_DELAY
    long MIN_RETRY_DELAY_MS -> MIN_RETRY_DELAY_MS
    long MAX_RETRY_DELAY_MS -> MAX_RETRY_DELAY_MS
    double RETRY_MULT_FACTOR_MIN -> RETRY_MULT_FACTOR_MIN
    double RETRY_MULT_FACTOR_MAX -> RETRY_MULT_FACTOR_MAX
    android.app.Service service -> service
    java.lang.String host -> host
    int port -> port
    java.util.concurrent.ExecutorService executor -> executor
    com.parse.PushConnection$EventSet eventSet -> eventSet
    java.util.concurrent.atomic.AtomicLong lastReadTime -> lastReadTime
    com.parse.PushConnection$StateTransitionListener stateTransitionListener -> stateTransitionListener
    void start() -> start
    void stop() -> stop
    boolean writeLine(java.net.Socket,java.lang.String) -> writeLine
    void closeSocket(java.net.Socket) -> closeSocket
    void setStateTransitionListener(com.parse.PushConnection$StateTransitionListener) -> setStateTransitionListener
    com.parse.PushConnection$StateTransitionListener access$100() -> access$100
    java.util.concurrent.ExecutorService access$200(com.parse.PushConnection) -> access$200
    com.parse.PushConnection$EventSet access$300(com.parse.PushConnection) -> access$300
    java.lang.String access$400(com.parse.PushConnection) -> access$400
    int access$500(com.parse.PushConnection) -> access$500
    void access$600(java.net.Socket) -> access$600
    boolean access$700(java.net.Socket,java.lang.String) -> access$700
    android.app.Service access$1000(com.parse.PushConnection) -> access$1000
    java.util.concurrent.atomic.AtomicLong access$1100(com.parse.PushConnection) -> access$1100
com.parse.PushConnection$1 -> com.parse.PushConnection$1:
com.parse.PushConnection$ConnectState -> com.parse.PushConnection$ConnectState:
    long lastDelay -> lastDelay
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
    boolean sendHandshake(java.net.Socket) -> sendHandshake
    long nextDelay() -> nextDelay
com.parse.PushConnection$ConnectedState -> com.parse.PushConnection$ConnectedState:
    java.net.Socket socket -> socket
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
com.parse.PushConnection$Event -> com.parse.PushConnection$Event:
    com.parse.PushConnection$Event START -> START
    com.parse.PushConnection$Event STOP -> STOP
    com.parse.PushConnection$Event CONNECTIVITY_CHANGED -> CONNECTIVITY_CHANGED
    com.parse.PushConnection$Event KEEP_ALIVE_ERROR -> KEEP_ALIVE_ERROR
    com.parse.PushConnection$Event READ_ERROR -> READ_ERROR
    com.parse.PushConnection$Event[] $VALUES -> $VALUES
    com.parse.PushConnection$Event[] values() -> values
    com.parse.PushConnection$Event valueOf(java.lang.String) -> valueOf
com.parse.PushConnection$EventSet -> com.parse.PushConnection$EventSet:
    java.util.concurrent.locks.Lock lock -> lock
    java.util.concurrent.locks.Condition condition -> condition
    java.util.HashSet signaledEvents -> signaledEvents
    void signalEvent(com.parse.PushConnection$Event) -> signalEvent
    void removeEvents(com.parse.PushConnection$Event[]) -> removeEvents
    java.util.Set await(com.parse.PushConnection$Event[]) -> await
    java.util.Set timedAwait(long,com.parse.PushConnection$Event[]) -> timedAwait
com.parse.PushConnection$KeepAliveMonitor -> com.parse.PushConnection$KeepAliveMonitor:
    java.net.Socket socket -> socket
    long interval -> interval
    android.content.BroadcastReceiver writeReceiver -> writeReceiver
    android.content.BroadcastReceiver readReceiver -> readReceiver
    android.app.AlarmManager manager -> manager
    android.app.PendingIntent broadcast -> broadcast
    com.parse.Task keepAliveTask -> keepAliveTask
    boolean unregistered -> unregistered
    com.parse.PushConnection this$0 -> this$0
    void register() -> register
    void signalKeepAliveFailure() -> signalKeepAliveFailure
    void unregister() -> unregister
    void access$1200(com.parse.PushConnection$KeepAliveMonitor) -> access$1200
    com.parse.Task access$1300(com.parse.PushConnection$KeepAliveMonitor) -> access$1300
    com.parse.Task access$1302(com.parse.PushConnection$KeepAliveMonitor,com.parse.Task) -> access$1302
    java.net.Socket access$1400(com.parse.PushConnection$KeepAliveMonitor) -> access$1400
    android.app.AlarmManager access$1500(com.parse.PushConnection$KeepAliveMonitor) -> access$1500
com.parse.PushConnection$KeepAliveMonitor$1 -> com.parse.PushConnection$KeepAliveMonitor$1:
    com.parse.PushConnection$KeepAliveMonitor this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.PushConnection$KeepAliveMonitor$2 -> com.parse.PushConnection$KeepAliveMonitor$2:
    android.content.Context val$appContext -> val$appContext
    android.content.Intent val$readIntent -> val$readIntent
    com.parse.PushConnection$KeepAliveMonitor this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.PushConnection$KeepAliveMonitor$2$1 -> com.parse.PushConnection$KeepAliveMonitor$2$1:
    com.parse.ParseWakeLock val$wl -> val$wl
    com.parse.PushConnection$KeepAliveMonitor$2 this$2 -> this$2
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushConnection$ReachabilityMonitor -> com.parse.PushConnection$ReachabilityMonitor:
    com.parse.ConnectivityNotifier$ConnectivityListener listener -> listener
    boolean unregistered -> unregistered
    com.parse.PushConnection this$0 -> this$0
    void register() -> register
    void unregister() -> unregister
    boolean access$900(com.parse.PushConnection$ReachabilityMonitor) -> access$900
com.parse.PushConnection$ReachabilityMonitor$1 -> com.parse.PushConnection$ReachabilityMonitor$1:
    com.parse.PushConnection$ReachabilityMonitor this$1 -> this$1
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.PushConnection$ReaderThread -> com.parse.PushConnection$ReaderThread:
    java.net.Socket socket -> socket
    boolean stopped -> stopped
    com.parse.PushConnection this$0 -> this$0
    void run() -> run
    void runReaderLoop(java.io.BufferedReader) -> runReaderLoop
    void stopReading() -> stopReading
com.parse.PushConnection$State -> com.parse.PushConnection$State:
    com.parse.PushConnection this$0 -> this$0
    void run() -> run
    com.parse.PushConnection$State runState() -> runState
    boolean isTerminal() -> isTerminal
com.parse.PushConnection$StateTransitionListener -> com.parse.PushConnection$StateTransitionListener:
    void onStateChange(com.parse.PushConnection,com.parse.PushConnection$State,com.parse.PushConnection$State) -> onStateChange
com.parse.PushConnection$StoppedState -> com.parse.PushConnection$StoppedState:
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
    boolean isTerminal() -> isTerminal
com.parse.PushConnection$WaitRetryState -> com.parse.PushConnection$WaitRetryState:
    long delay -> delay
    com.parse.PushConnection this$0 -> this$0
    long getDelay() -> getDelay
    com.parse.PushConnection$State runState() -> runState
com.parse.PushConnection$WaitStartState -> com.parse.PushConnection$WaitStartState:
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
com.parse.PushHistory -> com.parse.PushHistory:
    java.lang.String TAG -> TAG
    int maxHistoryLength -> maxHistoryLength
    java.util.PriorityQueue entries -> entries
    java.util.HashSet pushIds -> pushIds
    java.lang.String cutoff -> cutoff
    java.lang.String lastTime -> lastTime
    org.json.JSONObject toJSON() -> toJSON
    java.lang.String getCutoffTimestamp() -> getCutoffTimestamp
    void setCutoffTimestamp(java.lang.String) -> setCutoffTimestamp
    java.lang.String getLastReceivedTimestamp() -> getLastReceivedTimestamp
    void setLastReceivedTimestamp(java.lang.String) -> setLastReceivedTimestamp
    java.util.Set getPushIds() -> getPushIds
    boolean tryInsertPush(java.lang.String,java.lang.String) -> tryInsertPush
com.parse.PushHistory$Entry -> com.parse.PushHistory$Entry:
    java.lang.String pushId -> pushId
    java.lang.String timestamp -> timestamp
    int compareTo(com.parse.PushHistory$Entry) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.parse.PushRouter -> com.parse.PushRouter:
    java.lang.String TAG -> TAG
    java.lang.String LEGACY_ROUTE_LOCATION -> LEGACY_ROUTE_LOCATION
    java.lang.String STATE_LOCATION -> STATE_LOCATION
    java.util.concurrent.ExecutorService EXECUTOR -> EXECUTOR
    java.lang.String GCM_RECEIVE_ACTION -> GCM_RECEIVE_ACTION
    int MAX_HISTORY_LENGTH -> MAX_HISTORY_LENGTH
    com.parse.Task lastTask -> lastTask
    com.parse.PushRouter$PushListener pushListener -> pushListener
    com.parse.PushRouter instance -> instance
    java.lang.String stateLocation -> stateLocation
    com.parse.PushRoutes routes -> routes
    com.parse.PushHistory history -> history
    java.util.concurrent.atomic.AtomicBoolean isRefreshingInstallation -> isRefreshingInstallation
    com.parse.Task subscribeAsync(java.lang.String,java.lang.Class,int) -> subscribeAsync
    com.parse.Task unsubscribeAsync(java.lang.String) -> unsubscribeAsync
    com.parse.Task getSubscriptionsAsync(boolean) -> getSubscriptionsAsync
    com.parse.Task getPushRequestJSONAsync() -> getPushRequestJSONAsync
    boolean isGcmPushIntent(android.content.Intent) -> isGcmPushIntent
    void handleGcmPushIntent(android.content.Intent) -> handleGcmPushIntent
    com.parse.Task handlePpnsPushAsync(org.json.JSONObject) -> handlePpnsPushAsync
    com.parse.Task reloadFromDiskAsync(boolean) -> reloadFromDiskAsync
    com.parse.Task getLastTask() -> getLastTask
    com.parse.Task makeUnhandledExceptionsFatal(com.parse.Task) -> makeUnhandledExceptionsFatal
    org.json.JSONArray getChannelsArrayFromInstallation(com.parse.ParseInstallation) -> getChannelsArrayFromInstallation
    void setGlobalPushListener(com.parse.PushRouter$PushListener) -> setGlobalPushListener
    void noteHandlePushResult(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> noteHandlePushResult
    com.parse.PushRouter getInstance() -> getInstance
    com.parse.PushRouter reloadInstance(boolean) -> reloadInstance
    org.json.JSONObject migrateV1toV3(java.lang.String,java.lang.String) -> migrateV1toV3
    org.json.JSONObject migrateV2toV3(java.lang.String,java.lang.String) -> migrateV2toV3
    org.json.JSONObject toJSON() -> toJSON
    org.json.JSONObject merge(org.json.JSONObject[]) -> merge
    boolean saveStateToDisk() -> saveStateToDisk
    org.json.JSONObject getPushRequestJSON() -> getPushRequestJSON
    void subscribe(java.lang.String,java.lang.Class,int) -> subscribe
    void unsubscribe(java.lang.String) -> unsubscribe
    java.util.Set getSubscriptions(boolean) -> getSubscriptions
    java.util.Date serverInstallationUpdatedAt(org.json.JSONObject) -> serverInstallationUpdatedAt
    void maybeRefreshInstallation(java.util.Date) -> maybeRefreshInstallation
    org.json.JSONObject convertGcmIntentToJSONObject(android.content.Intent) -> convertGcmIntentToJSONObject
    com.parse.PushRouter$HandlePushResult handleGcmPush(android.content.Intent) -> handleGcmPush
    com.parse.PushRouter$HandlePushResult handlePpnsPush(org.json.JSONObject) -> handlePpnsPush
    com.parse.PushRouter$HandlePushResult handlePush(org.json.JSONObject) -> handlePush
    com.parse.PushRouter$HandlePushResult handlePushInternal(org.json.JSONObject) -> handlePushInternal
    com.parse.PushRouter access$000() -> access$000
    com.parse.PushRouter access$100(boolean) -> access$100
    java.util.concurrent.atomic.AtomicBoolean access$200(com.parse.PushRouter) -> access$200
com.parse.PushRouter$1 -> com.parse.PushRouter$1:
    java.lang.String val$channel -> val$channel
    java.lang.Class val$cls -> val$cls
    int val$iconId -> val$iconId
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$10 -> com.parse.PushRouter$10:
    com.parse.PushRouter this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$2 -> com.parse.PushRouter$2:
    java.lang.String val$channel -> val$channel
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$3 -> com.parse.PushRouter$3:
    boolean val$includeDefaultRoute -> val$includeDefaultRoute
    java.util.Set then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$4 -> com.parse.PushRouter$4:
    org.json.JSONObject then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$5 -> com.parse.PushRouter$5:
    android.content.Intent val$intent -> val$intent
    java.util.concurrent.Semaphore val$done -> val$done
    void run() -> run
com.parse.PushRouter$6 -> com.parse.PushRouter$6:
    org.json.JSONObject val$pushPayload -> val$pushPayload
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$7 -> com.parse.PushRouter$7:
    boolean val$removeExistingState -> val$removeExistingState
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$8 -> com.parse.PushRouter$8:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$8$1 -> com.parse.PushRouter$8$1:
    com.parse.Task val$task -> val$task
    com.parse.PushRouter$8 this$0 -> this$0
    void run() -> run
com.parse.PushRouter$9 -> com.parse.PushRouter$9:
    com.parse.PushRouter$PushListener val$finalListener -> val$finalListener
    org.json.JSONObject val$pushData -> val$pushData
    com.parse.PushRouter$HandlePushResult val$result -> val$result
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$HandlePushResult -> com.parse.PushRouter$HandlePushResult:
    com.parse.PushRouter$HandlePushResult INVALID_DATA -> INVALID_DATA
    com.parse.PushRouter$HandlePushResult FAILED_HISTORY_TEST -> FAILED_HISTORY_TEST
    com.parse.PushRouter$HandlePushResult NO_ROUTE_FOUND -> NO_ROUTE_FOUND
    com.parse.PushRouter$HandlePushResult INVALID_ROUTE -> INVALID_ROUTE
    com.parse.PushRouter$HandlePushResult BROADCAST_INTENT -> BROADCAST_INTENT
    com.parse.PushRouter$HandlePushResult SHOW_NOTIFICATION -> SHOW_NOTIFICATION
    com.parse.PushRouter$HandlePushResult SHOW_NOTIFICATION_AND_BROADCAST_INTENT -> SHOW_NOTIFICATION_AND_BROADCAST_INTENT
    com.parse.PushRouter$HandlePushResult[] $VALUES -> $VALUES
    com.parse.PushRouter$HandlePushResult[] values() -> values
    com.parse.PushRouter$HandlePushResult valueOf(java.lang.String) -> valueOf
com.parse.PushRouter$PushListener -> com.parse.PushRouter$PushListener:
    void onPushHandled(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> onPushHandled
com.parse.PushRoutes -> com.parse.PushRoutes:
    java.lang.String TAG -> TAG
    java.util.regex.Pattern CHANNEL_PATTERN -> CHANNEL_PATTERN
    java.util.HashMap channels -> channels
    boolean isValidChannelName(java.lang.String) -> isValidChannelName
    org.json.JSONObject toJSON() -> toJSON
    java.util.Set getChannels() -> getChannels
    com.parse.PushRoutes$Route get(java.lang.String) -> get
    com.parse.PushRoutes$Route put(java.lang.String,com.parse.PushRoutes$Route) -> put
    com.parse.PushRoutes$Route remove(java.lang.String) -> remove
com.parse.PushRoutes$Route -> com.parse.PushRoutes$Route:
    java.lang.String activityClassName -> activityClassName
    int iconId -> iconId
    com.parse.PushRoutes$Route newFromJSON(org.json.JSONObject) -> newFromJSON
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.json.JSONObject toJSON() -> toJSON
    java.lang.Class getActivityClass() -> getActivityClass
    int getIconId() -> getIconId
com.parse.PushService -> com.parse.PushService:
    java.lang.String TAG -> TAG
    java.lang.String START_IF_REQUIRED_ACTION -> START_IF_REQUIRED_ACTION
    int WAKE_LOCK_TIMEOUT_MS -> WAKE_LOCK_TIMEOUT_MS
    java.lang.String host -> host
    int port -> port
    boolean loggedStartError -> loggedStartError
    com.parse.PushService$LifecycleListener lifecycleListener -> lifecycleListener
    com.parse.PushConnection connection -> connection
    java.util.concurrent.ExecutorService executor -> executor
    void setLifecycleListener(com.parse.PushService$LifecycleListener) -> setLifecycleListener
    void runGcmIntentInService(android.content.Context,android.content.Intent) -> runGcmIntentInService
    void stopPpnsService(android.content.Context) -> stopPpnsService
    void startPpnsServiceIfRequired(android.content.Context) -> startPpnsServiceIfRequired
    void startServiceIfRequired(android.content.Context) -> startServiceIfRequired
    void subscribe(android.content.Context,java.lang.String,java.lang.Class) -> subscribe
    void subscribe(android.content.Context,java.lang.String,java.lang.Class,int) -> subscribe
    void unsubscribe(android.content.Context,java.lang.String) -> unsubscribe
    void unsubscribeInternal(java.lang.String) -> unsubscribeInternal
    void setDefaultPushCallback(android.content.Context,java.lang.Class) -> setDefaultPushCallback
    void setDefaultPushCallback(android.content.Context,java.lang.Class,int) -> setDefaultPushCallback
    java.util.Set getSubscriptions(android.content.Context) -> getSubscriptions
    void useServer(java.lang.String,int) -> useServer
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    int onPpnsStartCommand(android.content.Intent,int,int) -> onPpnsStartCommand
    int onGcmStartCommand(android.content.Intent,int,int) -> onGcmStartCommand
    void onHandleGcmIntent(android.content.Intent) -> onHandleGcmIntent
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void access$000(com.parse.PushService,android.content.Intent) -> access$000
com.parse.PushService$1 -> com.parse.PushService$1:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$2 -> com.parse.PushService$2:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$3 -> com.parse.PushService$3:
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$4 -> com.parse.PushService$4:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$5 -> com.parse.PushService$5:
    com.parse.PushConnection val$conn -> val$conn
    com.parse.PushService this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$6 -> com.parse.PushService$6:
    android.content.Intent val$intent -> val$intent
    int val$startId -> val$startId
    com.parse.PushService this$0 -> this$0
    void run() -> run
com.parse.PushService$7 -> com.parse.PushService$7:
    int[] $SwitchMap$com$parse$PushType -> $SwitchMap$com$parse$PushType
com.parse.PushService$LifecycleListener -> com.parse.PushService$LifecycleListener:
    void onServiceCreated(android.app.Service) -> onServiceCreated
    void onServiceDestroyed(android.app.Service) -> onServiceDestroyed
com.parse.PushType -> com.parse.PushType:
    com.parse.PushType NONE -> NONE
    com.parse.PushType PPNS -> PPNS
    com.parse.PushType GCM -> GCM
    java.lang.String pushType -> pushType
    com.parse.PushType[] $VALUES -> $VALUES
    com.parse.PushType[] values() -> values
    com.parse.PushType valueOf(java.lang.String) -> valueOf
    com.parse.PushType fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
com.parse.R -> com.parse.R:
com.parse.R$attr -> com.parse.R$attr:
    int confirm_logout -> confirm_logout
    int done_button_background -> done_button_background
    int done_button_text -> done_button_text
    int extra_fields -> extra_fields
    int fetch_user_info -> fetch_user_info
    int is_cropped -> is_cropped
    int login_text -> login_text
    int logout_text -> logout_text
    int multi_select -> multi_select
    int preset_size -> preset_size
    int radius_in_meters -> radius_in_meters
    int results_limit -> results_limit
    int search_text -> search_text
    int show_pictures -> show_pictures
    int show_search_box -> show_search_box
    int show_title_bar -> show_title_bar
    int title_bar_background -> title_bar_background
    int title_text -> title_text
com.parse.R$color -> com.parse.R$color:
    int com_facebook_blue -> com_facebook_blue
    int com_facebook_loginview_text_color -> com_facebook_loginview_text_color
    int com_facebook_picker_search_bar_background -> com_facebook_picker_search_bar_background
    int com_facebook_picker_search_bar_text -> com_facebook_picker_search_bar_text
    int com_facebook_usersettingsfragment_connected_shadow_color -> com_facebook_usersettingsfragment_connected_shadow_color
    int com_facebook_usersettingsfragment_connected_text_color -> com_facebook_usersettingsfragment_connected_text_color
    int com_facebook_usersettingsfragment_not_connected_text_color -> com_facebook_usersettingsfragment_not_connected_text_color
com.parse.R$dimen -> com.parse.R$dimen:
    int com_facebook_loginview_compound_drawable_padding -> com_facebook_loginview_compound_drawable_padding
    int com_facebook_loginview_padding_bottom -> com_facebook_loginview_padding_bottom
    int com_facebook_loginview_padding_left -> com_facebook_loginview_padding_left
    int com_facebook_loginview_padding_right -> com_facebook_loginview_padding_right
    int com_facebook_loginview_padding_top -> com_facebook_loginview_padding_top
    int com_facebook_loginview_text_size -> com_facebook_loginview_text_size
    int com_facebook_picker_divider_width -> com_facebook_picker_divider_width
    int com_facebook_picker_place_image_size -> com_facebook_picker_place_image_size
    int com_facebook_profilepictureview_preset_size_large -> com_facebook_profilepictureview_preset_size_large
    int com_facebook_profilepictureview_preset_size_normal -> com_facebook_profilepictureview_preset_size_normal
    int com_facebook_profilepictureview_preset_size_small -> com_facebook_profilepictureview_preset_size_small
    int com_facebook_usersettingsfragment_profile_picture_height -> com_facebook_usersettingsfragment_profile_picture_height
    int com_facebook_usersettingsfragment_profile_picture_width -> com_facebook_usersettingsfragment_profile_picture_width
com.parse.R$drawable -> com.parse.R$drawable:
    int com_facebook_button_blue -> com_facebook_button_blue
    int com_facebook_button_blue_focused -> com_facebook_button_blue_focused
    int com_facebook_button_blue_normal -> com_facebook_button_blue_normal
    int com_facebook_button_blue_pressed -> com_facebook_button_blue_pressed
    int com_facebook_button_check -> com_facebook_button_check
    int com_facebook_button_check_off -> com_facebook_button_check_off
    int com_facebook_button_check_on -> com_facebook_button_check_on
    int com_facebook_button_grey_focused -> com_facebook_button_grey_focused
    int com_facebook_button_grey_normal -> com_facebook_button_grey_normal
    int com_facebook_button_grey_pressed -> com_facebook_button_grey_pressed
    int com_facebook_close -> com_facebook_close
    int com_facebook_inverse_icon -> com_facebook_inverse_icon
    int com_facebook_list_divider -> com_facebook_list_divider
    int com_facebook_list_section_header_background -> com_facebook_list_section_header_background
    int com_facebook_loginbutton_silver -> com_facebook_loginbutton_silver
    int com_facebook_logo -> com_facebook_logo
    int com_facebook_picker_default_separator_color -> com_facebook_picker_default_separator_color
    int com_facebook_picker_item_background -> com_facebook_picker_item_background
    int com_facebook_picker_list_focused -> com_facebook_picker_list_focused
    int com_facebook_picker_list_longpressed -> com_facebook_picker_list_longpressed
    int com_facebook_picker_list_pressed -> com_facebook_picker_list_pressed
    int com_facebook_picker_list_selector -> com_facebook_picker_list_selector
    int com_facebook_picker_list_selector_background_transition -> com_facebook_picker_list_selector_background_transition
    int com_facebook_picker_list_selector_disabled -> com_facebook_picker_list_selector_disabled
    int com_facebook_picker_magnifier -> com_facebook_picker_magnifier
    int com_facebook_picker_top_button -> com_facebook_picker_top_button
    int com_facebook_place_default_icon -> com_facebook_place_default_icon
    int com_facebook_profile_default_icon -> com_facebook_profile_default_icon
    int com_facebook_profile_picture_blank_portrait -> com_facebook_profile_picture_blank_portrait
    int com_facebook_profile_picture_blank_square -> com_facebook_profile_picture_blank_square
    int com_facebook_top_background -> com_facebook_top_background
    int com_facebook_top_button -> com_facebook_top_button
    int com_facebook_usersettingsfragment_background_gradient -> com_facebook_usersettingsfragment_background_gradient
com.parse.R$id -> com.parse.R$id:
    int com_facebook_login_activity_progress_bar -> com_facebook_login_activity_progress_bar
    int com_facebook_picker_activity_circle -> com_facebook_picker_activity_circle
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_checkbox_stub -> com_facebook_picker_checkbox_stub
    int com_facebook_picker_divider -> com_facebook_picker_divider
    int com_facebook_picker_done_button -> com_facebook_picker_done_button
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_list_view -> com_facebook_picker_list_view
    int com_facebook_picker_profile_pic_stub -> com_facebook_picker_profile_pic_stub
    int com_facebook_picker_row_activity_circle -> com_facebook_picker_row_activity_circle
    int com_facebook_picker_search_text -> com_facebook_picker_search_text
    int com_facebook_picker_title -> com_facebook_picker_title
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_picker_top_bar -> com_facebook_picker_top_bar
    int com_facebook_search_bar_view -> com_facebook_search_bar_view
    int com_facebook_usersettingsfragment_login_button -> com_facebook_usersettingsfragment_login_button
    int com_facebook_usersettingsfragment_logo_image -> com_facebook_usersettingsfragment_logo_image
    int com_facebook_usersettingsfragment_profile_name -> com_facebook_usersettingsfragment_profile_name
    int large -> large
    int normal -> normal
    int picker_subtitle -> picker_subtitle
    int small -> small
com.parse.R$layout -> com.parse.R$layout:
    int com_facebook_friendpickerfragment -> com_facebook_friendpickerfragment
    int com_facebook_login_activity_layout -> com_facebook_login_activity_layout
    int com_facebook_picker_activity_circle_row -> com_facebook_picker_activity_circle_row
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_row -> com_facebook_picker_list_row
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_search_box -> com_facebook_picker_search_box
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_placepickerfragment -> com_facebook_placepickerfragment
    int com_facebook_placepickerfragment_list_row -> com_facebook_placepickerfragment_list_row
    int com_facebook_search_bar_layout -> com_facebook_search_bar_layout
    int com_facebook_usersettingsfragment -> com_facebook_usersettingsfragment
com.parse.R$string -> com.parse.R$string:
    int com_facebook_choose_friends -> com_facebook_choose_friends
    int com_facebook_dialogloginactivity_ok_button -> com_facebook_dialogloginactivity_ok_button
    int com_facebook_internet_permission_error_message -> com_facebook_internet_permission_error_message
    int com_facebook_internet_permission_error_title -> com_facebook_internet_permission_error_title
    int com_facebook_loading -> com_facebook_loading
    int com_facebook_loginview_cancel_action -> com_facebook_loginview_cancel_action
    int com_facebook_loginview_log_in_button -> com_facebook_loginview_log_in_button
    int com_facebook_loginview_log_out_action -> com_facebook_loginview_log_out_action
    int com_facebook_loginview_log_out_button -> com_facebook_loginview_log_out_button
    int com_facebook_loginview_logged_in_as -> com_facebook_loginview_logged_in_as
    int com_facebook_loginview_logged_in_using_facebook -> com_facebook_loginview_logged_in_using_facebook
    int com_facebook_logo_content_description -> com_facebook_logo_content_description
    int com_facebook_nearby -> com_facebook_nearby
    int com_facebook_picker_done_button_text -> com_facebook_picker_done_button_text
    int com_facebook_placepicker_subtitle_catetory_only_format -> com_facebook_placepicker_subtitle_catetory_only_format
    int com_facebook_placepicker_subtitle_format -> com_facebook_placepicker_subtitle_format
    int com_facebook_placepicker_subtitle_were_here_only_format -> com_facebook_placepicker_subtitle_were_here_only_format
    int com_facebook_requesterror_password_changed -> com_facebook_requesterror_password_changed
    int com_facebook_requesterror_permissions -> com_facebook_requesterror_permissions
    int com_facebook_requesterror_reconnect -> com_facebook_requesterror_reconnect
    int com_facebook_requesterror_relogin -> com_facebook_requesterror_relogin
    int com_facebook_requesterror_web_login -> com_facebook_requesterror_web_login
    int com_facebook_usersettingsfragment_log_in_button -> com_facebook_usersettingsfragment_log_in_button
    int com_facebook_usersettingsfragment_logged_in -> com_facebook_usersettingsfragment_logged_in
    int com_facebook_usersettingsfragment_not_logged_in -> com_facebook_usersettingsfragment_not_logged_in
com.parse.R$style -> com.parse.R$style:
    int com_facebook_loginview_default_style -> com_facebook_loginview_default_style
    int com_facebook_loginview_silver_style -> com_facebook_loginview_silver_style
com.parse.R$styleable -> com.parse.R$styleable:
    int[] com_facebook_friend_picker_fragment -> com_facebook_friend_picker_fragment
    int com_facebook_friend_picker_fragment_multi_select -> com_facebook_friend_picker_fragment_multi_select
    int[] com_facebook_login_view -> com_facebook_login_view
    int com_facebook_login_view_confirm_logout -> com_facebook_login_view_confirm_logout
    int com_facebook_login_view_fetch_user_info -> com_facebook_login_view_fetch_user_info
    int com_facebook_login_view_login_text -> com_facebook_login_view_login_text
    int com_facebook_login_view_logout_text -> com_facebook_login_view_logout_text
    int[] com_facebook_picker_fragment -> com_facebook_picker_fragment
    int com_facebook_picker_fragment_done_button_background -> com_facebook_picker_fragment_done_button_background
    int com_facebook_picker_fragment_done_button_text -> com_facebook_picker_fragment_done_button_text
    int com_facebook_picker_fragment_extra_fields -> com_facebook_picker_fragment_extra_fields
    int com_facebook_picker_fragment_show_pictures -> com_facebook_picker_fragment_show_pictures
    int com_facebook_picker_fragment_show_title_bar -> com_facebook_picker_fragment_show_title_bar
    int com_facebook_picker_fragment_title_bar_background -> com_facebook_picker_fragment_title_bar_background
    int com_facebook_picker_fragment_title_text -> com_facebook_picker_fragment_title_text
    int[] com_facebook_place_picker_fragment -> com_facebook_place_picker_fragment
    int com_facebook_place_picker_fragment_radius_in_meters -> com_facebook_place_picker_fragment_radius_in_meters
    int com_facebook_place_picker_fragment_results_limit -> com_facebook_place_picker_fragment_results_limit
    int com_facebook_place_picker_fragment_search_text -> com_facebook_place_picker_fragment_search_text
    int com_facebook_place_picker_fragment_show_search_box -> com_facebook_place_picker_fragment_show_search_box
    int[] com_facebook_profile_picture_view -> com_facebook_profile_picture_view
    int com_facebook_profile_picture_view_is_cropped -> com_facebook_profile_picture_view_is_cropped
    int com_facebook_profile_picture_view_preset_size -> com_facebook_profile_picture_view_preset_size
com.parse.RefreshCallback -> com.parse.RefreshCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseObject,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.RequestPasswordResetCallback -> com.parse.RequestPasswordResetCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.SaveCallback -> com.parse.SaveCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.SendCallback -> com.parse.SendCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ServiceUtils -> com.parse.ServiceUtils:
    java.lang.String TAG -> TAG
    java.lang.String WAKE_LOCK_EXTRA -> WAKE_LOCK_EXTRA
    android.util.SparseArray wakeLocks -> wakeLocks
    int wakeLockId -> wakeLockId
    boolean runIntentInService(android.content.Context,android.content.Intent,java.lang.Class) -> runIntentInService
    boolean runWakefulIntentInService(android.content.Context,android.content.Intent,java.lang.Class,long) -> runWakefulIntentInService
    void completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
com.parse.SignUpCallback -> com.parse.SignUpCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.Synchronizer -> com.parse.Synchronizer:
    boolean done -> done
    java.util.concurrent.CountDownLatch latch -> latch
    void start(int) -> start
    void finish() -> finish
    void assertFinishes() -> assertFinishes
com.parse.Task -> com.parse.Task:
    java.util.concurrent.ExecutorService defaultExecutor -> defaultExecutor
    java.util.concurrent.Executor immediateExecutor -> immediateExecutor
    java.lang.Object lock -> lock
    boolean complete -> complete
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception error -> error
    java.util.List continuations -> continuations
    com.parse.Task$TaskCompletionSource create() -> create
    boolean isCompleted() -> isCompleted
    boolean isCancelled() -> isCancelled
    boolean isFaulted() -> isFaulted
    java.lang.Object getResult() -> getResult
    java.lang.Exception getError() -> getError
    void waitForCompletion() -> waitForCompletion
    com.parse.Task forResult(java.lang.Object) -> forResult
    com.parse.Task forError(java.lang.Exception) -> forError
    com.parse.Task cancelled() -> cancelled
    com.parse.Task cast() -> cast
    com.parse.Task makeVoid() -> makeVoid
    com.parse.Task callInBackground(java.util.concurrent.Callable) -> callInBackground
    com.parse.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor) -> call
    com.parse.Task call(java.util.concurrent.Callable) -> call
    com.parse.Task whenAll(java.util.Collection) -> whenAll
    com.parse.Task continueWhile(java.util.concurrent.Callable,com.parse.Continuation) -> continueWhile
    com.parse.Task continueWhile(java.util.concurrent.Callable,com.parse.Continuation,java.util.concurrent.Executor) -> continueWhile
    com.parse.Task continueWith(com.parse.Continuation,java.util.concurrent.Executor) -> continueWith
    com.parse.Task continueWith(com.parse.Continuation) -> continueWith
    com.parse.Task continueWithTask(com.parse.Continuation,java.util.concurrent.Executor) -> continueWithTask
    com.parse.Task continueWithTask(com.parse.Continuation) -> continueWithTask
    com.parse.Task onSuccess(com.parse.Continuation,java.util.concurrent.Executor) -> onSuccess
    com.parse.Task onSuccess(com.parse.Continuation) -> onSuccess
    com.parse.Task onSuccessTask(com.parse.Continuation,java.util.concurrent.Executor) -> onSuccessTask
    com.parse.Task onSuccessTask(com.parse.Continuation) -> onSuccessTask
    void completeImmediately(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> completeImmediately
    void completeAfterTask(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> completeAfterTask
    void runContinuations() -> runContinuations
    java.util.concurrent.ExecutorService access$000() -> access$000
    void access$200(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> access$200
    void access$300(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> access$300
    java.lang.Object access$400(com.parse.Task) -> access$400
    boolean access$500(com.parse.Task) -> access$500
    boolean access$502(com.parse.Task,boolean) -> access$502
    boolean access$602(com.parse.Task,boolean) -> access$602
    void access$700(com.parse.Task) -> access$700
    java.lang.Object access$802(com.parse.Task,java.lang.Object) -> access$802
    java.lang.Exception access$902(com.parse.Task,java.lang.Exception) -> access$902
com.parse.Task$1 -> com.parse.Task$1:
    int MAX_DEPTH -> MAX_DEPTH
    java.lang.ThreadLocal executionDepth -> executionDepth
    int incrementDepth() -> incrementDepth
    int decrementDepth() -> decrementDepth
    void execute(java.lang.Runnable) -> execute
com.parse.Task$10 -> com.parse.Task$10:
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task val$task -> val$task
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    void run() -> run
com.parse.Task$11 -> com.parse.Task$11:
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task val$task -> val$task
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    void run() -> run
com.parse.Task$11$1 -> com.parse.Task$11$1:
    com.parse.Task$11 this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$2 -> com.parse.Task$2:
    com.parse.Task this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$3 -> com.parse.Task$3:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.util.concurrent.Callable val$callable -> val$callable
    void run() -> run
com.parse.Task$4 -> com.parse.Task$4:
    java.util.concurrent.atomic.AtomicInteger val$count -> val$count
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$5 -> com.parse.Task$5:
    java.util.concurrent.Callable val$predicate -> val$predicate
    com.parse.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    com.parse.Capture val$predicateContinuation -> val$predicateContinuation
    com.parse.Task this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$6 -> com.parse.Task$6:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    com.parse.Task this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$7 -> com.parse.Task$7:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    com.parse.Task this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$8 -> com.parse.Task$8:
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$9 -> com.parse.Task$9:
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$TaskCompletionSource -> com.parse.Task$TaskCompletionSource:
    com.parse.Task this$0 -> this$0
    com.parse.Task getTask() -> getTask
    boolean trySetCancelled() -> trySetCancelled
    boolean trySetResult(java.lang.Object) -> trySetResult
    boolean trySetError(java.lang.Exception) -> trySetError
    void setCancelled() -> setCancelled
    void setResult(java.lang.Object) -> setResult
    void setError(java.lang.Exception) -> setError
com.parse.TaskQueue -> com.parse.TaskQueue:
    com.parse.Task tail -> tail
    java.util.concurrent.locks.Lock lock -> lock
    com.parse.Task getTaskToAwait() -> getTaskToAwait
    com.parse.Task enqueue(com.parse.Continuation) -> enqueue
    com.parse.Continuation waitFor(com.parse.Task) -> waitFor
    java.util.concurrent.locks.Lock getLock() -> getLock
    void waitUntilFinished() -> waitUntilFinished
com.parse.TaskQueue$1 -> com.parse.TaskQueue$1:
    com.parse.TaskQueue this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.TaskQueue$2 -> com.parse.TaskQueue$2:
    com.parse.Task val$toAwait -> val$toAwait
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.TaskQueue$2$1 -> com.parse.TaskQueue$2$1:
    com.parse.Task val$task -> val$task
    com.parse.TaskQueue$2 this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.auth.AnonymousAuthenticationProvider -> com.parse.auth.AnonymousAuthenticationProvider:
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    org.json.JSONObject getAuthData() -> getAuthData
    void deauthenticate() -> deauthenticate
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void cancel() -> cancel
    java.lang.String getAuthType() -> getAuthType
com.parse.auth.FacebookAuthenticationProvider -> com.parse.auth.FacebookAuthenticationProvider:
    java.text.DateFormat preciseDateFormat -> preciseDateFormat
    int DEFAULT_AUTH_ACTIVITY_CODE -> DEFAULT_AUTH_ACTIVITY_CODE
    java.lang.String AUTH_TYPE_NAME -> AUTH_TYPE_NAME
    com.facebook.android.Facebook facebook -> facebook
    com.facebook.Session session -> session
    com.facebook.SessionDefaultAudience defaultAudience -> defaultAudience
    java.lang.String applicationId -> applicationId
    int activityCode -> activityCode
    java.lang.ref.WeakReference baseActivity -> baseActivity
    android.content.Context applicationContext -> applicationContext
    java.util.Collection permissions -> permissions
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> currentOperationCallback
    java.lang.String userId -> userId
    void extendAccessToken(android.content.Context,com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> extendAccessToken
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void cancel() -> cancel
    int getActivityCode() -> getActivityCode
    java.lang.String getAuthType() -> getAuthType
    com.facebook.android.Facebook getFacebook() -> getFacebook
    com.facebook.Session getSession() -> getSession
    void handleCancel() -> handleCancel
    void handleError(java.lang.Throwable) -> handleError
    org.json.JSONObject getAuthData(java.lang.String,java.lang.String,java.util.Date) -> getAuthData
    void handleSuccess(java.lang.String) -> handleSuccess
    void setActivity(android.app.Activity) -> setActivity
    void setActivityCode(int) -> setActivityCode
    void setPermissions(java.util.Collection) -> setPermissions
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void deauthenticate() -> deauthenticate
    java.lang.String getUserId() -> getUserId
    java.lang.String access$000(com.parse.auth.FacebookAuthenticationProvider) -> access$000
    void access$100(com.parse.auth.FacebookAuthenticationProvider,java.lang.String) -> access$100
    void access$200(com.parse.auth.FacebookAuthenticationProvider,java.lang.Throwable) -> access$200
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback access$300(com.parse.auth.FacebookAuthenticationProvider) -> access$300
    void access$400(com.parse.auth.FacebookAuthenticationProvider) -> access$400
com.parse.auth.FacebookAuthenticationProvider$1 -> com.parse.auth.FacebookAuthenticationProvider$1:
    com.parse.auth.FacebookAuthenticationProvider this$0 -> this$0
    void onComplete(android.os.Bundle) -> onComplete
    void onFacebookError(com.facebook.android.FacebookError) -> onFacebookError
    void onError(java.lang.Error) -> onError
com.parse.auth.FacebookAuthenticationProvider$2 -> com.parse.auth.FacebookAuthenticationProvider$2:
    com.parse.auth.FacebookAuthenticationProvider this$0 -> this$0
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
com.parse.auth.FacebookAuthenticationProvider$2$1 -> com.parse.auth.FacebookAuthenticationProvider$2$1:
    com.parse.auth.FacebookAuthenticationProvider$2 this$1 -> this$1
    void onCompleted(com.facebook.Response) -> onCompleted
com.parse.auth.ParseAuthenticationProvider -> com.parse.auth.ParseAuthenticationProvider:
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    void deauthenticate() -> deauthenticate
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void cancel() -> cancel
    java.lang.String getAuthType() -> getAuthType
com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback -> com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback:
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onCancel() -> onCancel
    void onError(java.lang.Throwable) -> onError
com.parse.auth.TwitterAuthenticationProvider -> com.parse.auth.TwitterAuthenticationProvider:
    java.lang.String SCREEN_NAME_KEY -> SCREEN_NAME_KEY
    java.lang.String ID_KEY -> ID_KEY
    java.lang.String AUTH_TOKEN_SECRET_KEY -> AUTH_TOKEN_SECRET_KEY
    java.lang.String AUTH_TOKEN_KEY -> AUTH_TOKEN_KEY
    java.lang.String CONSUMER_KEY_KEY -> CONSUMER_KEY_KEY
    java.lang.String CONSUMER_SECRET_KEY -> CONSUMER_SECRET_KEY
    java.lang.ref.WeakReference baseContext -> baseContext
    com.parse.twitter.Twitter twitter -> twitter
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> currentOperationCallback
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    org.json.JSONObject getAuthData(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getAuthData
    void cancel() -> cancel
    void deauthenticate() -> deauthenticate
    java.lang.String getAuthType() -> getAuthType
    com.parse.twitter.Twitter getTwitter() -> getTwitter
    void handleCancel(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> handleCancel
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void setContext(android.content.Context) -> setContext
    void access$000(com.parse.auth.TwitterAuthenticationProvider,com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> access$000
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback access$100(com.parse.auth.TwitterAuthenticationProvider) -> access$100
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback access$102(com.parse.auth.TwitterAuthenticationProvider,com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> access$102
    com.parse.twitter.Twitter access$200(com.parse.auth.TwitterAuthenticationProvider) -> access$200
com.parse.auth.TwitterAuthenticationProvider$1 -> com.parse.auth.TwitterAuthenticationProvider$1:
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback val$callback -> val$callback
    com.parse.auth.TwitterAuthenticationProvider this$0 -> this$0
    void onCancel() -> onCancel
    void onFailure(java.lang.Throwable) -> onFailure
    void onSuccess(java.lang.Object) -> onSuccess
com.parse.codec.BinaryDecoder -> com.parse.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
com.parse.codec.BinaryEncoder -> com.parse.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
com.parse.codec.CharEncoding -> com.parse.codec.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
com.parse.codec.Decoder -> com.parse.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.codec.DecoderException -> com.parse.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
com.parse.codec.Encoder -> com.parse.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
com.parse.codec.EncoderException -> com.parse.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
com.parse.codec.StringDecoder -> com.parse.codec.StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
com.parse.codec.StringEncoder -> com.parse.codec.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.binary.Base32 -> com.parse.codec.binary.Base32:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] DECODE_TABLE -> DECODE_TABLE
    byte[] ENCODE_TABLE -> ENCODE_TABLE
    byte[] HEX_DECODE_TABLE -> HEX_DECODE_TABLE
    byte[] HEX_ENCODE_TABLE -> HEX_ENCODE_TABLE
    int MASK_5BITS -> MASK_5BITS
    long bitWorkArea -> bitWorkArea
    int decodeSize -> decodeSize
    byte[] decodeTable -> decodeTable
    int encodeSize -> encodeSize
    byte[] encodeTable -> encodeTable
    byte[] lineSeparator -> lineSeparator
    void decode(byte[],int,int) -> decode
    void encode(byte[],int,int) -> encode
    boolean isInAlphabet(byte) -> isInAlphabet
com.parse.codec.binary.Base32InputStream -> com.parse.codec.binary.Base32InputStream:
com.parse.codec.binary.Base32OutputStream -> com.parse.codec.binary.Base32OutputStream:
com.parse.codec.binary.Base64 -> com.parse.codec.binary.Base64:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] STANDARD_ENCODE_TABLE -> STANDARD_ENCODE_TABLE
    byte[] URL_SAFE_ENCODE_TABLE -> URL_SAFE_ENCODE_TABLE
    byte[] DECODE_TABLE -> DECODE_TABLE
    int MASK_6BITS -> MASK_6BITS
    byte[] encodeTable -> encodeTable
    byte[] decodeTable -> decodeTable
    byte[] lineSeparator -> lineSeparator
    int decodeSize -> decodeSize
    int encodeSize -> encodeSize
    int bitWorkArea -> bitWorkArea
    boolean isUrlSafe() -> isUrlSafe
    void encode(byte[],int,int) -> encode
    void decode(byte[],int,int) -> decode
    boolean isBase64(byte) -> isBase64
    boolean isBase64(java.lang.String) -> isBase64
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean isBase64(byte[]) -> isBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    byte[] toIntegerBytes(java.math.BigInteger) -> toIntegerBytes
    boolean isInAlphabet(byte) -> isInAlphabet
com.parse.codec.binary.Base64InputStream -> com.parse.codec.binary.Base64InputStream:
com.parse.codec.binary.Base64OutputStream -> com.parse.codec.binary.Base64OutputStream:
com.parse.codec.binary.BaseNCodec -> com.parse.codec.binary.BaseNCodec:
    int MIME_CHUNK_SIZE -> MIME_CHUNK_SIZE
    int PEM_CHUNK_SIZE -> PEM_CHUNK_SIZE
    int DEFAULT_BUFFER_RESIZE_FACTOR -> DEFAULT_BUFFER_RESIZE_FACTOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int MASK_8BITS -> MASK_8BITS
    byte PAD_DEFAULT -> PAD_DEFAULT
    byte PAD -> PAD
    int unencodedBlockSize -> unencodedBlockSize
    int encodedBlockSize -> encodedBlockSize
    int lineLength -> lineLength
    int chunkSeparatorLength -> chunkSeparatorLength
    byte[] buffer -> buffer
    int pos -> pos
    int readPos -> readPos
    boolean eof -> eof
    int currentLinePos -> currentLinePos
    int modulus -> modulus
    boolean hasData() -> hasData
    int available() -> available
    int getDefaultBufferSize() -> getDefaultBufferSize
    void resizeBuffer() -> resizeBuffer
    void ensureBufferSize(int) -> ensureBufferSize
    int readResults(byte[],int,int) -> readResults
    boolean isWhiteSpace(byte) -> isWhiteSpace
    void reset() -> reset
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    void encode(byte[],int,int) -> encode
    void decode(byte[],int,int) -> decode
    boolean isInAlphabet(byte) -> isInAlphabet
    boolean isInAlphabet(byte[],boolean) -> isInAlphabet
    boolean isInAlphabet(java.lang.String) -> isInAlphabet
    boolean containsAlphabetOrPad(byte[]) -> containsAlphabetOrPad
    long getEncodedLength(byte[]) -> getEncodedLength
com.parse.codec.binary.BaseNCodecInputStream -> com.parse.codec.binary.BaseNCodecInputStream:
    boolean doEncode -> doEncode
    com.parse.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
com.parse.codec.binary.BaseNCodecOutputStream -> com.parse.codec.binary.BaseNCodecOutputStream:
    boolean doEncode -> doEncode
    com.parse.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush(boolean) -> flush
    void flush() -> flush
    void close() -> close
com.parse.codec.binary.BinaryCodec -> com.parse.codec.binary.BinaryCodec:
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    int BIT_0 -> BIT_0
    int BIT_1 -> BIT_1
    int BIT_2 -> BIT_2
    int BIT_3 -> BIT_3
    int BIT_4 -> BIT_4
    int BIT_5 -> BIT_5
    int BIT_6 -> BIT_6
    int BIT_7 -> BIT_7
    int[] BITS -> BITS
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] toByteArray(java.lang.String) -> toByteArray
    byte[] fromAscii(char[]) -> fromAscii
    byte[] fromAscii(byte[]) -> fromAscii
    boolean isEmpty(byte[]) -> isEmpty
    byte[] toAsciiBytes(byte[]) -> toAsciiBytes
    char[] toAsciiChars(byte[]) -> toAsciiChars
    java.lang.String toAsciiString(byte[]) -> toAsciiString
com.parse.codec.binary.Hex -> com.parse.codec.binary.Hex:
    java.lang.String DEFAULT_CHARSET_NAME -> DEFAULT_CHARSET_NAME
    char[] DIGITS_LOWER -> DIGITS_LOWER
    char[] DIGITS_UPPER -> DIGITS_UPPER
    java.lang.String charsetName -> charsetName
    byte[] decodeHex(char[]) -> decodeHex
    char[] encodeHex(byte[]) -> encodeHex
    char[] encodeHex(byte[],boolean) -> encodeHex
    char[] encodeHex(byte[],char[]) -> encodeHex
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    int toDigit(char,int) -> toDigit
    byte[] decode(byte[]) -> decode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String getCharsetName() -> getCharsetName
    java.lang.String toString() -> toString
com.parse.codec.binary.StringUtils -> com.parse.codec.binary.StringUtils:
    byte[] getBytesIso8859_1(java.lang.String) -> getBytesIso8859_1
    byte[] getBytesUsAscii(java.lang.String) -> getBytesUsAscii
    byte[] getBytesUtf16(java.lang.String) -> getBytesUtf16
    byte[] getBytesUtf16Be(java.lang.String) -> getBytesUtf16Be
    byte[] getBytesUtf16Le(java.lang.String) -> getBytesUtf16Le
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> getBytesUnchecked
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> newIllegalStateException
    java.lang.String newString(byte[],java.lang.String) -> newString
    java.lang.String newStringIso8859_1(byte[]) -> newStringIso8859_1
    java.lang.String newStringUsAscii(byte[]) -> newStringUsAscii
    java.lang.String newStringUtf16(byte[]) -> newStringUtf16
    java.lang.String newStringUtf16Be(byte[]) -> newStringUtf16Be
    java.lang.String newStringUtf16Le(byte[]) -> newStringUtf16Le
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
com.parse.codec.digest.DigestUtils -> com.parse.codec.digest.DigestUtils:
    int STREAM_BUFFER_LENGTH -> STREAM_BUFFER_LENGTH
    byte[] digest(java.security.MessageDigest,java.io.InputStream) -> digest
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    java.security.MessageDigest getDigest(java.lang.String) -> getDigest
    java.security.MessageDigest getMd5Digest() -> getMd5Digest
    java.security.MessageDigest getSha256Digest() -> getSha256Digest
    java.security.MessageDigest getSha384Digest() -> getSha384Digest
    java.security.MessageDigest getSha512Digest() -> getSha512Digest
    java.security.MessageDigest getShaDigest() -> getShaDigest
    byte[] md5(byte[]) -> md5
    byte[] md5(java.io.InputStream) -> md5
    byte[] md5(java.lang.String) -> md5
    java.lang.String md5Hex(byte[]) -> md5Hex
    java.lang.String md5Hex(java.io.InputStream) -> md5Hex
    java.lang.String md5Hex(java.lang.String) -> md5Hex
    byte[] sha(byte[]) -> sha
    byte[] sha(java.io.InputStream) -> sha
    byte[] sha(java.lang.String) -> sha
    byte[] sha256(byte[]) -> sha256
    byte[] sha256(java.io.InputStream) -> sha256
    byte[] sha256(java.lang.String) -> sha256
    java.lang.String sha256Hex(byte[]) -> sha256Hex
    java.lang.String sha256Hex(java.io.InputStream) -> sha256Hex
    java.lang.String sha256Hex(java.lang.String) -> sha256Hex
    byte[] sha384(byte[]) -> sha384
    byte[] sha384(java.io.InputStream) -> sha384
    byte[] sha384(java.lang.String) -> sha384
    java.lang.String sha384Hex(byte[]) -> sha384Hex
    java.lang.String sha384Hex(java.io.InputStream) -> sha384Hex
    java.lang.String sha384Hex(java.lang.String) -> sha384Hex
    byte[] sha512(byte[]) -> sha512
    byte[] sha512(java.io.InputStream) -> sha512
    byte[] sha512(java.lang.String) -> sha512
    java.lang.String sha512Hex(byte[]) -> sha512Hex
    java.lang.String sha512Hex(java.io.InputStream) -> sha512Hex
    java.lang.String sha512Hex(java.lang.String) -> sha512Hex
    java.lang.String shaHex(byte[]) -> shaHex
    java.lang.String shaHex(java.io.InputStream) -> shaHex
    java.lang.String shaHex(java.lang.String) -> shaHex
com.parse.codec.language.AbstractCaverphone -> com.parse.codec.language.AbstractCaverphone:
    java.lang.Object encode(java.lang.Object) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
com.parse.codec.language.Caverphone -> com.parse.codec.language.Caverphone:
    com.parse.codec.language.Caverphone2 encoder -> encoder
    java.lang.String caverphone(java.lang.String) -> caverphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isCaverphoneEqual(java.lang.String,java.lang.String) -> isCaverphoneEqual
com.parse.codec.language.Caverphone1 -> com.parse.codec.language.Caverphone1:
    java.lang.String SIX_1 -> SIX_1
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.language.Caverphone2 -> com.parse.codec.language.Caverphone2:
    java.lang.String TEN_1 -> TEN_1
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.language.ColognePhonetic -> com.parse.codec.language.ColognePhonetic:
    char[][] PREPROCESS_MAP -> PREPROCESS_MAP
    boolean arrayContains(char[],char) -> arrayContains
    java.lang.String colognePhonetic(java.lang.String) -> colognePhonetic
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
    java.lang.String preprocess(java.lang.String) -> preprocess
com.parse.codec.language.ColognePhonetic$CologneBuffer -> com.parse.codec.language.ColognePhonetic$CologneBuffer:
    char[] data -> data
    int length -> length
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    char[] copyData(int,int) -> copyData
    int length() -> length
    java.lang.String toString() -> toString
com.parse.codec.language.ColognePhonetic$CologneInputBuffer -> com.parse.codec.language.ColognePhonetic$CologneInputBuffer:
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    void addLeft(char) -> addLeft
    char[] copyData(int,int) -> copyData
    char getNextChar() -> getNextChar
    int getNextPos() -> getNextPos
    char removeNext() -> removeNext
com.parse.codec.language.ColognePhonetic$CologneOutputBuffer -> com.parse.codec.language.ColognePhonetic$CologneOutputBuffer:
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    void addRight(char) -> addRight
    char[] copyData(int,int) -> copyData
com.parse.codec.language.DoubleMetaphone -> com.parse.codec.language.DoubleMetaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String[] SILENT_START -> SILENT_START
    java.lang.String[] L_R_N_M_B_H_F_V_W_SPACE -> L_R_N_M_B_H_F_V_W_SPACE
    java.lang.String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER -> ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER
    java.lang.String[] L_T_K_S_N_M_B_Z -> L_T_K_S_N_M_B_Z
    int maxCodeLen -> maxCodeLen
    java.lang.String doubleMetaphone(java.lang.String) -> doubleMetaphone
    java.lang.String doubleMetaphone(java.lang.String,boolean) -> doubleMetaphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String) -> isDoubleMetaphoneEqual
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) -> isDoubleMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
    int handleAEIOUY(com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleAEIOUY
    int handleC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleC
    int handleCC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCC
    int handleCH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCH
    int handleD(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleD
    int handleG(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleG
    int handleGH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleGH
    int handleH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleH
    int handleJ(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleJ
    int handleL(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleL
    int handleP(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleP
    int handleR(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleR
    int handleS(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleS
    int handleSC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleSC
    int handleT(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleT
    int handleW(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleW
    int handleX(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleX
    int handleZ(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleZ
    boolean conditionC0(java.lang.String,int) -> conditionC0
    boolean conditionCH0(java.lang.String,int) -> conditionCH0
    boolean conditionCH1(java.lang.String,int) -> conditionCH1
    boolean conditionL0(java.lang.String,int) -> conditionL0
    boolean conditionM0(java.lang.String,int) -> conditionM0
    boolean isSlavoGermanic(java.lang.String) -> isSlavoGermanic
    boolean isVowel(char) -> isVowel
    boolean isSilentStart(java.lang.String) -> isSilentStart
    java.lang.String cleanInput(java.lang.String) -> cleanInput
    char charAt(java.lang.String,int) -> charAt
    boolean contains(java.lang.String,int,int,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String[]) -> contains
com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult:
    java.lang.StringBuffer primary -> primary
    java.lang.StringBuffer alternate -> alternate
    int maxLength -> maxLength
    com.parse.codec.language.DoubleMetaphone this$0 -> this$0
    void append(char) -> append
    void append(char,char) -> append
    void appendPrimary(char) -> appendPrimary
    void appendAlternate(char) -> appendAlternate
    void append(java.lang.String) -> append
    void append(java.lang.String,java.lang.String) -> append
    void appendPrimary(java.lang.String) -> appendPrimary
    void appendAlternate(java.lang.String) -> appendAlternate
    java.lang.String getPrimary() -> getPrimary
    java.lang.String getAlternate() -> getAlternate
    boolean isComplete() -> isComplete
com.parse.codec.language.Metaphone -> com.parse.codec.language.Metaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String FRONTV -> FRONTV
    java.lang.String VARSON -> VARSON
    int maxCodeLen -> maxCodeLen
    java.lang.String metaphone(java.lang.String) -> metaphone
    boolean isVowel(java.lang.StringBuffer,int) -> isVowel
    boolean isPreviousChar(java.lang.StringBuffer,int,char) -> isPreviousChar
    boolean isNextChar(java.lang.StringBuffer,int,char) -> isNextChar
    boolean regionMatch(java.lang.StringBuffer,int,java.lang.String) -> regionMatch
    boolean isLastChar(int,int) -> isLastChar
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isMetaphoneEqual(java.lang.String,java.lang.String) -> isMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
com.parse.codec.language.RefinedSoundex -> com.parse.codec.language.RefinedSoundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    char[] soundexMapping -> soundexMapping
    com.parse.codec.language.RefinedSoundex US_ENGLISH -> US_ENGLISH
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(char) -> getMappingCode
    java.lang.String soundex(java.lang.String) -> soundex
com.parse.codec.language.Soundex -> com.parse.codec.language.Soundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    com.parse.codec.language.Soundex US_ENGLISH -> US_ENGLISH
    int maxLength -> maxLength
    char[] soundexMapping -> soundexMapping
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(java.lang.String,int) -> getMappingCode
    int getMaxLength() -> getMaxLength
    char[] getSoundexMapping() -> getSoundexMapping
    char map(char) -> map
    void setMaxLength(int) -> setMaxLength
    java.lang.String soundex(java.lang.String) -> soundex
com.parse.codec.language.SoundexUtils -> com.parse.codec.language.SoundexUtils:
    java.lang.String clean(java.lang.String) -> clean
    int difference(com.parse.codec.StringEncoder,java.lang.String,java.lang.String) -> difference
    int differenceEncoded(java.lang.String,java.lang.String) -> differenceEncoded
com.parse.codec.net.BCodec -> com.parse.codec.net.BCodec:
    java.lang.String charset -> charset
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
com.parse.codec.net.QCodec -> com.parse.codec.net.QCodec:
    java.lang.String charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte BLANK -> BLANK
    byte UNDERSCORE -> UNDERSCORE
    boolean encodeBlanks -> encodeBlanks
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    boolean isEncodeBlanks() -> isEncodeBlanks
    void setEncodeBlanks(boolean) -> setEncodeBlanks
com.parse.codec.net.QuotedPrintableCodec -> com.parse.codec.net.QuotedPrintableCodec:
    java.lang.String charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    byte TAB -> TAB
    byte SPACE -> SPACE
    void encodeQuotedPrintable(int,java.io.ByteArrayOutputStream) -> encodeQuotedPrintable
    byte[] encodeQuotedPrintable(java.util.BitSet,byte[]) -> encodeQuotedPrintable
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
com.parse.codec.net.RFC1522Codec -> com.parse.codec.net.RFC1522Codec:
    char SEP -> SEP
    java.lang.String POSTFIX -> POSTFIX
    java.lang.String PREFIX -> PREFIX
    java.lang.String encodeText(java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
com.parse.codec.net.URLCodec -> com.parse.codec.net.URLCodec:
    int RADIX -> RADIX
    java.lang.String charset -> charset
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    java.util.BitSet WWW_FORM_URL -> WWW_FORM_URL
    byte[] encodeUrl(java.util.BitSet,byte[]) -> encodeUrl
    byte[] decodeUrl(byte[]) -> decodeUrl
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getDefaultCharset() -> getDefaultCharset
com.parse.codec.net.Utils -> com.parse.codec.net.Utils:
    int digit16(byte) -> digit16
com.parse.entity.mime.FormBodyPart -> com.parse.entity.mime.FormBodyPart:
    java.lang.String name -> name
    com.parse.entity.mime.Header header -> header
    com.parse.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    com.parse.entity.mime.content.ContentBody getBody() -> getBody
    com.parse.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(com.parse.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(com.parse.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.parse.entity.mime.content.ContentBody) -> generateTransferEncoding
com.parse.entity.mime.Header -> com.parse.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(com.parse.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.parse.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.parse.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.parse.entity.mime.HttpMultipart -> com.parse.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.parse.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.parse.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.parse.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.parse.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.parse.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.parse.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
com.parse.entity.mime.HttpMultipart$1 -> com.parse.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$com$parse$entity$mime$HttpMultipartMode -> $SwitchMap$com$parse$entity$mime$HttpMultipartMode
com.parse.entity.mime.HttpMultipartMode -> com.parse.entity.mime.HttpMultipartMode:
    com.parse.entity.mime.HttpMultipartMode STRICT -> STRICT
    com.parse.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.parse.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    com.parse.entity.mime.HttpMultipartMode[] values() -> values
    com.parse.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.parse.entity.mime.MIME -> com.parse.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.parse.entity.mime.MinimalField -> com.parse.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.parse.entity.mime.MultipartEntity -> com.parse.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.parse.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.parse.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.parse.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.entity.mime.content.AbstractContentBody -> com.parse.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
com.parse.entity.mime.content.ByteArrayBody -> com.parse.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.parse.entity.mime.content.ContentBody -> com.parse.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.entity.mime.content.ContentDescriptor -> com.parse.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.parse.entity.mime.content.FileBody -> com.parse.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.parse.entity.mime.content.InputStreamBody -> com.parse.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.parse.entity.mime.content.StringBody -> com.parse.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.parse.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.parse.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.parse.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.parse.gdata.Escaper -> com.parse.gdata.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
com.parse.gdata.PercentEscaper -> com.parse.gdata.PercentEscaper:
    java.lang.String SAFECHARS_URLENCODER -> SAFECHARS_URLENCODER
    java.lang.String SAFEPATHCHARS_URLENCODER -> SAFEPATHCHARS_URLENCODER
    java.lang.String SAFEQUERYSTRINGCHARS_URLENCODER -> SAFEQUERYSTRINGCHARS_URLENCODER
    char[] URI_ESCAPED_SPACE -> URI_ESCAPED_SPACE
    char[] UPPER_HEX_DIGITS -> UPPER_HEX_DIGITS
    boolean plusForSpace -> plusForSpace
    boolean[] safeOctets -> safeOctets
    boolean[] createSafeOctets(java.lang.String) -> createSafeOctets
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(int) -> escape
com.parse.gdata.Preconditions -> com.parse.gdata.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    void checkElementIndex(int,int) -> checkElementIndex
    void checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    void checkPositionIndex(int,int) -> checkPositionIndex
    void checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.parse.gdata.UnicodeEscaper -> com.parse.gdata.UnicodeEscaper:
    int DEST_PAD -> DEST_PAD
    java.lang.ThreadLocal DEST_TL -> DEST_TL
    char[] escape(int) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    char[] growBuffer(char[],int,int) -> growBuffer
com.parse.gdata.UnicodeEscaper$1 -> com.parse.gdata.UnicodeEscaper$1:
    int pendingHighSurrogate -> pendingHighSurrogate
    char[] decodedChars -> decodedChars
    java.lang.Appendable val$out -> val$out
    com.parse.gdata.UnicodeEscaper this$0 -> this$0
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void outputChars(char[],int) -> outputChars
com.parse.gdata.UnicodeEscaper$2 -> com.parse.gdata.UnicodeEscaper$2:
    char[] initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.parse.internal.AsyncCallback -> com.parse.internal.AsyncCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onCancel() -> onCancel
    void onFailure(java.lang.Throwable) -> onFailure
com.parse.oauth.OAuth1FlowDialog -> com.parse.oauth.OAuth1FlowDialog:
    android.widget.FrameLayout$LayoutParams FILL -> FILL
    java.lang.String callbackUrl -> callbackUrl
    java.lang.String requestUrl -> requestUrl
    java.lang.String serviceUrlIdentifier -> serviceUrlIdentifier
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler handler -> handler
    android.app.ProgressDialog progressDialog -> progressDialog
    android.widget.ImageView closeImage -> closeImage
    android.webkit.WebView webView -> webView
    android.widget.FrameLayout content -> content
    void onCreate(android.os.Bundle) -> onCreate
    void createCloseImage() -> createCloseImage
    void setUpWebView(int) -> setUpWebView
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler access$000(com.parse.oauth.OAuth1FlowDialog) -> access$000
    java.lang.String access$200(com.parse.oauth.OAuth1FlowDialog) -> access$200
    java.lang.String access$300(com.parse.oauth.OAuth1FlowDialog) -> access$300
    android.app.ProgressDialog access$400(com.parse.oauth.OAuth1FlowDialog) -> access$400
    android.widget.FrameLayout access$500(com.parse.oauth.OAuth1FlowDialog) -> access$500
    android.webkit.WebView access$600(com.parse.oauth.OAuth1FlowDialog) -> access$600
    android.widget.ImageView access$700(com.parse.oauth.OAuth1FlowDialog) -> access$700
com.parse.oauth.OAuth1FlowDialog$1 -> com.parse.oauth.OAuth1FlowDialog$1:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
com.parse.oauth.OAuth1FlowDialog$2 -> com.parse.oauth.OAuth1FlowDialog$2:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.parse.oauth.OAuth1FlowDialog$FlowResultHandler -> com.parse.oauth.OAuth1FlowDialog$FlowResultHandler:
    void onCancel() -> onCancel
    void onError(int,java.lang.String,java.lang.String) -> onError
    void onComplete(java.lang.String) -> onComplete
com.parse.oauth.OAuth1FlowDialog$OAuth1WebViewClient -> com.parse.oauth.OAuth1FlowDialog$OAuth1WebViewClient:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.parse.oauth.OAuth1FlowException -> com.parse.oauth.OAuth1FlowException:
    long serialVersionUID -> serialVersionUID
    int errorCode -> errorCode
    java.lang.String description -> description
    java.lang.String failingUrl -> failingUrl
    int getErrorCode() -> getErrorCode
    java.lang.String getDescription() -> getDescription
    java.lang.String getFailingUrl() -> getFailingUrl
com.parse.os.ParseAsyncTask -> com.parse.os.ParseAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.BlockingQueue sWorkQueue -> sWorkQueue
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.ThreadPoolExecutor sExecutor -> sExecutor
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    int MESSAGE_POST_CANCEL -> MESSAGE_POST_CANCEL
    com.parse.os.ParseAsyncTask$InternalHandler sHandler -> sHandler
    com.parse.os.ParseAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    com.parse.os.ParseAsyncTask$Status mStatus -> mStatus
    com.parse.os.ParseAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.parse.os.ParseAsyncTask execute(java.lang.Object[]) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    com.parse.os.ParseAsyncTask$InternalHandler access$200() -> access$200
    void access$300(com.parse.os.ParseAsyncTask,java.lang.Object) -> access$300
com.parse.os.ParseAsyncTask$1 -> com.parse.os.ParseAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.parse.os.ParseAsyncTask$2 -> com.parse.os.ParseAsyncTask$2:
    com.parse.os.ParseAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.parse.os.ParseAsyncTask$3 -> com.parse.os.ParseAsyncTask$3:
    com.parse.os.ParseAsyncTask this$0 -> this$0
    void done() -> done
com.parse.os.ParseAsyncTask$4 -> com.parse.os.ParseAsyncTask$4:
    int[] $SwitchMap$com$parse$os$ParseAsyncTask$Status -> $SwitchMap$com$parse$os$ParseAsyncTask$Status
com.parse.os.ParseAsyncTask$InternalHandler -> com.parse.os.ParseAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.parse.os.ParseAsyncTask$ParseAsyncTaskResult -> com.parse.os.ParseAsyncTask$ParseAsyncTaskResult:
    com.parse.os.ParseAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.parse.os.ParseAsyncTask$Status -> com.parse.os.ParseAsyncTask$Status:
    com.parse.os.ParseAsyncTask$Status PENDING -> PENDING
    com.parse.os.ParseAsyncTask$Status RUNNING -> RUNNING
    com.parse.os.ParseAsyncTask$Status FINISHED -> FINISHED
    com.parse.os.ParseAsyncTask$Status[] $VALUES -> $VALUES
    com.parse.os.ParseAsyncTask$Status[] values() -> values
    com.parse.os.ParseAsyncTask$Status valueOf(java.lang.String) -> valueOf
com.parse.os.ParseAsyncTask$WorkerRunnable -> com.parse.os.ParseAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.parse.signpost.AbstractOAuthConsumer -> com.parse.signpost.AbstractOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String token -> token
    com.parse.signpost.signature.OAuthMessageSigner messageSigner -> messageSigner
    com.parse.signpost.signature.SigningStrategy signingStrategy -> signingStrategy
    com.parse.signpost.http.HttpParameters additionalParameters -> additionalParameters
    com.parse.signpost.http.HttpParameters requestParameters -> requestParameters
    boolean sendEmptyTokens -> sendEmptyTokens
    void setMessageSigner(com.parse.signpost.signature.OAuthMessageSigner) -> setMessageSigner
    void setSigningStrategy(com.parse.signpost.signature.SigningStrategy) -> setSigningStrategy
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> setAdditionalParameters
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> sign
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> sign
    java.lang.String sign(java.lang.String) -> sign
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
    void setTokenWithSecret(java.lang.String,java.lang.String) -> setTokenWithSecret
    java.lang.String getToken() -> getToken
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    void completeOAuthParameters(com.parse.signpost.http.HttpParameters) -> completeOAuthParameters
    com.parse.signpost.http.HttpParameters getRequestParameters() -> getRequestParameters
    void setSendEmptyTokens(boolean) -> setSendEmptyTokens
    void collectHeaderParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectHeaderParameters
    void collectBodyParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectBodyParameters
    void collectQueryParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectQueryParameters
    java.lang.String generateTimestamp() -> generateTimestamp
    java.lang.String generateNonce() -> generateNonce
com.parse.signpost.AbstractOAuthProvider -> com.parse.signpost.AbstractOAuthProvider:
    long serialVersionUID -> serialVersionUID
    java.lang.String requestTokenEndpointUrl -> requestTokenEndpointUrl
    java.lang.String accessTokenEndpointUrl -> accessTokenEndpointUrl
    java.lang.String authorizationWebsiteUrl -> authorizationWebsiteUrl
    com.parse.signpost.http.HttpParameters responseParameters -> responseParameters
    java.util.Map defaultHeaders -> defaultHeaders
    boolean isOAuth10a -> isOAuth10a
    com.parse.signpost.OAuthProviderListener listener -> listener
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveRequestToken
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveAccessToken
    void retrieveToken(com.parse.signpost.OAuthConsumer,java.lang.String,java.lang.String[]) -> retrieveToken
    void handleUnexpectedResponse(int,com.parse.signpost.http.HttpResponse) -> handleUnexpectedResponse
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
    com.parse.signpost.http.HttpParameters getResponseParameters() -> getResponseParameters
    java.lang.String getResponseParameter(java.lang.String) -> getResponseParameter
    void setResponseParameters(com.parse.signpost.http.HttpParameters) -> setResponseParameters
    void setOAuth10a(boolean) -> setOAuth10a
    boolean isOAuth10a() -> isOAuth10a
    java.lang.String getRequestTokenEndpointUrl() -> getRequestTokenEndpointUrl
    java.lang.String getAccessTokenEndpointUrl() -> getAccessTokenEndpointUrl
    java.lang.String getAuthorizationWebsiteUrl() -> getAuthorizationWebsiteUrl
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    java.util.Map getRequestHeaders() -> getRequestHeaders
    void setListener(com.parse.signpost.OAuthProviderListener) -> setListener
    void removeListener(com.parse.signpost.OAuthProviderListener) -> removeListener
com.parse.signpost.OAuth -> com.parse.signpost.OAuth:
    java.lang.String VERSION_1_0 -> VERSION_1_0
    java.lang.String ENCODING -> ENCODING
    java.lang.String FORM_ENCODED -> FORM_ENCODED
    java.lang.String HTTP_AUTHORIZATION_HEADER -> HTTP_AUTHORIZATION_HEADER
    java.lang.String OAUTH_CONSUMER_KEY -> OAUTH_CONSUMER_KEY
    java.lang.String OAUTH_TOKEN -> OAUTH_TOKEN
    java.lang.String OAUTH_TOKEN_SECRET -> OAUTH_TOKEN_SECRET
    java.lang.String OAUTH_SIGNATURE_METHOD -> OAUTH_SIGNATURE_METHOD
    java.lang.String OAUTH_SIGNATURE -> OAUTH_SIGNATURE
    java.lang.String OAUTH_TIMESTAMP -> OAUTH_TIMESTAMP
    java.lang.String OAUTH_NONCE -> OAUTH_NONCE
    java.lang.String OAUTH_VERSION -> OAUTH_VERSION
    java.lang.String OAUTH_CALLBACK -> OAUTH_CALLBACK
    java.lang.String OAUTH_CALLBACK_CONFIRMED -> OAUTH_CALLBACK_CONFIRMED
    java.lang.String OAUTH_VERIFIER -> OAUTH_VERIFIER
    java.lang.String OUT_OF_BAND -> OUT_OF_BAND
    com.parse.gdata.PercentEscaper percentEncoder -> percentEncoder
    java.lang.String percentEncode(java.lang.String) -> percentEncode
    java.lang.String percentDecode(java.lang.String) -> percentDecode
    void formEncode(java.util.Collection,java.io.OutputStream) -> formEncode
    java.lang.String formEncode(java.util.Collection) -> formEncode
    com.parse.signpost.http.HttpParameters decodeForm(java.lang.String) -> decodeForm
    com.parse.signpost.http.HttpParameters decodeForm(java.io.InputStream) -> decodeForm
    java.util.Map toMap(java.util.Collection) -> toMap
    java.lang.String safeToString(java.lang.Object) -> safeToString
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String addQueryParameters(java.lang.String,java.lang.String[]) -> addQueryParameters
    java.lang.String addQueryParameters(java.lang.String,java.util.Map) -> addQueryParameters
    java.lang.String prepareOAuthHeader(java.lang.String[]) -> prepareOAuthHeader
    com.parse.signpost.http.HttpParameters oauthHeaderToParamsMap(java.lang.String) -> oauthHeaderToParamsMap
    java.lang.String toHeaderElement(java.lang.String,java.lang.String) -> toHeaderElement
    void debugOut(java.lang.String,java.lang.String) -> debugOut
com.parse.signpost.OAuthConsumer -> com.parse.signpost.OAuthConsumer:
    void setMessageSigner(com.parse.signpost.signature.OAuthMessageSigner) -> setMessageSigner
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> setAdditionalParameters
    void setSigningStrategy(com.parse.signpost.signature.SigningStrategy) -> setSigningStrategy
    void setSendEmptyTokens(boolean) -> setSendEmptyTokens
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> sign
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> sign
    java.lang.String sign(java.lang.String) -> sign
    void setTokenWithSecret(java.lang.String,java.lang.String) -> setTokenWithSecret
    java.lang.String getToken() -> getToken
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    com.parse.signpost.http.HttpParameters getRequestParameters() -> getRequestParameters
com.parse.signpost.OAuthProvider -> com.parse.signpost.OAuthProvider:
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveRequestToken
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveAccessToken
    com.parse.signpost.http.HttpParameters getResponseParameters() -> getResponseParameters
    void setResponseParameters(com.parse.signpost.http.HttpParameters) -> setResponseParameters
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    java.util.Map getRequestHeaders() -> getRequestHeaders
    void setOAuth10a(boolean) -> setOAuth10a
    boolean isOAuth10a() -> isOAuth10a
    java.lang.String getRequestTokenEndpointUrl() -> getRequestTokenEndpointUrl
    java.lang.String getAccessTokenEndpointUrl() -> getAccessTokenEndpointUrl
    java.lang.String getAuthorizationWebsiteUrl() -> getAuthorizationWebsiteUrl
    void setListener(com.parse.signpost.OAuthProviderListener) -> setListener
    void removeListener(com.parse.signpost.OAuthProviderListener) -> removeListener
com.parse.signpost.OAuthProviderListener -> com.parse.signpost.OAuthProviderListener:
    void prepareRequest(com.parse.signpost.http.HttpRequest) -> prepareRequest
    void prepareSubmission(com.parse.signpost.http.HttpRequest) -> prepareSubmission
    boolean onResponseReceived(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> onResponseReceived
com.parse.signpost.basic.DefaultOAuthConsumer -> com.parse.signpost.basic.DefaultOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
com.parse.signpost.basic.DefaultOAuthProvider -> com.parse.signpost.basic.DefaultOAuthProvider:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
com.parse.signpost.basic.HttpURLConnectionRequestAdapter -> com.parse.signpost.basic.HttpURLConnectionRequestAdapter:
    java.net.HttpURLConnection connection -> connection
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.net.HttpURLConnection unwrap() -> unwrap
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.basic.HttpURLConnectionResponseAdapter -> com.parse.signpost.basic.HttpURLConnectionResponseAdapter:
    java.net.HttpURLConnection connection -> connection
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.basic.UrlStringRequestAdapter -> com.parse.signpost.basic.UrlStringRequestAdapter:
    java.lang.String url -> url
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer -> com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
com.parse.signpost.commonshttp.CommonsHttpOAuthProvider -> com.parse.signpost.commonshttp.CommonsHttpOAuthProvider:
    long serialVersionUID -> serialVersionUID
    org.apache.http.client.HttpClient httpClient -> httpClient
    void setHttpClient(org.apache.http.client.HttpClient) -> setHttpClient
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
com.parse.signpost.commonshttp.HttpRequestAdapter -> com.parse.signpost.commonshttp.HttpRequestAdapter:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.HttpEntity entity -> entity
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    java.lang.String getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.commonshttp.HttpResponseAdapter -> com.parse.signpost.commonshttp.HttpResponseAdapter:
    org.apache.http.HttpResponse response -> response
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.exception.OAuthCommunicationException -> com.parse.signpost.exception.OAuthCommunicationException:
    java.lang.String responseBody -> responseBody
    java.lang.String getResponseBody() -> getResponseBody
com.parse.signpost.exception.OAuthException -> com.parse.signpost.exception.OAuthException:
com.parse.signpost.exception.OAuthExpectationFailedException -> com.parse.signpost.exception.OAuthExpectationFailedException:
com.parse.signpost.exception.OAuthMessageSignerException -> com.parse.signpost.exception.OAuthMessageSignerException:
com.parse.signpost.exception.OAuthNotAuthorizedException -> com.parse.signpost.exception.OAuthNotAuthorizedException:
    java.lang.String ERROR -> ERROR
    java.lang.String responseBody -> responseBody
    java.lang.String getResponseBody() -> getResponseBody
com.parse.signpost.http.HttpParameters -> com.parse.signpost.http.HttpParameters:
    java.util.TreeMap wrappedMap -> wrappedMap
    java.util.SortedSet put(java.lang.String,java.util.SortedSet) -> put
    java.util.SortedSet put(java.lang.String,java.util.SortedSet,boolean) -> put
    java.lang.String put(java.lang.String,java.lang.String) -> put
    java.lang.String put(java.lang.String,java.lang.String,boolean) -> put
    java.lang.String putNull(java.lang.String,java.lang.String) -> putNull
    void putAll(java.util.Map) -> putAll
    void putAll(java.util.Map,boolean) -> putAll
    void putAll(java.lang.String[],boolean) -> putAll
    void putMap(java.util.Map) -> putMap
    java.util.SortedSet get(java.lang.Object) -> get
    java.lang.String getFirst(java.lang.Object) -> getFirst
    java.lang.String getFirst(java.lang.Object,boolean) -> getFirst
    java.lang.String getAsQueryString(java.lang.Object) -> getAsQueryString
    java.lang.String getAsHeaderElement(java.lang.String) -> getAsHeaderElement
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    java.util.SortedSet remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
com.parse.signpost.http.HttpRequest -> com.parse.signpost.http.HttpRequest:
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.http.HttpResponse -> com.parse.signpost.http.HttpResponse:
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.io.InputStream getContent() -> getContent
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.signature.AuthorizationHeaderSigningStrategy -> com.parse.signpost.signature.AuthorizationHeaderSigningStrategy:
    long serialVersionUID -> serialVersionUID
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.signpost.signature.HmacSha1MessageSigner -> com.parse.signpost.signature.HmacSha1MessageSigner:
    java.lang.String MAC_NAME -> MAC_NAME
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
com.parse.signpost.signature.OAuthMessageSigner -> com.parse.signpost.signature.OAuthMessageSigner:
    long serialVersionUID -> serialVersionUID
    com.parse.codec.binary.Base64 base64 -> base64
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String tokenSecret -> tokenSecret
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String getConsumerSecret() -> getConsumerSecret
    java.lang.String getTokenSecret() -> getTokenSecret
    void setConsumerSecret(java.lang.String) -> setConsumerSecret
    void setTokenSecret(java.lang.String) -> setTokenSecret
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String base64Encode(byte[]) -> base64Encode
    void readObject(java.io.ObjectInputStream) -> readObject
com.parse.signpost.signature.PlainTextMessageSigner -> com.parse.signpost.signature.PlainTextMessageSigner:
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
com.parse.signpost.signature.QueryStringSigningStrategy -> com.parse.signpost.signature.QueryStringSigningStrategy:
    long serialVersionUID -> serialVersionUID
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.signpost.signature.SignatureBaseString -> com.parse.signpost.signature.SignatureBaseString:
    com.parse.signpost.http.HttpRequest request -> request
    com.parse.signpost.http.HttpParameters requestParameters -> requestParameters
    java.lang.String generate() -> generate
    java.lang.String normalizeRequestUrl() -> normalizeRequestUrl
    java.lang.String normalizeRequestParameters() -> normalizeRequestParameters
com.parse.signpost.signature.SigningStrategy -> com.parse.signpost.signature.SigningStrategy:
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.twitter.Twitter -> com.parse.twitter.Twitter:
    java.lang.String REQUEST_TOKEN_URL -> REQUEST_TOKEN_URL
    java.lang.String AUTHORIZE_URL -> AUTHORIZE_URL
    java.lang.String ACCESS_TOKEN_URL -> ACCESS_TOKEN_URL
    java.lang.String VERIFIER_PARAM -> VERIFIER_PARAM
    java.lang.String USER_ID_PARAM -> USER_ID_PARAM
    java.lang.String SCREEN_NAME_PARAM -> SCREEN_NAME_PARAM
    com.parse.signpost.OAuthProvider PROVIDER -> PROVIDER
    java.lang.String CALLBACK_URL -> CALLBACK_URL
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String authToken -> authToken
    java.lang.String authTokenSecret -> authTokenSecret
    java.lang.String userId -> userId
    java.lang.String screenName -> screenName
    java.lang.String getConsumerKey() -> getConsumerKey
    void setConsumerKey(java.lang.String) -> setConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    void setConsumerSecret(java.lang.String) -> setConsumerSecret
    java.lang.String getAuthToken() -> getAuthToken
    void setAuthToken(java.lang.String) -> setAuthToken
    java.lang.String getAuthTokenSecret() -> getAuthTokenSecret
    void setAuthTokenSecret(java.lang.String) -> setAuthTokenSecret
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getScreenName() -> getScreenName
    void setScreenName(java.lang.String) -> setScreenName
    void signRequest(org.apache.http.client.methods.HttpUriRequest) -> signRequest
    void authorize(android.content.Context,com.parse.internal.AsyncCallback) -> authorize
    com.parse.signpost.OAuthProvider access$000() -> access$000
com.parse.twitter.Twitter$1 -> com.parse.twitter.Twitter$1:
    java.lang.Throwable error -> error
    com.parse.internal.AsyncCallback val$callback -> val$callback
    android.content.Context val$context -> val$context
    com.parse.signpost.OAuthConsumer val$consumer -> val$consumer
    android.app.ProgressDialog val$progress -> val$progress
    com.parse.twitter.Twitter this$0 -> this$0
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.parse.twitter.Twitter$1$1 -> com.parse.twitter.Twitter$1$1:
    com.parse.twitter.Twitter$1 this$1 -> this$1
    void onError(int,java.lang.String,java.lang.String) -> onError
    void onComplete(java.lang.String) -> onComplete
    void onCancel() -> onCancel
com.parse.twitter.Twitter$1$1$1 -> com.parse.twitter.Twitter$1$1$1:
    java.lang.Throwable error -> error
    java.lang.String val$verifier -> val$verifier
    com.parse.twitter.Twitter$1$1 this$2 -> this$2
    com.parse.signpost.http.HttpParameters doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.parse.signpost.http.HttpParameters) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shinobicontrols.charts.AnimatableSeries -> com.shinobicontrols.charts.AnimatableSeries:
    boolean a() -> a
    boolean b() -> b
    com.shinobicontrols.charts.cf c() -> c
    com.shinobicontrols.charts.cf d() -> d
    com.shinobicontrols.charts.cf e() -> e
com.shinobicontrols.charts.AnimationManager -> com.shinobicontrols.charts.AnimationManager:
    long nativeHandle -> nativeHandle
    void setCurrentState(float,float,float,boolean,boolean,boolean,double,double,double) -> setCurrentState
    void update(com.shinobicontrols.charts.AnimatableSeries) -> update
    boolean a(com.shinobicontrols.charts.cf) -> a
    boolean a(com.shinobicontrols.charts.AnimatableSeries,com.shinobicontrols.charts.cf) -> a
    boolean b(com.shinobicontrols.charts.AnimatableSeries,com.shinobicontrols.charts.cf) -> b
com.shinobicontrols.charts.Axis -> com.shinobicontrols.charts.Axis:
    java.util.Map v -> v
    com.shinobicontrols.charts.Axis$a w -> w
    boolean x -> x
    com.shinobicontrols.charts.Axis$Orientation a -> a
    com.shinobicontrols.charts.Axis$Position b -> b
    double y -> y
    double c -> c
    double d -> d
    boolean z -> z
    com.shinobicontrols.charts.u e -> e
    java.lang.Object A -> A
    boolean B -> B
    com.shinobicontrols.charts.AxisStyle f -> f
    com.shinobicontrols.charts.aj C -> C
    com.shinobicontrols.charts.Axis$b D -> D
    com.shinobicontrols.charts.TickMark$ClippingMode E -> E
    com.shinobicontrols.charts.TickMark$ClippingMode F -> F
    java.lang.String G -> G
    float H -> H
    boolean I -> I
    int g -> g
    com.shinobicontrols.charts.NumberRange h -> h
    com.shinobicontrols.charts.NumberRange i -> i
    com.shinobicontrols.charts.NumberRange j -> j
    boolean J -> J
    com.shinobicontrols.charts.h k -> k
    com.shinobicontrols.charts.Title K -> K
    com.shinobicontrols.charts.ap L -> L
    android.graphics.Paint M -> M
    int l -> l
    java.lang.Object m -> m
    java.lang.Object n -> n
    java.lang.Object o -> o
    java.lang.Object p -> p
    double N -> N
    java.lang.Double q -> q
    android.graphics.Point O -> O
    double[] P -> P
    com.shinobicontrols.charts.cu r -> r
    com.shinobicontrols.charts.Axis$c Q -> Q
    android.graphics.Rect R -> R
    com.shinobicontrols.charts.ao S -> S
    com.shinobicontrols.charts.ca s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    boolean a(java.lang.String) -> a
    void a(com.shinobicontrols.charts.Series) -> a
    void b(com.shinobicontrols.charts.Series) -> b
    void configureBarColumns(double) -> configureBarColumns
    void specifyBarColumnSpacing(java.lang.Object) -> specifyBarColumnSpacing
    com.shinobicontrols.charts.Axis$Orientation getOrientation() -> getOrientation
    boolean a() -> a
    void a(com.shinobicontrols.charts.Axis$Orientation) -> a
    com.shinobicontrols.charts.Axis$Position getPosition() -> getPosition
    void setPosition(com.shinobicontrols.charts.Axis$Position) -> setPosition
    float b() -> b
    double c() -> c
    boolean d() -> d
    java.lang.Comparable transformUserValueToChartValue(java.lang.Comparable) -> transformUserValueToChartValue
    double a(java.lang.Comparable) -> a
    java.lang.Comparable transformChartValueToUserValue(java.lang.Comparable) -> transformChartValueToUserValue
    java.lang.Comparable a(double) -> a
    double b(java.lang.Comparable) -> b
    java.lang.Comparable b(double) -> b
    java.lang.String getFormattedString(java.lang.Comparable) -> getFormattedString
    com.shinobicontrols.charts.Range a(java.lang.Comparable,java.lang.Comparable) -> a
    boolean a(java.lang.Object) -> a
    double b(java.lang.Object) -> b
    void c(java.lang.Object) -> c
    java.lang.String c(double) -> c
    com.shinobicontrols.charts.Range getCurrentDisplayedRange() -> getCurrentDisplayedRange
    void a(com.shinobicontrols.charts.NumberRange) -> a
    com.shinobicontrols.charts.Range getDataRange() -> getDataRange
    com.shinobicontrols.charts.Range getDefaultRange() -> getDefaultRange
    com.shinobicontrols.charts.NumberRange e() -> e
    void setDefaultRange(com.shinobicontrols.charts.Range) -> setDefaultRange
    boolean isCurrentDisplayedRangePreservedOnUpdate() -> isCurrentDisplayedRangePreservedOnUpdate
    void setCurrentDisplayedRangePreservedOnUpdate(boolean) -> setCurrentDisplayedRangePreservedOnUpdate
    boolean requestCurrentDisplayedRange(java.lang.Comparable,java.lang.Comparable) -> requestCurrentDisplayedRange
    boolean requestCurrentDisplayedRange(java.lang.Comparable,java.lang.Comparable,boolean,boolean) -> requestCurrentDisplayedRange
    void a(double,double) -> a
    void f() -> f
    com.shinobicontrols.charts.NumberRange g() -> g
    void E() -> E
    com.shinobicontrols.charts.NumberRange b(com.shinobicontrols.charts.NumberRange) -> b
    void h() -> h
    com.shinobicontrols.charts.NumberRange a(com.shinobicontrols.charts.Range) -> a
    com.shinobicontrols.charts.Range c(com.shinobicontrols.charts.NumberRange) -> c
    double d(java.lang.Object) -> d
    double a(double,boolean) -> a
    double a(int) -> a
    double b(int) -> b
    boolean d(double) -> d
    void c(int) -> c
    java.lang.String i() -> i
    boolean a(com.shinobicontrols.charts.TickMark) -> a
    boolean j() -> j
    java.lang.String getExpectedLongestLabel() -> getExpectedLongestLabel
    void setExpectedLongestLabel(java.lang.String) -> setExpectedLongestLabel
    boolean k() -> k
    double[] l() -> l
    java.lang.Object getMajorTickFrequency() -> getMajorTickFrequency
    void setMajorTickFrequency(java.lang.Object) -> setMajorTickFrequency
    void e(java.lang.Object) -> e
    boolean m() -> m
    java.lang.Object getMinorTickFrequency() -> getMinorTickFrequency
    void setMinorTickFrequency(java.lang.Object) -> setMinorTickFrequency
    void f(java.lang.Object) -> f
    java.lang.Object getCurrentMajorTickFrequency() -> getCurrentMajorTickFrequency
    boolean n() -> n
    double o() -> o
    void g(java.lang.Object) -> g
    java.lang.Object getCurrentMinorTickFrequency() -> getCurrentMinorTickFrequency
    boolean p() -> p
    double q() -> q
    void r() -> r
    void s() -> s
    void d(int) -> d
    void a(boolean,int) -> a
    void a(double[]) -> a
    void t() -> t
    void a(android.graphics.PointF,java.lang.String) -> a
    void a(android.graphics.PointF) -> a
    void u() -> u
    boolean a(double,double,double) -> a
    int a(int,int) -> a
    double b(double,double,double) -> b
    com.shinobicontrols.charts.AxisStyle getStyle() -> getStyle
    void setStyle(com.shinobicontrols.charts.AxisStyle) -> setStyle
    void F() -> F
    com.shinobicontrols.charts.TickMark$ClippingMode getTickMarkClippingModeHigh() -> getTickMarkClippingModeHigh
    com.shinobicontrols.charts.TickMark$ClippingMode getTickMarkClippingModeLow() -> getTickMarkClippingModeLow
    void setTickMarkClippingModeHigh(com.shinobicontrols.charts.TickMark$ClippingMode) -> setTickMarkClippingModeHigh
    void setTickMarkClippingModeLow(com.shinobicontrols.charts.TickMark$ClippingMode) -> setTickMarkClippingModeLow
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void a(com.shinobicontrols.charts.Title) -> a
    com.shinobicontrols.charts.Title v() -> v
    com.shinobicontrols.charts.Title w() -> w
    void b(com.shinobicontrols.charts.Title) -> b
    void x() -> x
    boolean isPanningOutOfDefaultRangeAllowed() -> isPanningOutOfDefaultRangeAllowed
    boolean isPanningOutOfMaxRangeAllowed() -> isPanningOutOfMaxRangeAllowed
    boolean isBouncingAtLimitsEnabled() -> isBouncingAtLimitsEnabled
    boolean isAnimationEnabled() -> isAnimationEnabled
    boolean isGesturePanningEnabled() -> isGesturePanningEnabled
    boolean isGestureZoomingEnabled() -> isGestureZoomingEnabled
    boolean isMomentumPanningEnabled() -> isMomentumPanningEnabled
    boolean isMomentumZoomingEnabled() -> isMomentumZoomingEnabled
    boolean a(double,boolean,boolean) -> a
    void allowPanningOutOfDefaultRange(boolean) -> allowPanningOutOfDefaultRange
    void allowPanningOutOfMaxRange(boolean) -> allowPanningOutOfMaxRange
    void enableBouncingAtLimits(boolean) -> enableBouncingAtLimits
    void enableAnimation(boolean) -> enableAnimation
    void enableGesturePanning(boolean) -> enableGesturePanning
    void enableGestureZooming(boolean) -> enableGestureZooming
    void enableMomentumPanning(boolean) -> enableMomentumPanning
    void enableMomentumZooming(boolean) -> enableMomentumZooming
    boolean a(double,double,boolean,boolean) -> a
    double y() -> y
    double z() -> z
    boolean e(double) -> e
    void a(int,float) -> a
    void a(android.graphics.Canvas,android.graphics.Rect,float) -> a
    void a(boolean) -> a
    boolean a(int,int,android.graphics.PointF) -> a
    com.shinobicontrols.charts.v A() -> A
    void G() -> G
    java.util.List a(java.util.List) -> a
    boolean a(com.shinobicontrols.charts.Series$Orientation) -> a
    double a(com.shinobicontrols.charts.am) -> a
    void H() -> H
    com.shinobicontrols.charts.ShinobiChart$OnGestureListener B() -> B
    double f(double) -> f
    double g(double) -> g
    double a(double,com.shinobicontrols.charts.CartesianSeries) -> a
    float getPixelValueForUserValue(java.lang.Comparable) -> getPixelValueForUserValue
    java.lang.Comparable getUserValueForPixelValue(float) -> getUserValueForPixelValue
    int I() -> I
    void C() -> C
    com.shinobicontrols.charts.ct D() -> D
    com.shinobicontrols.charts.Axis$MotionState getMotionState() -> getMotionState
    com.shinobicontrols.charts.ShinobiChart getChart() -> getChart
    void a(android.graphics.Rect,int,int) -> a
    void a(com.shinobicontrols.charts.Axis) -> a
com.shinobicontrols.charts.Axis$1 -> com.shinobicontrols.charts.Axis$1:
    int[] a -> a
com.shinobicontrols.charts.Axis$MotionState -> com.shinobicontrols.charts.Axis$MotionState:
    com.shinobicontrols.charts.Axis$MotionState STOPPED -> STOPPED
    com.shinobicontrols.charts.Axis$MotionState ANIMATING -> ANIMATING
    com.shinobicontrols.charts.Axis$MotionState GESTURE -> GESTURE
    com.shinobicontrols.charts.Axis$MotionState MOMENTUM -> MOMENTUM
    com.shinobicontrols.charts.Axis$MotionState BOUNCING -> BOUNCING
    com.shinobicontrols.charts.Axis$MotionState[] a -> a
    com.shinobicontrols.charts.Axis$MotionState[] values() -> values
    com.shinobicontrols.charts.Axis$MotionState valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Axis$Orientation -> com.shinobicontrols.charts.Axis$Orientation:
    com.shinobicontrols.charts.Axis$Orientation HORIZONTAL -> HORIZONTAL
    com.shinobicontrols.charts.Axis$Orientation VERTICAL -> VERTICAL
    com.shinobicontrols.charts.Axis$Orientation[] a -> a
    com.shinobicontrols.charts.Axis$Orientation[] values() -> values
    com.shinobicontrols.charts.Axis$Orientation valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Axis$Position -> com.shinobicontrols.charts.Axis$Position:
    com.shinobicontrols.charts.Axis$Position NORMAL -> NORMAL
    com.shinobicontrols.charts.Axis$Position REVERSE -> REVERSE
    com.shinobicontrols.charts.Axis$Position[] a -> a
    com.shinobicontrols.charts.Axis$Position[] values() -> values
    com.shinobicontrols.charts.Axis$Position valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Axis$a -> com.shinobicontrols.charts.Axis$a:
    com.shinobicontrols.charts.Axis b -> b
    com.shinobicontrols.charts.Axis a -> a
    void a() -> a
com.shinobicontrols.charts.Axis$b -> com.shinobicontrols.charts.Axis$b:
    com.shinobicontrols.charts.Axis a -> a
    void onPropertyChanged() -> onPropertyChanged
com.shinobicontrols.charts.Axis$c -> com.shinobicontrols.charts.Axis$c:
    android.graphics.Rect a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float l -> l
    float m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    android.graphics.Typeface r -> r
    float s -> s
    com.shinobicontrols.charts.TickMark$Orientation t -> t
    boolean u -> u
    float[] v -> v
    int w -> w
    int x -> x
    android.graphics.Point y -> y
    float z -> z
    int A -> A
    double B -> B
    float C -> C
    float D -> D
    float E -> E
    com.shinobicontrols.charts.TickMark$ClippingMode F -> F
    com.shinobicontrols.charts.TickMark$ClippingMode G -> G
    float H -> H
    float I -> I
    boolean J -> J
    float K -> K
    android.graphics.Rect L -> L
    android.graphics.Rect M -> M
    android.graphics.Point N -> N
com.shinobicontrols.charts.AxisStyle -> com.shinobicontrols.charts.AxisStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.GridStripeStyle e -> e
    com.shinobicontrols.charts.GridlineStyle f -> f
    com.shinobicontrols.charts.TickStyle g -> g
    com.shinobicontrols.charts.AxisTitleStyle h -> h
    com.shinobicontrols.charts.ai i -> i
    void a(com.shinobicontrols.charts.AxisStyle) -> a
    com.shinobicontrols.charts.GridStripeStyle getGridStripeStyle() -> getGridStripeStyle
    void setGridStripeStyle(com.shinobicontrols.charts.GridStripeStyle) -> setGridStripeStyle
    float getInterSeriesPadding() -> getInterSeriesPadding
    void setInterSeriesPadding(float) -> setInterSeriesPadding
    float getInterSeriesSetPadding() -> getInterSeriesSetPadding
    void setInterSeriesSetPadding(float) -> setInterSeriesSetPadding
    int getLineColor() -> getLineColor
    void setLineColor(int) -> setLineColor
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    com.shinobicontrols.charts.GridlineStyle getGridlineStyle() -> getGridlineStyle
    void setGridlineStyle(com.shinobicontrols.charts.GridlineStyle) -> setGridlineStyle
    com.shinobicontrols.charts.TickStyle getTickStyle() -> getTickStyle
    void setTickStyle(com.shinobicontrols.charts.TickStyle) -> setTickStyle
    com.shinobicontrols.charts.AxisTitleStyle getTitleStyle() -> getTitleStyle
    void setTitleStyle(com.shinobicontrols.charts.AxisTitleStyle) -> setTitleStyle
    void a() -> a
    com.shinobicontrols.charts.aj a(com.shinobicontrols.charts.PropertyChangedEvent$Handler) -> a
com.shinobicontrols.charts.AxisTitleStyle -> com.shinobicontrols.charts.AxisTitleStyle:
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.Title$Orientation getOrientation() -> getOrientation
    void setOrientation(com.shinobicontrols.charts.Title$Orientation) -> setOrientation
    void a(com.shinobicontrols.charts.AxisTitleStyle) -> a
com.shinobicontrols.charts.BandSeries -> com.shinobicontrols.charts.BandSeries:
    com.shinobicontrols.charts.BandSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    android.graphics.drawable.Drawable a(float) -> a
    com.shinobicontrols.charts.am a(com.shinobicontrols.charts.Data,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    void a(com.shinobicontrols.charts.an,com.shinobicontrols.charts.am) -> a
    void a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.BandSeriesStyle -> com.shinobicontrols.charts.BandSeriesStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.PointStyle g -> g
    com.shinobicontrols.charts.PointStyle h -> h
    void a(com.shinobicontrols.charts.SeriesStyle) -> a
    boolean isFillShown() -> isFillShown
    void setFillShown(boolean) -> setFillShown
    int getLineColorHigh() -> getLineColorHigh
    void setLineColorHigh(int) -> setLineColorHigh
    int getLineColorLow() -> getLineColorLow
    void setLineColorLow(int) -> setLineColorLow
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    int getAreaColorNormal() -> getAreaColorNormal
    void setAreaColorNormal(int) -> setAreaColorNormal
    int getAreaColorInverted() -> getAreaColorInverted
    void setAreaColorInverted(int) -> setAreaColorInverted
    com.shinobicontrols.charts.PointStyle getPointStyle() -> getPointStyle
    void setPointStyle(com.shinobicontrols.charts.PointStyle) -> setPointStyle
    com.shinobicontrols.charts.PointStyle getSelectedPointStyle() -> getSelectedPointStyle
    void setSelectedPointStyle(com.shinobicontrols.charts.PointStyle) -> setSelectedPointStyle
com.shinobicontrols.charts.BarColumnSeries -> com.shinobicontrols.charts.BarColumnSeries:
    float a -> a
    float a() -> a
    void b(float) -> b
    void a(com.shinobicontrols.charts.Axis) -> a
    void a(com.shinobicontrols.charts.am,com.shinobicontrols.charts.Axis) -> a
    double a(double,com.shinobicontrols.charts.Axis) -> a
    com.shinobicontrols.charts.NumberRange a(double,com.shinobicontrols.charts.NumberRange) -> a
    com.shinobicontrols.charts.NumberRange a(com.shinobicontrols.charts.NumberRange) -> a
    android.graphics.drawable.Drawable c(float) -> c
com.shinobicontrols.charts.BarColumnSeriesStyle -> com.shinobicontrols.charts.BarColumnSeriesStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    com.shinobicontrols.charts.cx i -> i
    void a(com.shinobicontrols.charts.SeriesStyle) -> a
    int getAreaColor() -> getAreaColor
    void setAreaColor(int) -> setAreaColor
    int getAreaColorBelowBaseline() -> getAreaColorBelowBaseline
    void setAreaColorBelowBaseline(int) -> setAreaColorBelowBaseline
    int getAreaColorGradient() -> getAreaColorGradient
    void setAreaColorGradient(int) -> setAreaColorGradient
    int getAreaColorGradientBelowBaseline() -> getAreaColorGradientBelowBaseline
    void setAreaColorGradientBelowBaseline(int) -> setAreaColorGradientBelowBaseline
    int getLineColor() -> getLineColor
    void setLineColor(int) -> setLineColor
    int getLineColorBelowBaseline() -> getLineColorBelowBaseline
    void setLineColorBelowBaseline(int) -> setLineColorBelowBaseline
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    boolean isLineShown() -> isLineShown
    void setLineShown(boolean) -> setLineShown
    com.shinobicontrols.charts.SeriesStyle$FillStyle getFillStyle() -> getFillStyle
    void setFillStyle(com.shinobicontrols.charts.SeriesStyle$FillStyle) -> setFillStyle
com.shinobicontrols.charts.BarSeries -> com.shinobicontrols.charts.BarSeries:
    com.shinobicontrols.charts.BarSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    com.shinobicontrols.charts.NumberRange b(com.shinobicontrols.charts.Axis) -> b
    android.graphics.drawable.Drawable a(float) -> a
    void a(com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> a
    com.shinobicontrols.charts.CartesianSeries$a b() -> b
    com.shinobicontrols.charts.CartesianSeries$a c() -> c
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.BarSeriesStyle -> com.shinobicontrols.charts.BarSeriesStyle:
    void setFillStyle(com.shinobicontrols.charts.SeriesStyle$FillStyle) -> setFillStyle
    com.shinobicontrols.charts.SeriesStyle$FillStyle getFillStyle() -> getFillStyle
    void setLineShown(boolean) -> setLineShown
    boolean isLineShown() -> isLineShown
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setLineColorBelowBaseline(int) -> setLineColorBelowBaseline
    int getLineColorBelowBaseline() -> getLineColorBelowBaseline
    void setLineColor(int) -> setLineColor
    int getLineColor() -> getLineColor
    void setAreaColorGradientBelowBaseline(int) -> setAreaColorGradientBelowBaseline
    int getAreaColorGradientBelowBaseline() -> getAreaColorGradientBelowBaseline
    void setAreaColorGradient(int) -> setAreaColorGradient
    int getAreaColorGradient() -> getAreaColorGradient
    void setAreaColorBelowBaseline(int) -> setAreaColorBelowBaseline
    int getAreaColorBelowBaseline() -> getAreaColorBelowBaseline
    void setAreaColor(int) -> setAreaColor
    int getAreaColor() -> getAreaColor
com.shinobicontrols.charts.BuildConfig -> com.shinobicontrols.charts.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.shinobicontrols.charts.CandlestickSeries -> com.shinobicontrols.charts.CandlestickSeries:
    com.shinobicontrols.charts.CandlestickSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    android.graphics.drawable.Drawable a(float) -> a
    com.shinobicontrols.charts.am a(com.shinobicontrols.charts.Data,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    void a(com.shinobicontrols.charts.an,com.shinobicontrols.charts.am) -> a
    void a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    com.shinobicontrols.charts.NumberRange b(com.shinobicontrols.charts.Axis) -> b
    com.shinobicontrols.charts.NumberRange a(com.shinobicontrols.charts.NumberRange) -> a
    com.shinobicontrols.charts.CartesianSeries$a b() -> b
    com.shinobicontrols.charts.CartesianSeries$a c() -> c
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.CandlestickSeriesStyle -> com.shinobicontrols.charts.CandlestickSeriesStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    void a(com.shinobicontrols.charts.SeriesStyle) -> a
    int getRisingColor() -> getRisingColor
    void setRisingColor(int) -> setRisingColor
    int getRisingColorGradient() -> getRisingColorGradient
    void setRisingColorGradient(int) -> setRisingColorGradient
    int getFallingColor() -> getFallingColor
    void setFallingColor(int) -> setFallingColor
    int getFallingColorGradient() -> getFallingColorGradient
    void setFallingColorGradient(int) -> setFallingColorGradient
    int getOutlineColor() -> getOutlineColor
    void setOutlineColor(int) -> setOutlineColor
    int getStickColor() -> getStickColor
    void setStickColor(int) -> setStickColor
    float getStickWidth() -> getStickWidth
    void setStickWidth(float) -> setStickWidth
    float getOutlineWidth() -> getOutlineWidth
    void setOutlineWidth(float) -> setOutlineWidth
com.shinobicontrols.charts.CartesianSeries -> com.shinobicontrols.charts.CartesianSeries:
    boolean b -> b
    com.shinobicontrols.charts.cx c -> c
    java.lang.Integer d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    com.shinobicontrols.charts.Series$Orientation k -> k
    int a -> a
    com.shinobicontrols.charts.CartesianSeries v -> v
    com.shinobicontrols.charts.cg l -> l
    com.shinobicontrols.charts.NumberRange w -> w
    com.shinobicontrols.charts.NumberRange x -> x
    void a(int,int,com.shinobicontrols.charts.CartesianSeries) -> a
    int d() -> d
    com.shinobicontrols.charts.CartesianSeries e() -> e
    double f() -> f
    java.lang.Integer getStackId() -> getStackId
    void setStackId(java.lang.Integer) -> setStackId
    boolean g() -> g
    void h() -> h
    void a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    void a(com.shinobicontrols.charts.an,java.lang.Object[]) -> a
    void a(com.shinobicontrols.charts.an,com.shinobicontrols.charts.am) -> a
    com.shinobicontrols.charts.am a(com.shinobicontrols.charts.Data,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    void i() -> i
    com.shinobicontrols.charts.NumberRange j() -> j
    com.shinobicontrols.charts.NumberRange k() -> k
    com.shinobicontrols.charts.NumberRange b(com.shinobicontrols.charts.Axis) -> b
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    void a(com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> a
    com.shinobicontrols.charts.CartesianSeries$a b() -> b
    com.shinobicontrols.charts.CartesianSeries$a c() -> c
    void a(com.shinobicontrols.charts.Series$a) -> a
    boolean isCrosshairEnabled() -> isCrosshairEnabled
    void setCrosshairEnabled(boolean) -> setCrosshairEnabled
    com.shinobicontrols.charts.Series$Orientation getOrientation() -> getOrientation
com.shinobicontrols.charts.CartesianSeries$a -> com.shinobicontrols.charts.CartesianSeries$a:
    com.shinobicontrols.charts.CartesianSeries$a a -> a
    com.shinobicontrols.charts.CartesianSeries$a b -> b
    com.shinobicontrols.charts.CartesianSeries$a c -> c
    com.shinobicontrols.charts.CartesianSeries$a[] d -> d
    com.shinobicontrols.charts.CartesianSeries$a[] values() -> values
    com.shinobicontrols.charts.CartesianSeries$a valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.CategoryAxis -> com.shinobicontrols.charts.CategoryAxis:
    java.util.List v -> v
    java.util.List w -> w
    boolean a(java.lang.Object) -> a
    double b(java.lang.Object) -> b
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.util.List getCategories() -> getCategories
    boolean requestCurrentDisplayedRange(int,int) -> requestCurrentDisplayedRange
    boolean requestCurrentDisplayedRange(int,int,boolean,boolean) -> requestCurrentDisplayedRange
    java.lang.String i() -> i
    java.lang.String getFormattedString(java.lang.Double) -> getFormattedString
    boolean e(int) -> e
    void c(int) -> c
    double a(int) -> a
    double b(int) -> b
    boolean d(double) -> d
    double a(double,boolean) -> a
    double b(double,boolean) -> b
    void C() -> C
    com.shinobicontrols.charts.ct D() -> D
    boolean j() -> j
    java.lang.String getFormattedString(java.lang.Comparable) -> getFormattedString
com.shinobicontrols.charts.ChartFragment -> com.shinobicontrols.charts.ChartFragment:
    com.shinobicontrols.charts.ShinobiChart getShinobiChart() -> getShinobiChart
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    com.shinobicontrols.charts.u a() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
com.shinobicontrols.charts.ChartFragmentBase -> com.shinobicontrols.charts.ChartFragmentBase:
    com.shinobicontrols.charts.u a -> a
    com.shinobicontrols.charts.ShinobiChart getShinobiChart() -> getShinobiChart
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    com.shinobicontrols.charts.u a() -> a
    void onDestroyView() -> onDestroyView
    void onResume() -> onResume
    void onPause() -> onPause
com.shinobicontrols.charts.ChartStyle -> com.shinobicontrols.charts.ChartStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    int getBackgroundColor() -> getBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    void a(int) -> a
    void b(int) -> b
    void a(float) -> a
    int getCanvasBackgroundColor() -> getCanvasBackgroundColor
    void setCanvasBackgroundColor(int) -> setCanvasBackgroundColor
    int getPlotAreaBackgroundColor() -> getPlotAreaBackgroundColor
    void setPlotAreaBackgroundColor(int) -> setPlotAreaBackgroundColor
    int a() -> a
    void c(int) -> c
    float b() -> b
    void b(float) -> b
com.shinobicontrols.charts.ChartView -> com.shinobicontrols.charts.ChartView:
    com.shinobicontrols.charts.u a(android.content.Context,android.util.AttributeSet,int) -> a
    void onPause() -> onPause
    void onResume() -> onResume
com.shinobicontrols.charts.ChartViewBase -> com.shinobicontrols.charts.ChartViewBase:
    com.shinobicontrols.charts.u a -> a
    com.shinobicontrols.charts.u a(android.content.Context,android.util.AttributeSet,int) -> a
    com.shinobicontrols.charts.ShinobiChart getShinobiChart() -> getShinobiChart
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
com.shinobicontrols.charts.ColumnSeries -> com.shinobicontrols.charts.ColumnSeries:
    com.shinobicontrols.charts.ColumnSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    com.shinobicontrols.charts.NumberRange b(com.shinobicontrols.charts.Axis) -> b
    android.graphics.drawable.Drawable a(float) -> a
    void a(com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> a
    com.shinobicontrols.charts.CartesianSeries$a b() -> b
    com.shinobicontrols.charts.CartesianSeries$a c() -> c
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.ColumnSeriesStyle -> com.shinobicontrols.charts.ColumnSeriesStyle:
    void setFillStyle(com.shinobicontrols.charts.SeriesStyle$FillStyle) -> setFillStyle
    com.shinobicontrols.charts.SeriesStyle$FillStyle getFillStyle() -> getFillStyle
    void setLineShown(boolean) -> setLineShown
    boolean isLineShown() -> isLineShown
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setLineColorBelowBaseline(int) -> setLineColorBelowBaseline
    int getLineColorBelowBaseline() -> getLineColorBelowBaseline
    void setLineColor(int) -> setLineColor
    int getLineColor() -> getLineColor
    void setAreaColorGradientBelowBaseline(int) -> setAreaColorGradientBelowBaseline
    int getAreaColorGradientBelowBaseline() -> getAreaColorGradientBelowBaseline
    void setAreaColorGradient(int) -> setAreaColorGradient
    int getAreaColorGradient() -> getAreaColorGradient
    void setAreaColorBelowBaseline(int) -> setAreaColorBelowBaseline
    int getAreaColorBelowBaseline() -> getAreaColorBelowBaseline
    void setAreaColor(int) -> setAreaColor
    int getAreaColor() -> getAreaColor
com.shinobicontrols.charts.Crosshair -> com.shinobicontrols.charts.Crosshair:
    com.shinobicontrols.charts.u f -> f
    com.shinobicontrols.charts.CrosshairStyle g -> g
    android.graphics.Paint h -> h
    com.shinobicontrols.charts.bv i -> i
    float j -> j
    com.shinobicontrols.charts.Crosshair$c a -> a
    boolean b -> b
    com.shinobicontrols.charts.Crosshair$a c -> c
    com.shinobicontrols.charts.Crosshair$b d -> d
    com.shinobicontrols.charts.CartesianSeries k -> k
    com.shinobicontrols.charts.bv e -> e
    com.shinobicontrols.charts.cx l -> l
    com.shinobicontrols.charts.cv m -> m
    float n -> n
    com.shinobicontrols.charts.cb o -> o
    void a(com.shinobicontrols.charts.u) -> a
    com.shinobicontrols.charts.CrosshairStyle getStyle() -> getStyle
    void setStyle(com.shinobicontrols.charts.CrosshairStyle) -> setStyle
    java.lang.Object getUserXValue() -> getUserXValue
    java.lang.Object getUserYValue() -> getUserYValue
    float getPixelXValue() -> getPixelXValue
    float getPixelYValue() -> getPixelYValue
    com.shinobicontrols.charts.CartesianSeries getTrackingSeries() -> getTrackingSeries
    boolean isShown() -> isShown
    boolean isActive() -> isActive
    void a() -> a
    void b() -> b
    void c() -> c
    void a(android.graphics.Canvas,android.graphics.Rect) -> a
    void a(int,int) -> a
    void a(int,int,int,int) -> a
    void b(android.graphics.Canvas,android.graphics.Rect) -> b
    void d() -> d
    void a(com.shinobicontrols.charts.bv,com.shinobicontrols.charts.bv,com.shinobicontrols.charts.CartesianSeries) -> a
    void a(com.shinobicontrols.charts.CartesianSeries) -> a
    boolean e() -> e
    void f() -> f
    void a(android.graphics.Canvas) -> a
    void c(android.graphics.Canvas,android.graphics.Rect) -> c
    void d(android.graphics.Canvas,android.graphics.Rect) -> d
    void g() -> g
    boolean h() -> h
    void a(com.shinobicontrols.charts.bv) -> a
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    void a(com.shinobicontrols.charts.cb,int,int) -> a
    void b(com.shinobicontrols.charts.cb,int,int) -> b
    void a(com.shinobicontrols.charts.cb,int) -> a
    void b(com.shinobicontrols.charts.cb,int) -> b
    void c(com.shinobicontrols.charts.cb,int,int) -> c
    void d(com.shinobicontrols.charts.cb,int,int) -> d
    void c(com.shinobicontrols.charts.cb,int) -> c
    void d(com.shinobicontrols.charts.cb,int) -> d
com.shinobicontrols.charts.Crosshair$1 -> com.shinobicontrols.charts.Crosshair$1:
    int[] a -> a
    int[] b -> b
com.shinobicontrols.charts.Crosshair$a -> com.shinobicontrols.charts.Crosshair$a:
    com.shinobicontrols.charts.Crosshair$a a -> a
    com.shinobicontrols.charts.Crosshair$a b -> b
    com.shinobicontrols.charts.Crosshair$a[] c -> c
    com.shinobicontrols.charts.Crosshair$a[] values() -> values
    com.shinobicontrols.charts.Crosshair$a valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Crosshair$b -> com.shinobicontrols.charts.Crosshair$b:
    com.shinobicontrols.charts.Crosshair$b a -> a
    com.shinobicontrols.charts.Crosshair$b b -> b
    com.shinobicontrols.charts.Crosshair$b c -> c
    com.shinobicontrols.charts.Crosshair$b[] d -> d
    com.shinobicontrols.charts.Crosshair$b[] values() -> values
    com.shinobicontrols.charts.Crosshair$b valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Crosshair$c -> com.shinobicontrols.charts.Crosshair$c:
    com.shinobicontrols.charts.Crosshair$c a -> a
    com.shinobicontrols.charts.Crosshair$c b -> b
    com.shinobicontrols.charts.Crosshair$c c -> c
    com.shinobicontrols.charts.Crosshair$c[] d -> d
    com.shinobicontrols.charts.Crosshair$c[] values() -> values
    com.shinobicontrols.charts.Crosshair$c valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.CrosshairStyle -> com.shinobicontrols.charts.CrosshairStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    com.shinobicontrols.charts.cx i -> i
    com.shinobicontrols.charts.cx j -> j
    com.shinobicontrols.charts.cx k -> k
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    int getLineColor() -> getLineColor
    void setLineColor(int) -> setLineColor
    float getTooltipPadding() -> getTooltipPadding
    void setTooltipPadding(float) -> setTooltipPadding
    android.graphics.Typeface getTooltipTypeface() -> getTooltipTypeface
    void setTooltipTypeface(android.graphics.Typeface) -> setTooltipTypeface
    float getTooltipTextSize() -> getTooltipTextSize
    void setTooltipTextSize(float) -> setTooltipTextSize
    int getTooltipTextColor() -> getTooltipTextColor
    void setTooltipTextColor(int) -> setTooltipTextColor
    int getTooltipLabelBackgroundColor() -> getTooltipLabelBackgroundColor
    void setTooltipLabelBackgroundColor(int) -> setTooltipLabelBackgroundColor
    int getTooltipBackgroundColor() -> getTooltipBackgroundColor
    void setTooltipBackgroundColor(int) -> setTooltipBackgroundColor
    float getTooltipCornerRadius() -> getTooltipCornerRadius
    void setTooltipCornerRadius(float) -> setTooltipCornerRadius
    float getTooltipBorderWidth() -> getTooltipBorderWidth
    void setTooltipBorderWidth(float) -> setTooltipBorderWidth
    int getTooltipBorderColor() -> getTooltipBorderColor
    void setTooltipBorderColor(int) -> setTooltipBorderColor
com.shinobicontrols.charts.Data -> com.shinobicontrols.charts.Data:
    java.lang.Object getX() -> getX
    java.lang.Object getY() -> getY
com.shinobicontrols.charts.DataAdapter -> com.shinobicontrols.charts.DataAdapter:
    com.shinobicontrols.charts.ai a -> a
    java.util.List b -> b
    boolean add(com.shinobicontrols.charts.Data) -> add
    void add(int,com.shinobicontrols.charts.Data) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    com.shinobicontrols.charts.Data get(int) -> get
    int hashCode() -> hashCode
    int indexOf(java.lang.Object) -> indexOf
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.shinobicontrols.charts.Data remove(int) -> remove
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    com.shinobicontrols.charts.Data set(int,com.shinobicontrols.charts.Data) -> set
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.util.List getDataPointsForDisplay() -> getDataPointsForDisplay
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void fireUpdateHandler() -> fireUpdateHandler
    com.shinobicontrols.charts.aj a(com.shinobicontrols.charts.cw$a) -> a
com.shinobicontrols.charts.DataPoint -> com.shinobicontrols.charts.DataPoint:
    java.lang.Object a -> a
    java.lang.Object b -> b
    boolean c -> c
    java.lang.Object getX() -> getX
    java.lang.Object getY() -> getY
    boolean getSelected() -> getSelected
com.shinobicontrols.charts.DateFrequency -> com.shinobicontrols.charts.DateFrequency:
    int a -> a
    com.shinobicontrols.charts.DateFrequency$Denomination b -> b
    int getQuantity() -> getQuantity
    com.shinobicontrols.charts.DateFrequency$Denomination getDenomination() -> getDenomination
    void setQuantity(int) -> setQuantity
    void setDenomination(com.shinobicontrols.charts.DateFrequency$Denomination) -> setDenomination
    void a(int,com.shinobicontrols.charts.DateFrequency$Denomination) -> a
    boolean b(int,com.shinobicontrols.charts.DateFrequency$Denomination) -> b
    long a() -> a
    com.shinobicontrols.charts.DateFrequency clone() -> clone
    java.lang.Object clone() -> clone
com.shinobicontrols.charts.DateFrequency$1 -> com.shinobicontrols.charts.DateFrequency$1:
    int[] a -> a
com.shinobicontrols.charts.DateFrequency$Denomination -> com.shinobicontrols.charts.DateFrequency$Denomination:
    com.shinobicontrols.charts.DateFrequency$Denomination SECONDS -> SECONDS
    com.shinobicontrols.charts.DateFrequency$Denomination MINUTES -> MINUTES
    com.shinobicontrols.charts.DateFrequency$Denomination HOURS -> HOURS
    com.shinobicontrols.charts.DateFrequency$Denomination DAYS -> DAYS
    com.shinobicontrols.charts.DateFrequency$Denomination WEEKS -> WEEKS
    com.shinobicontrols.charts.DateFrequency$Denomination MONTHS -> MONTHS
    com.shinobicontrols.charts.DateFrequency$Denomination YEARS -> YEARS
    int a -> a
    long b -> b
    com.shinobicontrols.charts.DateFrequency$Denomination[] c -> c
    com.shinobicontrols.charts.DateFrequency$Denomination[] values() -> values
    com.shinobicontrols.charts.DateFrequency$Denomination valueOf(java.lang.String) -> valueOf
    boolean a() -> a
    boolean b() -> b
com.shinobicontrols.charts.DateRange -> com.shinobicontrols.charts.DateRange:
    java.util.Calendar c -> c
    java.util.Date getMinimum() -> getMinimum
    java.util.Date getMaximum() -> getMaximum
    double getSpan() -> getSpan
    com.shinobicontrols.charts.Range a() -> a
    com.shinobicontrols.charts.DateRange b() -> b
    com.shinobicontrols.charts.Range c() -> c
    java.lang.Comparable getMaximum() -> getMaximum
    java.lang.Comparable getMinimum() -> getMinimum
com.shinobicontrols.charts.DateTimeAxis -> com.shinobicontrols.charts.DateTimeAxis:
    java.text.SimpleDateFormat v -> v
    java.text.DateFormat w -> w
    android.graphics.PointF x -> x
    boolean y -> y
    boolean z -> z
    long A -> A
    long B -> B
    boolean C -> C
    boolean D -> D
    java.util.Calendar E -> E
    long F -> F
    java.lang.String G -> G
    boolean a(java.lang.Object) -> a
    double b(java.lang.Object) -> b
    void a(long) -> a
    double a(java.util.Date) -> a
    java.util.Date h(double) -> h
    java.util.Date transformUserValueToChartValue(java.util.Date) -> transformUserValueToChartValue
    java.util.Date transformChartValueToUserValue(java.util.Date) -> transformChartValueToUserValue
    com.shinobicontrols.charts.Range a(java.util.Date,java.util.Date) -> a
    java.lang.String i() -> i
    java.text.DateFormat getLabelFormat() -> getLabelFormat
    void setLabelFormat(java.text.DateFormat) -> setLabelFormat
    java.lang.String getFormattedString(java.util.Date) -> getFormattedString
    boolean E() -> E
    void c(int) -> c
    long b(boolean) -> b
    long a(long,long,long) -> a
    double a(int) -> a
    double b(int) -> b
    boolean d(double) -> d
    long a(long,boolean,boolean) -> a
    double a(double,boolean) -> a
    long a(long,boolean) -> a
    long b(long,boolean) -> b
    double a(com.shinobicontrols.charts.DateFrequency) -> a
    void F() -> F
    double z() -> z
    java.lang.String G() -> G
    void b(com.shinobicontrols.charts.DateFrequency) -> b
    void c(com.shinobicontrols.charts.DateFrequency) -> c
    void r() -> r
    void s() -> s
    void f(java.lang.Object) -> f
    void e(java.lang.Object) -> e
    double d(java.lang.Object) -> d
    com.shinobicontrols.charts.Range a(java.lang.Comparable,java.lang.Comparable) -> a
    java.lang.String getFormattedString(java.lang.Comparable) -> getFormattedString
    java.lang.Comparable b(double) -> b
    double b(java.lang.Comparable) -> b
    java.lang.Comparable transformChartValueToUserValue(java.lang.Comparable) -> transformChartValueToUserValue
    java.lang.Comparable transformUserValueToChartValue(java.lang.Comparable) -> transformUserValueToChartValue
com.shinobicontrols.charts.DateTimeAxis$1 -> com.shinobicontrols.charts.DateTimeAxis$1:
    int[] a -> a
com.shinobicontrols.charts.DonutSeries -> com.shinobicontrols.charts.DonutSeries:
    com.shinobicontrols.charts.DonutSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    float getInnerRadius() -> getInnerRadius
    void setInnerRadius(float) -> setInnerRadius
    float b(float) -> b
    void setSelectedPosition(java.lang.Float) -> setSelectedPosition
    float getSelectedPosition() -> getSelectedPosition
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setOuterRadius(float) -> setOuterRadius
    float getOuterRadius() -> getOuterRadius
    void setDrawDirection(com.shinobicontrols.charts.RadialSeries$DrawDirection) -> setDrawDirection
    com.shinobicontrols.charts.RadialSeries$DrawDirection getDrawDirection() -> getDrawDirection
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.DonutSeriesStyle -> com.shinobicontrols.charts.DonutSeriesStyle:
    void setLabelTextSize(float) -> setLabelTextSize
    float getLabelTextSize() -> getLabelTextSize
    void setLabelBackgroundColor(int) -> setLabelBackgroundColor
    int getLabelBackgroundColor() -> getLabelBackgroundColor
    void setLabelTextColor(int) -> setLabelTextColor
    int getLabelTextColor() -> getLabelTextColor
    void setLabelTypeface(android.graphics.Typeface) -> setLabelTypeface
    android.graphics.Typeface getLabelTypeface() -> getLabelTypeface
    void setProtrusion(float) -> setProtrusion
    float getProtrusion() -> getProtrusion
    void setFlavorColors(int[]) -> setFlavorColors
    int flavorColorAtIndex(int) -> flavorColorAtIndex
    void setCrustThickness(float) -> setCrustThickness
    float getCrustThickness() -> getCrustThickness
    void setCrustColors(int[]) -> setCrustColors
    int crustColorAtIndex(int) -> crustColorAtIndex
    void setInitialRotation(float) -> setInitialRotation
    float getInitialRotation() -> getInitialRotation
    void setChartEffect(com.shinobicontrols.charts.RadialSeries$RadialEffect) -> setChartEffect
    com.shinobicontrols.charts.RadialSeries$RadialEffect getChartEffect() -> getChartEffect
    void setLabelsShown(boolean) -> setLabelsShown
    boolean areLabelsShown() -> areLabelsShown
    void setFlavorShown(boolean) -> setFlavorShown
    boolean isFlavorShown() -> isFlavorShown
    void setCrustShown(boolean) -> setCrustShown
    boolean isCrustShown() -> isCrustShown
com.shinobicontrols.charts.GLSurfaceView -> com.shinobicontrols.charts.GLSurfaceView:
    com.shinobicontrols.charts.GLSurfaceView$g a -> a
    java.lang.ref.WeakReference b -> b
    com.shinobicontrols.charts.GLSurfaceView$f c -> c
    com.shinobicontrols.charts.GLSurfaceView$Renderer d -> d
    boolean e -> e
    com.shinobicontrols.charts.GLSurfaceView$EGLConfigChooser f -> f
    com.shinobicontrols.charts.GLSurfaceView$EGLContextFactory g -> g
    com.shinobicontrols.charts.GLSurfaceView$EGLWindowSurfaceFactory h -> h
    com.shinobicontrols.charts.GLSurfaceView$GLWrapper i -> i
    int j -> j
    int k -> k
    boolean l -> l
    void finalize() -> finalize
    void e() -> e
    void a(com.shinobicontrols.charts.GLSurfaceView$Renderer) -> a
    void a(com.shinobicontrols.charts.GLSurfaceView$EGLConfigChooser) -> a
    void b_(int) -> b_
    void b(int) -> b
    void c_() -> c_
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void b() -> b
    void c() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void f() -> f
    int a(com.shinobicontrols.charts.GLSurfaceView) -> a
    com.shinobicontrols.charts.GLSurfaceView$EGLConfigChooser b(com.shinobicontrols.charts.GLSurfaceView) -> b
    com.shinobicontrols.charts.GLSurfaceView$EGLContextFactory c(com.shinobicontrols.charts.GLSurfaceView) -> c
    com.shinobicontrols.charts.GLSurfaceView$EGLWindowSurfaceFactory d(com.shinobicontrols.charts.GLSurfaceView) -> d
    com.shinobicontrols.charts.GLSurfaceView$GLWrapper e(com.shinobicontrols.charts.GLSurfaceView) -> e
    int f(com.shinobicontrols.charts.GLSurfaceView) -> f
    com.shinobicontrols.charts.GLSurfaceView$g d() -> d
    boolean g(com.shinobicontrols.charts.GLSurfaceView) -> g
    com.shinobicontrols.charts.GLSurfaceView$Renderer h(com.shinobicontrols.charts.GLSurfaceView) -> h
com.shinobicontrols.charts.GLSurfaceView$1 -> com.shinobicontrols.charts.GLSurfaceView$1:
com.shinobicontrols.charts.GLSurfaceView$EGLConfigChooser -> com.shinobicontrols.charts.GLSurfaceView$EGLConfigChooser:
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
com.shinobicontrols.charts.GLSurfaceView$EGLContextFactory -> com.shinobicontrols.charts.GLSurfaceView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.shinobicontrols.charts.GLSurfaceView$EGLWindowSurfaceFactory -> com.shinobicontrols.charts.GLSurfaceView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.shinobicontrols.charts.GLSurfaceView$GLWrapper -> com.shinobicontrols.charts.GLSurfaceView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.shinobicontrols.charts.GLSurfaceView$Renderer -> com.shinobicontrols.charts.GLSurfaceView$Renderer:
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.shinobicontrols.charts.GLSurfaceView$a -> com.shinobicontrols.charts.GLSurfaceView$a:
    int[] a -> a
    com.shinobicontrols.charts.GLSurfaceView b -> b
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int[] a(int[]) -> a
com.shinobicontrols.charts.GLSurfaceView$b -> com.shinobicontrols.charts.GLSurfaceView$b:
    int[] j -> j
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    com.shinobicontrols.charts.GLSurfaceView i -> i
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.shinobicontrols.charts.GLSurfaceView$c -> com.shinobicontrols.charts.GLSurfaceView$c:
    int b -> b
    com.shinobicontrols.charts.GLSurfaceView a -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.shinobicontrols.charts.GLSurfaceView$d -> com.shinobicontrols.charts.GLSurfaceView$d:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.shinobicontrols.charts.GLSurfaceView$e -> com.shinobicontrols.charts.GLSurfaceView$e:
    java.lang.ref.WeakReference f -> f
    javax.microedition.khronos.egl.EGL10 a -> a
    javax.microedition.khronos.egl.EGLDisplay b -> b
    javax.microedition.khronos.egl.EGLSurface c -> c
    javax.microedition.khronos.egl.EGLConfig d -> d
    javax.microedition.khronos.egl.EGLContext e -> e
    void a() -> a
    boolean b() -> b
    javax.microedition.khronos.opengles.GL c() -> c
    int d() -> d
    void e() -> e
    void g() -> g
    void f() -> f
    void a(java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,int) -> b
com.shinobicontrols.charts.GLSurfaceView$f -> com.shinobicontrols.charts.GLSurfaceView$f:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    java.util.ArrayList q -> q
    boolean r -> r
    com.shinobicontrols.charts.GLSurfaceView$e s -> s
    java.lang.ref.WeakReference t -> t
    void run() -> run
    void j() -> j
    void k() -> k
    void l() -> l
    boolean a() -> a
    boolean m() -> m
    void a(int) -> a
    int b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void a(int,int) -> a
    void h() -> h
    void i() -> i
    boolean a(com.shinobicontrols.charts.GLSurfaceView$f,boolean) -> a
com.shinobicontrols.charts.GLSurfaceView$g -> com.shinobicontrols.charts.GLSurfaceView$g:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.shinobicontrols.charts.GLSurfaceView$f g -> g
    void a(com.shinobicontrols.charts.GLSurfaceView$f) -> a
    boolean b(com.shinobicontrols.charts.GLSurfaceView$f) -> b
    void c(com.shinobicontrols.charts.GLSurfaceView$f) -> c
    boolean a() -> a
    boolean b() -> b
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void c() -> c
com.shinobicontrols.charts.GLSurfaceView$h -> com.shinobicontrols.charts.GLSurfaceView$h:
    java.lang.StringBuilder a -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void a() -> a
com.shinobicontrols.charts.GLSurfaceView$i -> com.shinobicontrols.charts.GLSurfaceView$i:
    com.shinobicontrols.charts.GLSurfaceView j -> j
com.shinobicontrols.charts.GLTextureView -> com.shinobicontrols.charts.GLTextureView:
    com.shinobicontrols.charts.GLTextureView$g a -> a
    java.lang.ref.WeakReference b -> b
    com.shinobicontrols.charts.GLTextureView$f c -> c
    com.shinobicontrols.charts.GLTextureView$Renderer d -> d
    boolean e -> e
    com.shinobicontrols.charts.GLTextureView$EGLConfigChooser f -> f
    com.shinobicontrols.charts.GLTextureView$EGLContextFactory g -> g
    com.shinobicontrols.charts.GLTextureView$EGLWindowSurfaceFactory h -> h
    com.shinobicontrols.charts.GLTextureView$GLWrapper i -> i
    int j -> j
    int k -> k
    boolean l -> l
    void finalize() -> finalize
    void e() -> e
    void a(com.shinobicontrols.charts.GLTextureView$Renderer) -> a
    void a(com.shinobicontrols.charts.GLTextureView$EGLConfigChooser) -> a
    void a_(int) -> a_
    void b(int) -> b
    void b_() -> b_
    void a(android.graphics.SurfaceTexture) -> a
    void b(android.graphics.SurfaceTexture) -> b
    void a(android.graphics.SurfaceTexture,int,int,int) -> a
    void b() -> b
    void c() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void f() -> f
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    int a(com.shinobicontrols.charts.GLTextureView) -> a
    com.shinobicontrols.charts.GLTextureView$EGLConfigChooser b(com.shinobicontrols.charts.GLTextureView) -> b
    com.shinobicontrols.charts.GLTextureView$EGLContextFactory c(com.shinobicontrols.charts.GLTextureView) -> c
    com.shinobicontrols.charts.GLTextureView$EGLWindowSurfaceFactory d(com.shinobicontrols.charts.GLTextureView) -> d
    com.shinobicontrols.charts.GLTextureView$GLWrapper e(com.shinobicontrols.charts.GLTextureView) -> e
    int f(com.shinobicontrols.charts.GLTextureView) -> f
    com.shinobicontrols.charts.GLTextureView$g d() -> d
    boolean g(com.shinobicontrols.charts.GLTextureView) -> g
    com.shinobicontrols.charts.GLTextureView$Renderer h(com.shinobicontrols.charts.GLTextureView) -> h
com.shinobicontrols.charts.GLTextureView$1 -> com.shinobicontrols.charts.GLTextureView$1:
    com.shinobicontrols.charts.GLTextureView a -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.shinobicontrols.charts.GLTextureView$EGLConfigChooser -> com.shinobicontrols.charts.GLTextureView$EGLConfigChooser:
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
com.shinobicontrols.charts.GLTextureView$EGLContextFactory -> com.shinobicontrols.charts.GLTextureView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.shinobicontrols.charts.GLTextureView$EGLWindowSurfaceFactory -> com.shinobicontrols.charts.GLTextureView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.shinobicontrols.charts.GLTextureView$GLWrapper -> com.shinobicontrols.charts.GLTextureView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.shinobicontrols.charts.GLTextureView$Renderer -> com.shinobicontrols.charts.GLTextureView$Renderer:
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.shinobicontrols.charts.GLTextureView$a -> com.shinobicontrols.charts.GLTextureView$a:
    int[] a -> a
    com.shinobicontrols.charts.GLTextureView b -> b
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int[] a(int[]) -> a
com.shinobicontrols.charts.GLTextureView$b -> com.shinobicontrols.charts.GLTextureView$b:
    int[] j -> j
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    com.shinobicontrols.charts.GLTextureView i -> i
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.shinobicontrols.charts.GLTextureView$c -> com.shinobicontrols.charts.GLTextureView$c:
    int b -> b
    com.shinobicontrols.charts.GLTextureView a -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.shinobicontrols.charts.GLTextureView$d -> com.shinobicontrols.charts.GLTextureView$d:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.shinobicontrols.charts.GLTextureView$e -> com.shinobicontrols.charts.GLTextureView$e:
    java.lang.ref.WeakReference f -> f
    javax.microedition.khronos.egl.EGL10 a -> a
    javax.microedition.khronos.egl.EGLDisplay b -> b
    javax.microedition.khronos.egl.EGLSurface c -> c
    javax.microedition.khronos.egl.EGLConfig d -> d
    javax.microedition.khronos.egl.EGLContext e -> e
    void a() -> a
    boolean b() -> b
    javax.microedition.khronos.opengles.GL c() -> c
    int d() -> d
    void e() -> e
    void g() -> g
    void f() -> f
    void a(java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,int) -> b
com.shinobicontrols.charts.GLTextureView$f -> com.shinobicontrols.charts.GLTextureView$f:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    java.util.ArrayList q -> q
    boolean r -> r
    com.shinobicontrols.charts.GLTextureView$e s -> s
    java.lang.ref.WeakReference t -> t
    void run() -> run
    void j() -> j
    void k() -> k
    void l() -> l
    boolean a() -> a
    boolean m() -> m
    void a(int) -> a
    int b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void a(int,int) -> a
    void h() -> h
    void i() -> i
    boolean a(com.shinobicontrols.charts.GLTextureView$f,boolean) -> a
com.shinobicontrols.charts.GLTextureView$g -> com.shinobicontrols.charts.GLTextureView$g:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.shinobicontrols.charts.GLTextureView$f g -> g
    void a(com.shinobicontrols.charts.GLTextureView$f) -> a
    boolean b(com.shinobicontrols.charts.GLTextureView$f) -> b
    void c(com.shinobicontrols.charts.GLTextureView$f) -> c
    boolean a() -> a
    boolean b() -> b
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void c() -> c
com.shinobicontrols.charts.GLTextureView$h -> com.shinobicontrols.charts.GLTextureView$h:
    java.lang.StringBuilder a -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void a() -> a
com.shinobicontrols.charts.GLTextureView$i -> com.shinobicontrols.charts.GLTextureView$i:
    com.shinobicontrols.charts.GLTextureView j -> j
com.shinobicontrols.charts.GridStripeStyle -> com.shinobicontrols.charts.GridStripeStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    void a(com.shinobicontrols.charts.GridStripeStyle) -> a
    int getStripeColor() -> getStripeColor
    void setStripeColor(int) -> setStripeColor
    int getAlternateStripeColor() -> getAlternateStripeColor
    void setAlternateStripeColor(int) -> setAlternateStripeColor
    boolean areGridStripesShown() -> areGridStripesShown
    void setGridStripesShown(boolean) -> setGridStripesShown
com.shinobicontrols.charts.GridlineStyle -> com.shinobicontrols.charts.GridlineStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx d -> d
    void a(com.shinobicontrols.charts.GridlineStyle) -> a
    boolean areGridlinesShown() -> areGridlinesShown
    void setGridlinesShown(boolean) -> setGridlinesShown
    boolean areGridlinesDashed() -> areGridlinesDashed
    void setGridlinesDashed(boolean) -> setGridlinesDashed
    int getLineColor() -> getLineColor
    void setLineColor(int) -> setLineColor
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    float[] getDashStyle() -> getDashStyle
    void setDashStyle(float[]) -> setDashStyle
com.shinobicontrols.charts.InvalidLicenseException -> com.shinobicontrols.charts.InvalidLicenseException:
    long serialVersionUID -> serialVersionUID
com.shinobicontrols.charts.Legend -> com.shinobicontrols.charts.Legend:
    int ALL -> ALL
    int VARIABLE -> VARIABLE
    com.shinobicontrols.charts.bd a -> a
    java.util.List b -> b
    com.shinobicontrols.charts.au c -> c
    com.shinobicontrols.charts.Legend$Placement d -> d
    com.shinobicontrols.charts.Legend$Position e -> e
    com.shinobicontrols.charts.LegendStyle f -> f
    com.shinobicontrols.charts.Title g -> g
    int h -> h
    com.shinobicontrols.charts.ar i -> i
    int j -> j
    float k -> k
    com.shinobicontrols.charts.Title a(android.content.Context) -> a
    com.shinobicontrols.charts.au b(android.content.Context) -> b
    int getMaxSeriesPerRow() -> getMaxSeriesPerRow
    com.shinobicontrols.charts.Legend$Placement getPlacement() -> getPlacement
    com.shinobicontrols.charts.Legend$Position getPosition() -> getPosition
    com.shinobicontrols.charts.LegendStyle getStyle() -> getStyle
    java.lang.String getTitle() -> getTitle
    void a() -> a
    int a(int,int) -> a
    void b() -> b
    void c() -> c
    void a(float) -> a
    int d() -> d
    boolean e() -> e
    void setMaxSeriesPerRow(int) -> setMaxSeriesPerRow
    void setPlacement(com.shinobicontrols.charts.Legend$Placement) -> setPlacement
    void setPosition(com.shinobicontrols.charts.Legend$Position) -> setPosition
    void setStyle(com.shinobicontrols.charts.LegendStyle) -> setStyle
    void setTitle(java.lang.String) -> setTitle
    void setVisibility(int) -> setVisibility
    void a(com.shinobicontrols.charts.ar) -> a
com.shinobicontrols.charts.Legend$Placement -> com.shinobicontrols.charts.Legend$Placement:
    com.shinobicontrols.charts.Legend$Placement INSIDE_PLOT_AREA -> INSIDE_PLOT_AREA
    com.shinobicontrols.charts.Legend$Placement ON_PLOT_AREA_BORDER -> ON_PLOT_AREA_BORDER
    com.shinobicontrols.charts.Legend$Placement OUTSIDE_PLOT_AREA -> OUTSIDE_PLOT_AREA
    com.shinobicontrols.charts.Legend$Placement[] a -> a
    com.shinobicontrols.charts.Legend$Placement[] values() -> values
    com.shinobicontrols.charts.Legend$Placement valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Legend$Position -> com.shinobicontrols.charts.Legend$Position:
    com.shinobicontrols.charts.Legend$Position BOTTOM_CENTER -> BOTTOM_CENTER
    com.shinobicontrols.charts.Legend$Position BOTTOM_LEFT -> BOTTOM_LEFT
    com.shinobicontrols.charts.Legend$Position BOTTOM_RIGHT -> BOTTOM_RIGHT
    com.shinobicontrols.charts.Legend$Position MIDDLE_LEFT -> MIDDLE_LEFT
    com.shinobicontrols.charts.Legend$Position MIDDLE_RIGHT -> MIDDLE_RIGHT
    com.shinobicontrols.charts.Legend$Position TOP_CENTER -> TOP_CENTER
    com.shinobicontrols.charts.Legend$Position TOP_LEFT -> TOP_LEFT
    com.shinobicontrols.charts.Legend$Position TOP_RIGHT -> TOP_RIGHT
    int a -> a
    com.shinobicontrols.charts.Legend$Position[] b -> b
    com.shinobicontrols.charts.Legend$Position[] values() -> values
    com.shinobicontrols.charts.Legend$Position valueOf(java.lang.String) -> valueOf
    int a() -> a
com.shinobicontrols.charts.Legend$SymbolAlignment -> com.shinobicontrols.charts.Legend$SymbolAlignment:
    com.shinobicontrols.charts.Legend$SymbolAlignment LEFT -> LEFT
    com.shinobicontrols.charts.Legend$SymbolAlignment RIGHT -> RIGHT
    com.shinobicontrols.charts.Legend$SymbolAlignment[] a -> a
    com.shinobicontrols.charts.Legend$SymbolAlignment[] values() -> values
    com.shinobicontrols.charts.Legend$SymbolAlignment valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.LegendStyle -> com.shinobicontrols.charts.LegendStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    com.shinobicontrols.charts.cx i -> i
    com.shinobicontrols.charts.cx j -> j
    com.shinobicontrols.charts.cx k -> k
    com.shinobicontrols.charts.cx l -> l
    com.shinobicontrols.charts.cx m -> m
    com.shinobicontrols.charts.cx n -> n
    com.shinobicontrols.charts.cx o -> o
    com.shinobicontrols.charts.cx p -> p
    com.shinobicontrols.charts.cx q -> q
    com.shinobicontrols.charts.cx r -> r
    com.shinobicontrols.charts.bc s -> s
    int getBackgroundColor() -> getBackgroundColor
    int getBorderColor() -> getBorderColor
    float getBorderWidth() -> getBorderWidth
    float getCornerRadius() -> getCornerRadius
    android.graphics.Typeface getTypeface() -> getTypeface
    int getTextColor() -> getTextColor
    float getTextSize() -> getTextSize
    float getSymbolLabelGap() -> getSymbolLabelGap
    float getPadding() -> getPadding
    com.shinobicontrols.charts.Legend$SymbolAlignment getSymbolAlignment() -> getSymbolAlignment
    float getSymbolCornerRadius() -> getSymbolCornerRadius
    float getSymbolWidth() -> getSymbolWidth
    int getTextAlignment() -> getTextAlignment
    android.graphics.Typeface getTitleTypeface() -> getTitleTypeface
    int getTitleTextColor() -> getTitleTextColor
    float getTitleTextSize() -> getTitleTextSize
    float getRowVerticalMargin() -> getRowVerticalMargin
    boolean areSymbolsShown() -> areSymbolsShown
    void setBackgroundColor(int) -> setBackgroundColor
    void setBorderColor(int) -> setBorderColor
    void setBorderWidth(float) -> setBorderWidth
    void setCornerRadius(float) -> setCornerRadius
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setTextColor(int) -> setTextColor
    void setTextSize(float) -> setTextSize
    void setSymbolLabelGap(float) -> setSymbolLabelGap
    void setPadding(float) -> setPadding
    void setSymbolsShown(boolean) -> setSymbolsShown
    void setSymbolAlignment(com.shinobicontrols.charts.Legend$SymbolAlignment) -> setSymbolAlignment
    void setSymbolCornerRadius(float) -> setSymbolCornerRadius
    void setSymbolWidth(float) -> setSymbolWidth
    void setTextAlignment(int) -> setTextAlignment
    void setTitleTypeface(android.graphics.Typeface) -> setTitleTypeface
    void setTitleTextColor(int) -> setTitleTextColor
    void setTitleTextSize(float) -> setTitleTextSize
    void setRowVerticalMargin(float) -> setRowVerticalMargin
    com.shinobicontrols.charts.bc a() -> a
com.shinobicontrols.charts.LineSeries -> com.shinobicontrols.charts.LineSeries:
    com.shinobicontrols.charts.bw a -> a
    com.shinobicontrols.charts.LineSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    android.graphics.drawable.Drawable a(float) -> a
    void a(com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> a
    void a(com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv) -> a
    com.shinobicontrols.charts.CartesianSeries$a c() -> c
    com.shinobicontrols.charts.bv a(com.shinobicontrols.charts.am,com.shinobicontrols.charts.bv) -> a
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.LineSeries$1 -> com.shinobicontrols.charts.LineSeries$1:
    int[] a -> a
com.shinobicontrols.charts.LineSeriesStyle -> com.shinobicontrols.charts.LineSeriesStyle:
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    com.shinobicontrols.charts.cx i -> i
    com.shinobicontrols.charts.cx j -> j
    com.shinobicontrols.charts.cx k -> k
    com.shinobicontrols.charts.PointStyle l -> l
    com.shinobicontrols.charts.PointStyle m -> m
    com.shinobicontrols.charts.cx n -> n
    com.shinobicontrols.charts.cx o -> o
    com.shinobicontrols.charts.cx a -> a
    void a(com.shinobicontrols.charts.SeriesStyle) -> a
    int getAreaColor() -> getAreaColor
    void setAreaColor(int) -> setAreaColor
    int getAreaColorBelowBaseline() -> getAreaColorBelowBaseline
    void setAreaColorBelowBaseline(int) -> setAreaColorBelowBaseline
    int getAreaColorGradient() -> getAreaColorGradient
    void setAreaColorGradient(int) -> setAreaColorGradient
    int getAreaColorGradientBelowBaseline() -> getAreaColorGradientBelowBaseline
    void setAreaColorGradientBelowBaseline(int) -> setAreaColorGradientBelowBaseline
    int getAreaLineColor() -> getAreaLineColor
    void setAreaLineColor(int) -> setAreaLineColor
    int getAreaLineColorBelowBaseline() -> getAreaLineColorBelowBaseline
    void setAreaLineColorBelowBaseline(int) -> setAreaLineColorBelowBaseline
    float getAreaLineWidth() -> getAreaLineWidth
    void setAreaLineWidth(float) -> setAreaLineWidth
    com.shinobicontrols.charts.SeriesStyle$FillStyle getFillStyle() -> getFillStyle
    void setFillStyle(com.shinobicontrols.charts.SeriesStyle$FillStyle) -> setFillStyle
    int getLineColor() -> getLineColor
    void setLineColor(int) -> setLineColor
    int getLineColorBelowBaseline() -> getLineColorBelowBaseline
    void setLineColorBelowBaseline(int) -> setLineColorBelowBaseline
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    com.shinobicontrols.charts.PointStyle getPointStyle() -> getPointStyle
    void setPointStyle(com.shinobicontrols.charts.PointStyle) -> setPointStyle
    com.shinobicontrols.charts.PointStyle getSelectedPointStyle() -> getSelectedPointStyle
    void setSelectedPointStyle(com.shinobicontrols.charts.PointStyle) -> setSelectedPointStyle
    boolean isLineShown() -> isLineShown
    void setLineShown(boolean) -> setLineShown
com.shinobicontrols.charts.LineSeriesStyle$a -> com.shinobicontrols.charts.LineSeriesStyle$a:
    com.shinobicontrols.charts.LineSeriesStyle$a a -> a
    com.shinobicontrols.charts.LineSeriesStyle$a b -> b
    com.shinobicontrols.charts.LineSeriesStyle$a[] c -> c
    com.shinobicontrols.charts.LineSeriesStyle$a[] values() -> values
    com.shinobicontrols.charts.LineSeriesStyle$a valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.MainTitleStyle -> com.shinobicontrols.charts.MainTitleStyle:
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.Title$CentersOn getCentersOn() -> getCentersOn
    void setCentersOn(com.shinobicontrols.charts.Title$CentersOn) -> setCentersOn
    boolean getOverlapsChart() -> getOverlapsChart
    void setOverlapsChart(boolean) -> setOverlapsChart
com.shinobicontrols.charts.MultiValueData -> com.shinobicontrols.charts.MultiValueData:
    java.lang.Object getOpen() -> getOpen
    java.lang.Object getHigh() -> getHigh
    java.lang.Object getLow() -> getLow
    java.lang.Object getClose() -> getClose
com.shinobicontrols.charts.MultiValueDataPoint -> com.shinobicontrols.charts.MultiValueDataPoint:
    java.lang.Object a -> a
    java.lang.Object b -> b
    java.lang.Object c -> c
    java.lang.Object d -> d
    java.lang.Object getOpen() -> getOpen
    java.lang.Object getHigh() -> getHigh
    java.lang.Object getLow() -> getLow
    java.lang.Object getClose() -> getClose
com.shinobicontrols.charts.NumberAxis -> com.shinobicontrols.charts.NumberAxis:
    int v -> v
    int w -> w
    com.shinobicontrols.charts.bm x -> x
    java.text.DecimalFormat y -> y
    android.graphics.PointF z -> z
    boolean a(java.lang.Object) -> a
    double b(java.lang.Object) -> b
    double a(java.lang.Double) -> a
    java.lang.Double h(double) -> h
    java.lang.Double transformUserValueToChartValue(java.lang.Double) -> transformUserValueToChartValue
    java.lang.Double transformChartValueToUserValue(java.lang.Double) -> transformChartValueToUserValue
    com.shinobicontrols.charts.Range a(java.lang.Double,java.lang.Double) -> a
    java.text.DecimalFormat getLabelFormat() -> getLabelFormat
    void setLabelFormat(java.text.DecimalFormat) -> setLabelFormat
    java.lang.String i() -> i
    void E() -> E
    int i(double) -> i
    int j(double) -> j
    java.lang.String getFormattedString(java.lang.Double) -> getFormattedString
    boolean F() -> F
    void c(int) -> c
    double a(int) -> a
    double b(int) -> b
    boolean d(double) -> d
    double a(double,boolean) -> a
    double b(double,boolean) -> b
    double b(java.lang.Double) -> b
    double z() -> z
    void c(java.lang.Double) -> c
    void d(java.lang.Double) -> d
    void r() -> r
    void s() -> s
    void f(java.lang.Object) -> f
    void e(java.lang.Object) -> e
    double d(java.lang.Object) -> d
    com.shinobicontrols.charts.Range a(java.lang.Comparable,java.lang.Comparable) -> a
    java.lang.String getFormattedString(java.lang.Comparable) -> getFormattedString
    java.lang.Comparable b(double) -> b
    double b(java.lang.Comparable) -> b
    java.lang.Comparable transformChartValueToUserValue(java.lang.Comparable) -> transformChartValueToUserValue
    java.lang.Comparable transformUserValueToChartValue(java.lang.Comparable) -> transformUserValueToChartValue
com.shinobicontrols.charts.NumberRange -> com.shinobicontrols.charts.NumberRange:
    void a(double,double) -> a
    java.lang.Double getMinimum() -> getMinimum
    java.lang.Double getMaximum() -> getMaximum
    com.shinobicontrols.charts.Range a() -> a
    com.shinobicontrols.charts.NumberRange b() -> b
    com.shinobicontrols.charts.Range c() -> c
    java.lang.Comparable getMaximum() -> getMaximum
    java.lang.Comparable getMinimum() -> getMinimum
com.shinobicontrols.charts.OHLCSeries -> com.shinobicontrols.charts.OHLCSeries:
    com.shinobicontrols.charts.OHLCSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    android.graphics.drawable.Drawable a(float) -> a
    com.shinobicontrols.charts.am a(com.shinobicontrols.charts.Data,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    com.shinobicontrols.charts.am b(com.shinobicontrols.charts.Data,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> b
    void a(com.shinobicontrols.charts.an,com.shinobicontrols.charts.am) -> a
    void b(com.shinobicontrols.charts.an,com.shinobicontrols.charts.am) -> b
    void a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    com.shinobicontrols.charts.NumberRange b(com.shinobicontrols.charts.Axis) -> b
    com.shinobicontrols.charts.NumberRange a(com.shinobicontrols.charts.NumberRange) -> a
    com.shinobicontrols.charts.CartesianSeries$a b() -> b
    com.shinobicontrols.charts.CartesianSeries$a c() -> c
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.OHLCSeriesStyle -> com.shinobicontrols.charts.OHLCSeriesStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    void a(com.shinobicontrols.charts.SeriesStyle) -> a
    int getRisingColor() -> getRisingColor
    void setRisingColor(int) -> setRisingColor
    int getRisingColorGradient() -> getRisingColorGradient
    void setRisingColorGradient(int) -> setRisingColorGradient
    int getFallingColor() -> getFallingColor
    void setFallingColor(int) -> setFallingColor
    int getFallingColorGradient() -> getFallingColorGradient
    void setFallingColorGradient(int) -> setFallingColorGradient
    float getTrunkWidth() -> getTrunkWidth
    void setTrunkWidth(float) -> setTrunkWidth
    float getArmWidth() -> getArmWidth
    void setArmWidth(float) -> setArmWidth
com.shinobicontrols.charts.PieDonutSeries -> com.shinobicontrols.charts.PieDonutSeries:
    com.shinobicontrols.charts.RadialSeries$DrawDirection e -> e
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    boolean f -> f
    float g -> g
    com.shinobicontrols.charts.NumberRange h -> h
    com.shinobicontrols.charts.ao i -> i
    android.text.TextPaint j -> j
    android.graphics.PointF c -> c
    android.graphics.Rect d -> d
    com.shinobicontrols.charts.n k -> k
    com.shinobicontrols.charts.n l -> l
    com.shinobicontrols.charts.ab v -> v
    java.lang.Float w -> w
    com.shinobicontrols.charts.e x -> x
    com.shinobicontrols.charts.PieDonutSeries$a y -> y
    void h() -> h
    void a(com.shinobicontrols.charts.an,java.lang.Object[]) -> a
    float a() -> a
    float b(float) -> b
    com.shinobicontrols.charts.RadialSeries$DrawDirection getDrawDirection() -> getDrawDirection
    void setDrawDirection(com.shinobicontrols.charts.RadialSeries$DrawDirection) -> setDrawDirection
    float getInnerRadius() -> getInnerRadius
    float getOuterRadius() -> getOuterRadius
    void setOuterRadius(float) -> setOuterRadius
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getSelectedPosition() -> getSelectedPosition
    void setSelectedPosition(java.lang.Float) -> setSelectedPosition
    android.graphics.Point a(android.graphics.Rect,int) -> a
    void a(boolean,int) -> a
    void a(android.graphics.Canvas,android.graphics.Rect) -> a
    java.lang.String a(int) -> a
    android.graphics.drawable.Drawable a(float) -> a
    android.graphics.drawable.Drawable a(int,float) -> a
    com.shinobicontrols.charts.bq a(double,double,java.lang.String) -> a
    void b() -> b
    void a(com.shinobicontrols.charts.bq,boolean) -> a
    void a(com.shinobicontrols.charts.bq) -> a
    void a(double,com.shinobicontrols.charts.d,com.shinobicontrols.charts.d,com.shinobicontrols.charts.d,com.shinobicontrols.charts.PieDonutSeries$a) -> a
    void a_() -> a_
    float a(com.shinobicontrols.charts.PieDonutSeries,float) -> a
com.shinobicontrols.charts.PieDonutSeries$a -> com.shinobicontrols.charts.PieDonutSeries$a:
    com.shinobicontrols.charts.PieDonutSeries e -> e
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    void a() -> a
    void a(com.shinobicontrols.charts.c) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(float,float,float) -> a
com.shinobicontrols.charts.PieDonutSeriesStyle -> com.shinobicontrols.charts.PieDonutSeriesStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    com.shinobicontrols.charts.cx i -> i
    com.shinobicontrols.charts.cx j -> j
    com.shinobicontrols.charts.cx k -> k
    com.shinobicontrols.charts.cx l -> l
    com.shinobicontrols.charts.cx m -> m
    void a(com.shinobicontrols.charts.SeriesStyle) -> a
    boolean isCrustShown() -> isCrustShown
    void setCrustShown(boolean) -> setCrustShown
    boolean isFlavorShown() -> isFlavorShown
    void setFlavorShown(boolean) -> setFlavorShown
    boolean areLabelsShown() -> areLabelsShown
    void setLabelsShown(boolean) -> setLabelsShown
    com.shinobicontrols.charts.RadialSeries$RadialEffect getChartEffect() -> getChartEffect
    void setChartEffect(com.shinobicontrols.charts.RadialSeries$RadialEffect) -> setChartEffect
    float getInitialRotation() -> getInitialRotation
    void setInitialRotation(float) -> setInitialRotation
    int crustColorAtIndex(int) -> crustColorAtIndex
    java.lang.Integer[] a() -> a
    void setCrustColors(int[]) -> setCrustColors
    float getCrustThickness() -> getCrustThickness
    void setCrustThickness(float) -> setCrustThickness
    int flavorColorAtIndex(int) -> flavorColorAtIndex
    java.lang.Integer[] b() -> b
    void setFlavorColors(int[]) -> setFlavorColors
    float getProtrusion() -> getProtrusion
    void setProtrusion(float) -> setProtrusion
    android.graphics.Typeface getLabelTypeface() -> getLabelTypeface
    void setLabelTypeface(android.graphics.Typeface) -> setLabelTypeface
    int getLabelTextColor() -> getLabelTextColor
    void setLabelTextColor(int) -> setLabelTextColor
    int getLabelBackgroundColor() -> getLabelBackgroundColor
    void setLabelBackgroundColor(int) -> setLabelBackgroundColor
    float getLabelTextSize() -> getLabelTextSize
    void setLabelTextSize(float) -> setLabelTextSize
com.shinobicontrols.charts.PieSeries -> com.shinobicontrols.charts.PieSeries:
    com.shinobicontrols.charts.PieSeriesStyle a(com.shinobicontrols.charts.cr,int,boolean) -> a
    float b(float) -> b
    void setSelectedPosition(java.lang.Float) -> setSelectedPosition
    float getSelectedPosition() -> getSelectedPosition
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setOuterRadius(float) -> setOuterRadius
    float getOuterRadius() -> getOuterRadius
    void setDrawDirection(com.shinobicontrols.charts.RadialSeries$DrawDirection) -> setDrawDirection
    com.shinobicontrols.charts.RadialSeries$DrawDirection getDrawDirection() -> getDrawDirection
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
com.shinobicontrols.charts.PieSeriesStyle -> com.shinobicontrols.charts.PieSeriesStyle:
    void setLabelTextSize(float) -> setLabelTextSize
    float getLabelTextSize() -> getLabelTextSize
    void setLabelBackgroundColor(int) -> setLabelBackgroundColor
    int getLabelBackgroundColor() -> getLabelBackgroundColor
    void setLabelTextColor(int) -> setLabelTextColor
    int getLabelTextColor() -> getLabelTextColor
    void setLabelTypeface(android.graphics.Typeface) -> setLabelTypeface
    android.graphics.Typeface getLabelTypeface() -> getLabelTypeface
    void setProtrusion(float) -> setProtrusion
    float getProtrusion() -> getProtrusion
    void setFlavorColors(int[]) -> setFlavorColors
    int flavorColorAtIndex(int) -> flavorColorAtIndex
    void setCrustThickness(float) -> setCrustThickness
    float getCrustThickness() -> getCrustThickness
    void setCrustColors(int[]) -> setCrustColors
    int crustColorAtIndex(int) -> crustColorAtIndex
    void setInitialRotation(float) -> setInitialRotation
    float getInitialRotation() -> getInitialRotation
    void setChartEffect(com.shinobicontrols.charts.RadialSeries$RadialEffect) -> setChartEffect
    com.shinobicontrols.charts.RadialSeries$RadialEffect getChartEffect() -> getChartEffect
    void setLabelsShown(boolean) -> setLabelsShown
    boolean areLabelsShown() -> areLabelsShown
    void setFlavorShown(boolean) -> setFlavorShown
    boolean isFlavorShown() -> isFlavorShown
    void setCrustShown(boolean) -> setCrustShown
    boolean isCrustShown() -> isCrustShown
com.shinobicontrols.charts.PointStyle -> com.shinobicontrols.charts.PointStyle:
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    com.shinobicontrols.charts.cx i -> i
    com.shinobicontrols.charts.cx j -> j
    com.shinobicontrols.charts.SeriesStyle a -> a
    void a(com.shinobicontrols.charts.PointStyle) -> a
    int getColor() -> getColor
    void setColor(int) -> setColor
    int getColorBelowBaseline() -> getColorBelowBaseline
    void setColorBelowBaseline(int) -> setColorBelowBaseline
    float a() -> a
    void a(float) -> a
    int getInnerColor() -> getInnerColor
    void setInnerColor(int) -> setInnerColor
    int getInnerColorBelowBaseline() -> getInnerColorBelowBaseline
    void setInnerColorBelowBaseline(int) -> setInnerColorBelowBaseline
    float getInnerRadius() -> getInnerRadius
    void setInnerRadius(float) -> setInnerRadius
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    boolean arePointsShown() -> arePointsShown
    void setPointsShown(boolean) -> setPointsShown
    android.graphics.drawable.Drawable b() -> b
    void a(android.graphics.drawable.Drawable) -> a
    void c() -> c
com.shinobicontrols.charts.PropertyChangedEvent -> com.shinobicontrols.charts.PropertyChangedEvent:
    com.shinobicontrols.charts.ad$b a -> a
    com.shinobicontrols.charts.ad$b a() -> a
    void a(com.shinobicontrols.charts.PropertyChangedEvent$Handler) -> a
    void b(com.shinobicontrols.charts.ad$a) -> b
com.shinobicontrols.charts.PropertyChangedEvent$Handler -> com.shinobicontrols.charts.PropertyChangedEvent$Handler:
    void onPropertyChanged() -> onPropertyChanged
com.shinobicontrols.charts.RadialSeries -> com.shinobicontrols.charts.RadialSeries:
com.shinobicontrols.charts.RadialSeries$DrawDirection -> com.shinobicontrols.charts.RadialSeries$DrawDirection:
    com.shinobicontrols.charts.RadialSeries$DrawDirection CLOCKWISE -> CLOCKWISE
    com.shinobicontrols.charts.RadialSeries$DrawDirection ANTICLOCKWISE -> ANTICLOCKWISE
    com.shinobicontrols.charts.RadialSeries$DrawDirection[] a -> a
    com.shinobicontrols.charts.RadialSeries$DrawDirection[] values() -> values
    com.shinobicontrols.charts.RadialSeries$DrawDirection valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.RadialSeries$RadialEffect -> com.shinobicontrols.charts.RadialSeries$RadialEffect:
    com.shinobicontrols.charts.RadialSeries$RadialEffect FLAT -> FLAT
    com.shinobicontrols.charts.RadialSeries$RadialEffect BEVELLED -> BEVELLED
    com.shinobicontrols.charts.RadialSeries$RadialEffect BEVELLED_LIGHT -> BEVELLED_LIGHT
    com.shinobicontrols.charts.RadialSeries$RadialEffect ROUNDED -> ROUNDED
    com.shinobicontrols.charts.RadialSeries$RadialEffect ROUNDED_LIGHT -> ROUNDED_LIGHT
    com.shinobicontrols.charts.RadialSeries$RadialEffect DEFAULT -> DEFAULT
    int a -> a
    com.shinobicontrols.charts.RadialSeries$RadialEffect[] b -> b
    com.shinobicontrols.charts.RadialSeries$RadialEffect[] values() -> values
    com.shinobicontrols.charts.RadialSeries$RadialEffect valueOf(java.lang.String) -> valueOf
    int getXmlValue() -> getXmlValue
com.shinobicontrols.charts.Range -> com.shinobicontrols.charts.Range:
    double a -> a
    double b -> b
    boolean a(com.shinobicontrols.charts.Range) -> a
    boolean b(com.shinobicontrols.charts.Range) -> b
    java.lang.Comparable getMinimum() -> getMinimum
    java.lang.Comparable getMaximum() -> getMaximum
    double getSpan() -> getSpan
    double d() -> d
    void a(double) -> a
    void c(com.shinobicontrols.charts.Range) -> c
    boolean equals(java.lang.Object) -> equals
    boolean d(com.shinobicontrols.charts.Range) -> d
    boolean a() -> a
    boolean e() -> e
    boolean b(double,double) -> b
    com.shinobicontrols.charts.Range c() -> c
com.shinobicontrols.charts.SChartGLDrawer -> com.shinobicontrols.charts.SChartGLDrawer:
    long nativeHandle -> nativeHandle
    void alloc(boolean,com.shinobicontrols.charts.SChartGLErrorHandler) -> alloc
    void delete() -> delete
    void setFrameBufferSize(int,int) -> setFrameBufferSize
    void beginRender(boolean) -> beginRender
    boolean endRender(com.shinobicontrols.charts.AnimationManager) -> endRender
    void drawRadialSlice(int,com.shinobicontrols.charts.AnimatableSeries,float,float,float,float,float,int,int,boolean,float,int,float) -> drawRadialSlice
    void drawBarColumnFill(float[],com.shinobicontrols.charts.AnimatableSeries,float[],int,int,int,int,int,float,float,int,boolean,float[]) -> drawBarColumnFill
    void drawBarColumnLine(float[],com.shinobicontrols.charts.AnimatableSeries,float[],int,int,int,boolean,boolean,float,float,float,int,float[]) -> drawBarColumnLine
    void drawHorizontalFill(float[],com.shinobicontrols.charts.AnimatableSeries,int,int,int,int,int,boolean,boolean,float,float,float,int,boolean,float[]) -> drawHorizontalFill
    void drawLineStrip(float[],com.shinobicontrols.charts.AnimatableSeries,int,int,int,float,float,int,float[]) -> drawLineStrip
    void drawDataPoints(float[],com.shinobicontrols.charts.AnimatableSeries,int[],int,int,int,float,float[],float,float,int,float[],boolean) -> drawDataPoints
    void drawBandSeriesFill(float[],com.shinobicontrols.charts.AnimatableSeries,float[],int,int,int,int,int,float[]) -> drawBandSeriesFill
    void drawCandlesticks(float[],com.shinobicontrols.charts.AnimatableSeries,int,int[],int[],int,int,boolean,boolean,float,float,float,int,float,float[]) -> drawCandlesticks
    void drawOHLCPoints(float[],com.shinobicontrols.charts.AnimatableSeries,int,int[],int[],int,float,float,float,float[]) -> drawOHLCPoints
    boolean getPerformCalculations() -> getPerformCalculations
    void setPerformCalculations(boolean) -> setPerformCalculations
    void a() -> a
com.shinobicontrols.charts.SChartGLErrorHandler -> com.shinobicontrols.charts.SChartGLErrorHandler:
    void logMessageImpl(java.lang.String) -> logMessageImpl
    void handleErrorImpl(java.lang.String) -> handleErrorImpl
com.shinobicontrols.charts.SelectableData -> com.shinobicontrols.charts.SelectableData:
    boolean getSelected() -> getSelected
com.shinobicontrols.charts.Series -> com.shinobicontrols.charts.Series:
    com.shinobicontrols.charts.DataAdapter m -> m
    com.shinobicontrols.charts.an n -> n
    com.shinobicontrols.charts.ai a -> a
    com.shinobicontrols.charts.ak b -> b
    com.shinobicontrols.charts.Series$c c -> c
    com.shinobicontrols.charts.Series$b d -> d
    com.shinobicontrols.charts.u o -> o
    com.shinobicontrols.charts.cj p -> p
    com.shinobicontrols.charts.SeriesStyle q -> q
    com.shinobicontrols.charts.SeriesStyle r -> r
    com.shinobicontrols.charts.aj e -> e
    com.shinobicontrols.charts.aj f -> f
    com.shinobicontrols.charts.Series$SelectionMode s -> s
    com.shinobicontrols.charts.AnimatableSeries t -> t
    com.shinobicontrols.charts.ch u -> u
    boolean g -> g
    java.lang.String h -> h
    com.shinobicontrols.charts.DataAdapter getDataAdapter() -> getDataAdapter
    void setDataAdapter(com.shinobicontrols.charts.DataAdapter) -> setDataAdapter
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isPointSelected(int) -> isPointSelected
    void setPointSelected(boolean,int) -> setPointSelected
    void a(boolean,int) -> a
    boolean a(com.shinobicontrols.charts.am,boolean) -> a
    com.shinobicontrols.charts.SeriesStyle getStyle() -> getStyle
    void setStyle(com.shinobicontrols.charts.SeriesStyle) -> setStyle
    com.shinobicontrols.charts.SeriesStyle getSelectedStyle() -> getSelectedStyle
    void setSelectedStyle(com.shinobicontrols.charts.SeriesStyle) -> setSelectedStyle
    void a(com.shinobicontrols.charts.u) -> a
    com.shinobicontrols.charts.ShinobiChart getChart() -> getChart
    void a(com.shinobicontrols.charts.cr,int) -> a
    com.shinobicontrols.charts.SeriesStyle b(com.shinobicontrols.charts.cr,int,boolean) -> b
    void l() -> l
    void h() -> h
    com.shinobicontrols.charts.Axis getXAxis() -> getXAxis
    com.shinobicontrols.charts.Axis getYAxis() -> getYAxis
    void a_() -> a_
    void m() -> m
    void n() -> n
    com.shinobicontrols.charts.aj a(com.shinobicontrols.charts.cw$a) -> a
    void a(com.shinobicontrols.charts.Axis) -> a
    void a(com.shinobicontrols.charts.ch) -> a
    com.shinobicontrols.charts.Series$SelectionMode getSelectionMode() -> getSelectionMode
    void setSelectionMode(com.shinobicontrols.charts.Series$SelectionMode) -> setSelectionMode
    boolean isShownInLegend() -> isShownInLegend
    void setShownInLegend(boolean) -> setShownInLegend
    java.lang.String getTitle() -> getTitle
    android.graphics.drawable.Drawable a(float) -> a
    void setTitle(java.lang.String) -> setTitle
    void a(android.graphics.Canvas,android.graphics.Rect) -> a
    boolean o() -> o
com.shinobicontrols.charts.Series$1 -> com.shinobicontrols.charts.Series$1:
com.shinobicontrols.charts.Series$Orientation -> com.shinobicontrols.charts.Series$Orientation:
    com.shinobicontrols.charts.Series$Orientation HORIZONTAL -> HORIZONTAL
    com.shinobicontrols.charts.Series$Orientation VERTICAL -> VERTICAL
    int a -> a
    com.shinobicontrols.charts.Series$Orientation[] b -> b
    com.shinobicontrols.charts.Series$Orientation[] values() -> values
    com.shinobicontrols.charts.Series$Orientation valueOf(java.lang.String) -> valueOf
    int a() -> a
com.shinobicontrols.charts.Series$SelectionMode -> com.shinobicontrols.charts.Series$SelectionMode:
    com.shinobicontrols.charts.Series$SelectionMode NONE -> NONE
    com.shinobicontrols.charts.Series$SelectionMode SERIES -> SERIES
    com.shinobicontrols.charts.Series$SelectionMode POINT_SINGLE -> POINT_SINGLE
    com.shinobicontrols.charts.Series$SelectionMode POINT_MULTIPLE -> POINT_MULTIPLE
    com.shinobicontrols.charts.Series$SelectionMode[] a -> a
    com.shinobicontrols.charts.Series$SelectionMode[] values() -> values
    com.shinobicontrols.charts.Series$SelectionMode valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Series$a -> com.shinobicontrols.charts.Series$a:
    double a -> a
    com.shinobicontrols.charts.am b -> b
    com.shinobicontrols.charts.Series c -> c
    com.shinobicontrols.charts.bv d -> d
    double a() -> a
    void a(double) -> a
    com.shinobicontrols.charts.am b() -> b
    void a(com.shinobicontrols.charts.am) -> a
    com.shinobicontrols.charts.Series c() -> c
    com.shinobicontrols.charts.bv d() -> d
    void e() -> e
    boolean a(com.shinobicontrols.charts.Series$a) -> a
    boolean b(com.shinobicontrols.charts.Series$a) -> b
com.shinobicontrols.charts.Series$b -> com.shinobicontrols.charts.Series$b:
    com.shinobicontrols.charts.Series a -> a
    void onPropertyChanged() -> onPropertyChanged
com.shinobicontrols.charts.Series$c -> com.shinobicontrols.charts.Series$c:
    com.shinobicontrols.charts.Series b -> b
    com.shinobicontrols.charts.Series a -> a
    void a() -> a
com.shinobicontrols.charts.SeriesStyle -> com.shinobicontrols.charts.SeriesStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.ai b -> b
    void a(com.shinobicontrols.charts.SeriesStyle) -> a
    boolean c() -> c
    void a(boolean) -> a
    void d() -> d
    com.shinobicontrols.charts.aj a(com.shinobicontrols.charts.PropertyChangedEvent$Handler) -> a
com.shinobicontrols.charts.SeriesStyle$FillStyle -> com.shinobicontrols.charts.SeriesStyle$FillStyle:
    com.shinobicontrols.charts.SeriesStyle$FillStyle NONE -> NONE
    com.shinobicontrols.charts.SeriesStyle$FillStyle FLAT -> FLAT
    com.shinobicontrols.charts.SeriesStyle$FillStyle GRADIENT -> GRADIENT
    com.shinobicontrols.charts.SeriesStyle$FillStyle[] a -> a
    com.shinobicontrols.charts.SeriesStyle$FillStyle[] values() -> values
    com.shinobicontrols.charts.SeriesStyle$FillStyle valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.ShinobiChart -> com.shinobicontrols.charts.ShinobiChart:
    void addSeries(com.shinobicontrols.charts.Series) -> addSeries
    void addSeries(com.shinobicontrols.charts.Series,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> addSeries
    void removeSeries(com.shinobicontrols.charts.Series) -> removeSeries
    java.util.List getSeries() -> getSeries
    com.shinobicontrols.charts.Axis getXAxisForSeries(com.shinobicontrols.charts.Series) -> getXAxisForSeries
    com.shinobicontrols.charts.Axis getYAxisForSeries(com.shinobicontrols.charts.Series) -> getYAxisForSeries
    java.util.List getSeriesForAxis(com.shinobicontrols.charts.Axis) -> getSeriesForAxis
    java.util.List getAllAxes() -> getAllAxes
    java.util.List getAllXAxes() -> getAllXAxes
    java.util.List getAllYAxes() -> getAllYAxes
    android.graphics.Rect getCanvasRect() -> getCanvasRect
    android.graphics.Rect getPlotAreaRect() -> getPlotAreaRect
    java.lang.String getInfo() -> getInfo
    com.shinobicontrols.charts.Legend getLegend() -> getLegend
    com.shinobicontrols.charts.Crosshair getCrosshair() -> getCrosshair
    java.util.List getPrimaryAxes() -> getPrimaryAxes
    com.shinobicontrols.charts.Axis getXAxis() -> getXAxis
    void setXAxis(com.shinobicontrols.charts.Axis) -> setXAxis
    com.shinobicontrols.charts.Axis getYAxis() -> getYAxis
    void setYAxis(com.shinobicontrols.charts.Axis) -> setYAxis
    boolean isRadial() -> isRadial
    boolean isSeriesSelectionSingle() -> isSeriesSelectionSingle
    void setSeriesSelectionSingle(boolean) -> setSeriesSelectionSingle
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void addXAxis(com.shinobicontrols.charts.Axis) -> addXAxis
    void addYAxis(com.shinobicontrols.charts.Axis) -> addYAxis
    com.shinobicontrols.charts.ChartStyle getStyle() -> getStyle
    void setStyle(com.shinobicontrols.charts.ChartStyle) -> setStyle
    com.shinobicontrols.charts.MainTitleStyle getTitleStyle() -> getTitleStyle
    void setTitleStyle(com.shinobicontrols.charts.MainTitleStyle) -> setTitleStyle
    void redrawChart() -> redrawChart
    void removeXAxis(com.shinobicontrols.charts.Axis) -> removeXAxis
    void removeYAxis(com.shinobicontrols.charts.Axis) -> removeYAxis
    void setLicenseKey(java.lang.String) -> setLicenseKey
    void setOnGestureListener(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> setOnGestureListener
    void setOnAxisMotionStateChangeListener(com.shinobicontrols.charts.ShinobiChart$OnAxisMotionStateChangeListener) -> setOnAxisMotionStateChangeListener
    void setOnAxisRangeChangeListener(com.shinobicontrols.charts.ShinobiChart$OnAxisRangeChangeListener) -> setOnAxisRangeChangeListener
    void setOnCrosshairListener(com.shinobicontrols.charts.ShinobiChart$OnCrosshairListener) -> setOnCrosshairListener
    void setOnInternalLayoutListener(com.shinobicontrols.charts.ShinobiChart$OnInternalLayoutListener) -> setOnInternalLayoutListener
    void setOnSeriesSelectionListener(com.shinobicontrols.charts.ShinobiChart$OnSeriesSelectionListener) -> setOnSeriesSelectionListener
com.shinobicontrols.charts.ShinobiChart$OnAxisMotionStateChangeListener -> com.shinobicontrols.charts.ShinobiChart$OnAxisMotionStateChangeListener:
    void onAxisMotionStateChange(com.shinobicontrols.charts.Axis) -> onAxisMotionStateChange
com.shinobicontrols.charts.ShinobiChart$OnAxisRangeChangeListener -> com.shinobicontrols.charts.ShinobiChart$OnAxisRangeChangeListener:
    void onAxisRangeChange(com.shinobicontrols.charts.Axis) -> onAxisRangeChange
com.shinobicontrols.charts.ShinobiChart$OnCrosshairListener -> com.shinobicontrols.charts.ShinobiChart$OnCrosshairListener:
    void onCrosshairPositionChanged(com.shinobicontrols.charts.ShinobiChart) -> onCrosshairPositionChanged
    void onCrosshairActivationChanged(com.shinobicontrols.charts.ShinobiChart) -> onCrosshairActivationChanged
com.shinobicontrols.charts.ShinobiChart$OnGestureListener -> com.shinobicontrols.charts.ShinobiChart$OnGestureListener:
    void onDoubleTapDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapDown
    void onDoubleTapUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapUp
    void onLongTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchDown
    void onLongTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchUp
    void onSingleTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchDown
    void onSingleTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchUp
    void onSwipe(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSwipe
    void onSwipeEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onSwipeEnd
    void onSecondTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchDown
    void onSecondTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchUp
    void onPinch(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> onPinch
    void onPinchEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onPinchEnd
com.shinobicontrols.charts.ShinobiChart$OnInternalLayoutListener -> com.shinobicontrols.charts.ShinobiChart$OnInternalLayoutListener:
    void onInternalLayout(com.shinobicontrols.charts.ShinobiChart) -> onInternalLayout
com.shinobicontrols.charts.ShinobiChart$OnSeriesSelectionListener -> com.shinobicontrols.charts.ShinobiChart$OnSeriesSelectionListener:
    void onSeriesSelectionStateChanged(com.shinobicontrols.charts.Series) -> onSeriesSelectionStateChanged
    void onPointSelectionStateChanged(com.shinobicontrols.charts.Series,int) -> onPointSelectionStateChanged
com.shinobicontrols.charts.SimpleDataAdapter -> com.shinobicontrols.charts.SimpleDataAdapter:
    boolean add(com.shinobicontrols.charts.Data) -> add
    void add(int,com.shinobicontrols.charts.Data) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    com.shinobicontrols.charts.Data remove(int) -> remove
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    com.shinobicontrols.charts.Data set(int,com.shinobicontrols.charts.Data) -> set
com.shinobicontrols.charts.SupportChartFragment -> com.shinobicontrols.charts.SupportChartFragment:
    com.shinobicontrols.charts.ShinobiChart getShinobiChart() -> getShinobiChart
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    com.shinobicontrols.charts.u a() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
com.shinobicontrols.charts.SupportChartFragmentBase -> com.shinobicontrols.charts.SupportChartFragmentBase:
    com.shinobicontrols.charts.u a -> a
    com.shinobicontrols.charts.ShinobiChart getShinobiChart() -> getShinobiChart
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    com.shinobicontrols.charts.u a() -> a
    void onDestroyView() -> onDestroyView
    void onResume() -> onResume
    void onPause() -> onPause
com.shinobicontrols.charts.TickMark -> com.shinobicontrols.charts.TickMark:
    com.shinobicontrols.charts.Axis i -> i
    double a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    int j -> j
    int k -> k
    android.graphics.Typeface l -> l
    float m -> m
    double n -> n
    android.graphics.Paint o -> o
    android.text.TextPaint p -> p
    android.graphics.Paint q -> q
    android.graphics.Paint r -> r
    java.lang.Integer s -> s
    java.lang.Integer t -> t
    java.lang.Integer u -> u
    java.lang.Integer v -> v
    android.graphics.Point w -> w
    int x -> x
    android.graphics.Rect g -> g
    android.graphics.Rect y -> y
    android.graphics.Path z -> z
    com.shinobicontrols.charts.TickMark$a h -> h
    void a(android.graphics.Canvas,com.shinobicontrols.charts.cu,int,com.shinobicontrols.charts.Axis$c) -> a
    void a(android.graphics.Canvas,com.shinobicontrols.charts.Axis$c,int,boolean) -> a
    void a(android.graphics.Canvas,com.shinobicontrols.charts.Axis$c,int) -> a
    void b(android.graphics.Canvas,com.shinobicontrols.charts.Axis$c,int) -> b
    void a(android.graphics.Canvas,android.graphics.PointF,android.graphics.PointF,com.shinobicontrols.charts.Axis$c) -> a
    void a() -> a
com.shinobicontrols.charts.TickMark$ClippingMode -> com.shinobicontrols.charts.TickMark$ClippingMode:
    com.shinobicontrols.charts.TickMark$ClippingMode NEITHER_PERSIST -> NEITHER_PERSIST
    com.shinobicontrols.charts.TickMark$ClippingMode TICKS_AND_LABELS_PERSIST -> TICKS_AND_LABELS_PERSIST
    com.shinobicontrols.charts.TickMark$ClippingMode TICKS_PERSIST -> TICKS_PERSIST
    com.shinobicontrols.charts.TickMark$ClippingMode[] a -> a
    com.shinobicontrols.charts.TickMark$ClippingMode[] values() -> values
    com.shinobicontrols.charts.TickMark$ClippingMode valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.TickMark$Orientation -> com.shinobicontrols.charts.TickMark$Orientation:
    com.shinobicontrols.charts.TickMark$Orientation HORIZONTAL -> HORIZONTAL
    com.shinobicontrols.charts.TickMark$Orientation VERTICAL -> VERTICAL
    com.shinobicontrols.charts.TickMark$Orientation DIAGONAL -> DIAGONAL
    int a -> a
    com.shinobicontrols.charts.TickMark$Orientation[] b -> b
    com.shinobicontrols.charts.TickMark$Orientation[] values() -> values
    com.shinobicontrols.charts.TickMark$Orientation valueOf(java.lang.String) -> valueOf
    int getXmlValue() -> getXmlValue
com.shinobicontrols.charts.TickMark$a -> com.shinobicontrols.charts.TickMark$a:
    int a(com.shinobicontrols.charts.TickMark,com.shinobicontrols.charts.TickMark) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.shinobicontrols.charts.TickStyle -> com.shinobicontrols.charts.TickStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx g -> g
    com.shinobicontrols.charts.cx h -> h
    com.shinobicontrols.charts.cx i -> i
    com.shinobicontrols.charts.cx j -> j
    com.shinobicontrols.charts.cx k -> k
    com.shinobicontrols.charts.cx l -> l
    void a(com.shinobicontrols.charts.TickStyle) -> a
    int getLabelColor() -> getLabelColor
    android.graphics.Typeface getLabelTypeface() -> getLabelTypeface
    float getLabelTextSize() -> getLabelTextSize
    int getLabelTextShadowColor() -> getLabelTextShadowColor
    int getLineColor() -> getLineColor
    float getLineLength() -> getLineLength
    float getLineWidth() -> getLineWidth
    float getTickGap() -> getTickGap
    com.shinobicontrols.charts.TickMark$Orientation getLabelOrientation() -> getLabelOrientation
    boolean areLabelsShown() -> areLabelsShown
    boolean areMajorTicksShown() -> areMajorTicksShown
    boolean areMinorTicksShown() -> areMinorTicksShown
    void setLabelColor(int) -> setLabelColor
    void setLabelTypeface(android.graphics.Typeface) -> setLabelTypeface
    void setLabelTextSize(float) -> setLabelTextSize
    void setLabelTextShadowColor(int) -> setLabelTextShadowColor
    void setLineColor(int) -> setLineColor
    void setLineLength(float) -> setLineLength
    void setLineWidth(float) -> setLineWidth
    void setLabelsShown(boolean) -> setLabelsShown
    void setMajorTicksShown(boolean) -> setMajorTicksShown
    void setMinorTicksShown(boolean) -> setMinorTicksShown
    void setTickGap(float) -> setTickGap
    void setLabelOrientation(com.shinobicontrols.charts.TickMark$Orientation) -> setLabelOrientation
com.shinobicontrols.charts.Title -> com.shinobicontrols.charts.Title:
    boolean a -> a
    com.shinobicontrols.charts.Title$Orientation b -> b
    float c -> c
    void a(com.shinobicontrols.charts.Title$Orientation) -> a
    void a(com.shinobicontrols.charts.TitleStyle) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
com.shinobicontrols.charts.Title$CentersOn -> com.shinobicontrols.charts.Title$CentersOn:
    com.shinobicontrols.charts.Title$CentersOn CANVAS -> CANVAS
    com.shinobicontrols.charts.Title$CentersOn CHART -> CHART
    com.shinobicontrols.charts.Title$CentersOn PLOTTING_AREA -> PLOTTING_AREA
    com.shinobicontrols.charts.Title$CentersOn[] a -> a
    com.shinobicontrols.charts.Title$CentersOn[] values() -> values
    com.shinobicontrols.charts.Title$CentersOn valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.Title$Orientation -> com.shinobicontrols.charts.Title$Orientation:
    com.shinobicontrols.charts.Title$Orientation HORIZONTAL -> HORIZONTAL
    com.shinobicontrols.charts.Title$Orientation VERTICAL -> VERTICAL
    int a -> a
    com.shinobicontrols.charts.Title$Orientation[] b -> b
    com.shinobicontrols.charts.Title$Orientation[] values() -> values
    com.shinobicontrols.charts.Title$Orientation valueOf(java.lang.String) -> valueOf
    int getXmlValue() -> getXmlValue
com.shinobicontrols.charts.Title$Position -> com.shinobicontrols.charts.Title$Position:
    com.shinobicontrols.charts.Title$Position BOTTOM_OR_LEFT -> BOTTOM_OR_LEFT
    com.shinobicontrols.charts.Title$Position CENTER -> CENTER
    com.shinobicontrols.charts.Title$Position TOP_OR_RIGHT -> TOP_OR_RIGHT
    int a -> a
    int b -> b
    int c -> c
    com.shinobicontrols.charts.Title$Position[] d -> d
    com.shinobicontrols.charts.Title$Position[] values() -> values
    com.shinobicontrols.charts.Title$Position valueOf(java.lang.String) -> valueOf
    int getXmlValue() -> getXmlValue
    int a() -> a
    int b() -> b
com.shinobicontrols.charts.TitleStyle -> com.shinobicontrols.charts.TitleStyle:
    com.shinobicontrols.charts.cx a -> a
    com.shinobicontrols.charts.cx b -> b
    com.shinobicontrols.charts.cx c -> c
    com.shinobicontrols.charts.cx f -> f
    com.shinobicontrols.charts.cx d -> d
    com.shinobicontrols.charts.cx e -> e
    void a(com.shinobicontrols.charts.TitleStyle) -> a
    int getBackgroundColor() -> getBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    android.graphics.Typeface getTypeface() -> getTypeface
    void setTypeface(android.graphics.Typeface) -> setTypeface
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float a() -> a
    void a(float) -> a
    com.shinobicontrols.charts.Title$Position getPosition() -> getPosition
    void setPosition(com.shinobicontrols.charts.Title$Position) -> setPosition
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
com.shinobicontrols.charts.VectorF -> com.shinobicontrols.charts.VectorF:
    com.shinobicontrols.charts.VectorF a(android.graphics.PointF,android.graphics.PointF) -> a
    float a() -> a
    com.shinobicontrols.charts.VectorF b() -> b
com.shinobicontrols.charts.XmlEnum -> com.shinobicontrols.charts.XmlEnum:
com.shinobicontrols.charts.XmlEnum$Util -> com.shinobicontrols.charts.XmlEnum$Util:
com.shinobicontrols.charts.a -> com.shinobicontrols.charts.a:
    void a(android.view.View,android.graphics.drawable.Drawable) -> a
    com.shinobicontrols.charts.bs a(android.content.Context,com.shinobicontrols.charts.u) -> a
com.shinobicontrols.charts.aa -> com.shinobicontrols.charts.aa:
    com.shinobicontrols.charts.ShinobiChart$OnGestureListener a -> a
    com.shinobicontrols.charts.u b -> b
    com.shinobicontrols.charts.x c -> c
    com.shinobicontrols.charts.VectorF d -> d
    boolean e -> e
    boolean a(int,com.shinobicontrols.charts.bx,com.shinobicontrols.charts.bx,int,com.shinobicontrols.charts.bx) -> a
    void a(com.shinobicontrols.charts.bx,com.shinobicontrols.charts.bx) -> a
    void b(com.shinobicontrols.charts.bx,com.shinobicontrols.charts.bx) -> b
    boolean a(float,float) -> a
    android.graphics.PointF a(android.graphics.PointF,android.graphics.PointF) -> a
    com.shinobicontrols.charts.VectorF a(com.shinobicontrols.charts.VectorF,com.shinobicontrols.charts.VectorF) -> a
    void c(com.shinobicontrols.charts.bx,com.shinobicontrols.charts.bx) -> c
com.shinobicontrols.charts.ab -> com.shinobicontrols.charts.ab:
    double a(double) -> a
com.shinobicontrols.charts.ac -> com.shinobicontrols.charts.ac:
    double a(double) -> a
com.shinobicontrols.charts.ad -> com.shinobicontrols.charts.ad:
    boolean equals(java.lang.Object) -> equals
    com.shinobicontrols.charts.ad$b a() -> a
    int hashCode() -> hashCode
    void a(com.shinobicontrols.charts.ad$a) -> a
    void a(java.util.Set) -> a
    void b(com.shinobicontrols.charts.ad$a) -> b
    com.shinobicontrols.charts.ad$a c(com.shinobicontrols.charts.ad$a) -> c
com.shinobicontrols.charts.ad$a -> com.shinobicontrols.charts.ad$a:
com.shinobicontrols.charts.ad$b -> com.shinobicontrols.charts.ad$b:
com.shinobicontrols.charts.ae -> com.shinobicontrols.charts.ae:
    com.shinobicontrols.charts.ae a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float a(int) -> a
com.shinobicontrols.charts.af -> com.shinobicontrols.charts.af:
    float a -> a
    float b -> b
    android.util.DisplayMetrics c -> c
    float a() -> a
    float b() -> b
    android.util.DisplayMetrics c() -> c
    void a(float,float,android.util.DisplayMetrics) -> a
    void a(com.shinobicontrols.charts.al) -> a
    void a(java.lang.Object) -> a
com.shinobicontrols.charts.ag -> com.shinobicontrols.charts.ag:
    java.util.List a -> a
    void a(java.lang.Object) -> a
    void d() -> d
    void e() -> e
com.shinobicontrols.charts.ah -> com.shinobicontrols.charts.ah:
com.shinobicontrols.charts.ai -> com.shinobicontrols.charts.ai:
    java.util.HashMap a -> a
    com.shinobicontrols.charts.aj a(com.shinobicontrols.charts.ad$b,com.shinobicontrols.charts.ad$a) -> a
    void a(com.shinobicontrols.charts.ad) -> a
    com.shinobicontrols.charts.aj a(java.util.HashSet,com.shinobicontrols.charts.ad$a) -> a
    void a(com.shinobicontrols.charts.ad$b,com.shinobicontrols.charts.ad) -> a
com.shinobicontrols.charts.ai$1 -> com.shinobicontrols.charts.ai$1:
    java.util.HashSet a -> a
    com.shinobicontrols.charts.ad$a b -> b
    com.shinobicontrols.charts.ai c -> c
    void a() -> a
com.shinobicontrols.charts.aj -> com.shinobicontrols.charts.aj:
    void a() -> a
com.shinobicontrols.charts.ak -> com.shinobicontrols.charts.ak:
    java.util.HashSet a -> a
    void a(com.shinobicontrols.charts.aj) -> a
    void a() -> a
com.shinobicontrols.charts.al -> com.shinobicontrols.charts.al:
    void a(float,float,android.util.DisplayMetrics) -> a
com.shinobicontrols.charts.am -> com.shinobicontrols.charts.am:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    int e -> e
    double f -> f
    double g -> g
    boolean h -> h
    int i -> i
    java.util.Map j -> j
    com.shinobicontrols.charts.am$a k -> k
    com.shinobicontrols.charts.am$b l -> l
    void a(double,double,double,double) -> a
    void a(double,double) -> a
    boolean a() -> a
com.shinobicontrols.charts.am$a -> com.shinobicontrols.charts.am$a:
    int a(com.shinobicontrols.charts.am,com.shinobicontrols.charts.am) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.shinobicontrols.charts.am$b -> com.shinobicontrols.charts.am$b:
    int a(com.shinobicontrols.charts.am,com.shinobicontrols.charts.am) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.shinobicontrols.charts.an -> com.shinobicontrols.charts.an:
    com.shinobicontrols.charts.NumberRange a -> a
    com.shinobicontrols.charts.NumberRange b -> b
    com.shinobicontrols.charts.am[] c -> c
    java.lang.Object[] a(com.shinobicontrols.charts.DataAdapter) -> a
    void a(int) -> a
    int a() -> a
com.shinobicontrols.charts.ao -> com.shinobicontrols.charts.ao:
    android.graphics.Paint a -> a
    float b -> b
    float c -> c
    java.lang.String d -> d
    float e -> e
    android.graphics.Typeface f -> f
    void a(android.graphics.PointF,java.lang.String,float,android.graphics.Typeface,com.shinobicontrols.charts.u) -> a
com.shinobicontrols.charts.ap -> com.shinobicontrols.charts.ap:
    android.graphics.Rect a -> a
    android.graphics.Rect b -> b
    android.graphics.Rect c -> c
    void a() -> a
    android.graphics.Rect b() -> b
    void c() -> c
    void a(int,int,int,int) -> a
    void a(int) -> a
com.shinobicontrols.charts.aq -> com.shinobicontrols.charts.aq:
    int a(android.view.View) -> a
    int b(android.view.View) -> b
    void a(android.view.View,android.graphics.Rect) -> a
    void b(android.view.View,android.graphics.Rect) -> b
    void a(android.view.View,com.shinobicontrols.charts.cb) -> a
    int a(float,int,float) -> a
    int a(float,float) -> a
com.shinobicontrols.charts.ar -> com.shinobicontrols.charts.ar:
    com.shinobicontrols.charts.u a -> a
    float b -> b
    java.util.List a(com.shinobicontrols.charts.LegendStyle) -> a
    java.util.List b(com.shinobicontrols.charts.LegendStyle) -> b
    java.util.List c(com.shinobicontrols.charts.LegendStyle) -> c
    java.lang.String a(int) -> a
    java.lang.String b(int) -> b
    android.widget.TextView a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
com.shinobicontrols.charts.as -> com.shinobicontrols.charts.as:
    android.widget.TextView a -> a
    com.shinobicontrols.charts.av b -> b
    com.shinobicontrols.charts.Series c -> c
    int d -> d
    android.widget.TextView a() -> a
    com.shinobicontrols.charts.av b() -> b
com.shinobicontrols.charts.at -> com.shinobicontrols.charts.at:
    android.widget.LinearLayout a -> a
    android.widget.LinearLayout b -> b
    float c -> c
    void a(com.shinobicontrols.charts.as) -> a
    void onMeasure(int,int) -> onMeasure
    void a(com.shinobicontrols.charts.LegendStyle) -> a
    void a(boolean) -> a
    void a(com.shinobicontrols.charts.Legend$SymbolAlignment,float) -> a
    void a(android.view.View,android.graphics.Typeface,float,int) -> a
    void a(android.view.View,float) -> a
    void a(com.shinobicontrols.charts.Legend$SymbolAlignment) -> a
com.shinobicontrols.charts.au -> com.shinobicontrols.charts.au:
    float a -> a
    void a(java.util.List,int) -> a
    void a(int) -> a
    void a(com.shinobicontrols.charts.LegendStyle) -> a
    void a(com.shinobicontrols.charts.at,int,int) -> a
com.shinobicontrols.charts.av -> com.shinobicontrols.charts.av:
    android.graphics.drawable.Drawable a -> a
    android.graphics.drawable.Drawable a() -> a
com.shinobicontrols.charts.aw -> com.shinobicontrols.charts.aw:
com.shinobicontrols.charts.ax -> com.shinobicontrols.charts.ax:
com.shinobicontrols.charts.ay -> com.shinobicontrols.charts.ay:
com.shinobicontrols.charts.az -> com.shinobicontrols.charts.az:
com.shinobicontrols.charts.b -> com.shinobicontrols.charts.b:
    com.shinobicontrols.charts.cf a -> a
    boolean b -> b
    boolean c -> c
    boolean a() -> a
    boolean b() -> b
    com.shinobicontrols.charts.cf c() -> c
    com.shinobicontrols.charts.cf d() -> d
    com.shinobicontrols.charts.cf e() -> e
com.shinobicontrols.charts.ba -> com.shinobicontrols.charts.ba:
com.shinobicontrols.charts.bb -> com.shinobicontrols.charts.bb:
com.shinobicontrols.charts.bc -> com.shinobicontrols.charts.bc:
com.shinobicontrols.charts.bd -> com.shinobicontrols.charts.bd:
    com.shinobicontrols.charts.bd a -> a
    com.shinobicontrols.charts.bd b -> b
    com.shinobicontrols.charts.bd c -> c
    com.shinobicontrols.charts.bd d -> d
    com.shinobicontrols.charts.bd e -> e
    com.shinobicontrols.charts.bd f -> f
    com.shinobicontrols.charts.bd g -> g
    com.shinobicontrols.charts.bd h -> h
    com.shinobicontrols.charts.bd i -> i
    com.shinobicontrols.charts.bd j -> j
    com.shinobicontrols.charts.bd a(com.shinobicontrols.charts.Legend) -> a
    void a(android.graphics.Rect,android.view.ViewGroup$MarginLayoutParams,int,int,float) -> a
    void a(android.graphics.Rect,int,int) -> a
    int a(com.shinobicontrols.charts.Axis$Position,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$1 -> com.shinobicontrols.charts.bd$1:
    void a(android.graphics.Rect,android.view.ViewGroup$MarginLayoutParams,int,int,float) -> a
    void a(android.graphics.Rect,int,int) -> a
    int a(com.shinobicontrols.charts.Axis$Position,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$10 -> com.shinobicontrols.charts.bd$10:
    void a(android.graphics.Rect,int,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$11 -> com.shinobicontrols.charts.bd$11:
    void a(android.graphics.Rect,android.view.ViewGroup$MarginLayoutParams,int,int,float) -> a
    void a(android.graphics.Rect,int,int) -> a
    int a(com.shinobicontrols.charts.Axis$Position,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$2 -> com.shinobicontrols.charts.bd$2:
    void a(android.graphics.Rect,int,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$3 -> com.shinobicontrols.charts.bd$3:
    int[] a -> a
    int[] b -> b
com.shinobicontrols.charts.bd$4 -> com.shinobicontrols.charts.bd$4:
    void a(android.graphics.Rect,int,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$5 -> com.shinobicontrols.charts.bd$5:
    void a(android.graphics.Rect,int,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$6 -> com.shinobicontrols.charts.bd$6:
    void a(android.graphics.Rect,android.view.ViewGroup$MarginLayoutParams,int,int,float) -> a
    void a(android.graphics.Rect,int,int) -> a
    int a(com.shinobicontrols.charts.Axis$Position,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$7 -> com.shinobicontrols.charts.bd$7:
    void a(android.graphics.Rect,int,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$8 -> com.shinobicontrols.charts.bd$8:
    void a(android.graphics.Rect,int,int) -> a
    int a(com.shinobicontrols.charts.Axis$Position,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.bd$9 -> com.shinobicontrols.charts.bd$9:
    void a(android.graphics.Rect,android.view.ViewGroup$MarginLayoutParams,int,int,float) -> a
    void a(android.graphics.Rect,int,int) -> a
    int a(com.shinobicontrols.charts.Axis$Position,int) -> a
    int a(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> a
    int b(int,float,com.shinobicontrols.charts.Axis$Position,int,android.view.ViewGroup$MarginLayoutParams) -> b
    void a(android.graphics.Rect,int,int,int,int) -> a
com.shinobicontrols.charts.be -> com.shinobicontrols.charts.be:
    int b -> b
    boolean c -> c
    void a(java.util.List) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.shinobicontrols.charts.bf,com.shinobicontrols.charts.am) -> a
    void b(java.util.List) -> b
    void a(com.shinobicontrols.charts.LineSeries,int) -> a
    void c(java.util.List) -> c
    void a(com.shinobicontrols.charts.bf,com.shinobicontrols.charts.am,com.shinobicontrols.charts.co$a,com.shinobicontrols.charts.LineSeries) -> a
    void d() -> d
    double a(com.shinobicontrols.charts.am,com.shinobicontrols.charts.am,double,com.shinobicontrols.charts.Series$Orientation) -> a
    double a(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.co$a) -> a
    void a(java.util.List,com.shinobicontrols.charts.co$a,com.shinobicontrols.charts.NumberRange) -> a
    int a(int) -> a
    int b(int) -> b
    boolean a(com.shinobicontrols.charts.co$b,double) -> a
com.shinobicontrols.charts.bf -> com.shinobicontrols.charts.bf:
    float o -> o
    float p -> p
    float q -> q
    float r -> r
    float s -> s
    float t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    float I -> I
    com.shinobicontrols.charts.SeriesStyle$FillStyle J -> J
    boolean K -> K
    boolean L -> L
    float a -> a
    float M -> M
    int b -> b
    int c -> c
    float d -> d
    float e -> e
    boolean f -> f
    float[] g -> g
    float[] h -> h
    int[] N -> N
    float[] O -> O
    float[] P -> P
    int i -> i
    int n -> n
    float[] Q -> Q
    int[] R -> R
    void a(com.shinobicontrols.charts.SChartGLDrawer,float,float[],float) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void e(int) -> e
    void a(com.shinobicontrols.charts.SChartGLDrawer,int) -> a
    void b(com.shinobicontrols.charts.SChartGLDrawer,int) -> b
    void a(com.shinobicontrols.charts.SChartGLDrawer) -> a
    void a(com.shinobicontrols.charts.LineSeries,double) -> a
    boolean f(int) -> f
    void a(com.shinobicontrols.charts.am,int) -> a
    boolean e() -> e
    boolean f() -> f
    boolean d() -> d
com.shinobicontrols.charts.bg -> com.shinobicontrols.charts.bg:
    float a(float,float,float) -> a
    float a(float) -> a
    float b(float) -> b
com.shinobicontrols.charts.bh -> com.shinobicontrols.charts.bh:
    int a -> a
    int b -> b
    void a(int) -> a
    void b(int) -> b
    void a() -> a
com.shinobicontrols.charts.bi -> com.shinobicontrols.charts.bi:
    double a -> a
    double b -> b
    double c(double) -> c
    double a(double) -> a
com.shinobicontrols.charts.bj -> com.shinobicontrols.charts.bj:
    java.util.List a -> a
    com.shinobicontrols.charts.ShinobiChart$OnGestureListener b -> b
    com.shinobicontrols.charts.ShinobiChart$OnGestureListener c -> c
    com.shinobicontrols.charts.u d -> d
    com.shinobicontrols.charts.bj$a e -> e
    void onDoubleTapDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapDown
    void onDoubleTapUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapUp
    void onLongTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchDown
    void onLongTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchUp
    void onSingleTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchDown
    void onSingleTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchUp
    void onSwipe(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSwipe
    void onSwipeEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onSwipeEnd
    void onSecondTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchDown
    void onSecondTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchUp
    void onPinch(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> onPinch
    void onPinchEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onPinchEnd
    void a(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> a
    void b(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> b
    void c(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> c
    void d(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> d
com.shinobicontrols.charts.bj$a -> com.shinobicontrols.charts.bj$a:
    com.shinobicontrols.charts.bj$a a -> a
    com.shinobicontrols.charts.bj$a b -> b
    com.shinobicontrols.charts.bj$a c -> c
    com.shinobicontrols.charts.bj$a[] d -> d
    com.shinobicontrols.charts.bj$a[] values() -> values
    com.shinobicontrols.charts.bj$a valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.bk -> com.shinobicontrols.charts.bk:
    long serialVersionUID -> serialVersionUID
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object set(int,java.lang.Object) -> set
    void a(boolean) -> a
com.shinobicontrols.charts.bl -> com.shinobicontrols.charts.bl:
    double a(double) -> a
com.shinobicontrols.charts.bm -> com.shinobicontrols.charts.bm:
    long serialVersionUID -> serialVersionUID
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    double e -> e
    double f -> f
    java.lang.String a() -> a
    void a(int) -> a
    boolean b(int) -> b
com.shinobicontrols.charts.bn -> com.shinobicontrols.charts.bn:
    void a() -> a
com.shinobicontrols.charts.bo -> com.shinobicontrols.charts.bo:
    float[] a -> a
    int[] b -> b
    int[] c -> c
    int d -> d
    float e -> e
    float f -> f
    int g -> g
    int h -> h
    int i -> i
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    float s -> s
    void a(int) -> a
    void a(com.shinobicontrols.charts.SChartGLDrawer,float,float[],float) -> a
    void a(com.shinobicontrols.charts.OHLCSeries,double) -> a
com.shinobicontrols.charts.bp -> com.shinobicontrols.charts.bp:
    com.shinobicontrols.charts.bp$a a -> a
    com.shinobicontrols.charts.bp$a b -> b
    float c -> c
    float d -> d
    com.shinobicontrols.charts.RadialSeries$DrawDirection e -> e
    float f -> f
    void a(com.shinobicontrols.charts.af,com.shinobicontrols.charts.SChartGLDrawer) -> a
    void a(com.shinobicontrols.charts.PieDonutSeries) -> a
com.shinobicontrols.charts.bp$1 -> com.shinobicontrols.charts.bp$1:
com.shinobicontrols.charts.bp$a -> com.shinobicontrols.charts.bp$a:
    boolean a -> a
    boolean b -> b
    java.lang.Integer[] c -> c
    java.lang.Integer[] d -> d
    com.shinobicontrols.charts.RadialSeries$RadialEffect e -> e
    float f -> f
    int a(int) -> a
    int b(int) -> b
com.shinobicontrols.charts.bq -> com.shinobicontrols.charts.bq:
    java.lang.String m -> m
    float n -> n
    float o -> o
    float p -> p
    float q -> q
    float b() -> b
com.shinobicontrols.charts.br -> com.shinobicontrols.charts.br:
    com.shinobicontrols.charts.d a -> a
    com.shinobicontrols.charts.d b -> b
    com.shinobicontrols.charts.d c -> c
    void a(com.shinobicontrols.charts.d) -> a
    void b(com.shinobicontrols.charts.d) -> b
    void c(com.shinobicontrols.charts.d) -> c
    double d() -> d
    double e() -> e
    double f() -> f
com.shinobicontrols.charts.bs -> com.shinobicontrols.charts.bs:
    void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    void setBackgroundColor(int) -> setBackgroundColor
    void a(int) -> a
    void a(float) -> a
    void c() -> c
    void b() -> b
    android.view.View a() -> a
com.shinobicontrols.charts.bt -> com.shinobicontrols.charts.bt:
    com.shinobicontrols.charts.w a -> a
    int b -> b
    float c -> c
    void b(android.graphics.SurfaceTexture) -> b
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void setBackgroundColor(int) -> setBackgroundColor
    void a(int) -> a
    void a(float) -> a
    android.view.View a() -> a
    void e() -> e
    void f() -> f
com.shinobicontrols.charts.bu -> com.shinobicontrols.charts.bu:
    com.shinobicontrols.charts.w a -> a
    int b -> b
    float c -> c
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void setBackgroundColor(int) -> setBackgroundColor
    void a(int) -> a
    void a(float) -> a
    android.view.View a() -> a
    void e() -> e
    void f() -> f
com.shinobicontrols.charts.bv -> com.shinobicontrols.charts.bv:
    com.shinobicontrols.charts.bv a -> a
    double b -> b
    double c -> c
com.shinobicontrols.charts.bw -> com.shinobicontrols.charts.bw:
    com.shinobicontrols.charts.bv a -> a
    com.shinobicontrols.charts.bv b -> b
    java.util.List c -> c
    com.shinobicontrols.charts.bv d -> d
    com.shinobicontrols.charts.bv a(com.shinobicontrols.charts.am,com.shinobicontrols.charts.bv,com.shinobicontrols.charts.am[],boolean) -> a
    void a() -> a
    void a(com.shinobicontrols.charts.am[],double,boolean) -> a
    void a(boolean) -> a
    boolean a(boolean,double,double) -> a
    double a(com.shinobicontrols.charts.bw$a,boolean,double) -> a
    void a(com.shinobicontrols.charts.am) -> a
com.shinobicontrols.charts.bw$a -> com.shinobicontrols.charts.bw$a:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.shinobicontrols.charts.bw$a a(com.shinobicontrols.charts.bv,com.shinobicontrols.charts.bv) -> a
com.shinobicontrols.charts.bx -> com.shinobicontrols.charts.bx:
    int a -> a
    int b -> b
    com.shinobicontrols.charts.cy c -> c
    java.util.ArrayList d -> d
    boolean e -> e
    com.shinobicontrols.charts.by f -> f
    void a() -> a
    void b() -> b
    com.shinobicontrols.charts.by c() -> c
    com.shinobicontrols.charts.VectorF d() -> d
    com.shinobicontrols.charts.VectorF a(int,int) -> a
    com.shinobicontrols.charts.by e() -> e
    long f() -> f
    com.shinobicontrols.charts.by a(int) -> a
    com.shinobicontrols.charts.VectorF g() -> g
    void b(int) -> b
    boolean a(com.shinobicontrols.charts.by) -> a
    boolean a(float) -> a
    com.shinobicontrols.charts.by h() -> h
    void i() -> i
    boolean j() -> j
com.shinobicontrols.charts.by -> com.shinobicontrols.charts.by:
    android.graphics.PointF a -> a
    long b -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    long a(com.shinobicontrols.charts.by) -> a
com.shinobicontrols.charts.bz -> com.shinobicontrols.charts.bz:
    com.shinobicontrols.charts.bx[] a -> a
    java.util.ArrayList b -> b
    com.shinobicontrols.charts.cy c -> c
    com.shinobicontrols.charts.bx a(int) -> a
    void a(android.view.MotionEvent) -> a
    boolean a(android.view.MotionEvent,int) -> a
    com.shinobicontrols.charts.bx a() -> a
    void b() -> b
    int c() -> c
com.shinobicontrols.charts.c -> com.shinobicontrols.charts.c:
    double a -> a
    double b -> b
    double a() -> a
    double b() -> b
    void a(double) -> a
    void b(double) -> b
    boolean c() -> c
com.shinobicontrols.charts.ca -> com.shinobicontrols.charts.ca:
    com.shinobicontrols.charts.Axis l -> l
    com.shinobicontrols.charts.e m -> m
    com.shinobicontrols.charts.ca$c n -> n
    com.shinobicontrols.charts.ca$e o -> o
    com.shinobicontrols.charts.ca$a p -> p
    com.shinobicontrols.charts.ca$b q -> q
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    double r -> r
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    double i -> i
    double j -> j
    com.shinobicontrols.charts.Axis$MotionState k -> k
    com.shinobicontrols.charts.NumberRange s -> s
    com.shinobicontrols.charts.NumberRange t -> t
    com.shinobicontrols.charts.ac u -> u
    com.shinobicontrols.charts.bi v -> v
    void onDoubleTapDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapDown
    void onDoubleTapUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapUp
    void onLongTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchDown
    void onLongTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchUp
    void onSingleTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchDown
    void onSingleTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchUp
    void onSecondTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchDown
    void onSecondTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchUp
    void onSwipe(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSwipe
    void onSwipeEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onSwipeEnd
    void onPinch(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> onPinch
    void onPinchEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onPinchEnd
    void a() -> a
    boolean a(double,double) -> a
    boolean a(double,double,boolean,boolean) -> a
    boolean a(double,boolean,boolean) -> a
    boolean b(double,double,boolean,boolean) -> b
    double b() -> b
    void a(double) -> a
    void e() -> e
    void a(android.graphics.PointF) -> a
    void b(double,double) -> b
    void f() -> f
    void g() -> g
    boolean a(double,double,float) -> a
    void a(boolean) -> a
    void a(android.graphics.PointF,android.graphics.PointF) -> a
    void c(double,double) -> c
    void h() -> h
    void i() -> i
    void d(double,double) -> d
    void j() -> j
    void k() -> k
    void l() -> l
    void e(double,double) -> e
    void m() -> m
    void n() -> n
    void o() -> o
    double b(double) -> b
    float a(float,float) -> a
    boolean a(com.shinobicontrols.charts.ca$d) -> a
    void a(double,com.shinobicontrols.charts.d,com.shinobicontrols.charts.ca$d) -> a
    boolean f(double,double) -> f
    boolean p() -> p
    double b(boolean) -> b
    double c() -> c
    double c(double) -> c
    double d() -> d
    double c(boolean) -> c
    boolean d(double) -> d
    double q() -> q
    boolean g(double,double) -> g
    boolean e(double) -> e
    double f(double) -> f
    double a(double,double,double) -> a
    boolean r() -> r
    boolean s() -> s
    void a(com.shinobicontrols.charts.Axis$MotionState) -> a
    void t() -> t
    void h(double,double) -> h
    com.shinobicontrols.charts.Axis a(com.shinobicontrols.charts.ca) -> a
    void a(com.shinobicontrols.charts.ca,double,double) -> a
    void b(com.shinobicontrols.charts.ca) -> b
    void c(com.shinobicontrols.charts.ca) -> c
    void b(com.shinobicontrols.charts.ca,double,double) -> b
    void d(com.shinobicontrols.charts.ca) -> d
    void e(com.shinobicontrols.charts.ca) -> e
    void c(com.shinobicontrols.charts.ca,double,double) -> c
    void f(com.shinobicontrols.charts.ca) -> f
    void g(com.shinobicontrols.charts.ca) -> g
    void h(com.shinobicontrols.charts.ca) -> h
    void d(com.shinobicontrols.charts.ca,double,double) -> d
    void i(com.shinobicontrols.charts.ca) -> i
    void j(com.shinobicontrols.charts.ca) -> j
    void k(com.shinobicontrols.charts.ca) -> k
com.shinobicontrols.charts.ca$a -> com.shinobicontrols.charts.ca$a:
    void a(double) -> a
    void a() -> a
    void b() -> b
    void c() -> c
com.shinobicontrols.charts.ca$b -> com.shinobicontrols.charts.ca$b:
    void a(double) -> a
    void a() -> a
    void b() -> b
    void c() -> c
com.shinobicontrols.charts.ca$c -> com.shinobicontrols.charts.ca$c:
    void a(double) -> a
    void a() -> a
    void b() -> b
    void c() -> c
com.shinobicontrols.charts.ca$d -> com.shinobicontrols.charts.ca$d:
    com.shinobicontrols.charts.ca a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    double g -> g
    boolean h -> h
    void a(com.shinobicontrols.charts.c) -> a
    void a(double) -> a
    void a(double,double) -> a
    void a(double,double,boolean) -> a
    void b(double) -> b
com.shinobicontrols.charts.ca$e -> com.shinobicontrols.charts.ca$e:
    double i -> i
    double j -> j
    double k -> k
    void a(double) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void b(double,double) -> b
com.shinobicontrols.charts.cb -> com.shinobicontrols.charts.cb:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double a() -> a
    double b() -> b
    void a(double,double,double,double) -> a
    void a(double,double) -> a
    void b(double,double) -> b
com.shinobicontrols.charts.cc -> com.shinobicontrols.charts.cc:
    void f() -> f
    void e() -> e
com.shinobicontrols.charts.cd -> com.shinobicontrols.charts.cd:
    com.shinobicontrols.charts.u b -> b
    boolean a -> a
    com.shinobicontrols.charts.ce c -> c
    void onDoubleTapDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapDown
    void onDoubleTapUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapUp
    void onLongTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchDown
    void onLongTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchUp
    void onSingleTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchDown
    void onSingleTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchUp
    void onSwipe(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSwipe
    void onSwipeEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onSwipeEnd
    void onSecondTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchDown
    void onSecondTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchUp
    void onPinch(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> onPinch
    void onPinchEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onPinchEnd
    void a(com.shinobicontrols.charts.bv) -> a
    void b(com.shinobicontrols.charts.bv) -> b
    void c(com.shinobicontrols.charts.bv) -> c
    void a(boolean,com.shinobicontrols.charts.PieDonutSeries,com.shinobicontrols.charts.bq,com.shinobicontrols.charts.Series$SelectionMode,boolean) -> a
com.shinobicontrols.charts.cd$1 -> com.shinobicontrols.charts.cd$1:
    int[] a -> a
com.shinobicontrols.charts.ce -> com.shinobicontrols.charts.ce:
    com.shinobicontrols.charts.u a -> a
    com.shinobicontrols.charts.Series$a a(com.shinobicontrols.charts.bv,com.shinobicontrols.charts.ce$b) -> a
    com.shinobicontrols.charts.Series$a a(com.shinobicontrols.charts.bv) -> a
    com.shinobicontrols.charts.Series$a a(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.bv,boolean) -> a
    double a(com.shinobicontrols.charts.bv,com.shinobicontrols.charts.bv,com.shinobicontrols.charts.bv,com.shinobicontrols.charts.CartesianSeries$a) -> a
    com.shinobicontrols.charts.bv a(com.shinobicontrols.charts.CartesianSeries) -> a
    void a(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean,com.shinobicontrols.charts.bv) -> a
    void a(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> a
    void a(com.shinobicontrols.charts.BarColumnSeries,com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> a
    void b(com.shinobicontrols.charts.BarColumnSeries,com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> b
    void a(com.shinobicontrols.charts.LineSeries,com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,boolean) -> a
    void a(com.shinobicontrols.charts.Series$a,com.shinobicontrols.charts.bv,com.shinobicontrols.charts.ce$a,boolean) -> a
    boolean a(com.shinobicontrols.charts.bv,com.shinobicontrols.charts.ce$a) -> a
    void a(com.shinobicontrols.charts.ce$a) -> a
com.shinobicontrols.charts.ce$1 -> com.shinobicontrols.charts.ce$1:
    int[] a -> a
    int[] b -> b
com.shinobicontrols.charts.ce$a -> com.shinobicontrols.charts.ce$a:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
com.shinobicontrols.charts.ce$b -> com.shinobicontrols.charts.ce$b:
    com.shinobicontrols.charts.ce$b a -> a
    com.shinobicontrols.charts.ce$b b -> b
    com.shinobicontrols.charts.ce$b[] c -> c
    com.shinobicontrols.charts.ce$b[] values() -> values
    com.shinobicontrols.charts.ce$b valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.cf -> com.shinobicontrols.charts.cf:
    double a -> a
    double b -> b
    float d() -> d
    float e() -> e
    float f() -> f
com.shinobicontrols.charts.cg -> com.shinobicontrols.charts.cg:
    boolean b -> b
    com.shinobicontrols.charts.CartesianSeries a -> a
    void a(java.util.List) -> a
    void a() -> a
    void a(java.util.List,com.shinobicontrols.charts.co$a,com.shinobicontrols.charts.NumberRange) -> a
    com.shinobicontrols.charts.NumberRange a(com.shinobicontrols.charts.Axis,java.util.List) -> a
com.shinobicontrols.charts.ch -> com.shinobicontrols.charts.ch:
    com.shinobicontrols.charts.Axis a -> a
    com.shinobicontrols.charts.Axis b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.Map e -> e
    java.lang.Class f -> f
    boolean a(com.shinobicontrols.charts.Axis) -> a
    void a() -> a
    com.shinobicontrols.charts.NumberRange b(com.shinobicontrols.charts.Axis) -> b
    void a(com.shinobicontrols.charts.CartesianSeries) -> a
    void b() -> b
    int c() -> c
    void c(com.shinobicontrols.charts.Axis) -> c
    int d() -> d
    boolean a(com.shinobicontrols.charts.Series) -> a
    void b(com.shinobicontrols.charts.Series) -> b
    boolean a(com.shinobicontrols.charts.Series,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    double b(com.shinobicontrols.charts.CartesianSeries) -> b
com.shinobicontrols.charts.ci -> com.shinobicontrols.charts.ci:
    java.util.Map a -> a
    int a(com.shinobicontrols.charts.Series) -> a
    void a(com.shinobicontrols.charts.ci$a,com.shinobicontrols.charts.Series) -> a
    void b(com.shinobicontrols.charts.ci$a,com.shinobicontrols.charts.Series) -> b
    void b(com.shinobicontrols.charts.Series) -> b
    int c(com.shinobicontrols.charts.ci$a,com.shinobicontrols.charts.Series) -> c
com.shinobicontrols.charts.ci$a -> com.shinobicontrols.charts.ci$a:
    long serialVersionUID -> serialVersionUID
    void a(com.shinobicontrols.charts.Series,com.shinobicontrols.charts.Series) -> a
    void a(com.shinobicontrols.charts.Series) -> a
    boolean a() -> a
com.shinobicontrols.charts.cj -> com.shinobicontrols.charts.cj:
    void a(com.shinobicontrols.charts.af,com.shinobicontrols.charts.SChartGLDrawer) -> a
    void a() -> a
    boolean b() -> b
    void c() -> c
com.shinobicontrols.charts.ck -> com.shinobicontrols.charts.ck:
    com.shinobicontrols.charts.ck$b a -> a
    com.shinobicontrols.charts.ck$b b -> b
    com.shinobicontrols.charts.ck$a c -> c
    java.util.List d -> d
    void a(com.shinobicontrols.charts.Axis) -> a
    void b(com.shinobicontrols.charts.Axis) -> b
    void a(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    void b(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> b
    void a(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.ck$b) -> a
    void a(com.shinobicontrols.charts.Series) -> a
    void d(com.shinobicontrols.charts.Series) -> d
    void c(com.shinobicontrols.charts.Axis) -> c
    void d(com.shinobicontrols.charts.Axis) -> d
    void a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.ck$b) -> a
    com.shinobicontrols.charts.Axis b(com.shinobicontrols.charts.Series) -> b
    com.shinobicontrols.charts.Axis c(com.shinobicontrols.charts.Series) -> c
    java.util.Set e(com.shinobicontrols.charts.Axis) -> e
    java.util.List a() -> a
com.shinobicontrols.charts.ck$a -> com.shinobicontrols.charts.ck$a:
    long serialVersionUID -> serialVersionUID
com.shinobicontrols.charts.ck$b -> com.shinobicontrols.charts.ck$b:
    long serialVersionUID -> serialVersionUID
com.shinobicontrols.charts.cl -> com.shinobicontrols.charts.cl:
    void a(java.lang.Class,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void b(java.lang.Class,java.lang.String,java.lang.Throwable) -> b
    void b(java.lang.String) -> b
    void c(java.lang.Class,java.lang.String,java.lang.Throwable) -> c
    void c(java.lang.String) -> c
com.shinobicontrols.charts.cm -> com.shinobicontrols.charts.cm:
    com.shinobicontrols.charts.cy a -> a
    com.shinobicontrols.charts.bz b -> b
    com.shinobicontrols.charts.cn c -> c
    com.shinobicontrols.charts.aa d -> d
    com.shinobicontrols.charts.x e -> e
    boolean a(android.view.MotionEvent) -> a
com.shinobicontrols.charts.cn -> com.shinobicontrols.charts.cn:
    android.os.Handler a -> a
    com.shinobicontrols.charts.cn$c b -> b
    com.shinobicontrols.charts.cn$a c -> c
    com.shinobicontrols.charts.cn$b d -> d
    com.shinobicontrols.charts.ShinobiChart$OnGestureListener e -> e
    java.util.Queue f -> f
    com.shinobicontrols.charts.u g -> g
    com.shinobicontrols.charts.x h -> h
    boolean i -> i
    boolean a(int,com.shinobicontrols.charts.bx,int,com.shinobicontrols.charts.bx) -> a
    void a(com.shinobicontrols.charts.bx) -> a
    void b(com.shinobicontrols.charts.bx) -> b
    boolean a(float) -> a
    void c(com.shinobicontrols.charts.bx) -> c
    void a() -> a
    void b() -> b
com.shinobicontrols.charts.cn$a -> com.shinobicontrols.charts.cn$a:
    void a() -> a
    void b() -> b
com.shinobicontrols.charts.cn$b -> com.shinobicontrols.charts.cn$b:
    void run() -> run
    void a() -> a
    void b() -> b
com.shinobicontrols.charts.cn$c -> com.shinobicontrols.charts.cn$c:
    void a() -> a
    void b() -> b
com.shinobicontrols.charts.cn$d -> com.shinobicontrols.charts.cn$d:
    android.graphics.PointF a -> a
    java.util.Queue b -> b
    com.shinobicontrols.charts.ShinobiChart$OnGestureListener c -> c
    com.shinobicontrols.charts.u d -> d
    void run() -> run
    void a() -> a
    void b() -> b
com.shinobicontrols.charts.co -> com.shinobicontrols.charts.co:
    java.util.List a -> a
    com.shinobicontrols.charts.Series$Orientation b -> b
    com.shinobicontrols.charts.co$a c -> c
    boolean hasNext() -> hasNext
    com.shinobicontrols.charts.co$a a() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.shinobicontrols.charts.co$1 -> com.shinobicontrols.charts.co$1:
com.shinobicontrols.charts.co$a -> com.shinobicontrols.charts.co$a:
    double a -> a
    java.util.Map c -> c
    com.shinobicontrols.charts.co b -> b
    com.shinobicontrols.charts.co$b a(com.shinobicontrols.charts.CartesianSeries) -> a
com.shinobicontrols.charts.co$b -> com.shinobicontrols.charts.co$b:
    int a -> a
    com.shinobicontrols.charts.CartesianSeries b -> b
    com.shinobicontrols.charts.co c -> c
    boolean b() -> b
    boolean c() -> c
    boolean a() -> a
    void d() -> d
    boolean a(com.shinobicontrols.charts.co$b) -> a
    boolean b(com.shinobicontrols.charts.co$b) -> b
    void c(com.shinobicontrols.charts.co$b) -> c
com.shinobicontrols.charts.cp -> com.shinobicontrols.charts.cp:
    com.shinobicontrols.charts.cz b() -> b
com.shinobicontrols.charts.cq -> com.shinobicontrols.charts.cq:
    boolean a() -> a
    void a(java.lang.String) -> a
    com.shinobicontrols.charts.cz$a b() -> b
com.shinobicontrols.charts.cr -> com.shinobicontrols.charts.cr:
    com.shinobicontrols.charts.ChartStyle a -> a
    com.shinobicontrols.charts.MainTitleStyle b -> b
    com.shinobicontrols.charts.CrosshairStyle c -> c
    com.shinobicontrols.charts.LegendStyle d -> d
    com.shinobicontrols.charts.AxisStyle e -> e
    com.shinobicontrols.charts.AxisStyle f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    java.util.List j -> j
    java.util.List k -> k
    java.util.List l -> l
    java.util.List m -> m
    java.util.List n -> n
    java.util.List o -> o
    java.util.List p -> p
    java.util.List q -> q
    java.util.List r -> r
    java.util.List s -> s
    java.util.List t -> t
    java.util.List u -> u
    java.util.List v -> v
    void a(com.shinobicontrols.charts.ColumnSeriesStyle,boolean) -> a
    void a(com.shinobicontrols.charts.BarSeriesStyle,boolean) -> a
    void a(com.shinobicontrols.charts.LineSeriesStyle,boolean) -> a
    void a(com.shinobicontrols.charts.PieSeriesStyle,boolean) -> a
    void a(com.shinobicontrols.charts.DonutSeriesStyle,boolean) -> a
    void a(com.shinobicontrols.charts.BandSeriesStyle,boolean) -> a
    void a(com.shinobicontrols.charts.CandlestickSeriesStyle,boolean) -> a
    void a(com.shinobicontrols.charts.OHLCSeriesStyle,boolean) -> a
    com.shinobicontrols.charts.BandSeriesStyle a(int,boolean) -> a
    com.shinobicontrols.charts.CandlestickSeriesStyle b(int,boolean) -> b
    com.shinobicontrols.charts.OHLCSeriesStyle c(int,boolean) -> c
    com.shinobicontrols.charts.ColumnSeriesStyle d(int,boolean) -> d
    com.shinobicontrols.charts.BarSeriesStyle e(int,boolean) -> e
    com.shinobicontrols.charts.LineSeriesStyle f(int,boolean) -> f
    com.shinobicontrols.charts.SeriesStyle a(java.util.List,int) -> a
    com.shinobicontrols.charts.PieSeriesStyle g(int,boolean) -> g
    com.shinobicontrols.charts.DonutSeriesStyle h(int,boolean) -> h
    com.shinobicontrols.charts.ChartStyle a() -> a
    void a(com.shinobicontrols.charts.ChartStyle) -> a
    com.shinobicontrols.charts.MainTitleStyle b() -> b
    void a(com.shinobicontrols.charts.MainTitleStyle) -> a
    com.shinobicontrols.charts.CrosshairStyle c() -> c
    void a(com.shinobicontrols.charts.CrosshairStyle) -> a
    com.shinobicontrols.charts.LegendStyle d() -> d
    void a(com.shinobicontrols.charts.LegendStyle) -> a
    com.shinobicontrols.charts.AxisStyle e() -> e
    void a(com.shinobicontrols.charts.AxisStyle) -> a
    com.shinobicontrols.charts.AxisStyle f() -> f
    void b(com.shinobicontrols.charts.AxisStyle) -> b
com.shinobicontrols.charts.cs -> com.shinobicontrols.charts.cs:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    android.graphics.Typeface V -> V
    com.shinobicontrols.charts.cr a(android.content.Context,android.util.AttributeSet) -> a
    com.shinobicontrols.charts.PieSeriesStyle a() -> a
    com.shinobicontrols.charts.PieSeriesStyle b() -> b
    com.shinobicontrols.charts.DonutSeriesStyle c() -> c
    com.shinobicontrols.charts.DonutSeriesStyle d() -> d
    com.shinobicontrols.charts.OHLCSeriesStyle e() -> e
    com.shinobicontrols.charts.CandlestickSeriesStyle f() -> f
    com.shinobicontrols.charts.BandSeriesStyle a(com.shinobicontrols.charts.PointStyle,com.shinobicontrols.charts.PointStyle) -> a
    com.shinobicontrols.charts.PointStyle a(int) -> a
    com.shinobicontrols.charts.PointStyle b(int) -> b
    com.shinobicontrols.charts.AxisStyle g() -> g
    com.shinobicontrols.charts.AxisStyle h() -> h
    com.shinobicontrols.charts.AxisTitleStyle i() -> i
    com.shinobicontrols.charts.AxisTitleStyle j() -> j
    com.shinobicontrols.charts.AxisTitleStyle k() -> k
    com.shinobicontrols.charts.GridlineStyle l() -> l
    com.shinobicontrols.charts.GridStripeStyle m() -> m
    com.shinobicontrols.charts.TickStyle n() -> n
    void a(com.shinobicontrols.charts.cr,com.shinobicontrols.charts.PointStyle,com.shinobicontrols.charts.PointStyle,int,int,int,int) -> a
    com.shinobicontrols.charts.LineSeriesStyle a(com.shinobicontrols.charts.PointStyle,com.shinobicontrols.charts.PointStyle,int,int,int,int) -> a
    void a(com.shinobicontrols.charts.cr,int,int,int) -> a
    void b(com.shinobicontrols.charts.cr,int,int,int) -> b
    com.shinobicontrols.charts.ColumnSeriesStyle a(int,int,int) -> a
    com.shinobicontrols.charts.BarSeriesStyle b(int,int,int) -> b
    com.shinobicontrols.charts.CrosshairStyle o() -> o
com.shinobicontrols.charts.ct -> com.shinobicontrols.charts.ct:
    boolean a(com.shinobicontrols.charts.TickMark,com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.Axis,double) -> a
    boolean b(com.shinobicontrols.charts.TickMark,com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.Axis,double) -> b
    boolean a(com.shinobicontrols.charts.TickMark,com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.Axis,boolean,boolean) -> a
com.shinobicontrols.charts.ct$1 -> com.shinobicontrols.charts.ct$1:
    int[] a -> a
com.shinobicontrols.charts.cu -> com.shinobicontrols.charts.cu:
    com.shinobicontrols.charts.Axis a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.Stack d -> d
    com.shinobicontrols.charts.ct e -> e
    com.shinobicontrols.charts.cu$a f -> f
    com.shinobicontrols.charts.TickMark[] g -> g
    void a(com.shinobicontrols.charts.Axis$c) -> a
    void a() -> a
    void c() -> c
    void a(android.graphics.Canvas,com.shinobicontrols.charts.Axis$c) -> a
    com.shinobicontrols.charts.TickMark a(double,com.shinobicontrols.charts.Axis$c) -> a
    com.shinobicontrols.charts.TickMark b(com.shinobicontrols.charts.Axis$c) -> b
    com.shinobicontrols.charts.TickMark c(com.shinobicontrols.charts.Axis$c) -> c
    void d(com.shinobicontrols.charts.Axis$c) -> d
    void a(double[],com.shinobicontrols.charts.Axis$c) -> a
    void e(com.shinobicontrols.charts.Axis$c) -> e
    void a(com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.cu$a,double,boolean) -> a
    int a(boolean,double,com.shinobicontrols.charts.Axis$c) -> a
    void b(com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.cu$a,double,boolean) -> b
    void a(double,com.shinobicontrols.charts.Axis$c,boolean,boolean,boolean,com.shinobicontrols.charts.cu$a) -> a
    void a(double,com.shinobicontrols.charts.Axis$c,boolean,boolean) -> a
    void a(int,android.graphics.PointF,com.shinobicontrols.charts.TickMark,android.graphics.PointF,com.shinobicontrols.charts.Axis$c) -> a
    void b() -> b
com.shinobicontrols.charts.cu$1 -> com.shinobicontrols.charts.cu$1:
com.shinobicontrols.charts.cu$a -> com.shinobicontrols.charts.cu$a:
    int a -> a
com.shinobicontrols.charts.cv -> com.shinobicontrols.charts.cv:
    float b -> b
    com.shinobicontrols.charts.bv a -> a
    android.widget.TextView c -> c
    android.graphics.drawable.GradientDrawable d -> d
    java.lang.StringBuilder e -> e
    void a(com.shinobicontrols.charts.CrosshairStyle) -> a
    void a(com.shinobicontrols.charts.bv,com.shinobicontrols.charts.CartesianSeries) -> a
    void a(com.shinobicontrols.charts.bv) -> a
    void b(com.shinobicontrols.charts.bv) -> b
    void forceLayout() -> forceLayout
com.shinobicontrols.charts.cw -> com.shinobicontrols.charts.cw:
    com.shinobicontrols.charts.ad$b a -> a
    com.shinobicontrols.charts.ad$b a() -> a
    void a(com.shinobicontrols.charts.cw$a) -> a
    void b(com.shinobicontrols.charts.ad$a) -> b
com.shinobicontrols.charts.cw$a -> com.shinobicontrols.charts.cw$a:
    void a() -> a
com.shinobicontrols.charts.cx -> com.shinobicontrols.charts.cx:
    java.lang.Object a -> a
    boolean b -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
com.shinobicontrols.charts.cy -> com.shinobicontrols.charts.cy:
    android.view.VelocityTracker a -> a
    android.view.VelocityTracker a() -> a
    android.view.VelocityTracker b() -> b
    void c() -> c
com.shinobicontrols.charts.cz -> com.shinobicontrols.charts.cz:
    void a(java.lang.String) -> a
    boolean a() -> a
    com.shinobicontrols.charts.cz$a b() -> b
com.shinobicontrols.charts.cz$a -> com.shinobicontrols.charts.cz$a:
    com.shinobicontrols.charts.cz$a a -> a
    com.shinobicontrols.charts.cz$a b -> b
    com.shinobicontrols.charts.cz$a c -> c
    com.shinobicontrols.charts.cz$a[] d -> d
    com.shinobicontrols.charts.cz$a[] values() -> values
    com.shinobicontrols.charts.cz$a valueOf(java.lang.String) -> valueOf
com.shinobicontrols.charts.d -> com.shinobicontrols.charts.d:
    double a(double) -> a
    double b(double) -> b
com.shinobicontrols.charts.da -> com.shinobicontrols.charts.da:
    byte[] a -> a
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    int getId() -> getId
    void offsetLeftAndRight(int) -> offsetLeftAndRight
    void offsetTopAndBottom(int) -> offsetTopAndBottom
    void scrollBy(int,int) -> scrollBy
    void scrollTo(int,int) -> scrollTo
    void setActivated(boolean) -> setActivated
    void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    void setAlpha(float) -> setAlpha
    void setAlpha(int) -> setAlpha
    void setAnimation(android.view.animation.Animation) -> setAnimation
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundResource(int) -> setBackgroundResource
    void setBaseline(int) -> setBaseline
    void setBaselineAlignBottom(boolean) -> setBaselineAlignBottom
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setEnabled(boolean) -> setEnabled
    void setFadingEdgeLength(int) -> setFadingEdgeLength
    void setId(int) -> setId
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    void setImageResource(int) -> setImageResource
    void setImageState(int[],boolean) -> setImageState
    void setImageURI(android.net.Uri) -> setImageURI
    void setMaxHeight(int) -> setMaxHeight
    void setMaxWidth(int) -> setMaxWidth
    void setMinimumHeight(int) -> setMinimumHeight
    void setMinimumWidth(int) -> setMinimumWidth
    void setPadding(int,int,int,int) -> setPadding
    void setPivotX(float) -> setPivotX
    void setPivotY(float) -> setPivotY
    void setPressed(boolean) -> setPressed
    void setRotation(float) -> setRotation
    void setRotationX(float) -> setRotationX
    void setRotationY(float) -> setRotationY
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    void setSelected(boolean) -> setSelected
    void setTranslationX(float) -> setTranslationX
    void setTranslationY(float) -> setTranslationY
    void setVisibility(int) -> setVisibility
    void setX(float) -> setX
    void setY(float) -> setY
    void a(android.graphics.drawable.Drawable) -> a
com.shinobicontrols.charts.e -> com.shinobicontrols.charts.e:
    com.shinobicontrols.charts.c a -> a
    com.shinobicontrols.charts.e$a b -> b
    android.os.Handler c -> c
    long d -> d
    boolean e -> e
    void run() -> run
    void a(com.shinobicontrols.charts.c) -> a
    void a(com.shinobicontrols.charts.e$a) -> a
    void a() -> a
    void b() -> b
com.shinobicontrols.charts.e$a -> com.shinobicontrols.charts.e$a:
    void a() -> a
    void a(com.shinobicontrols.charts.c) -> a
    void b() -> b
    void c() -> c
com.shinobicontrols.charts.f -> com.shinobicontrols.charts.f:
    com.shinobicontrols.charts.d a -> a
    void a(com.shinobicontrols.charts.d) -> a
    double d() -> d
com.shinobicontrols.charts.g -> com.shinobicontrols.charts.g:
    com.shinobicontrols.charts.Axis[] a -> a
    java.lang.String b -> b
    com.shinobicontrols.charts.Axis a() -> a
    boolean b() -> b
    void a(com.shinobicontrols.charts.Axis) -> a
    void b(com.shinobicontrols.charts.Axis) -> b
    void c(com.shinobicontrols.charts.Axis) -> c
    void a(java.util.List,com.shinobicontrols.charts.Axis) -> a
com.shinobicontrols.charts.h -> com.shinobicontrols.charts.h:
    com.shinobicontrols.charts.Axis a -> a
    float b -> b
    com.shinobicontrols.charts.h c -> c
    com.shinobicontrols.charts.h a(com.shinobicontrols.charts.Axis) -> a
    int a(int,float) -> a
    void a(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> a
    void b(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> b
    void a(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> a
    void b(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> b
    int a(com.shinobicontrols.charts.Title$Position) -> a
    void a(android.graphics.Rect,android.graphics.Rect,float,float,int,float) -> a
    void a(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,int,boolean) -> a
    void a(android.graphics.Point,com.shinobicontrols.charts.Axis$c,int) -> a
    void c(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> c
    void c(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> c
    void a(com.shinobicontrols.charts.Axis$c) -> a
    double a(double,android.graphics.Rect) -> a
    double b(double,android.graphics.Rect) -> b
    void a(android.graphics.Rect,int,int,com.shinobicontrols.charts.Title,android.graphics.Rect) -> a
    double a(double,android.graphics.Rect,double,double) -> a
    double b(double,android.graphics.Rect,double,double) -> b
    double c(double,android.graphics.Rect,double,double) -> c
    double d(double,android.graphics.Rect,double,double) -> d
    int a(com.shinobicontrols.charts.g,com.shinobicontrols.charts.Axis$Position) -> a
com.shinobicontrols.charts.h$1 -> com.shinobicontrols.charts.h$1:
    int a(com.shinobicontrols.charts.Title$Position) -> a
    void a(com.shinobicontrols.charts.Axis$c) -> a
    void a(android.graphics.Rect,android.graphics.Rect,float,float,int,float) -> a
    void a(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,int,boolean) -> a
    void a(android.graphics.Point,com.shinobicontrols.charts.Axis$c,int) -> a
    double a(double,android.graphics.Rect) -> a
    double b(double,android.graphics.Rect) -> b
    void c(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> c
    void c(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> c
    void a(android.graphics.Rect,int,int,com.shinobicontrols.charts.Title,android.graphics.Rect) -> a
com.shinobicontrols.charts.h$a -> com.shinobicontrols.charts.h$a:
    int a(com.shinobicontrols.charts.Title$Position) -> a
    void a(com.shinobicontrols.charts.Axis$c) -> a
    void a(android.graphics.Rect,android.graphics.Rect,float,float,int,float) -> a
    void a(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,int,boolean) -> a
    void a(android.graphics.Point,com.shinobicontrols.charts.Axis$c,int) -> a
    double a(double,android.graphics.Rect) -> a
    double b(double,android.graphics.Rect) -> b
    void c(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> c
    void c(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> c
    void a(android.graphics.Rect,int,int,com.shinobicontrols.charts.Title,android.graphics.Rect) -> a
com.shinobicontrols.charts.h$b -> com.shinobicontrols.charts.h$b:
    int a(com.shinobicontrols.charts.Title$Position) -> a
    void a(com.shinobicontrols.charts.Axis$c) -> a
    void a(android.graphics.Rect,android.graphics.Rect,float,float,int,float) -> a
    void a(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,int,boolean) -> a
    void a(android.graphics.Point,com.shinobicontrols.charts.Axis$c,int) -> a
    double a(double,android.graphics.Rect) -> a
    double b(double,android.graphics.Rect) -> b
    void c(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> c
    void c(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> c
    void a(android.graphics.Rect,int,int,com.shinobicontrols.charts.Title,android.graphics.Rect) -> a
com.shinobicontrols.charts.h$c -> com.shinobicontrols.charts.h$c:
    int a(com.shinobicontrols.charts.Title$Position) -> a
    void a(com.shinobicontrols.charts.Axis$c) -> a
    void a(android.graphics.Rect,android.graphics.Rect,float,float,int,float) -> a
    void a(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,int,boolean) -> a
    void a(android.graphics.Point,com.shinobicontrols.charts.Axis$c,int) -> a
    double a(double,android.graphics.Rect) -> a
    double b(double,android.graphics.Rect) -> b
    void c(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> c
    void c(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> c
    void a(android.graphics.Rect,int,int,com.shinobicontrols.charts.Title,android.graphics.Rect) -> a
com.shinobicontrols.charts.h$d -> com.shinobicontrols.charts.h$d:
    int a(com.shinobicontrols.charts.Title$Position) -> a
    void a(com.shinobicontrols.charts.Axis$c) -> a
    void a(android.graphics.Rect,android.graphics.Rect,float,float,int,float) -> a
    void a(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,int,boolean) -> a
    void a(android.graphics.Point,com.shinobicontrols.charts.Axis$c,int) -> a
    double a(double,android.graphics.Rect) -> a
    double b(double,android.graphics.Rect) -> b
    void c(android.graphics.Path,com.shinobicontrols.charts.Axis$c,int,android.graphics.Paint) -> c
    void c(android.graphics.Rect,com.shinobicontrols.charts.Axis$c,android.graphics.PointF,android.graphics.PointF) -> c
    void a(android.graphics.Rect,int,int,com.shinobicontrols.charts.Title,android.graphics.Rect) -> a
com.shinobicontrols.charts.i -> com.shinobicontrols.charts.i:
    void a() -> a
    int a(int) -> a
    void a(int,com.shinobicontrols.charts.am,float[],float[],com.shinobicontrols.charts.j) -> a
com.shinobicontrols.charts.j -> com.shinobicontrols.charts.j:
    float[] a -> a
    float[] b -> b
    float[] c -> c
    float[] d -> d
    float[] e -> e
    float[] f -> f
    float[] n -> n
    float[] o -> o
    float[] p -> p
    int[] q -> q
    int[] r -> r
    int[] s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int g -> g
    int h -> h
    int i -> i
    float B -> B
    float C -> C
    float D -> D
    float E -> E
    float F -> F
    boolean G -> G
    boolean H -> H
    void a(int) -> a
    void a(com.shinobicontrols.charts.SChartGLDrawer,float,float[],float) -> a
    void a(int,com.shinobicontrols.charts.am,float[]) -> a
    void a(int,com.shinobicontrols.charts.am,int[]) -> a
    boolean d() -> d
    boolean e() -> e
    void a(com.shinobicontrols.charts.BandSeries,double) -> a
com.shinobicontrols.charts.k -> com.shinobicontrols.charts.k:
    void a(java.util.List) -> a
    void a() -> a
    void b(java.util.List) -> b
    void c(java.util.List) -> c
    void a(java.util.List,com.shinobicontrols.charts.co$a,com.shinobicontrols.charts.NumberRange) -> a
    double a(com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.co$a) -> a
com.shinobicontrols.charts.l -> com.shinobicontrols.charts.l:
    float[] a -> a
    float[] b -> b
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int c -> c
    float n -> n
    boolean o -> o
    com.shinobicontrols.charts.SeriesStyle$FillStyle p -> p
    float q -> q
    int r -> r
    void a(int) -> a
    void b(int) -> b
    void a(com.shinobicontrols.charts.SChartGLDrawer,float,float[],float) -> a
    void a(com.shinobicontrols.charts.BarColumnSeries,double) -> a
com.shinobicontrols.charts.m -> com.shinobicontrols.charts.m:
    float[] j -> j
    com.shinobicontrols.charts.Series k -> k
    boolean a -> a
    com.shinobicontrols.charts.AnimatableSeries l -> l
    com.shinobicontrols.charts.an m -> m
    void a() -> a
    boolean b() -> b
    void c() -> c
com.shinobicontrols.charts.n -> com.shinobicontrols.charts.n:
    double a(double) -> a
com.shinobicontrols.charts.o -> com.shinobicontrols.charts.o:
    void a() -> a
com.shinobicontrols.charts.p -> com.shinobicontrols.charts.p:
    float[] a -> a
    int[] b -> b
    int[] c -> c
    int d -> d
    float e -> e
    float f -> f
    int g -> g
    int h -> h
    int i -> i
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    boolean u -> u
    boolean v -> v
    float w -> w
    void a(int) -> a
    void a(com.shinobicontrols.charts.SChartGLDrawer,float,float[],float) -> a
    void a(com.shinobicontrols.charts.CandlestickSeries,double) -> a
com.shinobicontrols.charts.q -> com.shinobicontrols.charts.q:
    com.shinobicontrols.charts.bj b -> b
    com.shinobicontrols.charts.cm c -> c
    float d -> d
    float e -> e
    com.shinobicontrols.charts.v a -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    void a(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> a
    void b(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> b
    void c(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> c
    void d(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> d
    void a(float) -> a
    void b(float) -> b
com.shinobicontrols.charts.r -> com.shinobicontrols.charts.r:
    com.shinobicontrols.charts.v a -> a
    android.graphics.Paint b -> b
    void onDraw(android.graphics.Canvas) -> onDraw
com.shinobicontrols.charts.s -> com.shinobicontrols.charts.s:
    void a(com.shinobicontrols.charts.af,com.shinobicontrols.charts.SChartGLDrawer) -> a
    void a(com.shinobicontrols.charts.SChartGLDrawer,float,float[],float) -> a
com.shinobicontrols.charts.t -> com.shinobicontrols.charts.t:
    boolean a(com.shinobicontrols.charts.TickMark,com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.Axis,double) -> a
    boolean b(com.shinobicontrols.charts.TickMark,com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.Axis,double) -> b
    boolean a(com.shinobicontrols.charts.TickMark,com.shinobicontrols.charts.Axis$c,com.shinobicontrols.charts.Axis,boolean,boolean) -> a
    boolean a(double,double,double) -> a
com.shinobicontrols.charts.u -> com.shinobicontrols.charts.u:
    com.shinobicontrols.charts.ap n -> n
    com.shinobicontrols.charts.bh o -> o
    android.graphics.Rect a -> a
    com.shinobicontrols.charts.cr p -> p
    com.shinobicontrols.charts.ChartStyle q -> q
    com.shinobicontrols.charts.MainTitleStyle r -> r
    com.shinobicontrols.charts.Title s -> s
    com.shinobicontrols.charts.Legend t -> t
    com.shinobicontrols.charts.ar u -> u
    com.shinobicontrols.charts.v b -> b
    java.util.List c -> c
    com.shinobicontrols.charts.ck d -> d
    com.shinobicontrols.charts.ci v -> v
    com.shinobicontrols.charts.g e -> e
    com.shinobicontrols.charts.g f -> f
    com.shinobicontrols.charts.cz w -> w
    com.shinobicontrols.charts.da x -> x
    java.lang.String y -> y
    boolean z -> z
    float A -> A
    com.shinobicontrols.charts.cd g -> g
    com.shinobicontrols.charts.Crosshair h -> h
    com.shinobicontrols.charts.z i -> i
    com.shinobicontrols.charts.ShinobiChart$OnGestureListener B -> B
    com.shinobicontrols.charts.ShinobiChart$OnAxisMotionStateChangeListener j -> j
    com.shinobicontrols.charts.ShinobiChart$OnAxisRangeChangeListener k -> k
    com.shinobicontrols.charts.ShinobiChart$OnInternalLayoutListener l -> l
    com.shinobicontrols.charts.ShinobiChart$OnSeriesSelectionListener m -> m
    com.shinobicontrols.charts.ShinobiChart$OnCrosshairListener C -> C
    boolean D -> D
    java.util.List a() -> a
    com.shinobicontrols.charts.cz b() -> b
    void setLicenseKey(java.lang.String) -> setLicenseKey
    void o() -> o
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void p() -> p
    void q() -> q
    void a(android.os.Bundle) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void onMeasure(int,int) -> onMeasure
    void a(int,int) -> a
    void a(com.shinobicontrols.charts.Axis,int,int) -> a
    void a(com.shinobicontrols.charts.g) -> a
    void b(int,int) -> b
    boolean r() -> r
    void c(int,int) -> c
    boolean s() -> s
    boolean isSeriesSelectionSingle() -> isSeriesSelectionSingle
    void setSeriesSelectionSingle(boolean) -> setSeriesSelectionSingle
    boolean f() -> f
    int t() -> t
    com.shinobicontrols.charts.Axis$Position a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis$Position) -> a
    int a(com.shinobicontrols.charts.Axis,int) -> a
    int u() -> u
    void d(int,int) -> d
    void onLayout(boolean,int,int,int,int) -> onLayout
    void v() -> v
    void w() -> w
    void x() -> x
    void y() -> y
    void z() -> z
    void A() -> A
    void B() -> B
    android.view.ViewGroup$MarginLayoutParams a(android.util.AttributeSet) -> a
    android.view.ViewGroup$MarginLayoutParams a(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$MarginLayoutParams g() -> g
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void addSeries(com.shinobicontrols.charts.Series) -> addSeries
    void addSeries(com.shinobicontrols.charts.Series,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> addSeries
    void a(com.shinobicontrols.charts.Series) -> a
    boolean C() -> C
    void b(com.shinobicontrols.charts.Series) -> b
    void a(com.shinobicontrols.charts.Series,com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis) -> a
    boolean D() -> D
    com.shinobicontrols.charts.Axis c(com.shinobicontrols.charts.Axis) -> c
    com.shinobicontrols.charts.Axis d(com.shinobicontrols.charts.Axis) -> d
    void removeSeries(com.shinobicontrols.charts.Series) -> removeSeries
    java.util.List getSeries() -> getSeries
    java.util.List h() -> h
    com.shinobicontrols.charts.Axis getXAxisForSeries(com.shinobicontrols.charts.Series) -> getXAxisForSeries
    com.shinobicontrols.charts.Axis getYAxisForSeries(com.shinobicontrols.charts.Series) -> getYAxisForSeries
    java.util.List getSeriesForAxis(com.shinobicontrols.charts.Axis) -> getSeriesForAxis
    java.util.List getAllAxes() -> getAllAxes
    java.util.List getAllXAxes() -> getAllXAxes
    java.util.List getAllYAxes() -> getAllYAxes
    android.graphics.Rect getPlotAreaRect() -> getPlotAreaRect
    android.graphics.Rect getCanvasRect() -> getCanvasRect
    java.lang.String getInfo() -> getInfo
    com.shinobicontrols.charts.Legend getLegend() -> getLegend
    com.shinobicontrols.charts.Crosshair getCrosshair() -> getCrosshair
    java.util.List getPrimaryAxes() -> getPrimaryAxes
    com.shinobicontrols.charts.Axis i() -> i
    com.shinobicontrols.charts.Axis j() -> j
    com.shinobicontrols.charts.Axis getXAxis() -> getXAxis
    void setXAxis(com.shinobicontrols.charts.Axis) -> setXAxis
    void a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.g) -> a
    void e(com.shinobicontrols.charts.Axis) -> e
    com.shinobicontrols.charts.Axis getYAxis() -> getYAxis
    void setYAxis(com.shinobicontrols.charts.Axis) -> setYAxis
    void f(com.shinobicontrols.charts.Axis) -> f
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void addXAxis(com.shinobicontrols.charts.Axis) -> addXAxis
    void g(com.shinobicontrols.charts.Axis) -> g
    void addYAxis(com.shinobicontrols.charts.Axis) -> addYAxis
    void h(com.shinobicontrols.charts.Axis) -> h
    void a(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.Axis$Orientation,com.shinobicontrols.charts.AxisStyle) -> a
    com.shinobicontrols.charts.ChartStyle getStyle() -> getStyle
    void setStyle(com.shinobicontrols.charts.ChartStyle) -> setStyle
    com.shinobicontrols.charts.MainTitleStyle getTitleStyle() -> getTitleStyle
    void setTitleStyle(com.shinobicontrols.charts.MainTitleStyle) -> setTitleStyle
    void redrawChart() -> redrawChart
    void E() -> E
    void removeXAxis(com.shinobicontrols.charts.Axis) -> removeXAxis
    void removeYAxis(com.shinobicontrols.charts.Axis) -> removeYAxis
    void b(com.shinobicontrols.charts.Axis,com.shinobicontrols.charts.g) -> b
    com.shinobicontrols.charts.v k() -> k
    boolean isRadial() -> isRadial
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean F() -> F
    boolean b(com.shinobicontrols.charts.g) -> b
    void setOnGestureListener(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> setOnGestureListener
    void setOnAxisMotionStateChangeListener(com.shinobicontrols.charts.ShinobiChart$OnAxisMotionStateChangeListener) -> setOnAxisMotionStateChangeListener
    void setOnAxisRangeChangeListener(com.shinobicontrols.charts.ShinobiChart$OnAxisRangeChangeListener) -> setOnAxisRangeChangeListener
    void setOnCrosshairListener(com.shinobicontrols.charts.ShinobiChart$OnCrosshairListener) -> setOnCrosshairListener
    void setOnInternalLayoutListener(com.shinobicontrols.charts.ShinobiChart$OnInternalLayoutListener) -> setOnInternalLayoutListener
    void setOnSeriesSelectionListener(com.shinobicontrols.charts.ShinobiChart$OnSeriesSelectionListener) -> setOnSeriesSelectionListener
    void a(com.shinobicontrols.charts.Axis) -> a
    void b(com.shinobicontrols.charts.Axis) -> b
    void l() -> l
    void m() -> m
    void n() -> n
    void a(android.graphics.PointF) -> a
    void b(android.graphics.PointF) -> b
    void c(android.graphics.PointF) -> c
    void d(android.graphics.PointF) -> d
    void a(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> a
    void a(android.graphics.PointF,boolean,android.graphics.PointF) -> a
    void a(android.graphics.PointF,android.graphics.PointF) -> a
    void b(android.graphics.PointF,android.graphics.PointF) -> b
    void e(android.graphics.PointF) -> e
    void f(android.graphics.PointF) -> f
    void c(android.graphics.PointF,android.graphics.PointF) -> c
    void b(android.graphics.PointF,boolean,android.graphics.PointF) -> b
    void a(com.shinobicontrols.charts.CartesianSeries) -> a
    void a(com.shinobicontrols.charts.Series,int) -> a
    android.graphics.PointF g(android.graphics.PointF) -> g
    void G() -> G
    boolean c(com.shinobicontrols.charts.Series) -> c
    boolean c(com.shinobicontrols.charts.g) -> c
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.shinobicontrols.charts.v -> com.shinobicontrols.charts.v:
    com.shinobicontrols.charts.u a -> a
    android.graphics.Rect b -> b
    com.shinobicontrols.charts.bs g -> g
    com.shinobicontrols.charts.q h -> h
    com.shinobicontrols.charts.r i -> i
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void a(com.shinobicontrols.charts.ChartStyle) -> a
    void a() -> a
    com.shinobicontrols.charts.bs k() -> k
    void b() -> b
    void invalidate() -> invalidate
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(android.graphics.Canvas) -> a
    void b(android.graphics.Canvas) -> b
    void c(android.graphics.Canvas) -> c
    void a(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> a
    void b(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> b
    void c(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> c
    void d(com.shinobicontrols.charts.ShinobiChart$OnGestureListener) -> d
    void a(int,int,int,int) -> a
    void a(com.shinobicontrols.charts.cv) -> a
    void b(com.shinobicontrols.charts.cv) -> b
com.shinobicontrols.charts.w -> com.shinobicontrols.charts.w:
    java.lang.Object a -> a
    com.shinobicontrols.charts.ae b -> b
    com.shinobicontrols.charts.cc c -> c
    com.shinobicontrols.charts.u d -> d
    long e -> e
    double f -> f
    com.shinobicontrols.charts.AnimationManager g -> g
    com.shinobicontrols.charts.SChartGLDrawer h -> h
    com.shinobicontrols.charts.SChartGLErrorHandler i -> i
    boolean j -> j
    android.content.res.Resources k -> k
    boolean l -> l
    com.shinobicontrols.charts.af m -> m
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void a() -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void a(int) -> a
    void b() -> b
com.shinobicontrols.charts.x -> com.shinobicontrols.charts.x:
    android.view.ViewConfiguration g -> g
    com.shinobicontrols.charts.u h -> h
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int a() -> a
com.shinobicontrols.charts.y -> com.shinobicontrols.charts.y:
    int[][] a -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig[] a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,int[]) -> a
com.shinobicontrols.charts.z -> com.shinobicontrols.charts.z:
    com.shinobicontrols.charts.u a -> a
    com.shinobicontrols.charts.ce b -> b
    com.shinobicontrols.charts.bv c -> c
    com.shinobicontrols.charts.bv d -> d
    void onDoubleTapDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapDown
    void onDoubleTapUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onDoubleTapUp
    void onLongTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchDown
    void onLongTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onLongTouchUp
    void onSingleTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchDown
    void onSingleTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF) -> onSingleTouchUp
    void onSwipe(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSwipe
    void onSwipeEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onSwipeEnd
    void onSecondTouchDown(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchDown
    void onSecondTouchUp(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF) -> onSecondTouchUp
    void onPinch(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> onPinch
    void onPinchEnd(com.shinobicontrols.charts.ShinobiChart,android.graphics.PointF,boolean,android.graphics.PointF) -> onPinchEnd
    void a(com.shinobicontrols.charts.bv) -> a
    void b(com.shinobicontrols.charts.bv) -> b
    boolean a() -> a
    void a(com.shinobicontrols.charts.Series$a) -> a
    void c(com.shinobicontrols.charts.bv) -> c
    void a(com.shinobicontrols.charts.bv,com.shinobicontrols.charts.CartesianSeries,com.shinobicontrols.charts.bv) -> a
    void a(com.shinobicontrols.charts.bv,android.graphics.Rect,com.shinobicontrols.charts.bv) -> a
    void a(android.graphics.PointF) -> a
    void b() -> b
    void a(com.shinobicontrols.charts.Series) -> a
    void b(com.shinobicontrols.charts.Series) -> b
    void a(int,int) -> a
    void a(int,int,int,int) -> a
    void a(android.graphics.Canvas,android.graphics.Rect) -> a
    void c() -> c
    void d() -> d
    boolean e() -> e
    boolean f() -> f
com.shinobicontrols.charts.z$1 -> com.shinobicontrols.charts.z$1:
    int[] a -> a
org.apache.commons.io.ByteOrderMark -> org.apache.commons.io.ByteOrderMark:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.io.ByteOrderMark UTF_8 -> UTF_8
    org.apache.commons.io.ByteOrderMark UTF_16BE -> UTF_16BE
    org.apache.commons.io.ByteOrderMark UTF_16LE -> UTF_16LE
    org.apache.commons.io.ByteOrderMark UTF_32BE -> UTF_32BE
    org.apache.commons.io.ByteOrderMark UTF_32LE -> UTF_32LE
    java.lang.String charsetName -> charsetName
    int[] bytes -> bytes
    java.lang.String getCharsetName() -> getCharsetName
    int length() -> length
    int get(int) -> get
    byte[] getBytes() -> getBytes
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.io.Charsets -> org.apache.commons.io.Charsets:
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset toCharset(java.nio.charset.Charset) -> toCharset
    java.nio.charset.Charset toCharset(java.lang.String) -> toCharset
org.apache.commons.io.CopyUtils -> org.apache.commons.io.CopyUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    void copy(byte[],java.io.OutputStream) -> copy
    void copy(byte[],java.io.Writer) -> copy
    void copy(byte[],java.io.Writer,java.lang.String) -> copy
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    int copy(java.io.Reader,java.io.Writer) -> copy
    void copy(java.io.InputStream,java.io.Writer) -> copy
    void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    void copy(java.io.Reader,java.io.OutputStream) -> copy
    void copy(java.lang.String,java.io.OutputStream) -> copy
    void copy(java.lang.String,java.io.Writer) -> copy
org.apache.commons.io.DirectoryWalker -> org.apache.commons.io.DirectoryWalker:
    java.io.FileFilter filter -> filter
    int depthLimit -> depthLimit
    void walk(java.io.File,java.util.Collection) -> walk
    void walk(java.io.File,int,java.util.Collection) -> walk
    void checkIfCancelled(java.io.File,int,java.util.Collection) -> checkIfCancelled
    boolean handleIsCancelled(java.io.File,int,java.util.Collection) -> handleIsCancelled
    void handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException) -> handleCancelled
    void handleStart(java.io.File,java.util.Collection) -> handleStart
    boolean handleDirectory(java.io.File,int,java.util.Collection) -> handleDirectory
    void handleDirectoryStart(java.io.File,int,java.util.Collection) -> handleDirectoryStart
    java.io.File[] filterDirectoryContents(java.io.File,int,java.io.File[]) -> filterDirectoryContents
    void handleFile(java.io.File,int,java.util.Collection) -> handleFile
    void handleRestricted(java.io.File,int,java.util.Collection) -> handleRestricted
    void handleDirectoryEnd(java.io.File,int,java.util.Collection) -> handleDirectoryEnd
    void handleEnd(java.util.Collection) -> handleEnd
org.apache.commons.io.DirectoryWalker$CancelException -> org.apache.commons.io.DirectoryWalker$CancelException:
    long serialVersionUID -> serialVersionUID
    java.io.File file -> file
    int depth -> depth
    java.io.File getFile() -> getFile
    int getDepth() -> getDepth
org.apache.commons.io.EndianUtils -> org.apache.commons.io.EndianUtils:
    short swapShort(short) -> swapShort
    int swapInteger(int) -> swapInteger
    long swapLong(long) -> swapLong
    float swapFloat(float) -> swapFloat
    double swapDouble(double) -> swapDouble
    void writeSwappedShort(byte[],int,short) -> writeSwappedShort
    short readSwappedShort(byte[],int) -> readSwappedShort
    int readSwappedUnsignedShort(byte[],int) -> readSwappedUnsignedShort
    void writeSwappedInteger(byte[],int,int) -> writeSwappedInteger
    int readSwappedInteger(byte[],int) -> readSwappedInteger
    long readSwappedUnsignedInteger(byte[],int) -> readSwappedUnsignedInteger
    void writeSwappedLong(byte[],int,long) -> writeSwappedLong
    long readSwappedLong(byte[],int) -> readSwappedLong
    void writeSwappedFloat(byte[],int,float) -> writeSwappedFloat
    float readSwappedFloat(byte[],int) -> readSwappedFloat
    void writeSwappedDouble(byte[],int,double) -> writeSwappedDouble
    double readSwappedDouble(byte[],int) -> readSwappedDouble
    void writeSwappedShort(java.io.OutputStream,short) -> writeSwappedShort
    short readSwappedShort(java.io.InputStream) -> readSwappedShort
    int readSwappedUnsignedShort(java.io.InputStream) -> readSwappedUnsignedShort
    void writeSwappedInteger(java.io.OutputStream,int) -> writeSwappedInteger
    int readSwappedInteger(java.io.InputStream) -> readSwappedInteger
    long readSwappedUnsignedInteger(java.io.InputStream) -> readSwappedUnsignedInteger
    void writeSwappedLong(java.io.OutputStream,long) -> writeSwappedLong
    long readSwappedLong(java.io.InputStream) -> readSwappedLong
    void writeSwappedFloat(java.io.OutputStream,float) -> writeSwappedFloat
    float readSwappedFloat(java.io.InputStream) -> readSwappedFloat
    void writeSwappedDouble(java.io.OutputStream,double) -> writeSwappedDouble
    double readSwappedDouble(java.io.InputStream) -> readSwappedDouble
    int read(java.io.InputStream) -> read
org.apache.commons.io.FileCleaner -> org.apache.commons.io.FileCleaner:
    org.apache.commons.io.FileCleaningTracker theInstance -> theInstance
    void track(java.io.File,java.lang.Object) -> track
    void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    void track(java.lang.String,java.lang.Object) -> track
    void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    int getTrackCount() -> getTrackCount
    void exitWhenFinished() -> exitWhenFinished
    org.apache.commons.io.FileCleaningTracker getInstance() -> getInstance
org.apache.commons.io.FileCleaningTracker -> org.apache.commons.io.FileCleaningTracker:
    java.lang.ref.ReferenceQueue q -> q
    java.util.Collection trackers -> trackers
    java.util.List deleteFailures -> deleteFailures
    boolean exitWhenFinished -> exitWhenFinished
    java.lang.Thread reaper -> reaper
    void track(java.io.File,java.lang.Object) -> track
    void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    void track(java.lang.String,java.lang.Object) -> track
    void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> addTracker
    int getTrackCount() -> getTrackCount
    java.util.List getDeleteFailures() -> getDeleteFailures
    void exitWhenFinished() -> exitWhenFinished
org.apache.commons.io.FileCleaningTracker$Reaper -> org.apache.commons.io.FileCleaningTracker$Reaper:
    org.apache.commons.io.FileCleaningTracker this$0 -> this$0
    void run() -> run
org.apache.commons.io.FileCleaningTracker$Tracker -> org.apache.commons.io.FileCleaningTracker$Tracker:
    java.lang.String path -> path
    org.apache.commons.io.FileDeleteStrategy deleteStrategy -> deleteStrategy
    java.lang.String getPath() -> getPath
    boolean delete() -> delete
org.apache.commons.io.FileDeleteStrategy -> org.apache.commons.io.FileDeleteStrategy:
    org.apache.commons.io.FileDeleteStrategy NORMAL -> NORMAL
    org.apache.commons.io.FileDeleteStrategy FORCE -> FORCE
    java.lang.String name -> name
    boolean deleteQuietly(java.io.File) -> deleteQuietly
    void delete(java.io.File) -> delete
    boolean doDelete(java.io.File) -> doDelete
    java.lang.String toString() -> toString
org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy -> org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy:
    boolean doDelete(java.io.File) -> doDelete
org.apache.commons.io.FileExistsException -> org.apache.commons.io.FileExistsException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.io.FileSystemUtils -> org.apache.commons.io.FileSystemUtils:
    org.apache.commons.io.FileSystemUtils INSTANCE -> INSTANCE
    int INIT_PROBLEM -> INIT_PROBLEM
    int OTHER -> OTHER
    int WINDOWS -> WINDOWS
    int UNIX -> UNIX
    int POSIX_UNIX -> POSIX_UNIX
    int OS -> OS
    java.lang.String DF -> DF
    long freeSpace(java.lang.String) -> freeSpace
    long freeSpaceKb(java.lang.String) -> freeSpaceKb
    long freeSpaceKb(java.lang.String,long) -> freeSpaceKb
    long freeSpaceKb() -> freeSpaceKb
    long freeSpaceKb(long) -> freeSpaceKb
    long freeSpaceOS(java.lang.String,int,boolean,long) -> freeSpaceOS
    long freeSpaceWindows(java.lang.String,long) -> freeSpaceWindows
    long parseDir(java.lang.String,java.lang.String) -> parseDir
    long freeSpaceUnix(java.lang.String,boolean,boolean,long) -> freeSpaceUnix
    long parseBytes(java.lang.String,java.lang.String) -> parseBytes
    java.util.List performCommand(java.lang.String[],int,long) -> performCommand
    java.lang.Process openProcess(java.lang.String[]) -> openProcess
org.apache.commons.io.FileUtils -> org.apache.commons.io.FileUtils:
    long ONE_KB -> ONE_KB
    java.math.BigInteger ONE_KB_BI -> ONE_KB_BI
    long ONE_MB -> ONE_MB
    java.math.BigInteger ONE_MB_BI -> ONE_MB_BI
    long FILE_COPY_BUFFER_SIZE -> FILE_COPY_BUFFER_SIZE
    long ONE_GB -> ONE_GB
    java.math.BigInteger ONE_GB_BI -> ONE_GB_BI
    long ONE_TB -> ONE_TB
    java.math.BigInteger ONE_TB_BI -> ONE_TB_BI
    long ONE_PB -> ONE_PB
    java.math.BigInteger ONE_PB_BI -> ONE_PB_BI
    long ONE_EB -> ONE_EB
    java.math.BigInteger ONE_EB_BI -> ONE_EB_BI
    java.math.BigInteger ONE_ZB -> ONE_ZB
    java.math.BigInteger ONE_YB -> ONE_YB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    java.nio.charset.Charset UTF8 -> UTF8
    java.io.File getFile(java.io.File,java.lang.String[]) -> getFile
    java.io.File getFile(java.lang.String[]) -> getFile
    java.lang.String getTempDirectoryPath() -> getTempDirectoryPath
    java.io.File getTempDirectory() -> getTempDirectory
    java.lang.String getUserDirectoryPath() -> getUserDirectoryPath
    java.io.File getUserDirectory() -> getUserDirectory
    java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    java.io.FileOutputStream openOutputStream(java.io.File) -> openOutputStream
    java.io.FileOutputStream openOutputStream(java.io.File,boolean) -> openOutputStream
    java.lang.String byteCountToDisplaySize(java.math.BigInteger) -> byteCountToDisplaySize
    java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    void touch(java.io.File) -> touch
    java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    void innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean) -> innerListFiles
    java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> listFiles
    void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter) -> validateListFilesParameters
    org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> setUpEffectiveFileFilter
    org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter) -> setUpEffectiveDirFilter
    java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> listFilesAndDirs
    java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> iterateFiles
    java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> iterateFilesAndDirs
    java.lang.String[] toSuffixes(java.lang.String[]) -> toSuffixes
    java.util.Collection listFiles(java.io.File,java.lang.String[],boolean) -> listFiles
    java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean) -> iterateFiles
    boolean contentEquals(java.io.File,java.io.File) -> contentEquals
    boolean contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String) -> contentEqualsIgnoreEOL
    java.io.File toFile(java.net.URL) -> toFile
    java.lang.String decodeUrl(java.lang.String) -> decodeUrl
    java.io.File[] toFiles(java.net.URL[]) -> toFiles
    java.net.URL[] toURLs(java.io.File[]) -> toURLs
    void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    void copyFileToDirectory(java.io.File,java.io.File,boolean) -> copyFileToDirectory
    void copyFile(java.io.File,java.io.File) -> copyFile
    void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    long copyFile(java.io.File,java.io.OutputStream) -> copyFile
    void doCopyFile(java.io.File,java.io.File,boolean) -> doCopyFile
    void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    void copyDirectory(java.io.File,java.io.File,java.io.FileFilter) -> copyDirectory
    void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean) -> copyDirectory
    void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List) -> doCopyDirectory
    void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    void copyURLToFile(java.net.URL,java.io.File,int,int) -> copyURLToFile
    void copyInputStreamToFile(java.io.InputStream,java.io.File) -> copyInputStreamToFile
    void deleteDirectory(java.io.File) -> deleteDirectory
    boolean deleteQuietly(java.io.File) -> deleteQuietly
    boolean directoryContains(java.io.File,java.io.File) -> directoryContains
    void cleanDirectory(java.io.File) -> cleanDirectory
    boolean waitFor(java.io.File,int) -> waitFor
    java.lang.String readFileToString(java.io.File,java.nio.charset.Charset) -> readFileToString
    java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    java.lang.String readFileToString(java.io.File) -> readFileToString
    byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    java.util.List readLines(java.io.File,java.lang.String) -> readLines
    java.util.List readLines(java.io.File) -> readLines
    org.apache.commons.io.LineIterator lineIterator(java.io.File,java.lang.String) -> lineIterator
    org.apache.commons.io.LineIterator lineIterator(java.io.File) -> lineIterator
    void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset) -> writeStringToFile
    void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean) -> writeStringToFile
    void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean) -> writeStringToFile
    void writeStringToFile(java.io.File,java.lang.String) -> writeStringToFile
    void writeStringToFile(java.io.File,java.lang.String,boolean) -> writeStringToFile
    void write(java.io.File,java.lang.CharSequence) -> write
    void write(java.io.File,java.lang.CharSequence,boolean) -> write
    void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset) -> write
    void write(java.io.File,java.lang.CharSequence,java.lang.String) -> write
    void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean) -> write
    void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean) -> write
    void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    void writeByteArrayToFile(java.io.File,byte[],boolean) -> writeByteArrayToFile
    void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    void writeLines(java.io.File,java.lang.String,java.util.Collection,boolean) -> writeLines
    void writeLines(java.io.File,java.util.Collection) -> writeLines
    void writeLines(java.io.File,java.util.Collection,boolean) -> writeLines
    void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean) -> writeLines
    void writeLines(java.io.File,java.util.Collection,java.lang.String) -> writeLines
    void writeLines(java.io.File,java.util.Collection,java.lang.String,boolean) -> writeLines
    void forceDelete(java.io.File) -> forceDelete
    void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    void deleteDirectoryOnExit(java.io.File) -> deleteDirectoryOnExit
    void cleanDirectoryOnExit(java.io.File) -> cleanDirectoryOnExit
    void forceMkdir(java.io.File) -> forceMkdir
    long sizeOf(java.io.File) -> sizeOf
    java.math.BigInteger sizeOfAsBigInteger(java.io.File) -> sizeOfAsBigInteger
    long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File) -> sizeOfDirectoryAsBigInteger
    void checkDirectory(java.io.File) -> checkDirectory
    boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    boolean isFileNewer(java.io.File,long) -> isFileNewer
    boolean isFileOlder(java.io.File,java.io.File) -> isFileOlder
    boolean isFileOlder(java.io.File,java.util.Date) -> isFileOlder
    boolean isFileOlder(java.io.File,long) -> isFileOlder
    long checksumCRC32(java.io.File) -> checksumCRC32
    java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum) -> checksum
    void moveDirectory(java.io.File,java.io.File) -> moveDirectory
    void moveDirectoryToDirectory(java.io.File,java.io.File,boolean) -> moveDirectoryToDirectory
    void moveFile(java.io.File,java.io.File) -> moveFile
    void moveFileToDirectory(java.io.File,java.io.File,boolean) -> moveFileToDirectory
    void moveToDirectory(java.io.File,java.io.File,boolean) -> moveToDirectory
    boolean isSymlink(java.io.File) -> isSymlink
org.apache.commons.io.FilenameUtils -> org.apache.commons.io.FilenameUtils:
    char EXTENSION_SEPARATOR -> EXTENSION_SEPARATOR
    java.lang.String EXTENSION_SEPARATOR_STR -> EXTENSION_SEPARATOR_STR
    char UNIX_SEPARATOR -> UNIX_SEPARATOR
    char WINDOWS_SEPARATOR -> WINDOWS_SEPARATOR
    char SYSTEM_SEPARATOR -> SYSTEM_SEPARATOR
    char OTHER_SEPARATOR -> OTHER_SEPARATOR
    boolean isSystemWindows() -> isSystemWindows
    boolean isSeparator(char) -> isSeparator
    java.lang.String normalize(java.lang.String) -> normalize
    java.lang.String normalize(java.lang.String,boolean) -> normalize
    java.lang.String normalizeNoEndSeparator(java.lang.String) -> normalizeNoEndSeparator
    java.lang.String normalizeNoEndSeparator(java.lang.String,boolean) -> normalizeNoEndSeparator
    java.lang.String doNormalize(java.lang.String,char,boolean) -> doNormalize
    java.lang.String concat(java.lang.String,java.lang.String) -> concat
    boolean directoryContains(java.lang.String,java.lang.String) -> directoryContains
    java.lang.String separatorsToUnix(java.lang.String) -> separatorsToUnix
    java.lang.String separatorsToWindows(java.lang.String) -> separatorsToWindows
    java.lang.String separatorsToSystem(java.lang.String) -> separatorsToSystem
    int getPrefixLength(java.lang.String) -> getPrefixLength
    int indexOfLastSeparator(java.lang.String) -> indexOfLastSeparator
    int indexOfExtension(java.lang.String) -> indexOfExtension
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.lang.String getPath(java.lang.String) -> getPath
    java.lang.String getPathNoEndSeparator(java.lang.String) -> getPathNoEndSeparator
    java.lang.String doGetPath(java.lang.String,int) -> doGetPath
    java.lang.String getFullPath(java.lang.String) -> getFullPath
    java.lang.String getFullPathNoEndSeparator(java.lang.String) -> getFullPathNoEndSeparator
    java.lang.String doGetFullPath(java.lang.String,boolean) -> doGetFullPath
    java.lang.String getName(java.lang.String) -> getName
    java.lang.String getBaseName(java.lang.String) -> getBaseName
    java.lang.String getExtension(java.lang.String) -> getExtension
    java.lang.String removeExtension(java.lang.String) -> removeExtension
    boolean equals(java.lang.String,java.lang.String) -> equals
    boolean equalsOnSystem(java.lang.String,java.lang.String) -> equalsOnSystem
    boolean equalsNormalized(java.lang.String,java.lang.String) -> equalsNormalized
    boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String) -> equalsNormalizedOnSystem
    boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase) -> equals
    boolean isExtension(java.lang.String,java.lang.String) -> isExtension
    boolean isExtension(java.lang.String,java.lang.String[]) -> isExtension
    boolean isExtension(java.lang.String,java.util.Collection) -> isExtension
    boolean wildcardMatch(java.lang.String,java.lang.String) -> wildcardMatch
    boolean wildcardMatchOnSystem(java.lang.String,java.lang.String) -> wildcardMatchOnSystem
    boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase) -> wildcardMatch
    java.lang.String[] splitOnTokens(java.lang.String) -> splitOnTokens
org.apache.commons.io.HexDump -> org.apache.commons.io.HexDump:
    java.lang.String EOL -> EOL
    char[] _hexcodes -> _hexcodes
    int[] _shifts -> _shifts
    void dump(byte[],long,java.io.OutputStream,int) -> dump
    java.lang.StringBuilder dump(java.lang.StringBuilder,long) -> dump
    java.lang.StringBuilder dump(java.lang.StringBuilder,byte) -> dump
org.apache.commons.io.IOCase -> org.apache.commons.io.IOCase:
    org.apache.commons.io.IOCase SENSITIVE -> SENSITIVE
    org.apache.commons.io.IOCase INSENSITIVE -> INSENSITIVE
    org.apache.commons.io.IOCase SYSTEM -> SYSTEM
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    boolean sensitive -> sensitive
    org.apache.commons.io.IOCase forName(java.lang.String) -> forName
    java.lang.Object readResolve() -> readResolve
    java.lang.String getName() -> getName
    boolean isCaseSensitive() -> isCaseSensitive
    int checkCompareTo(java.lang.String,java.lang.String) -> checkCompareTo
    boolean checkEquals(java.lang.String,java.lang.String) -> checkEquals
    boolean checkStartsWith(java.lang.String,java.lang.String) -> checkStartsWith
    boolean checkEndsWith(java.lang.String,java.lang.String) -> checkEndsWith
    int checkIndexOf(java.lang.String,int,java.lang.String) -> checkIndexOf
    boolean checkRegionMatches(java.lang.String,int,java.lang.String) -> checkRegionMatches
    java.lang.String toString() -> toString
org.apache.commons.io.IOExceptionWithCause -> org.apache.commons.io.IOExceptionWithCause:
    long serialVersionUID -> serialVersionUID
org.apache.commons.io.IOUtils -> org.apache.commons.io.IOUtils:
    int EOF -> EOF
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int SKIP_BUFFER_SIZE -> SKIP_BUFFER_SIZE
    char[] SKIP_CHAR_BUFFER -> SKIP_CHAR_BUFFER
    byte[] SKIP_BYTE_BUFFER -> SKIP_BYTE_BUFFER
    void close(java.net.URLConnection) -> close
    void closeQuietly(java.io.Reader) -> closeQuietly
    void closeQuietly(java.io.Writer) -> closeQuietly
    void closeQuietly(java.io.InputStream) -> closeQuietly
    void closeQuietly(java.io.OutputStream) -> closeQuietly
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(java.net.Socket) -> closeQuietly
    void closeQuietly(java.nio.channels.Selector) -> closeQuietly
    void closeQuietly(java.net.ServerSocket) -> closeQuietly
    java.io.InputStream toBufferedInputStream(java.io.InputStream) -> toBufferedInputStream
    java.io.BufferedReader toBufferedReader(java.io.Reader) -> toBufferedReader
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    byte[] toByteArray(java.io.InputStream,long) -> toByteArray
    byte[] toByteArray(java.io.InputStream,int) -> toByteArray
    byte[] toByteArray(java.io.Reader) -> toByteArray
    byte[] toByteArray(java.io.Reader,java.nio.charset.Charset) -> toByteArray
    byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    byte[] toByteArray(java.lang.String) -> toByteArray
    byte[] toByteArray(java.net.URI) -> toByteArray
    byte[] toByteArray(java.net.URL) -> toByteArray
    byte[] toByteArray(java.net.URLConnection) -> toByteArray
    char[] toCharArray(java.io.InputStream) -> toCharArray
    char[] toCharArray(java.io.InputStream,java.nio.charset.Charset) -> toCharArray
    char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    char[] toCharArray(java.io.Reader) -> toCharArray
    java.lang.String toString(java.io.InputStream) -> toString
    java.lang.String toString(java.io.InputStream,java.nio.charset.Charset) -> toString
    java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    java.lang.String toString(java.io.Reader) -> toString
    java.lang.String toString(java.net.URI) -> toString
    java.lang.String toString(java.net.URI,java.nio.charset.Charset) -> toString
    java.lang.String toString(java.net.URI,java.lang.String) -> toString
    java.lang.String toString(java.net.URL) -> toString
    java.lang.String toString(java.net.URL,java.nio.charset.Charset) -> toString
    java.lang.String toString(java.net.URL,java.lang.String) -> toString
    java.lang.String toString(byte[]) -> toString
    java.lang.String toString(byte[],java.lang.String) -> toString
    java.util.List readLines(java.io.InputStream) -> readLines
    java.util.List readLines(java.io.InputStream,java.nio.charset.Charset) -> readLines
    java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    java.util.List readLines(java.io.Reader) -> readLines
    org.apache.commons.io.LineIterator lineIterator(java.io.Reader) -> lineIterator
    org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.nio.charset.Charset) -> lineIterator
    org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.lang.String) -> lineIterator
    java.io.InputStream toInputStream(java.lang.CharSequence) -> toInputStream
    java.io.InputStream toInputStream(java.lang.CharSequence,java.nio.charset.Charset) -> toInputStream
    java.io.InputStream toInputStream(java.lang.CharSequence,java.lang.String) -> toInputStream
    java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    java.io.InputStream toInputStream(java.lang.String,java.nio.charset.Charset) -> toInputStream
    java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    void write(byte[],java.io.OutputStream) -> write
    void write(byte[],java.io.Writer) -> write
    void write(byte[],java.io.Writer,java.nio.charset.Charset) -> write
    void write(byte[],java.io.Writer,java.lang.String) -> write
    void write(char[],java.io.Writer) -> write
    void write(char[],java.io.OutputStream) -> write
    void write(char[],java.io.OutputStream,java.nio.charset.Charset) -> write
    void write(char[],java.io.OutputStream,java.lang.String) -> write
    void write(java.lang.CharSequence,java.io.Writer) -> write
    void write(java.lang.CharSequence,java.io.OutputStream) -> write
    void write(java.lang.CharSequence,java.io.OutputStream,java.nio.charset.Charset) -> write
    void write(java.lang.CharSequence,java.io.OutputStream,java.lang.String) -> write
    void write(java.lang.String,java.io.Writer) -> write
    void write(java.lang.String,java.io.OutputStream) -> write
    void write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset) -> write
    void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    void write(java.lang.StringBuffer,java.io.Writer) -> write
    void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.nio.charset.Charset) -> writeLines
    void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[]) -> copyLarge
    void copy(java.io.InputStream,java.io.Writer) -> copy
    void copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset) -> copy
    void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    int copy(java.io.Reader,java.io.Writer) -> copy
    long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    long copyLarge(java.io.Reader,java.io.Writer,char[]) -> copyLarge
    long copyLarge(java.io.Reader,java.io.Writer,long,long) -> copyLarge
    long copyLarge(java.io.Reader,java.io.Writer,long,long,char[]) -> copyLarge
    void copy(java.io.Reader,java.io.OutputStream) -> copy
    void copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset) -> copy
    void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    boolean contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader) -> contentEqualsIgnoreEOL
    long skip(java.io.InputStream,long) -> skip
    long skip(java.io.Reader,long) -> skip
    void skipFully(java.io.InputStream,long) -> skipFully
    void skipFully(java.io.Reader,long) -> skipFully
    int read(java.io.Reader,char[],int,int) -> read
    int read(java.io.Reader,char[]) -> read
    int read(java.io.InputStream,byte[],int,int) -> read
    int read(java.io.InputStream,byte[]) -> read
    void readFully(java.io.Reader,char[],int,int) -> readFully
    void readFully(java.io.Reader,char[]) -> readFully
    void readFully(java.io.InputStream,byte[],int,int) -> readFully
    void readFully(java.io.InputStream,byte[]) -> readFully
org.apache.commons.io.LineIterator -> org.apache.commons.io.LineIterator:
    java.io.BufferedReader bufferedReader -> bufferedReader
    java.lang.String cachedLine -> cachedLine
    boolean finished -> finished
    boolean hasNext() -> hasNext
    boolean isValidLine(java.lang.String) -> isValidLine
    java.lang.String next() -> next
    java.lang.String nextLine() -> nextLine
    void close() -> close
    void remove() -> remove
    void closeQuietly(org.apache.commons.io.LineIterator) -> closeQuietly
    java.lang.Object next() -> next
org.apache.commons.io.TaggedIOException -> org.apache.commons.io.TaggedIOException:
    long serialVersionUID -> serialVersionUID
    java.io.Serializable tag -> tag
    boolean isTaggedWith(java.lang.Throwable,java.lang.Object) -> isTaggedWith
    void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object) -> throwCauseIfTaggedWith
    java.io.Serializable getTag() -> getTag
    java.io.IOException getCause() -> getCause
    java.lang.Throwable getCause() -> getCause
org.apache.commons.io.ThreadMonitor -> org.apache.commons.io.ThreadMonitor:
    java.lang.Thread thread -> thread
    long timeout -> timeout
    java.lang.Thread start(long) -> start
    java.lang.Thread start(java.lang.Thread,long) -> start
    void stop(java.lang.Thread) -> stop
    void run() -> run
org.apache.commons.io.comparator.AbstractFileComparator -> org.apache.commons.io.comparator.AbstractFileComparator:
    java.io.File[] sort(java.io.File[]) -> sort
    java.util.List sort(java.util.List) -> sort
    java.lang.String toString() -> toString
org.apache.commons.io.comparator.CompositeFileComparator -> org.apache.commons.io.comparator.CompositeFileComparator:
    java.util.Comparator[] NO_COMPARATORS -> NO_COMPARATORS
    java.util.Comparator[] delegates -> delegates
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.DefaultFileComparator -> org.apache.commons.io.comparator.DefaultFileComparator:
    java.util.Comparator DEFAULT_COMPARATOR -> DEFAULT_COMPARATOR
    java.util.Comparator DEFAULT_REVERSE -> DEFAULT_REVERSE
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.DirectoryFileComparator -> org.apache.commons.io.comparator.DirectoryFileComparator:
    java.util.Comparator DIRECTORY_COMPARATOR -> DIRECTORY_COMPARATOR
    java.util.Comparator DIRECTORY_REVERSE -> DIRECTORY_REVERSE
    int compare(java.io.File,java.io.File) -> compare
    int getType(java.io.File) -> getType
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.ExtensionFileComparator -> org.apache.commons.io.comparator.ExtensionFileComparator:
    java.util.Comparator EXTENSION_COMPARATOR -> EXTENSION_COMPARATOR
    java.util.Comparator EXTENSION_REVERSE -> EXTENSION_REVERSE
    java.util.Comparator EXTENSION_INSENSITIVE_COMPARATOR -> EXTENSION_INSENSITIVE_COMPARATOR
    java.util.Comparator EXTENSION_INSENSITIVE_REVERSE -> EXTENSION_INSENSITIVE_REVERSE
    java.util.Comparator EXTENSION_SYSTEM_COMPARATOR -> EXTENSION_SYSTEM_COMPARATOR
    java.util.Comparator EXTENSION_SYSTEM_REVERSE -> EXTENSION_SYSTEM_REVERSE
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.LastModifiedFileComparator -> org.apache.commons.io.comparator.LastModifiedFileComparator:
    java.util.Comparator LASTMODIFIED_COMPARATOR -> LASTMODIFIED_COMPARATOR
    java.util.Comparator LASTMODIFIED_REVERSE -> LASTMODIFIED_REVERSE
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.NameFileComparator -> org.apache.commons.io.comparator.NameFileComparator:
    java.util.Comparator NAME_COMPARATOR -> NAME_COMPARATOR
    java.util.Comparator NAME_REVERSE -> NAME_REVERSE
    java.util.Comparator NAME_INSENSITIVE_COMPARATOR -> NAME_INSENSITIVE_COMPARATOR
    java.util.Comparator NAME_INSENSITIVE_REVERSE -> NAME_INSENSITIVE_REVERSE
    java.util.Comparator NAME_SYSTEM_COMPARATOR -> NAME_SYSTEM_COMPARATOR
    java.util.Comparator NAME_SYSTEM_REVERSE -> NAME_SYSTEM_REVERSE
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.PathFileComparator -> org.apache.commons.io.comparator.PathFileComparator:
    java.util.Comparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.util.Comparator PATH_REVERSE -> PATH_REVERSE
    java.util.Comparator PATH_INSENSITIVE_COMPARATOR -> PATH_INSENSITIVE_COMPARATOR
    java.util.Comparator PATH_INSENSITIVE_REVERSE -> PATH_INSENSITIVE_REVERSE
    java.util.Comparator PATH_SYSTEM_COMPARATOR -> PATH_SYSTEM_COMPARATOR
    java.util.Comparator PATH_SYSTEM_REVERSE -> PATH_SYSTEM_REVERSE
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.ReverseComparator -> org.apache.commons.io.comparator.ReverseComparator:
    java.util.Comparator delegate -> delegate
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.comparator.SizeFileComparator -> org.apache.commons.io.comparator.SizeFileComparator:
    java.util.Comparator SIZE_COMPARATOR -> SIZE_COMPARATOR
    java.util.Comparator SIZE_REVERSE -> SIZE_REVERSE
    java.util.Comparator SIZE_SUMDIR_COMPARATOR -> SIZE_SUMDIR_COMPARATOR
    java.util.Comparator SIZE_SUMDIR_REVERSE -> SIZE_SUMDIR_REVERSE
    boolean sumDirectoryContents -> sumDirectoryContents
    int compare(java.io.File,java.io.File) -> compare
    java.lang.String toString() -> toString
    java.util.List sort(java.util.List) -> sort
    java.io.File[] sort(java.io.File[]) -> sort
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.filefilter.AbstractFileFilter -> org.apache.commons.io.filefilter.AbstractFileFilter:
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.AgeFileFilter -> org.apache.commons.io.filefilter.AgeFileFilter:
    long cutoff -> cutoff
    boolean acceptOlder -> acceptOlder
    boolean accept(java.io.File) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.AndFileFilter -> org.apache.commons.io.filefilter.AndFileFilter:
    java.util.List fileFilters -> fileFilters
    void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    java.util.List getFileFilters() -> getFileFilters
    boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    void setFileFilters(java.util.List) -> setFileFilters
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.CanReadFileFilter -> org.apache.commons.io.filefilter.CanReadFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter CAN_READ -> CAN_READ
    org.apache.commons.io.filefilter.IOFileFilter CANNOT_READ -> CANNOT_READ
    org.apache.commons.io.filefilter.IOFileFilter READ_ONLY -> READ_ONLY
    boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.CanWriteFileFilter -> org.apache.commons.io.filefilter.CanWriteFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter CAN_WRITE -> CAN_WRITE
    org.apache.commons.io.filefilter.IOFileFilter CANNOT_WRITE -> CANNOT_WRITE
    boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.ConditionalFileFilter -> org.apache.commons.io.filefilter.ConditionalFileFilter:
    void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    java.util.List getFileFilters() -> getFileFilters
    boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    void setFileFilters(java.util.List) -> setFileFilters
org.apache.commons.io.filefilter.DelegateFileFilter -> org.apache.commons.io.filefilter.DelegateFileFilter:
    java.io.FilenameFilter filenameFilter -> filenameFilter
    java.io.FileFilter fileFilter -> fileFilter
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.DirectoryFileFilter -> org.apache.commons.io.filefilter.DirectoryFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter DIRECTORY -> DIRECTORY
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.EmptyFileFilter -> org.apache.commons.io.filefilter.EmptyFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter EMPTY -> EMPTY
    org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY -> NOT_EMPTY
    boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.FalseFileFilter -> org.apache.commons.io.filefilter.FalseFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter FALSE -> FALSE
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.FileFileFilter -> org.apache.commons.io.filefilter.FileFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter FILE -> FILE
    boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.FileFilterUtils -> org.apache.commons.io.filefilter.FileFilterUtils:
    org.apache.commons.io.filefilter.IOFileFilter cvsFilter -> cvsFilter
    org.apache.commons.io.filefilter.IOFileFilter svnFilter -> svnFilter
    java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[]) -> filter
    java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable) -> filter
    java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable) -> filterList
    java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[]) -> filterList
    java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[]) -> filterSet
    java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable) -> filterSet
    java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection) -> filter
    org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String) -> prefixFileFilter
    org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String,org.apache.commons.io.IOCase) -> prefixFileFilter
    org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String) -> suffixFileFilter
    org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String,org.apache.commons.io.IOCase) -> suffixFileFilter
    org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String) -> nameFileFilter
    org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String,org.apache.commons.io.IOCase) -> nameFileFilter
    org.apache.commons.io.filefilter.IOFileFilter directoryFileFilter() -> directoryFileFilter
    org.apache.commons.io.filefilter.IOFileFilter fileFileFilter() -> fileFileFilter
    org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> andFileFilter
    org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> orFileFilter
    org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[]) -> and
    org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[]) -> or
    java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[]) -> toList
    org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> notFileFilter
    org.apache.commons.io.filefilter.IOFileFilter trueFileFilter() -> trueFileFilter
    org.apache.commons.io.filefilter.IOFileFilter falseFileFilter() -> falseFileFilter
    org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter) -> asFileFilter
    org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter) -> asFileFilter
    org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long) -> ageFileFilter
    org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long,boolean) -> ageFileFilter
    org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date) -> ageFileFilter
    org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date,boolean) -> ageFileFilter
    org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File) -> ageFileFilter
    org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File,boolean) -> ageFileFilter
    org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long) -> sizeFileFilter
    org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long,boolean) -> sizeFileFilter
    org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long) -> sizeRangeFileFilter
    org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String) -> magicNumberFileFilter
    org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String,long) -> magicNumberFileFilter
    org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[]) -> magicNumberFileFilter
    org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[],long) -> magicNumberFileFilter
    org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter) -> makeCVSAware
    org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter) -> makeSVNAware
    org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter) -> makeDirectoryOnly
    org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter) -> makeFileOnly
org.apache.commons.io.filefilter.HiddenFileFilter -> org.apache.commons.io.filefilter.HiddenFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter HIDDEN -> HIDDEN
    org.apache.commons.io.filefilter.IOFileFilter VISIBLE -> VISIBLE
    boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.IOFileFilter -> org.apache.commons.io.filefilter.IOFileFilter:
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.MagicNumberFileFilter -> org.apache.commons.io.filefilter.MagicNumberFileFilter:
    long serialVersionUID -> serialVersionUID
    byte[] magicNumbers -> magicNumbers
    long byteOffset -> byteOffset
    boolean accept(java.io.File) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.NameFileFilter -> org.apache.commons.io.filefilter.NameFileFilter:
    java.lang.String[] names -> names
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.NotFileFilter -> org.apache.commons.io.filefilter.NotFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter filter -> filter
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.OrFileFilter -> org.apache.commons.io.filefilter.OrFileFilter:
    java.util.List fileFilters -> fileFilters
    void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    java.util.List getFileFilters() -> getFileFilters
    boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    void setFileFilters(java.util.List) -> setFileFilters
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.PrefixFileFilter -> org.apache.commons.io.filefilter.PrefixFileFilter:
    java.lang.String[] prefixes -> prefixes
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.RegexFileFilter -> org.apache.commons.io.filefilter.RegexFileFilter:
    java.util.regex.Pattern pattern -> pattern
    boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.SizeFileFilter -> org.apache.commons.io.filefilter.SizeFileFilter:
    long size -> size
    boolean acceptLarger -> acceptLarger
    boolean accept(java.io.File) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.SuffixFileFilter -> org.apache.commons.io.filefilter.SuffixFileFilter:
    java.lang.String[] suffixes -> suffixes
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.TrueFileFilter -> org.apache.commons.io.filefilter.TrueFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter TRUE -> TRUE
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.WildcardFileFilter -> org.apache.commons.io.filefilter.WildcardFileFilter:
    java.lang.String[] wildcards -> wildcards
    org.apache.commons.io.IOCase caseSensitivity -> caseSensitivity
    boolean accept(java.io.File,java.lang.String) -> accept
    boolean accept(java.io.File) -> accept
    java.lang.String toString() -> toString
org.apache.commons.io.filefilter.WildcardFilter -> org.apache.commons.io.filefilter.WildcardFilter:
    java.lang.String[] wildcards -> wildcards
    boolean accept(java.io.File,java.lang.String) -> accept
    boolean accept(java.io.File) -> accept
org.apache.commons.io.input.AutoCloseInputStream -> org.apache.commons.io.input.AutoCloseInputStream:
    void close() -> close
    void afterRead(int) -> afterRead
    void finalize() -> finalize
org.apache.commons.io.input.BOMInputStream -> org.apache.commons.io.input.BOMInputStream:
    boolean include -> include
    java.util.List boms -> boms
    org.apache.commons.io.ByteOrderMark byteOrderMark -> byteOrderMark
    int[] firstBytes -> firstBytes
    int fbLength -> fbLength
    int fbIndex -> fbIndex
    int markFbIndex -> markFbIndex
    boolean markedAtStart -> markedAtStart
    java.util.Comparator ByteOrderMarkLengthComparator -> ByteOrderMarkLengthComparator
    boolean hasBOM() -> hasBOM
    boolean hasBOM(org.apache.commons.io.ByteOrderMark) -> hasBOM
    org.apache.commons.io.ByteOrderMark getBOM() -> getBOM
    java.lang.String getBOMCharsetName() -> getBOMCharsetName
    int readFirstBytes() -> readFirstBytes
    org.apache.commons.io.ByteOrderMark find() -> find
    boolean matches(org.apache.commons.io.ByteOrderMark) -> matches
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void mark(int) -> mark
    void reset() -> reset
    long skip(long) -> skip
org.apache.commons.io.input.BOMInputStream$1 -> org.apache.commons.io.input.BOMInputStream$1:
    int compare(org.apache.commons.io.ByteOrderMark,org.apache.commons.io.ByteOrderMark) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.io.input.BoundedInputStream -> org.apache.commons.io.input.BoundedInputStream:
    java.io.InputStream in -> in
    long max -> max
    long pos -> pos
    long mark -> mark
    boolean propagateClose -> propagateClose
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    java.lang.String toString() -> toString
    void close() -> close
    void reset() -> reset
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    boolean isPropagateClose() -> isPropagateClose
    void setPropagateClose(boolean) -> setPropagateClose
org.apache.commons.io.input.BrokenInputStream -> org.apache.commons.io.input.BrokenInputStream:
    java.io.IOException exception -> exception
    int read() -> read
    int available() -> available
    long skip(long) -> skip
    void reset() -> reset
    void close() -> close
org.apache.commons.io.input.CharSequenceInputStream -> org.apache.commons.io.input.CharSequenceInputStream:
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.CharBuffer cbuf -> cbuf
    java.nio.ByteBuffer bbuf -> bbuf
    int mark -> mark
    void fillBuffer() -> fillBuffer
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
org.apache.commons.io.input.CharSequenceReader -> org.apache.commons.io.input.CharSequenceReader:
    java.lang.CharSequence charSequence -> charSequence
    int idx -> idx
    int mark -> mark
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(char[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    java.lang.String toString() -> toString
org.apache.commons.io.input.ClassLoaderObjectInputStream -> org.apache.commons.io.input.ClassLoaderObjectInputStream:
    java.lang.ClassLoader classLoader -> classLoader
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    java.lang.Class resolveProxyClass(java.lang.String[]) -> resolveProxyClass
org.apache.commons.io.input.CloseShieldInputStream -> org.apache.commons.io.input.CloseShieldInputStream:
    void close() -> close
org.apache.commons.io.input.ClosedInputStream -> org.apache.commons.io.input.ClosedInputStream:
    org.apache.commons.io.input.ClosedInputStream CLOSED_INPUT_STREAM -> CLOSED_INPUT_STREAM
    int read() -> read
org.apache.commons.io.input.CountingInputStream -> org.apache.commons.io.input.CountingInputStream:
    long count -> count
    long skip(long) -> skip
    void afterRead(int) -> afterRead
    int getCount() -> getCount
    int resetCount() -> resetCount
    long getByteCount() -> getByteCount
    long resetByteCount() -> resetByteCount
org.apache.commons.io.input.DemuxInputStream -> org.apache.commons.io.input.DemuxInputStream:
    java.lang.InheritableThreadLocal m_streams -> m_streams
    java.io.InputStream bindStream(java.io.InputStream) -> bindStream
    void close() -> close
    int read() -> read
org.apache.commons.io.input.NullInputStream -> org.apache.commons.io.input.NullInputStream:
    long size -> size
    long position -> position
    long mark -> mark
    long readlimit -> readlimit
    boolean eof -> eof
    boolean throwEofException -> throwEofException
    boolean markSupported -> markSupported
    long getPosition() -> getPosition
    long getSize() -> getSize
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    int processByte() -> processByte
    void processBytes(byte[],int,int) -> processBytes
    int doEndOfFile() -> doEndOfFile
org.apache.commons.io.input.NullReader -> org.apache.commons.io.input.NullReader:
    long size -> size
    long position -> position
    long mark -> mark
    long readlimit -> readlimit
    boolean eof -> eof
    boolean throwEofException -> throwEofException
    boolean markSupported -> markSupported
    long getPosition() -> getPosition
    long getSize() -> getSize
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(char[]) -> read
    int read(char[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    int processChar() -> processChar
    void processChars(char[],int,int) -> processChars
    int doEndOfFile() -> doEndOfFile
org.apache.commons.io.input.ProxyInputStream -> org.apache.commons.io.input.ProxyInputStream:
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void beforeRead(int) -> beforeRead
    void afterRead(int) -> afterRead
    void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.input.ProxyReader -> org.apache.commons.io.input.ProxyReader:
    int read() -> read
    int read(char[]) -> read
    int read(char[],int,int) -> read
    int read(java.nio.CharBuffer) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    void close() -> close
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void beforeRead(int) -> beforeRead
    void afterRead(int) -> afterRead
    void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.input.ReaderInputStream -> org.apache.commons.io.input.ReaderInputStream:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.Reader reader -> reader
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.CharBuffer encoderIn -> encoderIn
    java.nio.ByteBuffer encoderOut -> encoderOut
    java.nio.charset.CoderResult lastCoderResult -> lastCoderResult
    boolean endOfInput -> endOfInput
    void fillBuffer() -> fillBuffer
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    void close() -> close
org.apache.commons.io.input.ReversedLinesFileReader -> org.apache.commons.io.input.ReversedLinesFileReader:
    int blockSize -> blockSize
    java.nio.charset.Charset encoding -> encoding
    java.io.RandomAccessFile randomAccessFile -> randomAccessFile
    long totalByteLength -> totalByteLength
    long totalBlockCount -> totalBlockCount
    byte[][] newLineSequences -> newLineSequences
    int avoidNewlineSplitBufferSize -> avoidNewlineSplitBufferSize
    int byteDecrement -> byteDecrement
    org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart -> currentFilePart
    boolean trailingNewlineOfFileSkipped -> trailingNewlineOfFileSkipped
    java.lang.String readLine() -> readLine
    void close() -> close
    int access$300(org.apache.commons.io.input.ReversedLinesFileReader) -> access$300
    java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader) -> access$400
    java.nio.charset.Charset access$500(org.apache.commons.io.input.ReversedLinesFileReader) -> access$500
    int access$600(org.apache.commons.io.input.ReversedLinesFileReader) -> access$600
    int access$700(org.apache.commons.io.input.ReversedLinesFileReader) -> access$700
    byte[][] access$800(org.apache.commons.io.input.ReversedLinesFileReader) -> access$800
org.apache.commons.io.input.ReversedLinesFileReader$1 -> org.apache.commons.io.input.ReversedLinesFileReader$1:
org.apache.commons.io.input.ReversedLinesFileReader$FilePart -> org.apache.commons.io.input.ReversedLinesFileReader$FilePart:
    long no -> no
    byte[] data -> data
    byte[] leftOver -> leftOver
    int currentLastBytePos -> currentLastBytePos
    org.apache.commons.io.input.ReversedLinesFileReader this$0 -> this$0
    org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver() -> rollOver
    java.lang.String readLine() -> readLine
    void createLeftOver() -> createLeftOver
    int getNewLineMatchByteCount(byte[],int) -> getNewLineMatchByteCount
    java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart) -> access$100
    org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart) -> access$200
org.apache.commons.io.input.SwappedDataInputStream -> org.apache.commons.io.input.SwappedDataInputStream:
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    char readChar() -> readChar
    double readDouble() -> readDouble
    float readFloat() -> readFloat
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int readInt() -> readInt
    java.lang.String readLine() -> readLine
    long readLong() -> readLong
    short readShort() -> readShort
    int readUnsignedByte() -> readUnsignedByte
    int readUnsignedShort() -> readUnsignedShort
    java.lang.String readUTF() -> readUTF
    int skipBytes(int) -> skipBytes
org.apache.commons.io.input.TaggedInputStream -> org.apache.commons.io.input.TaggedInputStream:
    java.io.Serializable tag -> tag
    boolean isCauseOf(java.lang.Throwable) -> isCauseOf
    void throwIfCauseOf(java.lang.Throwable) -> throwIfCauseOf
    void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.input.Tailer -> org.apache.commons.io.input.Tailer:
    int DEFAULT_DELAY_MILLIS -> DEFAULT_DELAY_MILLIS
    java.lang.String RAF_MODE -> RAF_MODE
    int DEFAULT_BUFSIZE -> DEFAULT_BUFSIZE
    byte[] inbuf -> inbuf
    java.io.File file -> file
    long delayMillis -> delayMillis
    boolean end -> end
    org.apache.commons.io.input.TailerListener listener -> listener
    boolean reOpen -> reOpen
    boolean run -> run
    org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int) -> create
    org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int) -> create
    org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean) -> create
    org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean) -> create
    org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long) -> create
    org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener) -> create
    java.io.File getFile() -> getFile
    long getDelay() -> getDelay
    void run() -> run
    void stop() -> stop
    long readLines(java.io.RandomAccessFile) -> readLines
org.apache.commons.io.input.TailerListener -> org.apache.commons.io.input.TailerListener:
    void init(org.apache.commons.io.input.Tailer) -> init
    void fileNotFound() -> fileNotFound
    void fileRotated() -> fileRotated
    void handle(java.lang.String) -> handle
    void handle(java.lang.Exception) -> handle
org.apache.commons.io.input.TailerListenerAdapter -> org.apache.commons.io.input.TailerListenerAdapter:
    void init(org.apache.commons.io.input.Tailer) -> init
    void fileNotFound() -> fileNotFound
    void fileRotated() -> fileRotated
    void handle(java.lang.String) -> handle
    void handle(java.lang.Exception) -> handle
org.apache.commons.io.input.TeeInputStream -> org.apache.commons.io.input.TeeInputStream:
    java.io.OutputStream branch -> branch
    boolean closeBranch -> closeBranch
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
org.apache.commons.io.input.XmlStreamReader -> org.apache.commons.io.input.XmlStreamReader:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String UTF_8 -> UTF_8
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_32BE -> UTF_32BE
    java.lang.String UTF_32LE -> UTF_32LE
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_32 -> UTF_32
    java.lang.String EBCDIC -> EBCDIC
    org.apache.commons.io.ByteOrderMark[] BOMS -> BOMS
    org.apache.commons.io.ByteOrderMark[] XML_GUESS_BYTES -> XML_GUESS_BYTES
    java.io.Reader reader -> reader
    java.lang.String encoding -> encoding
    java.lang.String defaultEncoding -> defaultEncoding
    java.util.regex.Pattern CHARSET_PATTERN -> CHARSET_PATTERN
    java.util.regex.Pattern ENCODING_PATTERN -> ENCODING_PATTERN
    java.lang.String RAW_EX_1 -> RAW_EX_1
    java.lang.String RAW_EX_2 -> RAW_EX_2
    java.lang.String HTTP_EX_1 -> HTTP_EX_1
    java.lang.String HTTP_EX_2 -> HTTP_EX_2
    java.lang.String HTTP_EX_3 -> HTTP_EX_3
    java.lang.String getDefaultEncoding() -> getDefaultEncoding
    java.lang.String getEncoding() -> getEncoding
    int read(char[],int,int) -> read
    void close() -> close
    java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean) -> doRawStream
    java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean) -> doHttpStream
    java.lang.String doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException) -> doLenientDetection
    java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String) -> calculateRawEncoding
    java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> calculateHttpEncoding
    java.lang.String getContentTypeMime(java.lang.String) -> getContentTypeMime
    java.lang.String getContentTypeEncoding(java.lang.String) -> getContentTypeEncoding
    java.lang.String getXmlProlog(java.io.InputStream,java.lang.String) -> getXmlProlog
    boolean isAppXml(java.lang.String) -> isAppXml
    boolean isTextXml(java.lang.String) -> isTextXml
org.apache.commons.io.input.XmlStreamReaderException -> org.apache.commons.io.input.XmlStreamReaderException:
    long serialVersionUID -> serialVersionUID
    java.lang.String bomEncoding -> bomEncoding
    java.lang.String xmlGuessEncoding -> xmlGuessEncoding
    java.lang.String xmlEncoding -> xmlEncoding
    java.lang.String contentTypeMime -> contentTypeMime
    java.lang.String contentTypeEncoding -> contentTypeEncoding
    java.lang.String getBomEncoding() -> getBomEncoding
    java.lang.String getXmlGuessEncoding() -> getXmlGuessEncoding
    java.lang.String getXmlEncoding() -> getXmlEncoding
    java.lang.String getContentTypeMime() -> getContentTypeMime
    java.lang.String getContentTypeEncoding() -> getContentTypeEncoding
org.apache.commons.io.monitor.FileAlterationListener -> org.apache.commons.io.monitor.FileAlterationListener:
    void onStart(org.apache.commons.io.monitor.FileAlterationObserver) -> onStart
    void onDirectoryCreate(java.io.File) -> onDirectoryCreate
    void onDirectoryChange(java.io.File) -> onDirectoryChange
    void onDirectoryDelete(java.io.File) -> onDirectoryDelete
    void onFileCreate(java.io.File) -> onFileCreate
    void onFileChange(java.io.File) -> onFileChange
    void onFileDelete(java.io.File) -> onFileDelete
    void onStop(org.apache.commons.io.monitor.FileAlterationObserver) -> onStop
org.apache.commons.io.monitor.FileAlterationListenerAdaptor -> org.apache.commons.io.monitor.FileAlterationListenerAdaptor:
    void onStart(org.apache.commons.io.monitor.FileAlterationObserver) -> onStart
    void onDirectoryCreate(java.io.File) -> onDirectoryCreate
    void onDirectoryChange(java.io.File) -> onDirectoryChange
    void onDirectoryDelete(java.io.File) -> onDirectoryDelete
    void onFileCreate(java.io.File) -> onFileCreate
    void onFileChange(java.io.File) -> onFileChange
    void onFileDelete(java.io.File) -> onFileDelete
    void onStop(org.apache.commons.io.monitor.FileAlterationObserver) -> onStop
org.apache.commons.io.monitor.FileAlterationMonitor -> org.apache.commons.io.monitor.FileAlterationMonitor:
    long interval -> interval
    java.util.List observers -> observers
    java.lang.Thread thread -> thread
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    boolean running -> running
    long getInterval() -> getInterval
    void setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    void addObserver(org.apache.commons.io.monitor.FileAlterationObserver) -> addObserver
    void removeObserver(org.apache.commons.io.monitor.FileAlterationObserver) -> removeObserver
    java.lang.Iterable getObservers() -> getObservers
    void start() -> start
    void stop() -> stop
    void stop(long) -> stop
    void run() -> run
org.apache.commons.io.monitor.FileAlterationObserver -> org.apache.commons.io.monitor.FileAlterationObserver:
    java.util.List listeners -> listeners
    org.apache.commons.io.monitor.FileEntry rootEntry -> rootEntry
    java.io.FileFilter fileFilter -> fileFilter
    java.util.Comparator comparator -> comparator
    java.io.File getDirectory() -> getDirectory
    java.io.FileFilter getFileFilter() -> getFileFilter
    void addListener(org.apache.commons.io.monitor.FileAlterationListener) -> addListener
    void removeListener(org.apache.commons.io.monitor.FileAlterationListener) -> removeListener
    java.lang.Iterable getListeners() -> getListeners
    void initialize() -> initialize
    void destroy() -> destroy
    void checkAndNotify() -> checkAndNotify
    void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[]) -> checkAndNotify
    org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File) -> createFileEntry
    void doCreate(org.apache.commons.io.monitor.FileEntry) -> doCreate
    void doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File) -> doMatch
    void doDelete(org.apache.commons.io.monitor.FileEntry) -> doDelete
    java.io.File[] listFiles(java.io.File) -> listFiles
    java.lang.String toString() -> toString
org.apache.commons.io.monitor.FileEntry -> org.apache.commons.io.monitor.FileEntry:
    org.apache.commons.io.monitor.FileEntry[] EMPTY_ENTRIES -> EMPTY_ENTRIES
    org.apache.commons.io.monitor.FileEntry parent -> parent
    org.apache.commons.io.monitor.FileEntry[] children -> children
    java.io.File file -> file
    java.lang.String name -> name
    boolean exists -> exists
    boolean directory -> directory
    long lastModified -> lastModified
    long length -> length
    boolean refresh(java.io.File) -> refresh
    org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File) -> newChildInstance
    org.apache.commons.io.monitor.FileEntry getParent() -> getParent
    int getLevel() -> getLevel
    org.apache.commons.io.monitor.FileEntry[] getChildren() -> getChildren
    void setChildren(org.apache.commons.io.monitor.FileEntry[]) -> setChildren
    java.io.File getFile() -> getFile
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    long getLastModified() -> getLastModified
    void setLastModified(long) -> setLastModified
    long getLength() -> getLength
    void setLength(long) -> setLength
    boolean isExists() -> isExists
    void setExists(boolean) -> setExists
    boolean isDirectory() -> isDirectory
    void setDirectory(boolean) -> setDirectory
org.apache.commons.io.output.BrokenOutputStream -> org.apache.commons.io.output.BrokenOutputStream:
    java.io.IOException exception -> exception
    void write(int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.io.output.ByteArrayOutputStream -> org.apache.commons.io.output.ByteArrayOutputStream:
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.util.List buffers -> buffers
    int currentBufferIndex -> currentBufferIndex
    int filledBufferSum -> filledBufferSum
    byte[] currentBuffer -> currentBuffer
    int count -> count
    void needNewBuffer(int) -> needNewBuffer
    void write(byte[],int,int) -> write
    void write(int) -> write
    int write(java.io.InputStream) -> write
    int size() -> size
    void close() -> close
    void reset() -> reset
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.InputStream toBufferedInputStream(java.io.InputStream) -> toBufferedInputStream
    java.io.InputStream toBufferedInputStream() -> toBufferedInputStream
    byte[] toByteArray() -> toByteArray
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
org.apache.commons.io.output.CloseShieldOutputStream -> org.apache.commons.io.output.CloseShieldOutputStream:
    void close() -> close
org.apache.commons.io.output.ClosedOutputStream -> org.apache.commons.io.output.ClosedOutputStream:
    org.apache.commons.io.output.ClosedOutputStream CLOSED_OUTPUT_STREAM -> CLOSED_OUTPUT_STREAM
    void write(int) -> write
org.apache.commons.io.output.CountingOutputStream -> org.apache.commons.io.output.CountingOutputStream:
    long count -> count
    void beforeWrite(int) -> beforeWrite
    int getCount() -> getCount
    int resetCount() -> resetCount
    long getByteCount() -> getByteCount
    long resetByteCount() -> resetByteCount
org.apache.commons.io.output.DeferredFileOutputStream -> org.apache.commons.io.output.DeferredFileOutputStream:
    org.apache.commons.io.output.ByteArrayOutputStream memoryOutputStream -> memoryOutputStream
    java.io.OutputStream currentOutputStream -> currentOutputStream
    java.io.File outputFile -> outputFile
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.io.File directory -> directory
    boolean closed -> closed
    java.io.OutputStream getStream() -> getStream
    void thresholdReached() -> thresholdReached
    boolean isInMemory() -> isInMemory
    byte[] getData() -> getData
    java.io.File getFile() -> getFile
    void close() -> close
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.commons.io.output.DemuxOutputStream -> org.apache.commons.io.output.DemuxOutputStream:
    java.lang.InheritableThreadLocal m_streams -> m_streams
    java.io.OutputStream bindStream(java.io.OutputStream) -> bindStream
    void close() -> close
    void flush() -> flush
    void write(int) -> write
org.apache.commons.io.output.FileWriterWithEncoding -> org.apache.commons.io.output.FileWriterWithEncoding:
    java.io.Writer out -> out
    java.io.Writer initWriter(java.io.File,java.lang.Object,boolean) -> initWriter
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.io.output.LockableFileWriter -> org.apache.commons.io.output.LockableFileWriter:
    java.lang.String LCK -> LCK
    java.io.Writer out -> out
    java.io.File lockFile -> lockFile
    void testLockDir(java.io.File) -> testLockDir
    void createLock() -> createLock
    java.io.Writer initWriter(java.io.File,java.nio.charset.Charset,boolean) -> initWriter
    void close() -> close
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void flush() -> flush
org.apache.commons.io.output.NullOutputStream -> org.apache.commons.io.output.NullOutputStream:
    org.apache.commons.io.output.NullOutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
org.apache.commons.io.output.NullWriter -> org.apache.commons.io.output.NullWriter:
    org.apache.commons.io.output.NullWriter NULL_WRITER -> NULL_WRITER
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void flush() -> flush
    void close() -> close
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.commons.io.output.ProxyOutputStream -> org.apache.commons.io.output.ProxyOutputStream:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void beforeWrite(int) -> beforeWrite
    void afterWrite(int) -> afterWrite
    void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.output.ProxyWriter -> org.apache.commons.io.output.ProxyWriter:
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void flush() -> flush
    void close() -> close
    void beforeWrite(int) -> beforeWrite
    void afterWrite(int) -> afterWrite
    void handleIOException(java.io.IOException) -> handleIOException
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.commons.io.output.StringBuilderWriter -> org.apache.commons.io.output.StringBuilderWriter:
    java.lang.StringBuilder builder -> builder
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(java.lang.String) -> write
    void write(char[],int,int) -> write
    java.lang.StringBuilder getBuilder() -> getBuilder
    java.lang.String toString() -> toString
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.commons.io.output.TaggedOutputStream -> org.apache.commons.io.output.TaggedOutputStream:
    java.io.Serializable tag -> tag
    boolean isCauseOf(java.lang.Exception) -> isCauseOf
    void throwIfCauseOf(java.lang.Exception) -> throwIfCauseOf
    void handleIOException(java.io.IOException) -> handleIOException
org.apache.commons.io.output.TeeOutputStream -> org.apache.commons.io.output.TeeOutputStream:
    java.io.OutputStream branch -> branch
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.io.output.ThresholdingOutputStream -> org.apache.commons.io.output.ThresholdingOutputStream:
    int threshold -> threshold
    long written -> written
    boolean thresholdExceeded -> thresholdExceeded
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    int getThreshold() -> getThreshold
    long getByteCount() -> getByteCount
    boolean isThresholdExceeded() -> isThresholdExceeded
    void checkThreshold(int) -> checkThreshold
    void resetByteCount() -> resetByteCount
    java.io.OutputStream getStream() -> getStream
    void thresholdReached() -> thresholdReached
org.apache.commons.io.output.WriterOutputStream -> org.apache.commons.io.output.WriterOutputStream:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.Writer writer -> writer
    java.nio.charset.CharsetDecoder decoder -> decoder
    boolean writeImmediately -> writeImmediately
    java.nio.ByteBuffer decoderIn -> decoderIn
    java.nio.CharBuffer decoderOut -> decoderOut
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void processInput(boolean) -> processInput
    void flushOutput() -> flushOutput
org.apache.commons.io.output.XmlStreamWriter -> org.apache.commons.io.output.XmlStreamWriter:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.OutputStream out -> out
    java.lang.String defaultEncoding -> defaultEncoding
    java.io.StringWriter xmlPrologWriter -> xmlPrologWriter
    java.io.Writer writer -> writer
    java.lang.String encoding -> encoding
    java.util.regex.Pattern ENCODING_PATTERN -> ENCODING_PATTERN
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getDefaultEncoding() -> getDefaultEncoding
    void close() -> close
    void flush() -> flush
    void detectEncoding(char[],int,int) -> detectEncoding
    void write(char[],int,int) -> write
org.apache.commons.math3.Field -> org.apache.commons.math3.Field:
    java.lang.Object getZero() -> getZero
    java.lang.Object getOne() -> getOne
    java.lang.Class getRuntimeClass() -> getRuntimeClass
org.apache.commons.math3.FieldElement -> org.apache.commons.math3.FieldElement:
    java.lang.Object add(java.lang.Object) -> add
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object negate() -> negate
    java.lang.Object multiply(int) -> multiply
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object reciprocal() -> reciprocal
    org.apache.commons.math3.Field getField() -> getField
org.apache.commons.math3.RealFieldElement -> org.apache.commons.math3.RealFieldElement:
    double getReal() -> getReal
    java.lang.Object add(double) -> add
    java.lang.Object subtract(double) -> subtract
    java.lang.Object multiply(double) -> multiply
    java.lang.Object divide(double) -> divide
    java.lang.Object remainder(double) -> remainder
    java.lang.Object remainder(java.lang.Object) -> remainder
    java.lang.Object abs() -> abs
    java.lang.Object ceil() -> ceil
    java.lang.Object floor() -> floor
    java.lang.Object rint() -> rint
    long round() -> round
    java.lang.Object signum() -> signum
    java.lang.Object copySign(java.lang.Object) -> copySign
    java.lang.Object copySign(double) -> copySign
    java.lang.Object scalb(int) -> scalb
    java.lang.Object hypot(java.lang.Object) -> hypot
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object sqrt() -> sqrt
    java.lang.Object cbrt() -> cbrt
    java.lang.Object rootN(int) -> rootN
    java.lang.Object pow(double) -> pow
    java.lang.Object pow(int) -> pow
    java.lang.Object pow(java.lang.Object) -> pow
    java.lang.Object exp() -> exp
    java.lang.Object expm1() -> expm1
    java.lang.Object log() -> log
    java.lang.Object log1p() -> log1p
    java.lang.Object cos() -> cos
    java.lang.Object sin() -> sin
    java.lang.Object tan() -> tan
    java.lang.Object acos() -> acos
    java.lang.Object asin() -> asin
    java.lang.Object atan() -> atan
    java.lang.Object atan2(java.lang.Object) -> atan2
    java.lang.Object cosh() -> cosh
    java.lang.Object sinh() -> sinh
    java.lang.Object tanh() -> tanh
    java.lang.Object acosh() -> acosh
    java.lang.Object asinh() -> asinh
    java.lang.Object atanh() -> atanh
    java.lang.Object linearCombination(java.lang.Object[],java.lang.Object[]) -> linearCombination
    java.lang.Object linearCombination(double[],java.lang.Object[]) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
org.apache.commons.math3.analysis.BivariateFunction -> org.apache.commons.math3.analysis.BivariateFunction:
    double value(double,double) -> value
org.apache.commons.math3.analysis.DifferentiableMultivariateFunction -> org.apache.commons.math3.analysis.DifferentiableMultivariateFunction:
    org.apache.commons.math3.analysis.MultivariateFunction partialDerivative(int) -> partialDerivative
    org.apache.commons.math3.analysis.MultivariateVectorFunction gradient() -> gradient
org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction -> org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction:
    org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian() -> jacobian
org.apache.commons.math3.analysis.DifferentiableUnivariateFunction -> org.apache.commons.math3.analysis.DifferentiableUnivariateFunction:
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.DifferentiableUnivariateMatrixFunction -> org.apache.commons.math3.analysis.DifferentiableUnivariateMatrixFunction:
    org.apache.commons.math3.analysis.UnivariateMatrixFunction derivative() -> derivative
org.apache.commons.math3.analysis.DifferentiableUnivariateVectorFunction -> org.apache.commons.math3.analysis.DifferentiableUnivariateVectorFunction:
    org.apache.commons.math3.analysis.UnivariateVectorFunction derivative() -> derivative
org.apache.commons.math3.analysis.FunctionUtils -> org.apache.commons.math3.analysis.FunctionUtils:
    org.apache.commons.math3.analysis.UnivariateFunction compose(org.apache.commons.math3.analysis.UnivariateFunction[]) -> compose
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[]) -> compose
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction compose(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[]) -> compose
    org.apache.commons.math3.analysis.UnivariateFunction add(org.apache.commons.math3.analysis.UnivariateFunction[]) -> add
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction add(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[]) -> add
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction add(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[]) -> add
    org.apache.commons.math3.analysis.UnivariateFunction multiply(org.apache.commons.math3.analysis.UnivariateFunction[]) -> multiply
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[]) -> multiply
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction multiply(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[]) -> multiply
    org.apache.commons.math3.analysis.UnivariateFunction combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction) -> combine
    org.apache.commons.math3.analysis.MultivariateFunction collector(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,double) -> collector
    org.apache.commons.math3.analysis.MultivariateFunction collector(org.apache.commons.math3.analysis.BivariateFunction,double) -> collector
    org.apache.commons.math3.analysis.UnivariateFunction fix1stArgument(org.apache.commons.math3.analysis.BivariateFunction,double) -> fix1stArgument
    org.apache.commons.math3.analysis.UnivariateFunction fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double) -> fix2ndArgument
    double[] sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int) -> sample
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction) -> toDifferentiableUnivariateFunction
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction toUnivariateDifferential(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) -> toUnivariateDifferential
    org.apache.commons.math3.analysis.DifferentiableMultivariateFunction toDifferentiableMultivariateFunction(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction) -> toDifferentiableMultivariateFunction
    org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction toMultivariateDifferentiableFunction(org.apache.commons.math3.analysis.DifferentiableMultivariateFunction) -> toMultivariateDifferentiableFunction
    org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction toDifferentiableMultivariateVectorFunction(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction) -> toDifferentiableMultivariateVectorFunction
    org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction toMultivariateDifferentiableVectorFunction(org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction) -> toMultivariateDifferentiableVectorFunction
org.apache.commons.math3.analysis.FunctionUtils$1 -> org.apache.commons.math3.analysis.FunctionUtils$1:
    org.apache.commons.math3.analysis.UnivariateFunction[] val$f -> val$f
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$10 -> org.apache.commons.math3.analysis.FunctionUtils$10:
    org.apache.commons.math3.analysis.BivariateFunction val$combiner -> val$combiner
    org.apache.commons.math3.analysis.UnivariateFunction val$f -> val$f
    org.apache.commons.math3.analysis.UnivariateFunction val$g -> val$g
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$11 -> org.apache.commons.math3.analysis.FunctionUtils$11:
    org.apache.commons.math3.analysis.BivariateFunction val$combiner -> val$combiner
    double val$initialValue -> val$initialValue
    org.apache.commons.math3.analysis.UnivariateFunction val$f -> val$f
    double value(double[]) -> value
org.apache.commons.math3.analysis.FunctionUtils$12 -> org.apache.commons.math3.analysis.FunctionUtils$12:
    org.apache.commons.math3.analysis.BivariateFunction val$f -> val$f
    double val$fixed -> val$fixed
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$13 -> org.apache.commons.math3.analysis.FunctionUtils$13:
    org.apache.commons.math3.analysis.BivariateFunction val$f -> val$f
    double val$fixed -> val$fixed
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$14 -> org.apache.commons.math3.analysis.FunctionUtils$14:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.FunctionUtils$14$1 -> org.apache.commons.math3.analysis.FunctionUtils$14$1:
    org.apache.commons.math3.analysis.FunctionUtils$14 this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$15 -> org.apache.commons.math3.analysis.FunctionUtils$15:
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.FunctionUtils$16 -> org.apache.commons.math3.analysis.FunctionUtils$16:
    org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction val$f -> val$f
    double value(double[]) -> value
    org.apache.commons.math3.analysis.MultivariateFunction partialDerivative(int) -> partialDerivative
    org.apache.commons.math3.analysis.MultivariateVectorFunction gradient() -> gradient
org.apache.commons.math3.analysis.FunctionUtils$16$1 -> org.apache.commons.math3.analysis.FunctionUtils$16$1:
    int val$k -> val$k
    org.apache.commons.math3.analysis.FunctionUtils$16 this$0 -> this$0
    double value(double[]) -> value
org.apache.commons.math3.analysis.FunctionUtils$16$2 -> org.apache.commons.math3.analysis.FunctionUtils$16$2:
    org.apache.commons.math3.analysis.FunctionUtils$16 this$0 -> this$0
    double[] value(double[]) -> value
org.apache.commons.math3.analysis.FunctionUtils$17 -> org.apache.commons.math3.analysis.FunctionUtils$17:
    org.apache.commons.math3.analysis.DifferentiableMultivariateFunction val$f -> val$f
    double value(double[]) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) -> value
org.apache.commons.math3.analysis.FunctionUtils$18 -> org.apache.commons.math3.analysis.FunctionUtils$18:
    org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction val$f -> val$f
    double[] value(double[]) -> value
    org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian() -> jacobian
org.apache.commons.math3.analysis.FunctionUtils$18$1 -> org.apache.commons.math3.analysis.FunctionUtils$18$1:
    org.apache.commons.math3.analysis.FunctionUtils$18 this$0 -> this$0
    double[][] value(double[]) -> value
org.apache.commons.math3.analysis.FunctionUtils$19 -> org.apache.commons.math3.analysis.FunctionUtils$19:
    org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction val$f -> val$f
    double[] value(double[]) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) -> value
org.apache.commons.math3.analysis.FunctionUtils$2 -> org.apache.commons.math3.analysis.FunctionUtils$2:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.FunctionUtils$3 -> org.apache.commons.math3.analysis.FunctionUtils$3:
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.FunctionUtils$3$1 -> org.apache.commons.math3.analysis.FunctionUtils$3$1:
    org.apache.commons.math3.analysis.FunctionUtils$3 this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$4 -> org.apache.commons.math3.analysis.FunctionUtils$4:
    org.apache.commons.math3.analysis.UnivariateFunction[] val$f -> val$f
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$5 -> org.apache.commons.math3.analysis.FunctionUtils$5:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.FunctionUtils$6 -> org.apache.commons.math3.analysis.FunctionUtils$6:
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.FunctionUtils$6$1 -> org.apache.commons.math3.analysis.FunctionUtils$6$1:
    org.apache.commons.math3.analysis.FunctionUtils$6 this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$7 -> org.apache.commons.math3.analysis.FunctionUtils$7:
    org.apache.commons.math3.analysis.UnivariateFunction[] val$f -> val$f
    double value(double) -> value
org.apache.commons.math3.analysis.FunctionUtils$8 -> org.apache.commons.math3.analysis.FunctionUtils$8:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.FunctionUtils$9 -> org.apache.commons.math3.analysis.FunctionUtils$9:
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[] val$f -> val$f
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.FunctionUtils$9$1 -> org.apache.commons.math3.analysis.FunctionUtils$9$1:
    org.apache.commons.math3.analysis.FunctionUtils$9 this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.analysis.MultivariateFunction -> org.apache.commons.math3.analysis.MultivariateFunction:
    double value(double[]) -> value
org.apache.commons.math3.analysis.MultivariateMatrixFunction -> org.apache.commons.math3.analysis.MultivariateMatrixFunction:
    double[][] value(double[]) -> value
org.apache.commons.math3.analysis.MultivariateVectorFunction -> org.apache.commons.math3.analysis.MultivariateVectorFunction:
    double[] value(double[]) -> value
org.apache.commons.math3.analysis.ParametricUnivariateFunction -> org.apache.commons.math3.analysis.ParametricUnivariateFunction:
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
org.apache.commons.math3.analysis.TrivariateFunction -> org.apache.commons.math3.analysis.TrivariateFunction:
    double value(double,double,double) -> value
org.apache.commons.math3.analysis.UnivariateFunction -> org.apache.commons.math3.analysis.UnivariateFunction:
    double value(double) -> value
org.apache.commons.math3.analysis.UnivariateMatrixFunction -> org.apache.commons.math3.analysis.UnivariateMatrixFunction:
    double[][] value(double) -> value
org.apache.commons.math3.analysis.UnivariateVectorFunction -> org.apache.commons.math3.analysis.UnivariateVectorFunction:
    double[] value(double) -> value
org.apache.commons.math3.analysis.differentiation.DSCompiler -> org.apache.commons.math3.analysis.differentiation.DSCompiler:
    java.util.concurrent.atomic.AtomicReference compilers -> compilers
    int parameters -> parameters
    int order -> order
    int[][] sizes -> sizes
    int[][] derivativesIndirection -> derivativesIndirection
    int[] lowerIndirection -> lowerIndirection
    int[][][] multIndirection -> multIndirection
    int[][][] compIndirection -> compIndirection
    org.apache.commons.math3.analysis.differentiation.DSCompiler getCompiler(int,int) -> getCompiler
    int[][] compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler) -> compileSizes
    int[][] compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) -> compileDerivativesIndirection
    int[] compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) -> compileLowerIndirection
    int[][][] compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) -> compileMultiplicationIndirection
    int[][][] compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) -> compileCompositionIndirection
    int getPartialDerivativeIndex(int[]) -> getPartialDerivativeIndex
    int getPartialDerivativeIndex(int,int,int[][],int[]) -> getPartialDerivativeIndex
    int convertIndex(int,int,int[][],int,int,int[][]) -> convertIndex
    int[] getPartialDerivativeOrders(int) -> getPartialDerivativeOrders
    int getFreeParameters() -> getFreeParameters
    int getOrder() -> getOrder
    int getSize() -> getSize
    void linearCombination(double,double[],int,double,double[],int,double[],int) -> linearCombination
    void linearCombination(double,double[],int,double,double[],int,double,double[],int,double[],int) -> linearCombination
    void linearCombination(double,double[],int,double,double[],int,double,double[],int,double,double[],int,double[],int) -> linearCombination
    void add(double[],int,double[],int,double[],int) -> add
    void subtract(double[],int,double[],int,double[],int) -> subtract
    void multiply(double[],int,double[],int,double[],int) -> multiply
    void divide(double[],int,double[],int,double[],int) -> divide
    void remainder(double[],int,double[],int,double[],int) -> remainder
    void pow(double,double[],int,double[],int) -> pow
    void pow(double[],int,double,double[],int) -> pow
    void pow(double[],int,int,double[],int) -> pow
    void pow(double[],int,double[],int,double[],int) -> pow
    void rootN(double[],int,int,double[],int) -> rootN
    void exp(double[],int,double[],int) -> exp
    void expm1(double[],int,double[],int) -> expm1
    void log(double[],int,double[],int) -> log
    void log1p(double[],int,double[],int) -> log1p
    void log10(double[],int,double[],int) -> log10
    void cos(double[],int,double[],int) -> cos
    void sin(double[],int,double[],int) -> sin
    void tan(double[],int,double[],int) -> tan
    void acos(double[],int,double[],int) -> acos
    void asin(double[],int,double[],int) -> asin
    void atan(double[],int,double[],int) -> atan
    void atan2(double[],int,double[],int,double[],int) -> atan2
    void cosh(double[],int,double[],int) -> cosh
    void sinh(double[],int,double[],int) -> sinh
    void tanh(double[],int,double[],int) -> tanh
    void acosh(double[],int,double[],int) -> acosh
    void asinh(double[],int,double[],int) -> asinh
    void atanh(double[],int,double[],int) -> atanh
    void compose(double[],int,double[],double[],int) -> compose
    double taylor(double[],int,double[]) -> taylor
    void checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler) -> checkCompatibility
org.apache.commons.math3.analysis.differentiation.DerivativeStructure -> org.apache.commons.math3.analysis.differentiation.DerivativeStructure:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.analysis.differentiation.DSCompiler compiler -> compiler
    double[] data -> data
    int getFreeParameters() -> getFreeParameters
    int getOrder() -> getOrder
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure createConstant(double) -> createConstant
    double getReal() -> getReal
    double getValue() -> getValue
    double getPartialDerivative(int[]) -> getPartialDerivative
    double[] getAllDerivatives() -> getAllDerivatives
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure add(double) -> add
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> add
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure subtract(double) -> subtract
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> subtract
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(int) -> multiply
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(double) -> multiply
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> multiply
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure divide(double) -> divide
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> divide
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure remainder(double) -> remainder
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure remainder(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> remainder
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure negate() -> negate
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure abs() -> abs
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure ceil() -> ceil
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure floor() -> floor
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure rint() -> rint
    long round() -> round
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure signum() -> signum
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure copySign(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> copySign
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure copySign(double) -> copySign
    int getExponent() -> getExponent
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure scalb(int) -> scalb
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> hypot
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> hypot
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure compose(double[]) -> compose
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure reciprocal() -> reciprocal
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure sqrt() -> sqrt
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure cbrt() -> cbrt
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure rootN(int) -> rootN
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> pow
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(double) -> pow
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(int) -> pow
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> pow
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure exp() -> exp
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure expm1() -> expm1
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure log() -> log
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure log1p() -> log1p
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure log10() -> log10
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure cos() -> cos
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure sin() -> sin
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure tan() -> tan
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure acos() -> acos
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure asin() -> asin
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure atan() -> atan
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> atan2
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> atan2
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure cosh() -> cosh
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure sinh() -> sinh
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure tanh() -> tanh
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure acosh() -> acosh
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure asinh() -> asinh
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure atanh() -> atanh
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure toDegrees() -> toDegrees
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure toRadians() -> toRadians
    double taylor(double[]) -> taylor
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[],org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(double[],org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> linearCombination
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double[],java.lang.Object[]) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object[],java.lang.Object[]) -> linearCombination
    java.lang.Object atanh() -> atanh
    java.lang.Object asinh() -> asinh
    java.lang.Object acosh() -> acosh
    java.lang.Object tanh() -> tanh
    java.lang.Object sinh() -> sinh
    java.lang.Object cosh() -> cosh
    java.lang.Object atan2(java.lang.Object) -> atan2
    java.lang.Object atan() -> atan
    java.lang.Object asin() -> asin
    java.lang.Object acos() -> acos
    java.lang.Object tan() -> tan
    java.lang.Object sin() -> sin
    java.lang.Object cos() -> cos
    java.lang.Object log1p() -> log1p
    java.lang.Object log() -> log
    java.lang.Object expm1() -> expm1
    java.lang.Object exp() -> exp
    java.lang.Object pow(java.lang.Object) -> pow
    java.lang.Object pow(int) -> pow
    java.lang.Object pow(double) -> pow
    java.lang.Object rootN(int) -> rootN
    java.lang.Object cbrt() -> cbrt
    java.lang.Object sqrt() -> sqrt
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object hypot(java.lang.Object) -> hypot
    java.lang.Object scalb(int) -> scalb
    java.lang.Object copySign(double) -> copySign
    java.lang.Object copySign(java.lang.Object) -> copySign
    java.lang.Object signum() -> signum
    java.lang.Object rint() -> rint
    java.lang.Object floor() -> floor
    java.lang.Object ceil() -> ceil
    java.lang.Object abs() -> abs
    java.lang.Object remainder(java.lang.Object) -> remainder
    java.lang.Object remainder(double) -> remainder
    java.lang.Object divide(double) -> divide
    java.lang.Object multiply(double) -> multiply
    java.lang.Object subtract(double) -> subtract
    java.lang.Object add(double) -> add
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
    org.apache.commons.math3.analysis.differentiation.DSCompiler access$000(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> access$000
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1 -> org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1:
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure this$0 -> this$0
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure getZero() -> getZero
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure getOne() -> getOne
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject -> org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject:
    long serialVersionUID -> serialVersionUID
    int variables -> variables
    int order -> order
    double[] data -> data
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator -> org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:
    long serialVersionUID -> serialVersionUID
    int nbPoints -> nbPoints
    double stepSize -> stepSize
    double halfSampleSpan -> halfSampleSpan
    double tMin -> tMin
    double tMax -> tMax
    int getNbPoints() -> getNbPoints
    double getStepSize() -> getStepSize
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) -> evaluate
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction differentiate(org.apache.commons.math3.analysis.UnivariateFunction) -> differentiate
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction differentiate(org.apache.commons.math3.analysis.UnivariateVectorFunction) -> differentiate
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction differentiate(org.apache.commons.math3.analysis.UnivariateMatrixFunction) -> differentiate
    int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator) -> access$000
    double access$100(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator) -> access$100
    double access$200(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator) -> access$200
    double access$300(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator) -> access$300
    double access$400(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator) -> access$400
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure access$500(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) -> access$500
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1 -> org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1:
    org.apache.commons.math3.analysis.UnivariateFunction val$function -> val$function
    org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0 -> this$0
    double value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2 -> org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2:
    org.apache.commons.math3.analysis.UnivariateVectorFunction val$function -> val$function
    org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0 -> this$0
    double[] value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 -> org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3:
    org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function -> val$function
    org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0 -> this$0
    double[][] value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.differentiation.GradientFunction -> org.apache.commons.math3.analysis.differentiation.GradientFunction:
    org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction f -> f
    double[] value(double[]) -> value
org.apache.commons.math3.analysis.differentiation.JacobianFunction -> org.apache.commons.math3.analysis.differentiation.JacobianFunction:
    org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction f -> f
    double[][] value(double[]) -> value
org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction -> org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction:
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) -> value
org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction -> org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction:
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) -> value
org.apache.commons.math3.analysis.differentiation.SparseGradient -> org.apache.commons.math3.analysis.differentiation.SparseGradient:
    long serialVersionUID -> serialVersionUID
    double value -> value
    java.util.Map derivatives -> derivatives
    org.apache.commons.math3.analysis.differentiation.SparseGradient createConstant(double) -> createConstant
    org.apache.commons.math3.analysis.differentiation.SparseGradient createVariable(int,double) -> createVariable
    int numVars() -> numVars
    double getDerivative(int) -> getDerivative
    double getValue() -> getValue
    double getReal() -> getReal
    org.apache.commons.math3.analysis.differentiation.SparseGradient add(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> add
    void addInPlace(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> addInPlace
    org.apache.commons.math3.analysis.differentiation.SparseGradient add(double) -> add
    org.apache.commons.math3.analysis.differentiation.SparseGradient subtract(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> subtract
    org.apache.commons.math3.analysis.differentiation.SparseGradient subtract(double) -> subtract
    org.apache.commons.math3.analysis.differentiation.SparseGradient multiply(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> multiply
    void multiplyInPlace(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> multiplyInPlace
    org.apache.commons.math3.analysis.differentiation.SparseGradient multiply(double) -> multiply
    org.apache.commons.math3.analysis.differentiation.SparseGradient multiply(int) -> multiply
    org.apache.commons.math3.analysis.differentiation.SparseGradient divide(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> divide
    org.apache.commons.math3.analysis.differentiation.SparseGradient divide(double) -> divide
    org.apache.commons.math3.analysis.differentiation.SparseGradient negate() -> negate
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.analysis.differentiation.SparseGradient remainder(double) -> remainder
    org.apache.commons.math3.analysis.differentiation.SparseGradient remainder(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> remainder
    org.apache.commons.math3.analysis.differentiation.SparseGradient abs() -> abs
    org.apache.commons.math3.analysis.differentiation.SparseGradient ceil() -> ceil
    org.apache.commons.math3.analysis.differentiation.SparseGradient floor() -> floor
    org.apache.commons.math3.analysis.differentiation.SparseGradient rint() -> rint
    long round() -> round
    org.apache.commons.math3.analysis.differentiation.SparseGradient signum() -> signum
    org.apache.commons.math3.analysis.differentiation.SparseGradient copySign(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> copySign
    org.apache.commons.math3.analysis.differentiation.SparseGradient copySign(double) -> copySign
    org.apache.commons.math3.analysis.differentiation.SparseGradient scalb(int) -> scalb
    org.apache.commons.math3.analysis.differentiation.SparseGradient hypot(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> hypot
    org.apache.commons.math3.analysis.differentiation.SparseGradient hypot(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> hypot
    org.apache.commons.math3.analysis.differentiation.SparseGradient reciprocal() -> reciprocal
    org.apache.commons.math3.analysis.differentiation.SparseGradient sqrt() -> sqrt
    org.apache.commons.math3.analysis.differentiation.SparseGradient cbrt() -> cbrt
    org.apache.commons.math3.analysis.differentiation.SparseGradient rootN(int) -> rootN
    org.apache.commons.math3.analysis.differentiation.SparseGradient pow(double) -> pow
    org.apache.commons.math3.analysis.differentiation.SparseGradient pow(int) -> pow
    org.apache.commons.math3.analysis.differentiation.SparseGradient pow(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> pow
    org.apache.commons.math3.analysis.differentiation.SparseGradient pow(double,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> pow
    org.apache.commons.math3.analysis.differentiation.SparseGradient exp() -> exp
    org.apache.commons.math3.analysis.differentiation.SparseGradient expm1() -> expm1
    org.apache.commons.math3.analysis.differentiation.SparseGradient log() -> log
    org.apache.commons.math3.analysis.differentiation.SparseGradient log10() -> log10
    org.apache.commons.math3.analysis.differentiation.SparseGradient log1p() -> log1p
    org.apache.commons.math3.analysis.differentiation.SparseGradient cos() -> cos
    org.apache.commons.math3.analysis.differentiation.SparseGradient sin() -> sin
    org.apache.commons.math3.analysis.differentiation.SparseGradient tan() -> tan
    org.apache.commons.math3.analysis.differentiation.SparseGradient acos() -> acos
    org.apache.commons.math3.analysis.differentiation.SparseGradient asin() -> asin
    org.apache.commons.math3.analysis.differentiation.SparseGradient atan() -> atan
    org.apache.commons.math3.analysis.differentiation.SparseGradient atan2(org.apache.commons.math3.analysis.differentiation.SparseGradient) -> atan2
    org.apache.commons.math3.analysis.differentiation.SparseGradient atan2(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> atan2
    org.apache.commons.math3.analysis.differentiation.SparseGradient cosh() -> cosh
    org.apache.commons.math3.analysis.differentiation.SparseGradient sinh() -> sinh
    org.apache.commons.math3.analysis.differentiation.SparseGradient tanh() -> tanh
    org.apache.commons.math3.analysis.differentiation.SparseGradient acosh() -> acosh
    org.apache.commons.math3.analysis.differentiation.SparseGradient asinh() -> asinh
    org.apache.commons.math3.analysis.differentiation.SparseGradient atanh() -> atanh
    org.apache.commons.math3.analysis.differentiation.SparseGradient toDegrees() -> toDegrees
    org.apache.commons.math3.analysis.differentiation.SparseGradient toRadians() -> toRadians
    double taylor(double[]) -> taylor
    org.apache.commons.math3.analysis.differentiation.SparseGradient compose(double,double) -> compose
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(org.apache.commons.math3.analysis.differentiation.SparseGradient[],org.apache.commons.math3.analysis.differentiation.SparseGradient[]) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(double[],org.apache.commons.math3.analysis.differentiation.SparseGradient[]) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> linearCombination
    org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient) -> linearCombination
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double[],java.lang.Object[]) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object[],java.lang.Object[]) -> linearCombination
    java.lang.Object atanh() -> atanh
    java.lang.Object asinh() -> asinh
    java.lang.Object acosh() -> acosh
    java.lang.Object tanh() -> tanh
    java.lang.Object sinh() -> sinh
    java.lang.Object cosh() -> cosh
    java.lang.Object atan2(java.lang.Object) -> atan2
    java.lang.Object atan() -> atan
    java.lang.Object asin() -> asin
    java.lang.Object acos() -> acos
    java.lang.Object tan() -> tan
    java.lang.Object sin() -> sin
    java.lang.Object cos() -> cos
    java.lang.Object log1p() -> log1p
    java.lang.Object log() -> log
    java.lang.Object expm1() -> expm1
    java.lang.Object exp() -> exp
    java.lang.Object pow(java.lang.Object) -> pow
    java.lang.Object pow(int) -> pow
    java.lang.Object pow(double) -> pow
    java.lang.Object rootN(int) -> rootN
    java.lang.Object cbrt() -> cbrt
    java.lang.Object sqrt() -> sqrt
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object hypot(java.lang.Object) -> hypot
    java.lang.Object scalb(int) -> scalb
    java.lang.Object copySign(double) -> copySign
    java.lang.Object copySign(java.lang.Object) -> copySign
    java.lang.Object signum() -> signum
    java.lang.Object rint() -> rint
    java.lang.Object floor() -> floor
    java.lang.Object ceil() -> ceil
    java.lang.Object abs() -> abs
    java.lang.Object remainder(java.lang.Object) -> remainder
    java.lang.Object remainder(double) -> remainder
    java.lang.Object divide(double) -> divide
    java.lang.Object multiply(double) -> multiply
    java.lang.Object subtract(double) -> subtract
    java.lang.Object add(double) -> add
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
org.apache.commons.math3.analysis.differentiation.SparseGradient$1 -> org.apache.commons.math3.analysis.differentiation.SparseGradient$1:
    org.apache.commons.math3.analysis.differentiation.SparseGradient this$0 -> this$0
    org.apache.commons.math3.analysis.differentiation.SparseGradient getZero() -> getZero
    org.apache.commons.math3.analysis.differentiation.SparseGradient getOne() -> getOne
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction -> org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction:
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction -> org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction:
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction -> org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction:
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.differentiation.UnivariateFunctionDifferentiator -> org.apache.commons.math3.analysis.differentiation.UnivariateFunctionDifferentiator:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction differentiate(org.apache.commons.math3.analysis.UnivariateFunction) -> differentiate
org.apache.commons.math3.analysis.differentiation.UnivariateMatrixFunctionDifferentiator -> org.apache.commons.math3.analysis.differentiation.UnivariateMatrixFunctionDifferentiator:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction differentiate(org.apache.commons.math3.analysis.UnivariateMatrixFunction) -> differentiate
org.apache.commons.math3.analysis.differentiation.UnivariateVectorFunctionDifferentiator -> org.apache.commons.math3.analysis.differentiation.UnivariateVectorFunctionDifferentiator:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction differentiate(org.apache.commons.math3.analysis.UnivariateVectorFunction) -> differentiate
org.apache.commons.math3.analysis.function.Abs -> org.apache.commons.math3.analysis.function.Abs:
    double value(double) -> value
org.apache.commons.math3.analysis.function.Acos -> org.apache.commons.math3.analysis.function.Acos:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Acosh -> org.apache.commons.math3.analysis.function.Acosh:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Add -> org.apache.commons.math3.analysis.function.Add:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Asin -> org.apache.commons.math3.analysis.function.Asin:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Asinh -> org.apache.commons.math3.analysis.function.Asinh:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Atan -> org.apache.commons.math3.analysis.function.Atan:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Atan2 -> org.apache.commons.math3.analysis.function.Atan2:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Atanh -> org.apache.commons.math3.analysis.function.Atanh:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Cbrt -> org.apache.commons.math3.analysis.function.Cbrt:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Ceil -> org.apache.commons.math3.analysis.function.Ceil:
    double value(double) -> value
org.apache.commons.math3.analysis.function.Constant -> org.apache.commons.math3.analysis.function.Constant:
    double c -> c
    double value(double) -> value
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.function.Cos -> org.apache.commons.math3.analysis.function.Cos:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Cosh -> org.apache.commons.math3.analysis.function.Cosh:
    double value(double) -> value
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.function.Divide -> org.apache.commons.math3.analysis.function.Divide:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Exp -> org.apache.commons.math3.analysis.function.Exp:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Expm1 -> org.apache.commons.math3.analysis.function.Expm1:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Floor -> org.apache.commons.math3.analysis.function.Floor:
    double value(double) -> value
org.apache.commons.math3.analysis.function.Gaussian -> org.apache.commons.math3.analysis.function.Gaussian:
    double mean -> mean
    double is -> is
    double i2s2 -> i2s2
    double norm -> norm
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    double value(double,double,double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    double access$000(double,double,double) -> access$000
org.apache.commons.math3.analysis.function.Gaussian$Parametric -> org.apache.commons.math3.analysis.function.Gaussian$Parametric:
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
    void validateParameters(double[]) -> validateParameters
org.apache.commons.math3.analysis.function.HarmonicOscillator -> org.apache.commons.math3.analysis.function.HarmonicOscillator:
    double amplitude -> amplitude
    double omega -> omega
    double phase -> phase
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    double value(double,double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    double access$000(double,double) -> access$000
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric -> org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric:
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
    void validateParameters(double[]) -> validateParameters
org.apache.commons.math3.analysis.function.Identity -> org.apache.commons.math3.analysis.function.Identity:
    double value(double) -> value
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.function.Inverse -> org.apache.commons.math3.analysis.function.Inverse:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Log -> org.apache.commons.math3.analysis.function.Log:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Log10 -> org.apache.commons.math3.analysis.function.Log10:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Log1p -> org.apache.commons.math3.analysis.function.Log1p:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Logistic -> org.apache.commons.math3.analysis.function.Logistic:
    double a -> a
    double k -> k
    double b -> b
    double oneOverN -> oneOverN
    double q -> q
    double m -> m
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    double value(double,double,double,double,double,double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    double access$000(double,double,double,double,double,double) -> access$000
org.apache.commons.math3.analysis.function.Logistic$Parametric -> org.apache.commons.math3.analysis.function.Logistic$Parametric:
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
    void validateParameters(double[]) -> validateParameters
org.apache.commons.math3.analysis.function.Logit -> org.apache.commons.math3.analysis.function.Logit:
    double lo -> lo
    double hi -> hi
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    double value(double,double,double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    double access$000(double,double,double) -> access$000
org.apache.commons.math3.analysis.function.Logit$Parametric -> org.apache.commons.math3.analysis.function.Logit$Parametric:
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
    void validateParameters(double[]) -> validateParameters
org.apache.commons.math3.analysis.function.Max -> org.apache.commons.math3.analysis.function.Max:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Min -> org.apache.commons.math3.analysis.function.Min:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Minus -> org.apache.commons.math3.analysis.function.Minus:
    double value(double) -> value
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.function.Multiply -> org.apache.commons.math3.analysis.function.Multiply:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Pow -> org.apache.commons.math3.analysis.function.Pow:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Power -> org.apache.commons.math3.analysis.function.Power:
    double p -> p
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Rint -> org.apache.commons.math3.analysis.function.Rint:
    double value(double) -> value
org.apache.commons.math3.analysis.function.Sigmoid -> org.apache.commons.math3.analysis.function.Sigmoid:
    double lo -> lo
    double hi -> hi
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    double value(double) -> value
    double value(double,double,double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    double access$000(double,double,double) -> access$000
org.apache.commons.math3.analysis.function.Sigmoid$Parametric -> org.apache.commons.math3.analysis.function.Sigmoid$Parametric:
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
    void validateParameters(double[]) -> validateParameters
org.apache.commons.math3.analysis.function.Signum -> org.apache.commons.math3.analysis.function.Signum:
    double value(double) -> value
org.apache.commons.math3.analysis.function.Sin -> org.apache.commons.math3.analysis.function.Sin:
    double value(double) -> value
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.function.Sinc -> org.apache.commons.math3.analysis.function.Sinc:
    double SHORTCUT -> SHORTCUT
    boolean normalized -> normalized
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Sinh -> org.apache.commons.math3.analysis.function.Sinh:
    double value(double) -> value
    org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
org.apache.commons.math3.analysis.function.Sqrt -> org.apache.commons.math3.analysis.function.Sqrt:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.StepFunction -> org.apache.commons.math3.analysis.function.StepFunction:
    double[] abscissa -> abscissa
    double[] ordinate -> ordinate
    double value(double) -> value
org.apache.commons.math3.analysis.function.Subtract -> org.apache.commons.math3.analysis.function.Subtract:
    double value(double,double) -> value
org.apache.commons.math3.analysis.function.Tan -> org.apache.commons.math3.analysis.function.Tan:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Tanh -> org.apache.commons.math3.analysis.function.Tanh:
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
org.apache.commons.math3.analysis.function.Ulp -> org.apache.commons.math3.analysis.function.Ulp:
    double value(double) -> value
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator -> org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double DEFAULT_RELATIVE_ACCURACY -> DEFAULT_RELATIVE_ACCURACY
    int DEFAULT_MIN_ITERATIONS_COUNT -> DEFAULT_MIN_ITERATIONS_COUNT
    int DEFAULT_MAX_ITERATIONS_COUNT -> DEFAULT_MAX_ITERATIONS_COUNT
    org.apache.commons.math3.util.Incrementor iterations -> iterations
    double absoluteAccuracy -> absoluteAccuracy
    double relativeAccuracy -> relativeAccuracy
    int minimalIterationCount -> minimalIterationCount
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    org.apache.commons.math3.analysis.UnivariateFunction function -> function
    double min -> min
    double max -> max
    double getRelativeAccuracy() -> getRelativeAccuracy
    double getAbsoluteAccuracy() -> getAbsoluteAccuracy
    int getMinimalIterationCount() -> getMinimalIterationCount
    int getMaximalIterationCount() -> getMaximalIterationCount
    int getEvaluations() -> getEvaluations
    int getIterations() -> getIterations
    double getMin() -> getMin
    double getMax() -> getMax
    double computeObjectiveValue(double) -> computeObjectiveValue
    void setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> setup
    double integrate(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> integrate
    double doIntegrate() -> doIntegrate
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator -> org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:
    org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory FACTORY -> FACTORY
    int numberOfPoints -> numberOfPoints
    double doIntegrate() -> doIntegrate
    double stage(int) -> stage
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1 -> org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1:
    org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator -> org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator:
    double[] ABSCISSAS_2 -> ABSCISSAS_2
    double[] WEIGHTS_2 -> WEIGHTS_2
    double[] ABSCISSAS_3 -> ABSCISSAS_3
    double[] WEIGHTS_3 -> WEIGHTS_3
    double[] ABSCISSAS_4 -> ABSCISSAS_4
    double[] WEIGHTS_4 -> WEIGHTS_4
    double[] ABSCISSAS_5 -> ABSCISSAS_5
    double[] WEIGHTS_5 -> WEIGHTS_5
    double[] abscissas -> abscissas
    double[] weights -> weights
    double doIntegrate() -> doIntegrate
    double stage(int) -> stage
org.apache.commons.math3.analysis.integration.MidPointIntegrator -> org.apache.commons.math3.analysis.integration.MidPointIntegrator:
    int MIDPOINT_MAX_ITERATIONS_COUNT -> MIDPOINT_MAX_ITERATIONS_COUNT
    double stage(int,double,double,double) -> stage
    double doIntegrate() -> doIntegrate
org.apache.commons.math3.analysis.integration.RombergIntegrator -> org.apache.commons.math3.analysis.integration.RombergIntegrator:
    int ROMBERG_MAX_ITERATIONS_COUNT -> ROMBERG_MAX_ITERATIONS_COUNT
    double doIntegrate() -> doIntegrate
org.apache.commons.math3.analysis.integration.SimpsonIntegrator -> org.apache.commons.math3.analysis.integration.SimpsonIntegrator:
    int SIMPSON_MAX_ITERATIONS_COUNT -> SIMPSON_MAX_ITERATIONS_COUNT
    double doIntegrate() -> doIntegrate
org.apache.commons.math3.analysis.integration.TrapezoidIntegrator -> org.apache.commons.math3.analysis.integration.TrapezoidIntegrator:
    int TRAPEZOID_MAX_ITERATIONS_COUNT -> TRAPEZOID_MAX_ITERATIONS_COUNT
    double s -> s
    double stage(org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator,int) -> stage
    double doIntegrate() -> doIntegrate
org.apache.commons.math3.analysis.integration.UnivariateIntegrator -> org.apache.commons.math3.analysis.integration.UnivariateIntegrator:
    double getRelativeAccuracy() -> getRelativeAccuracy
    double getAbsoluteAccuracy() -> getAbsoluteAccuracy
    int getMinimalIterationCount() -> getMinimalIterationCount
    int getMaximalIterationCount() -> getMaximalIterationCount
    double integrate(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> integrate
    int getEvaluations() -> getEvaluations
    int getIterations() -> getIterations
org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory -> org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory:
    java.util.Map pointsAndWeights -> pointsAndWeights
    java.util.Map pointsAndWeightsDouble -> pointsAndWeightsDouble
    org.apache.commons.math3.util.Pair getRule(int) -> getRule
    org.apache.commons.math3.util.Pair getRuleInternal(int) -> getRuleInternal
    void addRule(org.apache.commons.math3.util.Pair) -> addRule
    org.apache.commons.math3.util.Pair computeRule(int) -> computeRule
    org.apache.commons.math3.util.Pair convertToDouble(org.apache.commons.math3.util.Pair) -> convertToDouble
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator -> org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:
    double[] points -> points
    double[] weights -> weights
    double integrate(org.apache.commons.math3.analysis.UnivariateFunction) -> integrate
    int getNumberOfPoints() -> getNumberOfPoints
    double getPoint(int) -> getPoint
    double getWeight(int) -> getWeight
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory -> org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:
    org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory legendre -> legendre
    org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory legendreHighPrecision -> legendreHighPrecision
    org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory hermite -> hermite
    org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator legendre(int) -> legendre
    org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator legendre(int,double,double) -> legendre
    org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator legendreHighPrecision(int) -> legendreHighPrecision
    org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator legendreHighPrecision(int,double,double) -> legendreHighPrecision
    org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator hermite(int) -> hermite
    org.apache.commons.math3.util.Pair getRule(org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory,int) -> getRule
    org.apache.commons.math3.util.Pair transform(org.apache.commons.math3.util.Pair,double,double) -> transform
org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory -> org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory:
    double SQRT_PI -> SQRT_PI
    double H0 -> H0
    double H1 -> H1
    org.apache.commons.math3.util.Pair computeRule(int) -> computeRule
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory -> org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:
    java.math.MathContext mContext -> mContext
    java.math.BigDecimal two -> two
    java.math.BigDecimal minusOne -> minusOne
    java.math.BigDecimal oneHalf -> oneHalf
    org.apache.commons.math3.util.Pair computeRule(int) -> computeRule
org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory -> org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:
    org.apache.commons.math3.util.Pair computeRule(int) -> computeRule
org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator -> org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:
    double integrate(org.apache.commons.math3.analysis.UnivariateFunction) -> integrate
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction -> org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:
    short N -> N
    double[][] a -> a
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeX -> partialDerivativeX
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeY -> partialDerivativeY
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXX -> partialDerivativeXX
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeYY -> partialDerivativeYY
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXY -> partialDerivativeXY
    double value(double,double) -> value
    double apply(double[],double[],double[][]) -> apply
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeX() -> partialDerivativeX
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeY() -> partialDerivativeY
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXX() -> partialDerivativeXX
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeYY() -> partialDerivativeYY
    org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXY() -> partialDerivativeXY
    void computePartialDerivatives() -> computePartialDerivatives
    double access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[],double[],double[][]) -> access$000
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1 -> org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1:
    double[][] val$aX -> val$aX
    org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction this$0 -> this$0
    double value(double,double) -> value
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2 -> org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2:
    double[][] val$aY -> val$aY
    org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction this$0 -> this$0
    double value(double,double) -> value
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3 -> org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3:
    double[][] val$aXX -> val$aXX
    org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction this$0 -> this$0
    double value(double,double) -> value
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4 -> org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4:
    double[][] val$aYY -> val$aYY
    org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction this$0 -> this$0
    double value(double,double) -> value
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5 -> org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5:
    double[][] val$aXY -> val$aXY
    org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction this$0 -> this$0
    double value(double,double) -> value
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction -> org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:
    int NUM_COEFF -> NUM_COEFF
    double[][] AINV -> AINV
    double[] xval -> xval
    double[] yval -> yval
    org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction[][] splines -> splines
    org.apache.commons.math3.analysis.BivariateFunction[][][] partialDerivatives -> partialDerivatives
    double value(double,double) -> value
    boolean isValidPoint(double,double) -> isValidPoint
    double partialDerivativeX(double,double) -> partialDerivativeX
    double partialDerivativeY(double,double) -> partialDerivativeY
    double partialDerivativeXX(double,double) -> partialDerivativeXX
    double partialDerivativeYY(double,double) -> partialDerivativeYY
    double partialDerivativeXY(double,double) -> partialDerivativeXY
    double partialDerivative(int,double,double) -> partialDerivative
    void computePartialDerivatives() -> computePartialDerivatives
    int searchIndex(double,double[]) -> searchIndex
    double[] computeSplineCoefficients(double[]) -> computeSplineCoefficients
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator -> org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator:
    org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[],double[],double[][]) -> interpolate
    int nextIndex(int,int) -> nextIndex
    int previousIndex(int) -> previousIndex
    org.apache.commons.math3.analysis.BivariateFunction interpolate(double[],double[],double[][]) -> interpolate
org.apache.commons.math3.analysis.interpolation.BivariateGridInterpolator -> org.apache.commons.math3.analysis.interpolation.BivariateGridInterpolator:
    org.apache.commons.math3.analysis.BivariateFunction interpolate(double[],double[],double[][]) -> interpolate
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator -> org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm interpolate(double[],double[]) -> interpolate
    double[] computeDividedDifference(double[],double[]) -> computeDividedDifference
    org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator -> org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:
    java.util.List abscissae -> abscissae
    java.util.List topDiagonal -> topDiagonal
    java.util.List bottomDiagonal -> bottomDiagonal
    void addSamplePoint(org.apache.commons.math3.FieldElement,org.apache.commons.math3.FieldElement[][]) -> addSamplePoint
    org.apache.commons.math3.FieldElement[] value(org.apache.commons.math3.FieldElement) -> value
    org.apache.commons.math3.FieldElement[][] derivatives(org.apache.commons.math3.FieldElement,int) -> derivatives
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator -> org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:
    java.util.List abscissae -> abscissae
    java.util.List topDiagonal -> topDiagonal
    java.util.List bottomDiagonal -> bottomDiagonal
    void addSamplePoint(double,double[][]) -> addSamplePoint
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction[] getPolynomials() -> getPolynomials
    double[] value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    void checkInterpolation() -> checkInterpolation
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomial(double[]) -> polynomial
org.apache.commons.math3.analysis.interpolation.LinearInterpolator -> org.apache.commons.math3.analysis.interpolation.LinearInterpolator:
    org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[]) -> interpolate
    org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.LoessInterpolator -> org.apache.commons.math3.analysis.interpolation.LoessInterpolator:
    double DEFAULT_BANDWIDTH -> DEFAULT_BANDWIDTH
    int DEFAULT_ROBUSTNESS_ITERS -> DEFAULT_ROBUSTNESS_ITERS
    double DEFAULT_ACCURACY -> DEFAULT_ACCURACY
    long serialVersionUID -> serialVersionUID
    double bandwidth -> bandwidth
    int robustnessIters -> robustnessIters
    double accuracy -> accuracy
    org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[]) -> interpolate
    double[] smooth(double[],double[],double[]) -> smooth
    double[] smooth(double[],double[]) -> smooth
    void updateBandwidthInterval(double[],double[],int,int[]) -> updateBandwidthInterval
    int nextNonzero(double[],int) -> nextNonzero
    double tricube(double) -> tricube
    void checkAllFiniteReal(double[]) -> checkAllFiniteReal
    org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction -> org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:
    int dimension -> dimension
    java.util.List microsphere -> microsphere
    double brightnessExponent -> brightnessExponent
    java.util.Map samples -> samples
    double value(double[]) -> value
    double cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> cosAngle
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement -> org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement:
    org.apache.commons.math3.linear.RealVector normal -> normal
    double brightestIllumination -> brightestIllumination
    java.util.Map$Entry brightestSample -> brightestSample
    org.apache.commons.math3.linear.RealVector normal() -> normal
    void reset() -> reset
    void store(double,java.util.Map$Entry) -> store
    double illumination() -> illumination
    java.util.Map$Entry sample() -> sample
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator -> org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator:
    int DEFAULT_MICROSPHERE_ELEMENTS -> DEFAULT_MICROSPHERE_ELEMENTS
    int DEFAULT_BRIGHTNESS_EXPONENT -> DEFAULT_BRIGHTNESS_EXPONENT
    int microsphereElements -> microsphereElements
    int brightnessExponent -> brightnessExponent
    org.apache.commons.math3.analysis.MultivariateFunction interpolate(double[][],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.MultivariateInterpolator -> org.apache.commons.math3.analysis.interpolation.MultivariateInterpolator:
    org.apache.commons.math3.analysis.MultivariateFunction interpolate(double[][],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.NevilleInterpolator -> org.apache.commons.math3.analysis.interpolation.NevilleInterpolator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm interpolate(double[],double[]) -> interpolate
    org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator -> org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator:
    org.apache.commons.math3.fitting.PolynomialFitter xFitter -> xFitter
    int xDegree -> xDegree
    org.apache.commons.math3.fitting.PolynomialFitter yFitter -> yFitter
    int yDegree -> yDegree
    org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[],double[],double[][]) -> interpolate
    org.apache.commons.math3.analysis.BivariateFunction interpolate(double[],double[],double[][]) -> interpolate
org.apache.commons.math3.analysis.interpolation.SplineInterpolator -> org.apache.commons.math3.analysis.interpolation.SplineInterpolator:
    org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[]) -> interpolate
    org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction -> org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction:
    short N -> N
    double[][][] a -> a
    double value(double,double,double) -> value
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction -> org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:
    double[][] AINV -> AINV
    double[] xval -> xval
    double[] yval -> yval
    double[] zval -> zval
    org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction[][][] splines -> splines
    double value(double,double,double) -> value
    int searchIndex(double,double[]) -> searchIndex
    double[] computeSplineCoefficients(double[]) -> computeSplineCoefficients
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator -> org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator:
    org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction interpolate(double[],double[],double[],double[][][]) -> interpolate
    int nextIndex(int,int) -> nextIndex
    int previousIndex(int) -> previousIndex
    org.apache.commons.math3.analysis.TrivariateFunction interpolate(double[],double[],double[],double[][][]) -> interpolate
org.apache.commons.math3.analysis.interpolation.TrivariateGridInterpolator -> org.apache.commons.math3.analysis.interpolation.TrivariateGridInterpolator:
    org.apache.commons.math3.analysis.TrivariateFunction interpolate(double[],double[],double[],double[][][]) -> interpolate
org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator -> org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator:
    org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[]) -> interpolate
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator -> org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator:
    int DEFAULT_EXTEND -> DEFAULT_EXTEND
    org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator interpolator -> interpolator
    double period -> period
    int extend -> extend
    org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[]) -> interpolate
    double access$000(org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator) -> access$000
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1 -> org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1:
    org.apache.commons.math3.analysis.UnivariateFunction val$f -> val$f
    double val$offset -> val$offset
    org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.analysis.polynomials.PolynomialFunction -> org.apache.commons.math3.analysis.polynomials.PolynomialFunction:
    long serialVersionUID -> serialVersionUID
    double[] coefficients -> coefficients
    double value(double) -> value
    int degree() -> degree
    double[] getCoefficients() -> getCoefficients
    double evaluate(double[],double) -> evaluate
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction) -> add
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction subtract(org.apache.commons.math3.analysis.polynomials.PolynomialFunction) -> subtract
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction negate() -> negate
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction multiply(org.apache.commons.math3.analysis.polynomials.PolynomialFunction) -> multiply
    double[] differentiate(double[]) -> differentiate
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomialDerivative() -> polynomialDerivative
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    java.lang.String toString() -> toString
    java.lang.String toString(double) -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric -> org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:
    double[] gradient(double,double[]) -> gradient
    double value(double,double[]) -> value
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm -> org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:
    double[] coefficients -> coefficients
    double[] x -> x
    double[] y -> y
    boolean coefficientsComputed -> coefficientsComputed
    double value(double) -> value
    int degree() -> degree
    double[] getInterpolatingPoints() -> getInterpolatingPoints
    double[] getInterpolatingValues() -> getInterpolatingValues
    double[] getCoefficients() -> getCoefficients
    double evaluate(double[],double[],double) -> evaluate
    double evaluateInternal(double[],double[],double) -> evaluateInternal
    void computeCoefficients() -> computeCoefficients
    boolean verifyInterpolationArray(double[],double[],boolean) -> verifyInterpolationArray
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm -> org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:
    double[] coefficients -> coefficients
    double[] c -> c
    double[] a -> a
    boolean coefficientsComputed -> coefficientsComputed
    double value(double) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    int degree() -> degree
    double[] getNewtonCoefficients() -> getNewtonCoefficients
    double[] getCenters() -> getCenters
    double[] getCoefficients() -> getCoefficients
    double evaluate(double[],double[],double) -> evaluate
    void computeCoefficients() -> computeCoefficients
    void verifyInputArray(double[],double[]) -> verifyInputArray
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction -> org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:
    double[] knots -> knots
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction[] polynomials -> polynomials
    int n -> n
    double value(double) -> value
    org.apache.commons.math3.analysis.UnivariateFunction derivative() -> derivative
    org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction polynomialSplineDerivative() -> polynomialSplineDerivative
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) -> value
    int getN() -> getN
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction[] getPolynomials() -> getPolynomials
    double[] getKnots() -> getKnots
    boolean isValidPoint(double) -> isValidPoint
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:
    java.util.List CHEBYSHEV_COEFFICIENTS -> CHEBYSHEV_COEFFICIENTS
    java.util.List HERMITE_COEFFICIENTS -> HERMITE_COEFFICIENTS
    java.util.List LAGUERRE_COEFFICIENTS -> LAGUERRE_COEFFICIENTS
    java.util.List LEGENDRE_COEFFICIENTS -> LEGENDRE_COEFFICIENTS
    java.util.Map JACOBI_COEFFICIENTS -> JACOBI_COEFFICIENTS
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction createChebyshevPolynomial(int) -> createChebyshevPolynomial
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction createHermitePolynomial(int) -> createHermitePolynomial
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction createLaguerrePolynomial(int) -> createLaguerrePolynomial
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction createLegendrePolynomial(int) -> createLegendrePolynomial
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction createJacobiPolynomial(int,int,int) -> createJacobiPolynomial
    double[] shift(double[],double) -> shift
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction buildPolynomial(int,java.util.List,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator) -> buildPolynomial
    void computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator,java.util.List) -> computeUpToDegree
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1 -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1:
    org.apache.commons.math3.fraction.BigFraction[] coeffs -> coeffs
    org.apache.commons.math3.fraction.BigFraction[] generate(int) -> generate
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2 -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2:
    org.apache.commons.math3.fraction.BigFraction[] generate(int) -> generate
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3 -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3:
    org.apache.commons.math3.fraction.BigFraction[] generate(int) -> generate
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4 -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4:
    org.apache.commons.math3.fraction.BigFraction[] generate(int) -> generate
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5 -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5:
    int val$v -> val$v
    int val$w -> val$w
    org.apache.commons.math3.fraction.BigFraction[] generate(int) -> generate
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey:
    int v -> v
    int w -> w
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator -> org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator:
    org.apache.commons.math3.fraction.BigFraction[] generate(int) -> generate
org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver -> org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver:
    org.apache.commons.math3.analysis.UnivariateFunction functionDerivative -> functionDerivative
    double computeDerivativeObjectiveValue(double) -> computeDerivativeObjectiveValue
    void setup(int,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction,double,double,double) -> setup
    void setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> setup
org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver -> org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver:
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomialFunction -> polynomialFunction
    void setup(int,org.apache.commons.math3.analysis.polynomials.PolynomialFunction,double,double,double) -> setup
    double[] getCoefficients() -> getCoefficients
    void setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> setup
org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver -> org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver:
    org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction function -> function
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure computeObjectiveValueAndDerivative(double) -> computeObjectiveValueAndDerivative
    void setup(int,org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,double,double,double) -> setup
    void setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> setup
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver -> org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver:
org.apache.commons.math3.analysis.solvers.AllowedSolution -> org.apache.commons.math3.analysis.solvers.AllowedSolution:
    org.apache.commons.math3.analysis.solvers.AllowedSolution ANY_SIDE -> ANY_SIDE
    org.apache.commons.math3.analysis.solvers.AllowedSolution LEFT_SIDE -> LEFT_SIDE
    org.apache.commons.math3.analysis.solvers.AllowedSolution RIGHT_SIDE -> RIGHT_SIDE
    org.apache.commons.math3.analysis.solvers.AllowedSolution BELOW_SIDE -> BELOW_SIDE
    org.apache.commons.math3.analysis.solvers.AllowedSolution ABOVE_SIDE -> ABOVE_SIDE
    org.apache.commons.math3.analysis.solvers.AllowedSolution[] $VALUES -> $VALUES
    org.apache.commons.math3.analysis.solvers.AllowedSolution[] values() -> values
    org.apache.commons.math3.analysis.solvers.AllowedSolution valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver -> org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:
    double DEFAULT_RELATIVE_ACCURACY -> DEFAULT_RELATIVE_ACCURACY
    double DEFAULT_FUNCTION_VALUE_ACCURACY -> DEFAULT_FUNCTION_VALUE_ACCURACY
    double functionValueAccuracy -> functionValueAccuracy
    double absoluteAccuracy -> absoluteAccuracy
    double relativeAccuracy -> relativeAccuracy
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    double searchMin -> searchMin
    double searchMax -> searchMax
    double searchStart -> searchStart
    org.apache.commons.math3.analysis.UnivariateFunction function -> function
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    double getMin() -> getMin
    double getMax() -> getMax
    double getStartValue() -> getStartValue
    double getAbsoluteAccuracy() -> getAbsoluteAccuracy
    double getRelativeAccuracy() -> getRelativeAccuracy
    double getFunctionValueAccuracy() -> getFunctionValueAccuracy
    double computeObjectiveValue(double) -> computeObjectiveValue
    void setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> setup
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double) -> solve
    double doSolve() -> doSolve
    boolean isBracketing(double,double) -> isBracketing
    boolean isSequence(double,double,double) -> isSequence
    void verifyInterval(double,double) -> verifyInterval
    void verifySequence(double,double,double) -> verifySequence
    void verifyBracketing(double,double) -> verifyBracketing
    void incrementEvaluationCount() -> incrementEvaluationCount
org.apache.commons.math3.analysis.solvers.BaseSecantSolver -> org.apache.commons.math3.analysis.solvers.BaseSecantSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    org.apache.commons.math3.analysis.solvers.AllowedSolution allowed -> allowed
    org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method method -> method
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> solve
    double doSolve() -> doSolve
org.apache.commons.math3.analysis.solvers.BaseSecantSolver$1 -> org.apache.commons.math3.analysis.solvers.BaseSecantSolver$1:
    int[] $SwitchMap$org$apache$commons$math3$analysis$solvers$BaseSecantSolver$Method -> $SwitchMap$org$apache$commons$math3$analysis$solvers$BaseSecantSolver$Method
    int[] $SwitchMap$org$apache$commons$math3$analysis$solvers$AllowedSolution -> $SwitchMap$org$apache$commons$math3$analysis$solvers$AllowedSolution
org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method -> org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method:
    org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method REGULA_FALSI -> REGULA_FALSI
    org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method ILLINOIS -> ILLINOIS
    org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method PEGASUS -> PEGASUS
    org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method[] $VALUES -> $VALUES
    org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method[] values() -> values
    org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver -> org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    double getAbsoluteAccuracy() -> getAbsoluteAccuracy
    double getRelativeAccuracy() -> getRelativeAccuracy
    double getFunctionValueAccuracy() -> getFunctionValueAccuracy
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double) -> solve
org.apache.commons.math3.analysis.solvers.BisectionSolver -> org.apache.commons.math3.analysis.solvers.BisectionSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double doSolve() -> doSolve
org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver -> org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver:
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver -> org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    int DEFAULT_MAXIMAL_ORDER -> DEFAULT_MAXIMAL_ORDER
    int MAXIMAL_AGING -> MAXIMAL_AGING
    double REDUCTION_FACTOR -> REDUCTION_FACTOR
    int maximalOrder -> maximalOrder
    org.apache.commons.math3.analysis.solvers.AllowedSolution allowed -> allowed
    int getMaximalOrder() -> getMaximalOrder
    double doSolve() -> doSolve
    double guessX(double,double[],double[],int,int) -> guessX
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver$1 -> org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver$1:
    int[] $SwitchMap$org$apache$commons$math3$analysis$solvers$AllowedSolution -> $SwitchMap$org$apache$commons$math3$analysis$solvers$AllowedSolution
org.apache.commons.math3.analysis.solvers.BrentSolver -> org.apache.commons.math3.analysis.solvers.BrentSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double doSolve() -> doSolve
    double brent(double,double,double,double) -> brent
org.apache.commons.math3.analysis.solvers.DifferentiableUnivariateSolver -> org.apache.commons.math3.analysis.solvers.DifferentiableUnivariateSolver:
org.apache.commons.math3.analysis.solvers.IllinoisSolver -> org.apache.commons.math3.analysis.solvers.IllinoisSolver:
org.apache.commons.math3.analysis.solvers.LaguerreSolver -> org.apache.commons.math3.analysis.solvers.LaguerreSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver -> complexSolver
    double doSolve() -> doSolve
    double laguerre(double,double,double,double) -> laguerre
    org.apache.commons.math3.complex.Complex[] solveAllComplex(double[],double) -> solveAllComplex
    org.apache.commons.math3.complex.Complex solveComplex(double[],double) -> solveComplex
org.apache.commons.math3.analysis.solvers.LaguerreSolver$1 -> org.apache.commons.math3.analysis.solvers.LaguerreSolver$1:
org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver -> org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver:
    org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0 -> this$0
    boolean isRoot(double,double,org.apache.commons.math3.complex.Complex) -> isRoot
    org.apache.commons.math3.complex.Complex[] solveAll(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex) -> solveAll
    org.apache.commons.math3.complex.Complex solve(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex) -> solve
org.apache.commons.math3.analysis.solvers.MullerSolver -> org.apache.commons.math3.analysis.solvers.MullerSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double doSolve() -> doSolve
    double solve(double,double,double,double) -> solve
org.apache.commons.math3.analysis.solvers.MullerSolver2 -> org.apache.commons.math3.analysis.solvers.MullerSolver2:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double doSolve() -> doSolve
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver -> org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double solve(int,org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,double,double) -> solve
    double doSolve() -> doSolve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> solve
org.apache.commons.math3.analysis.solvers.NewtonSolver -> org.apache.commons.math3.analysis.solvers.NewtonSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double solve(int,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction,double,double) -> solve
    double doSolve() -> doSolve
    double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> solve
org.apache.commons.math3.analysis.solvers.PegasusSolver -> org.apache.commons.math3.analysis.solvers.PegasusSolver:
org.apache.commons.math3.analysis.solvers.PolynomialSolver -> org.apache.commons.math3.analysis.solvers.PolynomialSolver:
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver -> org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver:
org.apache.commons.math3.analysis.solvers.RiddersSolver -> org.apache.commons.math3.analysis.solvers.RiddersSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double doSolve() -> doSolve
org.apache.commons.math3.analysis.solvers.SecantSolver -> org.apache.commons.math3.analysis.solvers.SecantSolver:
    double DEFAULT_ABSOLUTE_ACCURACY -> DEFAULT_ABSOLUTE_ACCURACY
    double doSolve() -> doSolve
org.apache.commons.math3.analysis.solvers.UnivariateDifferentiableSolver -> org.apache.commons.math3.analysis.solvers.UnivariateDifferentiableSolver:
org.apache.commons.math3.analysis.solvers.UnivariateSolver -> org.apache.commons.math3.analysis.solvers.UnivariateSolver:
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils -> org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:
    double solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> solve
    double solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> solve
    double forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> forceSide
    double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double) -> bracket
    double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int) -> bracket
    double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,double,double,int) -> bracket
    double midpoint(double,double) -> midpoint
    boolean isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> isBracketing
    boolean isSequence(double,double,double) -> isSequence
    void verifyInterval(double,double) -> verifyInterval
    void verifySequence(double,double,double) -> verifySequence
    void verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> verifyBracketing
org.apache.commons.math3.complex.Complex -> org.apache.commons.math3.complex.Complex:
    org.apache.commons.math3.complex.Complex I -> I
    org.apache.commons.math3.complex.Complex NaN -> NaN
    org.apache.commons.math3.complex.Complex INF -> INF
    org.apache.commons.math3.complex.Complex ONE -> ONE
    org.apache.commons.math3.complex.Complex ZERO -> ZERO
    long serialVersionUID -> serialVersionUID
    double imaginary -> imaginary
    double real -> real
    boolean isNaN -> isNaN
    boolean isInfinite -> isInfinite
    double abs() -> abs
    org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex) -> add
    org.apache.commons.math3.complex.Complex add(double) -> add
    org.apache.commons.math3.complex.Complex conjugate() -> conjugate
    org.apache.commons.math3.complex.Complex divide(org.apache.commons.math3.complex.Complex) -> divide
    org.apache.commons.math3.complex.Complex divide(double) -> divide
    org.apache.commons.math3.complex.Complex reciprocal() -> reciprocal
    boolean equals(java.lang.Object) -> equals
    boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,int) -> equals
    boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex) -> equals
    boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,double) -> equals
    boolean equalsWithRelativeTolerance(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,double) -> equalsWithRelativeTolerance
    int hashCode() -> hashCode
    double getImaginary() -> getImaginary
    double getReal() -> getReal
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex) -> multiply
    org.apache.commons.math3.complex.Complex multiply(int) -> multiply
    org.apache.commons.math3.complex.Complex multiply(double) -> multiply
    org.apache.commons.math3.complex.Complex negate() -> negate
    org.apache.commons.math3.complex.Complex subtract(org.apache.commons.math3.complex.Complex) -> subtract
    org.apache.commons.math3.complex.Complex subtract(double) -> subtract
    org.apache.commons.math3.complex.Complex acos() -> acos
    org.apache.commons.math3.complex.Complex asin() -> asin
    org.apache.commons.math3.complex.Complex atan() -> atan
    org.apache.commons.math3.complex.Complex cos() -> cos
    org.apache.commons.math3.complex.Complex cosh() -> cosh
    org.apache.commons.math3.complex.Complex exp() -> exp
    org.apache.commons.math3.complex.Complex log() -> log
    org.apache.commons.math3.complex.Complex pow(org.apache.commons.math3.complex.Complex) -> pow
    org.apache.commons.math3.complex.Complex pow(double) -> pow
    org.apache.commons.math3.complex.Complex sin() -> sin
    org.apache.commons.math3.complex.Complex sinh() -> sinh
    org.apache.commons.math3.complex.Complex sqrt() -> sqrt
    org.apache.commons.math3.complex.Complex sqrt1z() -> sqrt1z
    org.apache.commons.math3.complex.Complex tan() -> tan
    org.apache.commons.math3.complex.Complex tanh() -> tanh
    double getArgument() -> getArgument
    java.util.List nthRoot(int) -> nthRoot
    org.apache.commons.math3.complex.Complex createComplex(double,double) -> createComplex
    org.apache.commons.math3.complex.Complex valueOf(double,double) -> valueOf
    org.apache.commons.math3.complex.Complex valueOf(double) -> valueOf
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.math3.complex.ComplexField getField() -> getField
    java.lang.String toString() -> toString
    org.apache.commons.math3.Field getField() -> getField
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
org.apache.commons.math3.complex.ComplexField -> org.apache.commons.math3.complex.ComplexField:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.complex.ComplexField getInstance() -> getInstance
    org.apache.commons.math3.complex.Complex getOne() -> getOne
    org.apache.commons.math3.complex.Complex getZero() -> getZero
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    java.lang.Object readResolve() -> readResolve
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.complex.ComplexField$1 -> org.apache.commons.math3.complex.ComplexField$1:
org.apache.commons.math3.complex.ComplexField$LazyHolder -> org.apache.commons.math3.complex.ComplexField$LazyHolder:
    org.apache.commons.math3.complex.ComplexField INSTANCE -> INSTANCE
    org.apache.commons.math3.complex.ComplexField access$000() -> access$000
org.apache.commons.math3.complex.ComplexFormat -> org.apache.commons.math3.complex.ComplexFormat:
    java.lang.String DEFAULT_IMAGINARY_CHARACTER -> DEFAULT_IMAGINARY_CHARACTER
    java.lang.String imaginaryCharacter -> imaginaryCharacter
    java.text.NumberFormat imaginaryFormat -> imaginaryFormat
    java.text.NumberFormat realFormat -> realFormat
    java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    java.lang.String format(org.apache.commons.math3.complex.Complex) -> format
    java.lang.String format(java.lang.Double) -> format
    java.lang.StringBuffer format(org.apache.commons.math3.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer formatImaginary(double,java.lang.StringBuffer,java.text.FieldPosition) -> formatImaginary
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.String getImaginaryCharacter() -> getImaginaryCharacter
    java.text.NumberFormat getImaginaryFormat() -> getImaginaryFormat
    org.apache.commons.math3.complex.ComplexFormat getInstance() -> getInstance
    org.apache.commons.math3.complex.ComplexFormat getInstance(java.util.Locale) -> getInstance
    org.apache.commons.math3.complex.ComplexFormat getInstance(java.lang.String,java.util.Locale) -> getInstance
    java.text.NumberFormat getRealFormat() -> getRealFormat
    org.apache.commons.math3.complex.Complex parse(java.lang.String) -> parse
    org.apache.commons.math3.complex.Complex parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.commons.math3.complex.ComplexUtils -> org.apache.commons.math3.complex.ComplexUtils:
    org.apache.commons.math3.complex.Complex polar2Complex(double,double) -> polar2Complex
    org.apache.commons.math3.complex.Complex[] convertToComplex(double[]) -> convertToComplex
org.apache.commons.math3.complex.Quaternion -> org.apache.commons.math3.complex.Quaternion:
    org.apache.commons.math3.complex.Quaternion IDENTITY -> IDENTITY
    org.apache.commons.math3.complex.Quaternion ZERO -> ZERO
    org.apache.commons.math3.complex.Quaternion I -> I
    org.apache.commons.math3.complex.Quaternion J -> J
    org.apache.commons.math3.complex.Quaternion K -> K
    long serialVersionUID -> serialVersionUID
    double q0 -> q0
    double q1 -> q1
    double q2 -> q2
    double q3 -> q3
    org.apache.commons.math3.complex.Quaternion getConjugate() -> getConjugate
    org.apache.commons.math3.complex.Quaternion multiply(org.apache.commons.math3.complex.Quaternion,org.apache.commons.math3.complex.Quaternion) -> multiply
    org.apache.commons.math3.complex.Quaternion multiply(org.apache.commons.math3.complex.Quaternion) -> multiply
    org.apache.commons.math3.complex.Quaternion add(org.apache.commons.math3.complex.Quaternion,org.apache.commons.math3.complex.Quaternion) -> add
    org.apache.commons.math3.complex.Quaternion add(org.apache.commons.math3.complex.Quaternion) -> add
    org.apache.commons.math3.complex.Quaternion subtract(org.apache.commons.math3.complex.Quaternion,org.apache.commons.math3.complex.Quaternion) -> subtract
    org.apache.commons.math3.complex.Quaternion subtract(org.apache.commons.math3.complex.Quaternion) -> subtract
    double dotProduct(org.apache.commons.math3.complex.Quaternion,org.apache.commons.math3.complex.Quaternion) -> dotProduct
    double dotProduct(org.apache.commons.math3.complex.Quaternion) -> dotProduct
    double getNorm() -> getNorm
    org.apache.commons.math3.complex.Quaternion normalize() -> normalize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean equals(org.apache.commons.math3.complex.Quaternion,double) -> equals
    boolean isUnitQuaternion(double) -> isUnitQuaternion
    boolean isPureQuaternion(double) -> isPureQuaternion
    org.apache.commons.math3.complex.Quaternion getPositivePolarForm() -> getPositivePolarForm
    org.apache.commons.math3.complex.Quaternion getInverse() -> getInverse
    double getQ0() -> getQ0
    double getQ1() -> getQ1
    double getQ2() -> getQ2
    double getQ3() -> getQ3
    double getScalarPart() -> getScalarPart
    double[] getVectorPart() -> getVectorPart
    org.apache.commons.math3.complex.Quaternion multiply(double) -> multiply
    java.lang.String toString() -> toString
org.apache.commons.math3.complex.RootsOfUnity -> org.apache.commons.math3.complex.RootsOfUnity:
    long serialVersionUID -> serialVersionUID
    int omegaCount -> omegaCount
    double[] omegaReal -> omegaReal
    double[] omegaImaginaryCounterClockwise -> omegaImaginaryCounterClockwise
    double[] omegaImaginaryClockwise -> omegaImaginaryClockwise
    boolean isCounterClockWise -> isCounterClockWise
    boolean isCounterClockWise() -> isCounterClockWise
    void computeRoots(int) -> computeRoots
    double getReal(int) -> getReal
    double getImaginary(int) -> getImaginary
    int getNumberOfRoots() -> getNumberOfRoots
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP -> org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:
    int MAXIMAL_AGING -> MAXIMAL_AGING
    int maximalOrder -> maximalOrder
    org.apache.commons.math3.dfp.Dfp functionValueAccuracy -> functionValueAccuracy
    org.apache.commons.math3.dfp.Dfp absoluteAccuracy -> absoluteAccuracy
    org.apache.commons.math3.dfp.Dfp relativeAccuracy -> relativeAccuracy
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    int getMaximalOrder() -> getMaximalOrder
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.dfp.Dfp getAbsoluteAccuracy() -> getAbsoluteAccuracy
    org.apache.commons.math3.dfp.Dfp getRelativeAccuracy() -> getRelativeAccuracy
    org.apache.commons.math3.dfp.Dfp getFunctionValueAccuracy() -> getFunctionValueAccuracy
    org.apache.commons.math3.dfp.Dfp solve(int,org.apache.commons.math3.dfp.UnivariateDfpFunction,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
    org.apache.commons.math3.dfp.Dfp solve(int,org.apache.commons.math3.dfp.UnivariateDfpFunction,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.analysis.solvers.AllowedSolution) -> solve
    org.apache.commons.math3.dfp.Dfp guessX(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp[],org.apache.commons.math3.dfp.Dfp[],int,int) -> guessX
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1 -> org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1:
    int[] $SwitchMap$org$apache$commons$math3$analysis$solvers$AllowedSolution -> $SwitchMap$org$apache$commons$math3$analysis$solvers$AllowedSolution
org.apache.commons.math3.dfp.Dfp -> org.apache.commons.math3.dfp.Dfp:
    int RADIX -> RADIX
    int MIN_EXP -> MIN_EXP
    int MAX_EXP -> MAX_EXP
    int ERR_SCALE -> ERR_SCALE
    byte FINITE -> FINITE
    byte INFINITE -> INFINITE
    byte SNAN -> SNAN
    byte QNAN -> QNAN
    java.lang.String NAN_STRING -> NAN_STRING
    java.lang.String POS_INFINITY_STRING -> POS_INFINITY_STRING
    java.lang.String NEG_INFINITY_STRING -> NEG_INFINITY_STRING
    java.lang.String ADD_TRAP -> ADD_TRAP
    java.lang.String MULTIPLY_TRAP -> MULTIPLY_TRAP
    java.lang.String DIVIDE_TRAP -> DIVIDE_TRAP
    java.lang.String SQRT_TRAP -> SQRT_TRAP
    java.lang.String ALIGN_TRAP -> ALIGN_TRAP
    java.lang.String TRUNC_TRAP -> TRUNC_TRAP
    java.lang.String NEXT_AFTER_TRAP -> NEXT_AFTER_TRAP
    java.lang.String LESS_THAN_TRAP -> LESS_THAN_TRAP
    java.lang.String GREATER_THAN_TRAP -> GREATER_THAN_TRAP
    java.lang.String NEW_INSTANCE_TRAP -> NEW_INSTANCE_TRAP
    int[] mant -> mant
    byte sign -> sign
    int exp -> exp
    byte nans -> nans
    org.apache.commons.math3.dfp.DfpField field -> field
    org.apache.commons.math3.dfp.Dfp newInstance() -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(byte) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(int) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(long) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(double) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(java.lang.String) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(byte,byte) -> newInstance
    org.apache.commons.math3.dfp.DfpField getField() -> getField
    int getRadixDigits() -> getRadixDigits
    org.apache.commons.math3.dfp.Dfp getZero() -> getZero
    org.apache.commons.math3.dfp.Dfp getOne() -> getOne
    org.apache.commons.math3.dfp.Dfp getTwo() -> getTwo
    void shiftLeft() -> shiftLeft
    void shiftRight() -> shiftRight
    int align(int) -> align
    boolean lessThan(org.apache.commons.math3.dfp.Dfp) -> lessThan
    boolean greaterThan(org.apache.commons.math3.dfp.Dfp) -> greaterThan
    boolean negativeOrNull() -> negativeOrNull
    boolean strictlyNegative() -> strictlyNegative
    boolean positiveOrNull() -> positiveOrNull
    boolean strictlyPositive() -> strictlyPositive
    org.apache.commons.math3.dfp.Dfp abs() -> abs
    boolean isInfinite() -> isInfinite
    boolean isNaN() -> isNaN
    boolean isZero() -> isZero
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean unequal(org.apache.commons.math3.dfp.Dfp) -> unequal
    int compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> compare
    org.apache.commons.math3.dfp.Dfp rint() -> rint
    org.apache.commons.math3.dfp.Dfp floor() -> floor
    org.apache.commons.math3.dfp.Dfp ceil() -> ceil
    org.apache.commons.math3.dfp.Dfp remainder(org.apache.commons.math3.dfp.Dfp) -> remainder
    org.apache.commons.math3.dfp.Dfp trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) -> trunc
    int intValue() -> intValue
    int log10K() -> log10K
    org.apache.commons.math3.dfp.Dfp power10K(int) -> power10K
    int intLog10() -> intLog10
    org.apache.commons.math3.dfp.Dfp power10(int) -> power10
    int complement(int) -> complement
    org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp) -> add
    org.apache.commons.math3.dfp.Dfp negate() -> negate
    org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp) -> subtract
    int round(int) -> round
    org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp) -> multiply
    org.apache.commons.math3.dfp.Dfp multiply(int) -> multiply
    org.apache.commons.math3.dfp.Dfp multiplyFast(int) -> multiplyFast
    org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp) -> divide
    org.apache.commons.math3.dfp.Dfp divide(int) -> divide
    org.apache.commons.math3.dfp.Dfp reciprocal() -> reciprocal
    org.apache.commons.math3.dfp.Dfp sqrt() -> sqrt
    java.lang.String toString() -> toString
    java.lang.String dfp2sci() -> dfp2sci
    java.lang.String dfp2string() -> dfp2string
    org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> dotrap
    org.apache.commons.math3.dfp.Dfp trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> trap
    int classify() -> classify
    org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> copysign
    org.apache.commons.math3.dfp.Dfp nextAfter(org.apache.commons.math3.dfp.Dfp) -> nextAfter
    double toDouble() -> toDouble
    double[] toSplitDouble() -> toSplitDouble
    double getReal() -> getReal
    org.apache.commons.math3.dfp.Dfp add(double) -> add
    org.apache.commons.math3.dfp.Dfp subtract(double) -> subtract
    org.apache.commons.math3.dfp.Dfp multiply(double) -> multiply
    org.apache.commons.math3.dfp.Dfp divide(double) -> divide
    org.apache.commons.math3.dfp.Dfp remainder(double) -> remainder
    long round() -> round
    org.apache.commons.math3.dfp.Dfp signum() -> signum
    org.apache.commons.math3.dfp.Dfp copySign(org.apache.commons.math3.dfp.Dfp) -> copySign
    org.apache.commons.math3.dfp.Dfp copySign(double) -> copySign
    org.apache.commons.math3.dfp.Dfp scalb(int) -> scalb
    org.apache.commons.math3.dfp.Dfp hypot(org.apache.commons.math3.dfp.Dfp) -> hypot
    org.apache.commons.math3.dfp.Dfp cbrt() -> cbrt
    org.apache.commons.math3.dfp.Dfp rootN(int) -> rootN
    org.apache.commons.math3.dfp.Dfp pow(double) -> pow
    org.apache.commons.math3.dfp.Dfp pow(int) -> pow
    org.apache.commons.math3.dfp.Dfp pow(org.apache.commons.math3.dfp.Dfp) -> pow
    org.apache.commons.math3.dfp.Dfp exp() -> exp
    org.apache.commons.math3.dfp.Dfp expm1() -> expm1
    org.apache.commons.math3.dfp.Dfp log() -> log
    org.apache.commons.math3.dfp.Dfp log1p() -> log1p
    int log10() -> log10
    org.apache.commons.math3.dfp.Dfp cos() -> cos
    org.apache.commons.math3.dfp.Dfp sin() -> sin
    org.apache.commons.math3.dfp.Dfp tan() -> tan
    org.apache.commons.math3.dfp.Dfp acos() -> acos
    org.apache.commons.math3.dfp.Dfp asin() -> asin
    org.apache.commons.math3.dfp.Dfp atan() -> atan
    org.apache.commons.math3.dfp.Dfp atan2(org.apache.commons.math3.dfp.Dfp) -> atan2
    org.apache.commons.math3.dfp.Dfp cosh() -> cosh
    org.apache.commons.math3.dfp.Dfp sinh() -> sinh
    org.apache.commons.math3.dfp.Dfp tanh() -> tanh
    org.apache.commons.math3.dfp.Dfp acosh() -> acosh
    org.apache.commons.math3.dfp.Dfp asinh() -> asinh
    org.apache.commons.math3.dfp.Dfp atanh() -> atanh
    org.apache.commons.math3.dfp.Dfp linearCombination(org.apache.commons.math3.dfp.Dfp[],org.apache.commons.math3.dfp.Dfp[]) -> linearCombination
    org.apache.commons.math3.dfp.Dfp linearCombination(double[],org.apache.commons.math3.dfp.Dfp[]) -> linearCombination
    org.apache.commons.math3.dfp.Dfp linearCombination(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> linearCombination
    org.apache.commons.math3.dfp.Dfp linearCombination(double,org.apache.commons.math3.dfp.Dfp,double,org.apache.commons.math3.dfp.Dfp) -> linearCombination
    org.apache.commons.math3.dfp.Dfp linearCombination(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> linearCombination
    org.apache.commons.math3.dfp.Dfp linearCombination(double,org.apache.commons.math3.dfp.Dfp,double,org.apache.commons.math3.dfp.Dfp,double,org.apache.commons.math3.dfp.Dfp) -> linearCombination
    org.apache.commons.math3.dfp.Dfp linearCombination(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> linearCombination
    org.apache.commons.math3.dfp.Dfp linearCombination(double,org.apache.commons.math3.dfp.Dfp,double,org.apache.commons.math3.dfp.Dfp,double,org.apache.commons.math3.dfp.Dfp,double,org.apache.commons.math3.dfp.Dfp) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double[],java.lang.Object[]) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object[],java.lang.Object[]) -> linearCombination
    java.lang.Object atanh() -> atanh
    java.lang.Object asinh() -> asinh
    java.lang.Object acosh() -> acosh
    java.lang.Object tanh() -> tanh
    java.lang.Object sinh() -> sinh
    java.lang.Object cosh() -> cosh
    java.lang.Object atan2(java.lang.Object) -> atan2
    java.lang.Object atan() -> atan
    java.lang.Object asin() -> asin
    java.lang.Object acos() -> acos
    java.lang.Object tan() -> tan
    java.lang.Object sin() -> sin
    java.lang.Object cos() -> cos
    java.lang.Object log1p() -> log1p
    java.lang.Object log() -> log
    java.lang.Object expm1() -> expm1
    java.lang.Object exp() -> exp
    java.lang.Object pow(java.lang.Object) -> pow
    java.lang.Object pow(int) -> pow
    java.lang.Object pow(double) -> pow
    java.lang.Object rootN(int) -> rootN
    java.lang.Object cbrt() -> cbrt
    java.lang.Object sqrt() -> sqrt
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object hypot(java.lang.Object) -> hypot
    java.lang.Object scalb(int) -> scalb
    java.lang.Object copySign(double) -> copySign
    java.lang.Object copySign(java.lang.Object) -> copySign
    java.lang.Object signum() -> signum
    java.lang.Object rint() -> rint
    java.lang.Object floor() -> floor
    java.lang.Object ceil() -> ceil
    java.lang.Object abs() -> abs
    java.lang.Object remainder(java.lang.Object) -> remainder
    java.lang.Object remainder(double) -> remainder
    java.lang.Object divide(double) -> divide
    java.lang.Object multiply(double) -> multiply
    java.lang.Object subtract(double) -> subtract
    java.lang.Object add(double) -> add
    org.apache.commons.math3.Field getField() -> getField
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
org.apache.commons.math3.dfp.Dfp$1 -> org.apache.commons.math3.dfp.Dfp$1:
    int[] $SwitchMap$org$apache$commons$math3$dfp$DfpField$RoundingMode -> $SwitchMap$org$apache$commons$math3$dfp$DfpField$RoundingMode
org.apache.commons.math3.dfp.DfpDec -> org.apache.commons.math3.dfp.DfpDec:
    org.apache.commons.math3.dfp.Dfp newInstance() -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(byte) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(int) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(long) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(double) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(java.lang.String) -> newInstance
    org.apache.commons.math3.dfp.Dfp newInstance(byte,byte) -> newInstance
    int getDecimalDigits() -> getDecimalDigits
    int round(int) -> round
    org.apache.commons.math3.dfp.Dfp nextAfter(org.apache.commons.math3.dfp.Dfp) -> nextAfter
org.apache.commons.math3.dfp.DfpDec$1 -> org.apache.commons.math3.dfp.DfpDec$1:
    int[] $SwitchMap$org$apache$commons$math3$dfp$DfpField$RoundingMode -> $SwitchMap$org$apache$commons$math3$dfp$DfpField$RoundingMode
org.apache.commons.math3.dfp.DfpField -> org.apache.commons.math3.dfp.DfpField:
    int FLAG_INVALID -> FLAG_INVALID
    int FLAG_DIV_ZERO -> FLAG_DIV_ZERO
    int FLAG_OVERFLOW -> FLAG_OVERFLOW
    int FLAG_UNDERFLOW -> FLAG_UNDERFLOW
    int FLAG_INEXACT -> FLAG_INEXACT
    java.lang.String sqr2String -> sqr2String
    java.lang.String sqr2ReciprocalString -> sqr2ReciprocalString
    java.lang.String sqr3String -> sqr3String
    java.lang.String sqr3ReciprocalString -> sqr3ReciprocalString
    java.lang.String piString -> piString
    java.lang.String eString -> eString
    java.lang.String ln2String -> ln2String
    java.lang.String ln5String -> ln5String
    java.lang.String ln10String -> ln10String
    int radixDigits -> radixDigits
    org.apache.commons.math3.dfp.Dfp zero -> zero
    org.apache.commons.math3.dfp.Dfp one -> one
    org.apache.commons.math3.dfp.Dfp two -> two
    org.apache.commons.math3.dfp.Dfp sqr2 -> sqr2
    org.apache.commons.math3.dfp.Dfp[] sqr2Split -> sqr2Split
    org.apache.commons.math3.dfp.Dfp sqr2Reciprocal -> sqr2Reciprocal
    org.apache.commons.math3.dfp.Dfp sqr3 -> sqr3
    org.apache.commons.math3.dfp.Dfp sqr3Reciprocal -> sqr3Reciprocal
    org.apache.commons.math3.dfp.Dfp pi -> pi
    org.apache.commons.math3.dfp.Dfp[] piSplit -> piSplit
    org.apache.commons.math3.dfp.Dfp e -> e
    org.apache.commons.math3.dfp.Dfp[] eSplit -> eSplit
    org.apache.commons.math3.dfp.Dfp ln2 -> ln2
    org.apache.commons.math3.dfp.Dfp[] ln2Split -> ln2Split
    org.apache.commons.math3.dfp.Dfp ln5 -> ln5
    org.apache.commons.math3.dfp.Dfp[] ln5Split -> ln5Split
    org.apache.commons.math3.dfp.Dfp ln10 -> ln10
    org.apache.commons.math3.dfp.DfpField$RoundingMode rMode -> rMode
    int ieeeFlags -> ieeeFlags
    int getRadixDigits() -> getRadixDigits
    void setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode) -> setRoundingMode
    org.apache.commons.math3.dfp.DfpField$RoundingMode getRoundingMode() -> getRoundingMode
    int getIEEEFlags() -> getIEEEFlags
    void clearIEEEFlags() -> clearIEEEFlags
    void setIEEEFlags(int) -> setIEEEFlags
    void setIEEEFlagsBits(int) -> setIEEEFlagsBits
    org.apache.commons.math3.dfp.Dfp newDfp() -> newDfp
    org.apache.commons.math3.dfp.Dfp newDfp(byte) -> newDfp
    org.apache.commons.math3.dfp.Dfp newDfp(int) -> newDfp
    org.apache.commons.math3.dfp.Dfp newDfp(long) -> newDfp
    org.apache.commons.math3.dfp.Dfp newDfp(double) -> newDfp
    org.apache.commons.math3.dfp.Dfp newDfp(org.apache.commons.math3.dfp.Dfp) -> newDfp
    org.apache.commons.math3.dfp.Dfp newDfp(java.lang.String) -> newDfp
    org.apache.commons.math3.dfp.Dfp newDfp(byte,byte) -> newDfp
    org.apache.commons.math3.dfp.Dfp getZero() -> getZero
    org.apache.commons.math3.dfp.Dfp getOne() -> getOne
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    org.apache.commons.math3.dfp.Dfp getTwo() -> getTwo
    org.apache.commons.math3.dfp.Dfp getSqr2() -> getSqr2
    org.apache.commons.math3.dfp.Dfp[] getSqr2Split() -> getSqr2Split
    org.apache.commons.math3.dfp.Dfp getSqr2Reciprocal() -> getSqr2Reciprocal
    org.apache.commons.math3.dfp.Dfp getSqr3() -> getSqr3
    org.apache.commons.math3.dfp.Dfp getSqr3Reciprocal() -> getSqr3Reciprocal
    org.apache.commons.math3.dfp.Dfp getPi() -> getPi
    org.apache.commons.math3.dfp.Dfp[] getPiSplit() -> getPiSplit
    org.apache.commons.math3.dfp.Dfp getE() -> getE
    org.apache.commons.math3.dfp.Dfp[] getESplit() -> getESplit
    org.apache.commons.math3.dfp.Dfp getLn2() -> getLn2
    org.apache.commons.math3.dfp.Dfp[] getLn2Split() -> getLn2Split
    org.apache.commons.math3.dfp.Dfp getLn5() -> getLn5
    org.apache.commons.math3.dfp.Dfp[] getLn5Split() -> getLn5Split
    org.apache.commons.math3.dfp.Dfp getLn10() -> getLn10
    org.apache.commons.math3.dfp.Dfp[] split(java.lang.String) -> split
    void computeStringConstants(int) -> computeStringConstants
    org.apache.commons.math3.dfp.Dfp computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> computePi
    org.apache.commons.math3.dfp.Dfp computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> computeExp
    org.apache.commons.math3.dfp.Dfp computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> computeLn
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.dfp.DfpField$RoundingMode -> org.apache.commons.math3.dfp.DfpField$RoundingMode:
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_DOWN -> ROUND_DOWN
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_UP -> ROUND_UP
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_HALF_UP -> ROUND_HALF_UP
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_HALF_DOWN -> ROUND_HALF_DOWN
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_HALF_EVEN -> ROUND_HALF_EVEN
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_HALF_ODD -> ROUND_HALF_ODD
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_CEIL -> ROUND_CEIL
    org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_FLOOR -> ROUND_FLOOR
    org.apache.commons.math3.dfp.DfpField$RoundingMode[] $VALUES -> $VALUES
    org.apache.commons.math3.dfp.DfpField$RoundingMode[] values() -> values
    org.apache.commons.math3.dfp.DfpField$RoundingMode valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.dfp.DfpMath -> org.apache.commons.math3.dfp.DfpMath:
    java.lang.String POW_TRAP -> POW_TRAP
    org.apache.commons.math3.dfp.Dfp[] split(org.apache.commons.math3.dfp.DfpField,java.lang.String) -> split
    org.apache.commons.math3.dfp.Dfp[] split(org.apache.commons.math3.dfp.Dfp) -> split
    org.apache.commons.math3.dfp.Dfp[] splitMult(org.apache.commons.math3.dfp.Dfp[],org.apache.commons.math3.dfp.Dfp[]) -> splitMult
    org.apache.commons.math3.dfp.Dfp[] splitDiv(org.apache.commons.math3.dfp.Dfp[],org.apache.commons.math3.dfp.Dfp[]) -> splitDiv
    org.apache.commons.math3.dfp.Dfp splitPow(org.apache.commons.math3.dfp.Dfp[],int) -> splitPow
    org.apache.commons.math3.dfp.Dfp pow(org.apache.commons.math3.dfp.Dfp,int) -> pow
    org.apache.commons.math3.dfp.Dfp exp(org.apache.commons.math3.dfp.Dfp) -> exp
    org.apache.commons.math3.dfp.Dfp expInternal(org.apache.commons.math3.dfp.Dfp) -> expInternal
    org.apache.commons.math3.dfp.Dfp log(org.apache.commons.math3.dfp.Dfp) -> log
    org.apache.commons.math3.dfp.Dfp[] logInternal(org.apache.commons.math3.dfp.Dfp[]) -> logInternal
    org.apache.commons.math3.dfp.Dfp pow(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) -> pow
    org.apache.commons.math3.dfp.Dfp sinInternal(org.apache.commons.math3.dfp.Dfp[]) -> sinInternal
    org.apache.commons.math3.dfp.Dfp cosInternal(org.apache.commons.math3.dfp.Dfp[]) -> cosInternal
    org.apache.commons.math3.dfp.Dfp sin(org.apache.commons.math3.dfp.Dfp) -> sin
    org.apache.commons.math3.dfp.Dfp cos(org.apache.commons.math3.dfp.Dfp) -> cos
    org.apache.commons.math3.dfp.Dfp tan(org.apache.commons.math3.dfp.Dfp) -> tan
    org.apache.commons.math3.dfp.Dfp atanInternal(org.apache.commons.math3.dfp.Dfp) -> atanInternal
    org.apache.commons.math3.dfp.Dfp atan(org.apache.commons.math3.dfp.Dfp) -> atan
    org.apache.commons.math3.dfp.Dfp asin(org.apache.commons.math3.dfp.Dfp) -> asin
    org.apache.commons.math3.dfp.Dfp acos(org.apache.commons.math3.dfp.Dfp) -> acos
org.apache.commons.math3.dfp.UnivariateDfpFunction -> org.apache.commons.math3.dfp.UnivariateDfpFunction:
    org.apache.commons.math3.dfp.Dfp value(org.apache.commons.math3.dfp.Dfp) -> value
org.apache.commons.math3.distribution.AbstractIntegerDistribution -> org.apache.commons.math3.distribution.AbstractIntegerDistribution:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.random.RandomDataImpl randomData -> randomData
    org.apache.commons.math3.random.RandomGenerator random -> random
    double cumulativeProbability(int,int) -> cumulativeProbability
    int inverseCumulativeProbability(double) -> inverseCumulativeProbability
    int solveInverseCumulativeProbability(double,int,int) -> solveInverseCumulativeProbability
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    int sample() -> sample
    int[] sample(int) -> sample
    double checkedCumulativeProbability(int) -> checkedCumulativeProbability
    double logProbability(int) -> logProbability
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution -> org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:
    org.apache.commons.math3.random.RandomGenerator random -> random
    int dimension -> dimension
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    int getDimension() -> getDimension
    double[] sample() -> sample
    double[][] sample(int) -> sample
org.apache.commons.math3.distribution.AbstractRealDistribution -> org.apache.commons.math3.distribution.AbstractRealDistribution:
    double SOLVER_DEFAULT_ABSOLUTE_ACCURACY -> SOLVER_DEFAULT_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.random.RandomDataImpl randomData -> randomData
    org.apache.commons.math3.random.RandomGenerator random -> random
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double cumulativeProbability(double,double) -> cumulativeProbability
    double probability(double,double) -> probability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    double sample() -> sample
    double[] sample(int) -> sample
    double probability(double) -> probability
    double logDensity(double) -> logDensity
org.apache.commons.math3.distribution.AbstractRealDistribution$1 -> org.apache.commons.math3.distribution.AbstractRealDistribution$1:
    double val$p -> val$p
    org.apache.commons.math3.distribution.AbstractRealDistribution this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.distribution.BetaDistribution -> org.apache.commons.math3.distribution.BetaDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double alpha -> alpha
    double beta -> beta
    double z -> z
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getAlpha() -> getAlpha
    double getBeta() -> getBeta
    void recomputeZ() -> recomputeZ
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.BinomialDistribution -> org.apache.commons.math3.distribution.BinomialDistribution:
    long serialVersionUID -> serialVersionUID
    int numberOfTrials -> numberOfTrials
    double probabilityOfSuccess -> probabilityOfSuccess
    int getNumberOfTrials() -> getNumberOfTrials
    double getProbabilityOfSuccess() -> getProbabilityOfSuccess
    double probability(int) -> probability
    double logProbability(int) -> logProbability
    double cumulativeProbability(int) -> cumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.CauchyDistribution -> org.apache.commons.math3.distribution.CauchyDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double median -> median
    double scale -> scale
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double cumulativeProbability(double) -> cumulativeProbability
    double getMedian() -> getMedian
    double getScale() -> getScale
    double density(double) -> density
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.ChiSquaredDistribution -> org.apache.commons.math3.distribution.ChiSquaredDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.distribution.GammaDistribution gamma -> gamma
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getDegreesOfFreedom() -> getDegreesOfFreedom
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.EnumeratedDistribution -> org.apache.commons.math3.distribution.EnumeratedDistribution:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.random.RandomGenerator random -> random
    java.util.List singletons -> singletons
    double[] probabilities -> probabilities
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    double probability(java.lang.Object) -> probability
    java.util.List getPmf() -> getPmf
    java.lang.Object sample() -> sample
    java.lang.Object[] sample(int) -> sample
    java.lang.Object[] sample(int,java.lang.Object[]) -> sample
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution -> org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.distribution.EnumeratedDistribution innerDistribution -> innerDistribution
    double probability(int) -> probability
    double cumulativeProbability(int) -> cumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
    int sample() -> sample
org.apache.commons.math3.distribution.EnumeratedRealDistribution -> org.apache.commons.math3.distribution.EnumeratedRealDistribution:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.distribution.EnumeratedDistribution innerDistribution -> innerDistribution
    double probability(double) -> probability
    double density(double) -> density
    double cumulativeProbability(double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double sample() -> sample
org.apache.commons.math3.distribution.ExponentialDistribution -> org.apache.commons.math3.distribution.ExponentialDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double[] EXPONENTIAL_SA_QI -> EXPONENTIAL_SA_QI
    double mean -> mean
    double logMean -> logMean
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getMean() -> getMean
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double sample() -> sample
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.FDistribution -> org.apache.commons.math3.distribution.FDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double numeratorDegreesOfFreedom -> numeratorDegreesOfFreedom
    double denominatorDegreesOfFreedom -> denominatorDegreesOfFreedom
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double numericalVariance -> numericalVariance
    boolean numericalVarianceIsCalculated -> numericalVarianceIsCalculated
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double getNumeratorDegreesOfFreedom() -> getNumeratorDegreesOfFreedom
    double getDenominatorDegreesOfFreedom() -> getDenominatorDegreesOfFreedom
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double calculateNumericalVariance() -> calculateNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.GammaDistribution -> org.apache.commons.math3.distribution.GammaDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double shape -> shape
    double scale -> scale
    double shiftedShape -> shiftedShape
    double densityPrefactor1 -> densityPrefactor1
    double logDensityPrefactor1 -> logDensityPrefactor1
    double densityPrefactor2 -> densityPrefactor2
    double logDensityPrefactor2 -> logDensityPrefactor2
    double minY -> minY
    double maxLogY -> maxLogY
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getAlpha() -> getAlpha
    double getShape() -> getShape
    double getBeta() -> getBeta
    double getScale() -> getScale
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double sample() -> sample
org.apache.commons.math3.distribution.GeometricDistribution -> org.apache.commons.math3.distribution.GeometricDistribution:
    long serialVersionUID -> serialVersionUID
    double probabilityOfSuccess -> probabilityOfSuccess
    double getProbabilityOfSuccess() -> getProbabilityOfSuccess
    double probability(int) -> probability
    double logProbability(int) -> logProbability
    double cumulativeProbability(int) -> cumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.HypergeometricDistribution -> org.apache.commons.math3.distribution.HypergeometricDistribution:
    long serialVersionUID -> serialVersionUID
    int numberOfSuccesses -> numberOfSuccesses
    int populationSize -> populationSize
    int sampleSize -> sampleSize
    double numericalVariance -> numericalVariance
    boolean numericalVarianceIsCalculated -> numericalVarianceIsCalculated
    double cumulativeProbability(int) -> cumulativeProbability
    int[] getDomain(int,int,int) -> getDomain
    int getLowerDomain(int,int,int) -> getLowerDomain
    int getNumberOfSuccesses() -> getNumberOfSuccesses
    int getPopulationSize() -> getPopulationSize
    int getSampleSize() -> getSampleSize
    int getUpperDomain(int,int) -> getUpperDomain
    double probability(int) -> probability
    double logProbability(int) -> logProbability
    double upperCumulativeProbability(int) -> upperCumulativeProbability
    double innerCumulativeProbability(int,int,int) -> innerCumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double calculateNumericalVariance() -> calculateNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.IntegerDistribution -> org.apache.commons.math3.distribution.IntegerDistribution:
    double probability(int) -> probability
    double cumulativeProbability(int) -> cumulativeProbability
    double cumulativeProbability(int,int) -> cumulativeProbability
    int inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    int sample() -> sample
    int[] sample(int) -> sample
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution -> org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:
    long serialVersionUID -> serialVersionUID
    int n -> n
    double cdf(double) -> cdf
    double cdfExact(double) -> cdfExact
    double cdf(double,boolean) -> cdf
    double exactK(double) -> exactK
    double roundedK(double) -> roundedK
    org.apache.commons.math3.linear.FieldMatrix createH(double) -> createH
org.apache.commons.math3.distribution.LevyDistribution -> org.apache.commons.math3.distribution.LevyDistribution:
    long serialVersionUID -> serialVersionUID
    double mu -> mu
    double c -> c
    double halfC -> halfC
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getScale() -> getScale
    double getLocation() -> getLocation
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.LogNormalDistribution -> org.apache.commons.math3.distribution.LogNormalDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double SQRT2PI -> SQRT2PI
    double SQRT2 -> SQRT2
    double scale -> scale
    double shape -> shape
    double logShapePlusHalfLog2Pi -> logShapePlusHalfLog2Pi
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getScale() -> getScale
    double getShape() -> getShape
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double cumulativeProbability(double,double) -> cumulativeProbability
    double probability(double,double) -> probability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double sample() -> sample
org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution -> org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution:
    java.util.List createComponents(double[],double[][],double[][][]) -> createComponents
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution -> org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:
    double[] weight -> weight
    java.util.List distribution -> distribution
    double density(double[]) -> density
    double[] sample() -> sample
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    java.util.List getComponents() -> getComponents
org.apache.commons.math3.distribution.MultivariateNormalDistribution -> org.apache.commons.math3.distribution.MultivariateNormalDistribution:
    double[] means -> means
    org.apache.commons.math3.linear.RealMatrix covarianceMatrix -> covarianceMatrix
    org.apache.commons.math3.linear.RealMatrix covarianceMatrixInverse -> covarianceMatrixInverse
    double covarianceMatrixDeterminant -> covarianceMatrixDeterminant
    org.apache.commons.math3.linear.RealMatrix samplingMatrix -> samplingMatrix
    double[] getMeans() -> getMeans
    org.apache.commons.math3.linear.RealMatrix getCovariances() -> getCovariances
    double density(double[]) -> density
    double[] getStandardDeviations() -> getStandardDeviations
    double[] sample() -> sample
    double getExponentTerm(double[]) -> getExponentTerm
org.apache.commons.math3.distribution.MultivariateRealDistribution -> org.apache.commons.math3.distribution.MultivariateRealDistribution:
    double density(double[]) -> density
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    int getDimension() -> getDimension
    double[] sample() -> sample
    double[][] sample(int) -> sample
org.apache.commons.math3.distribution.NormalDistribution -> org.apache.commons.math3.distribution.NormalDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double SQRT2 -> SQRT2
    double mean -> mean
    double standardDeviation -> standardDeviation
    double logStandardDeviationPlusHalfLog2Pi -> logStandardDeviationPlusHalfLog2Pi
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getMean() -> getMean
    double getStandardDeviation() -> getStandardDeviation
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double cumulativeProbability(double,double) -> cumulativeProbability
    double probability(double,double) -> probability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double sample() -> sample
org.apache.commons.math3.distribution.ParetoDistribution -> org.apache.commons.math3.distribution.ParetoDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double scale -> scale
    double shape -> shape
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getScale() -> getScale
    double getShape() -> getShape
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double cumulativeProbability(double,double) -> cumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double sample() -> sample
org.apache.commons.math3.distribution.PascalDistribution -> org.apache.commons.math3.distribution.PascalDistribution:
    long serialVersionUID -> serialVersionUID
    int numberOfSuccesses -> numberOfSuccesses
    double probabilityOfSuccess -> probabilityOfSuccess
    double logProbabilityOfSuccess -> logProbabilityOfSuccess
    double log1mProbabilityOfSuccess -> log1mProbabilityOfSuccess
    int getNumberOfSuccesses() -> getNumberOfSuccesses
    double getProbabilityOfSuccess() -> getProbabilityOfSuccess
    double probability(int) -> probability
    double logProbability(int) -> logProbability
    double cumulativeProbability(int) -> cumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.PoissonDistribution -> org.apache.commons.math3.distribution.PoissonDistribution:
    int DEFAULT_MAX_ITERATIONS -> DEFAULT_MAX_ITERATIONS
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.distribution.NormalDistribution normal -> normal
    org.apache.commons.math3.distribution.ExponentialDistribution exponential -> exponential
    double mean -> mean
    int maxIterations -> maxIterations
    double epsilon -> epsilon
    double getMean() -> getMean
    double probability(int) -> probability
    double logProbability(int) -> logProbability
    double cumulativeProbability(int) -> cumulativeProbability
    double normalApproximateProbability(int) -> normalApproximateProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
    int sample() -> sample
    long nextPoisson(double) -> nextPoisson
org.apache.commons.math3.distribution.RealDistribution -> org.apache.commons.math3.distribution.RealDistribution:
    double probability(double) -> probability
    double density(double) -> density
    double cumulativeProbability(double) -> cumulativeProbability
    double cumulativeProbability(double,double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    double sample() -> sample
    double[] sample(int) -> sample
org.apache.commons.math3.distribution.SaddlePointExpansion -> org.apache.commons.math3.distribution.SaddlePointExpansion:
    double HALF_LOG_2_PI -> HALF_LOG_2_PI
    double[] EXACT_STIRLING_ERRORS -> EXACT_STIRLING_ERRORS
    double getStirlingError(double) -> getStirlingError
    double getDeviancePart(double,double) -> getDeviancePart
    double logBinomialProbability(int,int,double,double) -> logBinomialProbability
org.apache.commons.math3.distribution.TDistribution -> org.apache.commons.math3.distribution.TDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double degreesOfFreedom -> degreesOfFreedom
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getDegreesOfFreedom() -> getDegreesOfFreedom
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.TriangularDistribution -> org.apache.commons.math3.distribution.TriangularDistribution:
    long serialVersionUID -> serialVersionUID
    double a -> a
    double b -> b
    double c -> c
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double getMode() -> getMode
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double density(double) -> density
    double cumulativeProbability(double) -> cumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
org.apache.commons.math3.distribution.UniformIntegerDistribution -> org.apache.commons.math3.distribution.UniformIntegerDistribution:
    long serialVersionUID -> serialVersionUID
    int lower -> lower
    int upper -> upper
    double probability(int) -> probability
    double cumulativeProbability(int) -> cumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
    int sample() -> sample
org.apache.commons.math3.distribution.UniformRealDistribution -> org.apache.commons.math3.distribution.UniformRealDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double lower -> lower
    double upper -> upper
    double density(double) -> density
    double cumulativeProbability(double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double sample() -> sample
org.apache.commons.math3.distribution.WeibullDistribution -> org.apache.commons.math3.distribution.WeibullDistribution:
    double DEFAULT_INVERSE_ABSOLUTE_ACCURACY -> DEFAULT_INVERSE_ABSOLUTE_ACCURACY
    long serialVersionUID -> serialVersionUID
    double shape -> shape
    double scale -> scale
    double solverAbsoluteAccuracy -> solverAbsoluteAccuracy
    double numericalMean -> numericalMean
    boolean numericalMeanIsCalculated -> numericalMeanIsCalculated
    double numericalVariance -> numericalVariance
    boolean numericalVarianceIsCalculated -> numericalVarianceIsCalculated
    double getShape() -> getShape
    double getScale() -> getScale
    double density(double) -> density
    double logDensity(double) -> logDensity
    double cumulativeProbability(double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getSolverAbsoluteAccuracy() -> getSolverAbsoluteAccuracy
    double getNumericalMean() -> getNumericalMean
    double calculateNumericalMean() -> calculateNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double calculateNumericalVariance() -> calculateNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.ZipfDistribution -> org.apache.commons.math3.distribution.ZipfDistribution:
    long serialVersionUID -> serialVersionUID
    int numberOfElements -> numberOfElements
    double exponent -> exponent
    double numericalMean -> numericalMean
    boolean numericalMeanIsCalculated -> numericalMeanIsCalculated
    double numericalVariance -> numericalVariance
    boolean numericalVarianceIsCalculated -> numericalVarianceIsCalculated
    int getNumberOfElements() -> getNumberOfElements
    double getExponent() -> getExponent
    double probability(int) -> probability
    double logProbability(int) -> logProbability
    double cumulativeProbability(int) -> cumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double calculateNumericalMean() -> calculateNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double calculateNumericalVariance() -> calculateNumericalVariance
    double generalizedHarmonic(int,double) -> generalizedHarmonic
    int getSupportLowerBound() -> getSupportLowerBound
    int getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportConnected() -> isSupportConnected
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization -> org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:
    int DEFAULT_MAX_ITERATIONS -> DEFAULT_MAX_ITERATIONS
    double DEFAULT_THRESHOLD -> DEFAULT_THRESHOLD
    double[][] data -> data
    org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution fittedModel -> fittedModel
    double logLikelihood -> logLikelihood
    void fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double) -> fit
    void fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution) -> fit
    org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution estimate(double[][],int) -> estimate
    double getLogLikelihood() -> getLogLikelihood
    org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution getFittedModel() -> getFittedModel
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow -> org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow:
    double[] row -> row
    java.lang.Double mean -> mean
    int compareTo(org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    double[] getRow() -> getRow
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.exception.ConvergenceException -> org.apache.commons.math3.exception.ConvergenceException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.DimensionMismatchException -> org.apache.commons.math3.exception.DimensionMismatchException:
    long serialVersionUID -> serialVersionUID
    int dimension -> dimension
    int getDimension() -> getDimension
org.apache.commons.math3.exception.InsufficientDataException -> org.apache.commons.math3.exception.InsufficientDataException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.MathArithmeticException -> org.apache.commons.math3.exception.MathArithmeticException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.exception.util.ExceptionContext context -> context
    org.apache.commons.math3.exception.util.ExceptionContext getContext() -> getContext
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.MathIllegalArgumentException -> org.apache.commons.math3.exception.MathIllegalArgumentException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.exception.util.ExceptionContext context -> context
    org.apache.commons.math3.exception.util.ExceptionContext getContext() -> getContext
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.MathIllegalNumberException -> org.apache.commons.math3.exception.MathIllegalNumberException:
    java.lang.Integer INTEGER_ZERO -> INTEGER_ZERO
    long serialVersionUID -> serialVersionUID
    java.lang.Number argument -> argument
    java.lang.Number getArgument() -> getArgument
org.apache.commons.math3.exception.MathIllegalStateException -> org.apache.commons.math3.exception.MathIllegalStateException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.exception.util.ExceptionContext context -> context
    org.apache.commons.math3.exception.util.ExceptionContext getContext() -> getContext
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.MathInternalError -> org.apache.commons.math3.exception.MathInternalError:
    long serialVersionUID -> serialVersionUID
    java.lang.String REPORT_URL -> REPORT_URL
org.apache.commons.math3.exception.MathParseException -> org.apache.commons.math3.exception.MathParseException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.MathRuntimeException -> org.apache.commons.math3.exception.MathRuntimeException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.exception.util.ExceptionContext context -> context
    org.apache.commons.math3.exception.util.ExceptionContext getContext() -> getContext
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.MathUnsupportedOperationException -> org.apache.commons.math3.exception.MathUnsupportedOperationException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.exception.util.ExceptionContext context -> context
    org.apache.commons.math3.exception.util.ExceptionContext getContext() -> getContext
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.MaxCountExceededException -> org.apache.commons.math3.exception.MaxCountExceededException:
    long serialVersionUID -> serialVersionUID
    java.lang.Number max -> max
    java.lang.Number getMax() -> getMax
org.apache.commons.math3.exception.MultiDimensionMismatchException -> org.apache.commons.math3.exception.MultiDimensionMismatchException:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer[] wrong -> wrong
    java.lang.Integer[] expected -> expected
    java.lang.Integer[] getWrongDimensions() -> getWrongDimensions
    java.lang.Integer[] getExpectedDimensions() -> getExpectedDimensions
    int getWrongDimension(int) -> getWrongDimension
    int getExpectedDimension(int) -> getExpectedDimension
org.apache.commons.math3.exception.NoBracketingException -> org.apache.commons.math3.exception.NoBracketingException:
    long serialVersionUID -> serialVersionUID
    double lo -> lo
    double hi -> hi
    double fLo -> fLo
    double fHi -> fHi
    double getLo() -> getLo
    double getHi() -> getHi
    double getFLo() -> getFLo
    double getFHi() -> getFHi
org.apache.commons.math3.exception.NoDataException -> org.apache.commons.math3.exception.NoDataException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.NonMonotonicSequenceException -> org.apache.commons.math3.exception.NonMonotonicSequenceException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.util.MathArrays$OrderDirection direction -> direction
    boolean strict -> strict
    int index -> index
    java.lang.Number previous -> previous
    org.apache.commons.math3.util.MathArrays$OrderDirection getDirection() -> getDirection
    boolean getStrict() -> getStrict
    int getIndex() -> getIndex
    java.lang.Number getPrevious() -> getPrevious
org.apache.commons.math3.exception.NotANumberException -> org.apache.commons.math3.exception.NotANumberException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.NotFiniteNumberException -> org.apache.commons.math3.exception.NotFiniteNumberException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.NotPositiveException -> org.apache.commons.math3.exception.NotPositiveException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.NotStrictlyPositiveException -> org.apache.commons.math3.exception.NotStrictlyPositiveException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.NullArgumentException -> org.apache.commons.math3.exception.NullArgumentException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.NumberIsTooLargeException -> org.apache.commons.math3.exception.NumberIsTooLargeException:
    long serialVersionUID -> serialVersionUID
    java.lang.Number max -> max
    boolean boundIsAllowed -> boundIsAllowed
    boolean getBoundIsAllowed() -> getBoundIsAllowed
    java.lang.Number getMax() -> getMax
org.apache.commons.math3.exception.NumberIsTooSmallException -> org.apache.commons.math3.exception.NumberIsTooSmallException:
    long serialVersionUID -> serialVersionUID
    java.lang.Number min -> min
    boolean boundIsAllowed -> boundIsAllowed
    boolean getBoundIsAllowed() -> getBoundIsAllowed
    java.lang.Number getMin() -> getMin
org.apache.commons.math3.exception.OutOfRangeException -> org.apache.commons.math3.exception.OutOfRangeException:
    long serialVersionUID -> serialVersionUID
    java.lang.Number lo -> lo
    java.lang.Number hi -> hi
    java.lang.Number getLo() -> getLo
    java.lang.Number getHi() -> getHi
org.apache.commons.math3.exception.TooManyEvaluationsException -> org.apache.commons.math3.exception.TooManyEvaluationsException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.TooManyIterationsException -> org.apache.commons.math3.exception.TooManyIterationsException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.ZeroException -> org.apache.commons.math3.exception.ZeroException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.exception.util.ArgUtils -> org.apache.commons.math3.exception.util.ArgUtils:
    java.lang.Object[] flatten(java.lang.Object[]) -> flatten
org.apache.commons.math3.exception.util.DummyLocalizable -> org.apache.commons.math3.exception.util.DummyLocalizable:
    long serialVersionUID -> serialVersionUID
    java.lang.String source -> source
    java.lang.String getSourceString() -> getSourceString
    java.lang.String getLocalizedString(java.util.Locale) -> getLocalizedString
    java.lang.String toString() -> toString
org.apache.commons.math3.exception.util.ExceptionContext -> org.apache.commons.math3.exception.util.ExceptionContext:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable throwable -> throwable
    java.util.List msgPatterns -> msgPatterns
    java.util.List msgArguments -> msgArguments
    java.util.Map context -> context
    java.lang.Throwable getThrowable() -> getThrowable
    void addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) -> addMessage
    void setValue(java.lang.String,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.String) -> getValue
    java.util.Set getKeys() -> getKeys
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
    java.lang.String getMessage(java.util.Locale) -> getMessage
    java.lang.String getMessage(java.util.Locale,java.lang.String) -> getMessage
    java.lang.String buildMessage(java.util.Locale,java.lang.String) -> buildMessage
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void serializeMessages(java.io.ObjectOutputStream) -> serializeMessages
    void deSerializeMessages(java.io.ObjectInputStream) -> deSerializeMessages
    void serializeContext(java.io.ObjectOutputStream) -> serializeContext
    void deSerializeContext(java.io.ObjectInputStream) -> deSerializeContext
    java.lang.String nonSerializableReplacement(java.lang.Object) -> nonSerializableReplacement
org.apache.commons.math3.exception.util.ExceptionContextProvider -> org.apache.commons.math3.exception.util.ExceptionContextProvider:
    org.apache.commons.math3.exception.util.ExceptionContext getContext() -> getContext
org.apache.commons.math3.exception.util.Localizable -> org.apache.commons.math3.exception.util.Localizable:
    java.lang.String getSourceString() -> getSourceString
    java.lang.String getLocalizedString(java.util.Locale) -> getLocalizedString
org.apache.commons.math3.exception.util.LocalizedFormats -> org.apache.commons.math3.exception.util.LocalizedFormats:
    org.apache.commons.math3.exception.util.LocalizedFormats ARGUMENT_OUTSIDE_DOMAIN -> ARGUMENT_OUTSIDE_DOMAIN
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_SIZE_EXCEEDS_MAX_VARIABLES -> ARRAY_SIZE_EXCEEDS_MAX_VARIABLES
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1 -> ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_SUMS_TO_ZERO -> ARRAY_SUMS_TO_ZERO
    org.apache.commons.math3.exception.util.LocalizedFormats ASSYMETRIC_EIGEN_NOT_SUPPORTED -> ASSYMETRIC_EIGEN_NOT_SUPPORTED
    org.apache.commons.math3.exception.util.LocalizedFormats AT_LEAST_ONE_COLUMN -> AT_LEAST_ONE_COLUMN
    org.apache.commons.math3.exception.util.LocalizedFormats AT_LEAST_ONE_ROW -> AT_LEAST_ONE_ROW
    org.apache.commons.math3.exception.util.LocalizedFormats BANDWIDTH -> BANDWIDTH
    org.apache.commons.math3.exception.util.LocalizedFormats BINOMIAL_INVALID_PARAMETERS_ORDER -> BINOMIAL_INVALID_PARAMETERS_ORDER
    org.apache.commons.math3.exception.util.LocalizedFormats BINOMIAL_NEGATIVE_PARAMETER -> BINOMIAL_NEGATIVE_PARAMETER
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS -> CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_0TH_ROOT_OF_UNITY -> CANNOT_COMPUTE_0TH_ROOT_OF_UNITY
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA -> CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA -> CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N -> CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS -> CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR -> CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_COMPLEX -> CANNOT_FORMAT_INSTANCE_AS_COMPLEX
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR -> CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_OBJECT_TO_FRACTION -> CANNOT_FORMAT_OBJECT_TO_FRACTION
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS -> CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR -> CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_RETRIEVE_AT_NEGATIVE_INDEX -> CANNOT_RETRIEVE_AT_NEGATIVE_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_SET_AT_NEGATIVE_INDEX -> CANNOT_SET_AT_NEGATIVE_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY -> CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_TRANSFORM_TO_DOUBLE -> CANNOT_TRANSFORM_TO_DOUBLE
    org.apache.commons.math3.exception.util.LocalizedFormats CARDAN_ANGLES_SINGULARITY -> CARDAN_ANGLES_SINGULARITY
    org.apache.commons.math3.exception.util.LocalizedFormats CLASS_DOESNT_IMPLEMENT_COMPARABLE -> CLASS_DOESNT_IMPLEMENT_COMPARABLE
    org.apache.commons.math3.exception.util.LocalizedFormats CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT -> CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT
    org.apache.commons.math3.exception.util.LocalizedFormats COLUMN_INDEX_OUT_OF_RANGE -> COLUMN_INDEX_OUT_OF_RANGE
    org.apache.commons.math3.exception.util.LocalizedFormats COLUMN_INDEX -> COLUMN_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats CONSTRAINT -> CONSTRAINT
    org.apache.commons.math3.exception.util.LocalizedFormats CONTINUED_FRACTION_INFINITY_DIVERGENCE -> CONTINUED_FRACTION_INFINITY_DIVERGENCE
    org.apache.commons.math3.exception.util.LocalizedFormats CONTINUED_FRACTION_NAN_DIVERGENCE -> CONTINUED_FRACTION_NAN_DIVERGENCE
    org.apache.commons.math3.exception.util.LocalizedFormats CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR -> CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR
    org.apache.commons.math3.exception.util.LocalizedFormats CONTRACTION_CRITERIA_SMALLER_THAN_ONE -> CONTRACTION_CRITERIA_SMALLER_THAN_ONE
    org.apache.commons.math3.exception.util.LocalizedFormats CONVERGENCE_FAILED -> CONVERGENCE_FAILED
    org.apache.commons.math3.exception.util.LocalizedFormats CROSSING_BOUNDARY_LOOPS -> CROSSING_BOUNDARY_LOOPS
    org.apache.commons.math3.exception.util.LocalizedFormats CROSSOVER_RATE -> CROSSOVER_RATE
    org.apache.commons.math3.exception.util.LocalizedFormats CUMULATIVE_PROBABILITY_RETURNED_NAN -> CUMULATIVE_PROBABILITY_RETURNED_NAN
    org.apache.commons.math3.exception.util.LocalizedFormats DIFFERENT_ROWS_LENGTHS -> DIFFERENT_ROWS_LENGTHS
    org.apache.commons.math3.exception.util.LocalizedFormats DIFFERENT_ORIG_AND_PERMUTED_DATA -> DIFFERENT_ORIG_AND_PERMUTED_DATA
    org.apache.commons.math3.exception.util.LocalizedFormats DIGEST_NOT_INITIALIZED -> DIGEST_NOT_INITIALIZED
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSIONS_MISMATCH_2x2 -> DIMENSIONS_MISMATCH_2x2
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSIONS_MISMATCH_SIMPLE -> DIMENSIONS_MISMATCH_SIMPLE
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSIONS_MISMATCH -> DIMENSIONS_MISMATCH
    org.apache.commons.math3.exception.util.LocalizedFormats DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN -> DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN
    org.apache.commons.math3.exception.util.LocalizedFormats DISTRIBUTION_NOT_LOADED -> DISTRIBUTION_NOT_LOADED
    org.apache.commons.math3.exception.util.LocalizedFormats DUPLICATED_ABSCISSA_DIVISION_BY_ZERO -> DUPLICATED_ABSCISSA_DIVISION_BY_ZERO
    org.apache.commons.math3.exception.util.LocalizedFormats ELITISM_RATE -> ELITISM_RATE
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_CLUSTER_IN_K_MEANS -> EMPTY_CLUSTER_IN_K_MEANS
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_INTERPOLATION_SAMPLE -> EMPTY_INTERPOLATION_SAMPLE
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY -> EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_SELECTED_COLUMN_INDEX_ARRAY -> EMPTY_SELECTED_COLUMN_INDEX_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_SELECTED_ROW_INDEX_ARRAY -> EMPTY_SELECTED_ROW_INDEX_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_STRING_FOR_IMAGINARY_CHARACTER -> EMPTY_STRING_FOR_IMAGINARY_CHARACTER
    org.apache.commons.math3.exception.util.LocalizedFormats ENDPOINTS_NOT_AN_INTERVAL -> ENDPOINTS_NOT_AN_INTERVAL
    org.apache.commons.math3.exception.util.LocalizedFormats EQUAL_VERTICES_IN_SIMPLEX -> EQUAL_VERTICES_IN_SIMPLEX
    org.apache.commons.math3.exception.util.LocalizedFormats EULER_ANGLES_SINGULARITY -> EULER_ANGLES_SINGULARITY
    org.apache.commons.math3.exception.util.LocalizedFormats EVALUATION -> EVALUATION
    org.apache.commons.math3.exception.util.LocalizedFormats EXPANSION_FACTOR_SMALLER_THAN_ONE -> EXPANSION_FACTOR_SMALLER_THAN_ONE
    org.apache.commons.math3.exception.util.LocalizedFormats FACTORIAL_NEGATIVE_PARAMETER -> FACTORIAL_NEGATIVE_PARAMETER
    org.apache.commons.math3.exception.util.LocalizedFormats FAILED_BRACKETING -> FAILED_BRACKETING
    org.apache.commons.math3.exception.util.LocalizedFormats FAILED_FRACTION_CONVERSION -> FAILED_FRACTION_CONVERSION
    org.apache.commons.math3.exception.util.LocalizedFormats FIRST_COLUMNS_NOT_INITIALIZED_YET -> FIRST_COLUMNS_NOT_INITIALIZED_YET
    org.apache.commons.math3.exception.util.LocalizedFormats FIRST_ELEMENT_NOT_ZERO -> FIRST_ELEMENT_NOT_ZERO
    org.apache.commons.math3.exception.util.LocalizedFormats FIRST_ROWS_NOT_INITIALIZED_YET -> FIRST_ROWS_NOT_INITIALIZED_YET
    org.apache.commons.math3.exception.util.LocalizedFormats FRACTION_CONVERSION_OVERFLOW -> FRACTION_CONVERSION_OVERFLOW
    org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION_NOT_DIFFERENTIABLE -> FUNCTION_NOT_DIFFERENTIABLE
    org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION_NOT_POLYNOMIAL -> FUNCTION_NOT_POLYNOMIAL
    org.apache.commons.math3.exception.util.LocalizedFormats GCD_OVERFLOW_32_BITS -> GCD_OVERFLOW_32_BITS
    org.apache.commons.math3.exception.util.LocalizedFormats GCD_OVERFLOW_64_BITS -> GCD_OVERFLOW_64_BITS
    org.apache.commons.math3.exception.util.LocalizedFormats HOLE_BETWEEN_MODELS_TIME_RANGES -> HOLE_BETWEEN_MODELS_TIME_RANGES
    org.apache.commons.math3.exception.util.LocalizedFormats ILL_CONDITIONED_OPERATOR -> ILL_CONDITIONED_OPERATOR
    org.apache.commons.math3.exception.util.LocalizedFormats INCONSISTENT_STATE_AT_2_PI_WRAPPING -> INCONSISTENT_STATE_AT_2_PI_WRAPPING
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX_LARGER_THAN_MAX -> INDEX_LARGER_THAN_MAX
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX_NOT_POSITIVE -> INDEX_NOT_POSITIVE
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX_OUT_OF_RANGE -> INDEX_OUT_OF_RANGE
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX -> INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_FINITE_NUMBER -> NOT_FINITE_NUMBER
    org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_BOUND -> INFINITE_BOUND
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_ELEMENT -> ARRAY_ELEMENT
    org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_ARRAY_ELEMENT -> INFINITE_ARRAY_ELEMENT
    org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_VALUE_CONVERSION -> INFINITE_VALUE_CONVERSION
    org.apache.commons.math3.exception.util.LocalizedFormats INITIAL_CAPACITY_NOT_POSITIVE -> INITIAL_CAPACITY_NOT_POSITIVE
    org.apache.commons.math3.exception.util.LocalizedFormats INITIAL_COLUMN_AFTER_FINAL_COLUMN -> INITIAL_COLUMN_AFTER_FINAL_COLUMN
    org.apache.commons.math3.exception.util.LocalizedFormats INITIAL_ROW_AFTER_FINAL_ROW -> INITIAL_ROW_AFTER_FINAL_ROW
    org.apache.commons.math3.exception.util.LocalizedFormats INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE -> INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE
    org.apache.commons.math3.exception.util.LocalizedFormats INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES -> INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DATA -> INSUFFICIENT_DATA
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DATA_FOR_T_STATISTIC -> INSUFFICIENT_DATA_FOR_T_STATISTIC
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DIMENSION -> INSUFFICIENT_DIMENSION
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSION -> DIMENSION
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE -> INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_ROWS_AND_COLUMNS -> INSUFFICIENT_ROWS_AND_COLUMNS
    org.apache.commons.math3.exception.util.LocalizedFormats INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS -> INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats INTERNAL_ERROR -> INTERNAL_ERROR
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BINARY_DIGIT -> INVALID_BINARY_DIGIT
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BINARY_CHROMOSOME -> INVALID_BINARY_CHROMOSOME
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BRACKETING_PARAMETERS -> INVALID_BRACKETING_PARAMETERS
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_FIXED_LENGTH_CHROMOSOME -> INVALID_FIXED_LENGTH_CHROMOSOME
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS -> INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_ITERATIONS_LIMITS -> INVALID_ITERATIONS_LIMITS
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_MAX_ITERATIONS -> INVALID_MAX_ITERATIONS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ENOUGH_DATA_REGRESSION -> NOT_ENOUGH_DATA_REGRESSION
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_REGRESSION_ARRAY -> INVALID_REGRESSION_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_REGRESSION_OBSERVATION -> INVALID_REGRESSION_OBSERVATION
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_ROUNDING_METHOD -> INVALID_ROUNDING_METHOD
    org.apache.commons.math3.exception.util.LocalizedFormats ITERATOR_EXHAUSTED -> ITERATOR_EXHAUSTED
    org.apache.commons.math3.exception.util.LocalizedFormats ITERATIONS -> ITERATIONS
    org.apache.commons.math3.exception.util.LocalizedFormats LCM_OVERFLOW_32_BITS -> LCM_OVERFLOW_32_BITS
    org.apache.commons.math3.exception.util.LocalizedFormats LCM_OVERFLOW_64_BITS -> LCM_OVERFLOW_64_BITS
    org.apache.commons.math3.exception.util.LocalizedFormats LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE -> LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats LOESS_EXPECTS_AT_LEAST_ONE_POINT -> LOESS_EXPECTS_AT_LEAST_ONE_POINT
    org.apache.commons.math3.exception.util.LocalizedFormats LOWER_BOUND_NOT_BELOW_UPPER_BOUND -> LOWER_BOUND_NOT_BELOW_UPPER_BOUND
    org.apache.commons.math3.exception.util.LocalizedFormats LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT -> LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT
    org.apache.commons.math3.exception.util.LocalizedFormats MAP_MODIFIED_WHILE_ITERATING -> MAP_MODIFIED_WHILE_ITERATING
    org.apache.commons.math3.exception.util.LocalizedFormats EVALUATIONS -> EVALUATIONS
    org.apache.commons.math3.exception.util.LocalizedFormats MAX_COUNT_EXCEEDED -> MAX_COUNT_EXCEEDED
    org.apache.commons.math3.exception.util.LocalizedFormats MAX_ITERATIONS_EXCEEDED -> MAX_ITERATIONS_EXCEEDED
    org.apache.commons.math3.exception.util.LocalizedFormats MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION -> MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION
    org.apache.commons.math3.exception.util.LocalizedFormats MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS -> MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS
    org.apache.commons.math3.exception.util.LocalizedFormats MUTATION_RATE -> MUTATION_RATE
    org.apache.commons.math3.exception.util.LocalizedFormats NAN_ELEMENT_AT_INDEX -> NAN_ELEMENT_AT_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats NAN_VALUE_CONVERSION -> NAN_VALUE_CONVERSION
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_BRIGHTNESS_EXPONENT -> NEGATIVE_BRIGHTNESS_EXPONENT
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_COMPLEX_MODULE -> NEGATIVE_COMPLEX_MODULE
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_ELEMENT_AT_2D_INDEX -> NEGATIVE_ELEMENT_AT_2D_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_ELEMENT_AT_INDEX -> NEGATIVE_ELEMENT_AT_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_NUMBER_OF_SUCCESSES -> NEGATIVE_NUMBER_OF_SUCCESSES
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SUCCESSES -> NUMBER_OF_SUCCESSES
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_NUMBER_OF_TRIALS -> NEGATIVE_NUMBER_OF_TRIALS
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_INTERPOLATION_POINTS -> NUMBER_OF_INTERPOLATION_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_TRIALS -> NUMBER_OF_TRIALS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_CONVEX -> NOT_CONVEX
    org.apache.commons.math3.exception.util.LocalizedFormats ROBUSTNESS_ITERATIONS -> ROBUSTNESS_ITERATIONS
    org.apache.commons.math3.exception.util.LocalizedFormats START_POSITION -> START_POSITION
    org.apache.commons.math3.exception.util.LocalizedFormats NON_CONVERGENT_CONTINUED_FRACTION -> NON_CONVERGENT_CONTINUED_FRACTION
    org.apache.commons.math3.exception.util.LocalizedFormats NON_INVERTIBLE_TRANSFORM -> NON_INVERTIBLE_TRANSFORM
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_MICROSPHERE_ELEMENTS -> NON_POSITIVE_MICROSPHERE_ELEMENTS
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_POLYNOMIAL_DEGREE -> NON_POSITIVE_POLYNOMIAL_DEGREE
    org.apache.commons.math3.exception.util.LocalizedFormats NON_REAL_FINITE_ABSCISSA -> NON_REAL_FINITE_ABSCISSA
    org.apache.commons.math3.exception.util.LocalizedFormats NON_REAL_FINITE_ORDINATE -> NON_REAL_FINITE_ORDINATE
    org.apache.commons.math3.exception.util.LocalizedFormats NON_REAL_FINITE_WEIGHT -> NON_REAL_FINITE_WEIGHT
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SQUARE_MATRIX -> NON_SQUARE_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats NORM -> NORM
    org.apache.commons.math3.exception.util.LocalizedFormats NORMALIZE_INFINITE -> NORMALIZE_INFINITE
    org.apache.commons.math3.exception.util.LocalizedFormats NORMALIZE_NAN -> NORMALIZE_NAN
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ADDITION_COMPATIBLE_MATRICES -> NOT_ADDITION_COMPATIBLE_MATRICES
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_DECREASING_NUMBER_OF_POINTS -> NOT_DECREASING_NUMBER_OF_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_DECREASING_SEQUENCE -> NOT_DECREASING_SEQUENCE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS -> NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION -> NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_INCREASING_NUMBER_OF_POINTS -> NOT_INCREASING_NUMBER_OF_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_INCREASING_SEQUENCE -> NOT_INCREASING_SEQUENCE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_MULTIPLICATION_COMPATIBLE_MATRICES -> NOT_MULTIPLICATION_COMPATIBLE_MATRICES
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_DEFINITE_MATRIX -> NOT_POSITIVE_DEFINITE_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_DEFINITE_MATRIX -> NON_POSITIVE_DEFINITE_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_DEFINITE_OPERATOR -> NON_POSITIVE_DEFINITE_OPERATOR
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SELF_ADJOINT_OPERATOR -> NON_SELF_ADJOINT_OPERATOR
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SQUARE_OPERATOR -> NON_SQUARE_OPERATOR
    org.apache.commons.math3.exception.util.LocalizedFormats DEGREES_OF_FREEDOM -> DEGREES_OF_FREEDOM
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_DEGREES_OF_FREEDOM -> NOT_POSITIVE_DEGREES_OF_FREEDOM
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_ELEMENT_AT_INDEX -> NOT_POSITIVE_ELEMENT_AT_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_EXPONENT -> NOT_POSITIVE_EXPONENT
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE -> NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE
    org.apache.commons.math3.exception.util.LocalizedFormats BASE -> BASE
    org.apache.commons.math3.exception.util.LocalizedFormats EXPONENT -> EXPONENT
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_LENGTH -> NOT_POSITIVE_LENGTH
    org.apache.commons.math3.exception.util.LocalizedFormats LENGTH -> LENGTH
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_MEAN -> NOT_POSITIVE_MEAN
    org.apache.commons.math3.exception.util.LocalizedFormats MEAN -> MEAN
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_NUMBER_OF_SAMPLES -> NOT_POSITIVE_NUMBER_OF_SAMPLES
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SAMPLES -> NUMBER_OF_SAMPLES
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_PERMUTATION -> NOT_POSITIVE_PERMUTATION
    org.apache.commons.math3.exception.util.LocalizedFormats PERMUTATION_SIZE -> PERMUTATION_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_POISSON_MEAN -> NOT_POSITIVE_POISSON_MEAN
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_POPULATION_SIZE -> NOT_POSITIVE_POPULATION_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats POPULATION_SIZE -> POPULATION_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_ROW_DIMENSION -> NOT_POSITIVE_ROW_DIMENSION
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_SAMPLE_SIZE -> NOT_POSITIVE_SAMPLE_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_SCALE -> NOT_POSITIVE_SCALE
    org.apache.commons.math3.exception.util.LocalizedFormats SCALE -> SCALE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_SHAPE -> NOT_POSITIVE_SHAPE
    org.apache.commons.math3.exception.util.LocalizedFormats SHAPE -> SHAPE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_STANDARD_DEVIATION -> NOT_POSITIVE_STANDARD_DEVIATION
    org.apache.commons.math3.exception.util.LocalizedFormats STANDARD_DEVIATION -> STANDARD_DEVIATION
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_UPPER_BOUND -> NOT_POSITIVE_UPPER_BOUND
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_WINDOW_SIZE -> NOT_POSITIVE_WINDOW_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POWER_OF_TWO -> NOT_POWER_OF_TWO
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POWER_OF_TWO_CONSIDER_PADDING -> NOT_POWER_OF_TWO_CONSIDER_PADDING
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POWER_OF_TWO_PLUS_ONE -> NOT_POWER_OF_TWO_PLUS_ONE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS -> NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_DECREASING_SEQUENCE -> NOT_STRICTLY_DECREASING_SEQUENCE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_INCREASING_KNOT_VALUES -> NOT_STRICTLY_INCREASING_KNOT_VALUES
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS -> NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_INCREASING_SEQUENCE -> NOT_STRICTLY_INCREASING_SEQUENCE
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_SUBTRACTION_COMPATIBLE_MATRICES -> NOT_SUBTRACTION_COMPATIBLE_MATRICES
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_SUPPORTED_IN_DIMENSION_N -> NOT_SUPPORTED_IN_DIMENSION_N
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_SYMMETRIC_MATRIX -> NOT_SYMMETRIC_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SYMMETRIC_MATRIX -> NON_SYMMETRIC_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats NO_BIN_SELECTED -> NO_BIN_SELECTED
    org.apache.commons.math3.exception.util.LocalizedFormats NO_CONVERGENCE_WITH_ANY_START_POINT -> NO_CONVERGENCE_WITH_ANY_START_POINT
    org.apache.commons.math3.exception.util.LocalizedFormats NO_DATA -> NO_DATA
    org.apache.commons.math3.exception.util.LocalizedFormats NO_DEGREES_OF_FREEDOM -> NO_DEGREES_OF_FREEDOM
    org.apache.commons.math3.exception.util.LocalizedFormats NO_DENSITY_FOR_THIS_DISTRIBUTION -> NO_DENSITY_FOR_THIS_DISTRIBUTION
    org.apache.commons.math3.exception.util.LocalizedFormats NO_FEASIBLE_SOLUTION -> NO_FEASIBLE_SOLUTION
    org.apache.commons.math3.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET -> NO_OPTIMUM_COMPUTED_YET
    org.apache.commons.math3.exception.util.LocalizedFormats NO_REGRESSORS -> NO_REGRESSORS
    org.apache.commons.math3.exception.util.LocalizedFormats NO_RESULT_AVAILABLE -> NO_RESULT_AVAILABLE
    org.apache.commons.math3.exception.util.LocalizedFormats NO_SUCH_MATRIX_ENTRY -> NO_SUCH_MATRIX_ENTRY
    org.apache.commons.math3.exception.util.LocalizedFormats NAN_NOT_ALLOWED -> NAN_NOT_ALLOWED
    org.apache.commons.math3.exception.util.LocalizedFormats NULL_NOT_ALLOWED -> NULL_NOT_ALLOWED
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED -> ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED
    org.apache.commons.math3.exception.util.LocalizedFormats COVARIANCE_MATRIX -> COVARIANCE_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats DENOMINATOR -> DENOMINATOR
    org.apache.commons.math3.exception.util.LocalizedFormats DENOMINATOR_FORMAT -> DENOMINATOR_FORMAT
    org.apache.commons.math3.exception.util.LocalizedFormats FRACTION -> FRACTION
    org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION -> FUNCTION
    org.apache.commons.math3.exception.util.LocalizedFormats IMAGINARY_FORMAT -> IMAGINARY_FORMAT
    org.apache.commons.math3.exception.util.LocalizedFormats INPUT_ARRAY -> INPUT_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR -> NUMERATOR
    org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR_FORMAT -> NUMERATOR_FORMAT
    org.apache.commons.math3.exception.util.LocalizedFormats OBJECT_TRANSFORMATION -> OBJECT_TRANSFORMATION
    org.apache.commons.math3.exception.util.LocalizedFormats REAL_FORMAT -> REAL_FORMAT
    org.apache.commons.math3.exception.util.LocalizedFormats WHOLE_FORMAT -> WHOLE_FORMAT
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_LARGE -> NUMBER_TOO_LARGE
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL -> NUMBER_TOO_SMALL
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_LARGE_BOUND_EXCLUDED -> NUMBER_TOO_LARGE_BOUND_EXCLUDED
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL_BOUND_EXCLUDED -> NUMBER_TOO_SMALL_BOUND_EXCLUDED
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE -> NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR_OVERFLOW_AFTER_MULTIPLY -> NUMERATOR_OVERFLOW_AFTER_MULTIPLY
    org.apache.commons.math3.exception.util.LocalizedFormats N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED -> N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED
    org.apache.commons.math3.exception.util.LocalizedFormats OBSERVED_COUNTS_ALL_ZERO -> OBSERVED_COUNTS_ALL_ZERO
    org.apache.commons.math3.exception.util.LocalizedFormats OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY -> OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY
    org.apache.commons.math3.exception.util.LocalizedFormats BOBYQA_BOUND_DIFFERENCE_CONDITION -> BOBYQA_BOUND_DIFFERENCE_CONDITION
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUNDS_QUANTILE_VALUE -> OUT_OF_BOUNDS_QUANTILE_VALUE
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUNDS_CONFIDENCE_LEVEL -> OUT_OF_BOUNDS_CONFIDENCE_LEVEL
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUND_SIGNIFICANCE_LEVEL -> OUT_OF_BOUND_SIGNIFICANCE_LEVEL
    org.apache.commons.math3.exception.util.LocalizedFormats SIGNIFICANCE_LEVEL -> SIGNIFICANCE_LEVEL
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_ORDER_ABSCISSA_ARRAY -> OUT_OF_ORDER_ABSCISSA_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_ROOT_OF_UNITY_INDEX -> OUT_OF_RANGE_ROOT_OF_UNITY_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE -> OUT_OF_RANGE
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_SIMPLE -> OUT_OF_RANGE_SIMPLE
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_LEFT -> OUT_OF_RANGE_LEFT
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_RIGHT -> OUT_OF_RANGE_RIGHT
    org.apache.commons.math3.exception.util.LocalizedFormats OUTLINE_BOUNDARY_LOOP_OPEN -> OUTLINE_BOUNDARY_LOOP_OPEN
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW -> OVERFLOW
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW_IN_FRACTION -> OVERFLOW_IN_FRACTION
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW_IN_ADDITION -> OVERFLOW_IN_ADDITION
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW_IN_SUBTRACTION -> OVERFLOW_IN_SUBTRACTION
    org.apache.commons.math3.exception.util.LocalizedFormats PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD -> PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD
    org.apache.commons.math3.exception.util.LocalizedFormats PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD -> PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD
    org.apache.commons.math3.exception.util.LocalizedFormats PERMUTATION_EXCEEDS_N -> PERMUTATION_EXCEEDS_N
    org.apache.commons.math3.exception.util.LocalizedFormats POLYNOMIAL -> POLYNOMIAL
    org.apache.commons.math3.exception.util.LocalizedFormats POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS -> POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS
    org.apache.commons.math3.exception.util.LocalizedFormats POPULATION_LIMIT_NOT_POSITIVE -> POPULATION_LIMIT_NOT_POSITIVE
    org.apache.commons.math3.exception.util.LocalizedFormats POWER_NEGATIVE_PARAMETERS -> POWER_NEGATIVE_PARAMETERS
    org.apache.commons.math3.exception.util.LocalizedFormats PROPAGATION_DIRECTION_MISMATCH -> PROPAGATION_DIRECTION_MISMATCH
    org.apache.commons.math3.exception.util.LocalizedFormats RANDOMKEY_MUTATION_WRONG_CLASS -> RANDOMKEY_MUTATION_WRONG_CLASS
    org.apache.commons.math3.exception.util.LocalizedFormats ROOTS_OF_UNITY_NOT_COMPUTED_YET -> ROOTS_OF_UNITY_NOT_COMPUTED_YET
    org.apache.commons.math3.exception.util.LocalizedFormats ROTATION_MATRIX_DIMENSIONS -> ROTATION_MATRIX_DIMENSIONS
    org.apache.commons.math3.exception.util.LocalizedFormats ROW_INDEX_OUT_OF_RANGE -> ROW_INDEX_OUT_OF_RANGE
    org.apache.commons.math3.exception.util.LocalizedFormats ROW_INDEX -> ROW_INDEX
    org.apache.commons.math3.exception.util.LocalizedFormats SAME_SIGN_AT_ENDPOINTS -> SAME_SIGN_AT_ENDPOINTS
    org.apache.commons.math3.exception.util.LocalizedFormats SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE -> SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE -> SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE
    org.apache.commons.math3.exception.util.LocalizedFormats SIMPLEX_NEED_ONE_POINT -> SIMPLEX_NEED_ONE_POINT
    org.apache.commons.math3.exception.util.LocalizedFormats SIMPLE_MESSAGE -> SIMPLE_MESSAGE
    org.apache.commons.math3.exception.util.LocalizedFormats SINGULAR_MATRIX -> SINGULAR_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats SINGULAR_OPERATOR -> SINGULAR_OPERATOR
    org.apache.commons.math3.exception.util.LocalizedFormats SUBARRAY_ENDS_AFTER_ARRAY_END -> SUBARRAY_ENDS_AFTER_ARRAY_END
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_LARGE_CUTOFF_SINGULAR_VALUE -> TOO_LARGE_CUTOFF_SINGULAR_VALUE
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_LARGE_TOURNAMENT_ARITY -> TOO_LARGE_TOURNAMENT_ARITY
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY -> TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_MANY_REGRESSORS -> TOO_MANY_REGRESSORS
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_COST_RELATIVE_TOLERANCE -> TOO_SMALL_COST_RELATIVE_TOLERANCE
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_INTEGRATION_INTERVAL -> TOO_SMALL_INTEGRATION_INTERVAL
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_ORTHOGONALITY_TOLERANCE -> TOO_SMALL_ORTHOGONALITY_TOLERANCE
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE -> TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE
    org.apache.commons.math3.exception.util.LocalizedFormats TRUST_REGION_STEP_FAILED -> TRUST_REGION_STEP_FAILED
    org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_CATEGORIES_REQUIRED -> TWO_OR_MORE_CATEGORIES_REQUIRED
    org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED -> TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH -> UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM -> UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS -> UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_ORTHOGONOLIZE_MATRIX -> UNABLE_TO_ORTHOGONOLIZE_MATRIX
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN -> UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_SOLVE_SINGULAR_PROBLEM -> UNABLE_TO_SOLVE_SINGULAR_PROBLEM
    org.apache.commons.math3.exception.util.LocalizedFormats UNBOUNDED_SOLUTION -> UNBOUNDED_SOLUTION
    org.apache.commons.math3.exception.util.LocalizedFormats UNKNOWN_MODE -> UNKNOWN_MODE
    org.apache.commons.math3.exception.util.LocalizedFormats UNKNOWN_PARAMETER -> UNKNOWN_PARAMETER
    org.apache.commons.math3.exception.util.LocalizedFormats UNMATCHED_ODE_IN_EXPANDED_SET -> UNMATCHED_ODE_IN_EXPANDED_SET
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_PARSE_AS_TYPE -> CANNOT_PARSE_AS_TYPE
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_PARSE -> CANNOT_PARSE
    org.apache.commons.math3.exception.util.LocalizedFormats UNPARSEABLE_3D_VECTOR -> UNPARSEABLE_3D_VECTOR
    org.apache.commons.math3.exception.util.LocalizedFormats UNPARSEABLE_COMPLEX_NUMBER -> UNPARSEABLE_COMPLEX_NUMBER
    org.apache.commons.math3.exception.util.LocalizedFormats UNPARSEABLE_REAL_VECTOR -> UNPARSEABLE_REAL_VECTOR
    org.apache.commons.math3.exception.util.LocalizedFormats UNSUPPORTED_EXPANSION_MODE -> UNSUPPORTED_EXPANSION_MODE
    org.apache.commons.math3.exception.util.LocalizedFormats UNSUPPORTED_OPERATION -> UNSUPPORTED_OPERATION
    org.apache.commons.math3.exception.util.LocalizedFormats ARITHMETIC_EXCEPTION -> ARITHMETIC_EXCEPTION
    org.apache.commons.math3.exception.util.LocalizedFormats ILLEGAL_STATE -> ILLEGAL_STATE
    org.apache.commons.math3.exception.util.LocalizedFormats USER_EXCEPTION -> USER_EXCEPTION
    org.apache.commons.math3.exception.util.LocalizedFormats URL_CONTAINS_NO_DATA -> URL_CONTAINS_NO_DATA
    org.apache.commons.math3.exception.util.LocalizedFormats VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC -> VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC
    org.apache.commons.math3.exception.util.LocalizedFormats VECTOR_LENGTH_MISMATCH -> VECTOR_LENGTH_MISMATCH
    org.apache.commons.math3.exception.util.LocalizedFormats VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT -> VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT
    org.apache.commons.math3.exception.util.LocalizedFormats WEIGHT_AT_LEAST_ONE_NON_ZERO -> WEIGHT_AT_LEAST_ONE_NON_ZERO
    org.apache.commons.math3.exception.util.LocalizedFormats WRONG_BLOCK_LENGTH -> WRONG_BLOCK_LENGTH
    org.apache.commons.math3.exception.util.LocalizedFormats WRONG_NUMBER_OF_POINTS -> WRONG_NUMBER_OF_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_POINTS -> NUMBER_OF_POINTS
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR -> ZERO_DENOMINATOR
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR_IN_FRACTION -> ZERO_DENOMINATOR_IN_FRACTION
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_FRACTION_TO_DIVIDE_BY -> ZERO_FRACTION_TO_DIVIDE_BY
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM -> ZERO_NORM
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM_FOR_ROTATION_AXIS -> ZERO_NORM_FOR_ROTATION_AXIS
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR -> ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NOT_ALLOWED -> ZERO_NOT_ALLOWED
    java.lang.String sourceFormat -> sourceFormat
    org.apache.commons.math3.exception.util.LocalizedFormats[] $VALUES -> $VALUES
    org.apache.commons.math3.exception.util.LocalizedFormats[] values() -> values
    org.apache.commons.math3.exception.util.LocalizedFormats valueOf(java.lang.String) -> valueOf
    java.lang.String getSourceString() -> getSourceString
    java.lang.String getLocalizedString(java.util.Locale) -> getLocalizedString
org.apache.commons.math3.filter.DefaultMeasurementModel -> org.apache.commons.math3.filter.DefaultMeasurementModel:
    org.apache.commons.math3.linear.RealMatrix measurementMatrix -> measurementMatrix
    org.apache.commons.math3.linear.RealMatrix measurementNoise -> measurementNoise
    org.apache.commons.math3.linear.RealMatrix getMeasurementMatrix() -> getMeasurementMatrix
    org.apache.commons.math3.linear.RealMatrix getMeasurementNoise() -> getMeasurementNoise
org.apache.commons.math3.filter.DefaultProcessModel -> org.apache.commons.math3.filter.DefaultProcessModel:
    org.apache.commons.math3.linear.RealMatrix stateTransitionMatrix -> stateTransitionMatrix
    org.apache.commons.math3.linear.RealMatrix controlMatrix -> controlMatrix
    org.apache.commons.math3.linear.RealMatrix processNoiseCovMatrix -> processNoiseCovMatrix
    org.apache.commons.math3.linear.RealVector initialStateEstimateVector -> initialStateEstimateVector
    org.apache.commons.math3.linear.RealMatrix initialErrorCovMatrix -> initialErrorCovMatrix
    org.apache.commons.math3.linear.RealMatrix getStateTransitionMatrix() -> getStateTransitionMatrix
    org.apache.commons.math3.linear.RealMatrix getControlMatrix() -> getControlMatrix
    org.apache.commons.math3.linear.RealMatrix getProcessNoise() -> getProcessNoise
    org.apache.commons.math3.linear.RealVector getInitialStateEstimate() -> getInitialStateEstimate
    org.apache.commons.math3.linear.RealMatrix getInitialErrorCovariance() -> getInitialErrorCovariance
org.apache.commons.math3.filter.KalmanFilter -> org.apache.commons.math3.filter.KalmanFilter:
    org.apache.commons.math3.filter.ProcessModel processModel -> processModel
    org.apache.commons.math3.filter.MeasurementModel measurementModel -> measurementModel
    org.apache.commons.math3.linear.RealMatrix transitionMatrix -> transitionMatrix
    org.apache.commons.math3.linear.RealMatrix transitionMatrixT -> transitionMatrixT
    org.apache.commons.math3.linear.RealMatrix controlMatrix -> controlMatrix
    org.apache.commons.math3.linear.RealMatrix measurementMatrix -> measurementMatrix
    org.apache.commons.math3.linear.RealMatrix measurementMatrixT -> measurementMatrixT
    org.apache.commons.math3.linear.RealVector stateEstimation -> stateEstimation
    org.apache.commons.math3.linear.RealMatrix errorCovariance -> errorCovariance
    int getStateDimension() -> getStateDimension
    int getMeasurementDimension() -> getMeasurementDimension
    double[] getStateEstimation() -> getStateEstimation
    org.apache.commons.math3.linear.RealVector getStateEstimationVector() -> getStateEstimationVector
    double[][] getErrorCovariance() -> getErrorCovariance
    org.apache.commons.math3.linear.RealMatrix getErrorCovarianceMatrix() -> getErrorCovarianceMatrix
    void predict() -> predict
    void predict(double[]) -> predict
    void predict(org.apache.commons.math3.linear.RealVector) -> predict
    void correct(double[]) -> correct
    void correct(org.apache.commons.math3.linear.RealVector) -> correct
org.apache.commons.math3.filter.MeasurementModel -> org.apache.commons.math3.filter.MeasurementModel:
    org.apache.commons.math3.linear.RealMatrix getMeasurementMatrix() -> getMeasurementMatrix
    org.apache.commons.math3.linear.RealMatrix getMeasurementNoise() -> getMeasurementNoise
org.apache.commons.math3.filter.ProcessModel -> org.apache.commons.math3.filter.ProcessModel:
    org.apache.commons.math3.linear.RealMatrix getStateTransitionMatrix() -> getStateTransitionMatrix
    org.apache.commons.math3.linear.RealMatrix getControlMatrix() -> getControlMatrix
    org.apache.commons.math3.linear.RealMatrix getProcessNoise() -> getProcessNoise
    org.apache.commons.math3.linear.RealVector getInitialStateEstimate() -> getInitialStateEstimate
    org.apache.commons.math3.linear.RealMatrix getInitialErrorCovariance() -> getInitialErrorCovariance
org.apache.commons.math3.fitting.AbstractCurveFitter -> org.apache.commons.math3.fitting.AbstractCurveFitter:
    double[] fit(java.util.Collection) -> fit
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer getOptimizer() -> getOptimizer
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem getProblem(java.util.Collection) -> getProblem
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction -> org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction:
    org.apache.commons.math3.analysis.ParametricUnivariateFunction f -> f
    double[] points -> points
    org.apache.commons.math3.analysis.MultivariateVectorFunction getModelFunction() -> getModelFunction
    org.apache.commons.math3.analysis.MultivariateMatrixFunction getModelFunctionJacobian() -> getModelFunctionJacobian
    double[] access$000(org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction) -> access$000
    org.apache.commons.math3.analysis.ParametricUnivariateFunction access$100(org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction) -> access$100
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1 -> org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1:
    org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction this$0 -> this$0
    double[] value(double[]) -> value
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$2 -> org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$2:
    org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction this$0 -> this$0
    double[][] value(double[]) -> value
org.apache.commons.math3.fitting.CurveFitter -> org.apache.commons.math3.fitting.CurveFitter:
    org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer optimizer -> optimizer
    java.util.List observations -> observations
    void addObservedPoint(double,double) -> addObservedPoint
    void addObservedPoint(double,double,double) -> addObservedPoint
    void addObservedPoint(org.apache.commons.math3.fitting.WeightedObservedPoint) -> addObservedPoint
    org.apache.commons.math3.fitting.WeightedObservedPoint[] getObservations() -> getObservations
    void clearObservations() -> clearObservations
    double[] fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[]) -> fit
    double[] fit(int,org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[]) -> fit
    java.util.List access$000(org.apache.commons.math3.fitting.CurveFitter) -> access$000
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction -> org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:
    org.apache.commons.math3.analysis.ParametricUnivariateFunction f -> f
    org.apache.commons.math3.fitting.CurveFitter this$0 -> this$0
    org.apache.commons.math3.optim.nonlinear.vector.ModelFunction getModelFunction() -> getModelFunction
    org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian getModelFunctionJacobian() -> getModelFunctionJacobian
    org.apache.commons.math3.analysis.ParametricUnivariateFunction access$100(org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction) -> access$100
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1 -> org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:
    org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction this$1 -> this$1
    double[] value(double[]) -> value
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2 -> org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:
    org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction this$1 -> this$1
    double[][] value(double[]) -> value
org.apache.commons.math3.fitting.GaussianCurveFitter -> org.apache.commons.math3.fitting.GaussianCurveFitter:
    org.apache.commons.math3.analysis.function.Gaussian$Parametric FUNCTION -> FUNCTION
    double[] initialGuess -> initialGuess
    int maxIter -> maxIter
    org.apache.commons.math3.fitting.GaussianCurveFitter create() -> create
    org.apache.commons.math3.fitting.GaussianCurveFitter withStartPoint(double[]) -> withStartPoint
    org.apache.commons.math3.fitting.GaussianCurveFitter withMaxIterations(int) -> withMaxIterations
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem getProblem(java.util.Collection) -> getProblem
org.apache.commons.math3.fitting.GaussianCurveFitter$1 -> org.apache.commons.math3.fitting.GaussianCurveFitter$1:
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser -> org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser:
    double norm -> norm
    double mean -> mean
    double sigma -> sigma
    double[] guess() -> guess
    java.util.List sortObservations(java.util.Collection) -> sortObservations
    double[] basicGuess(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> basicGuess
    int findMaxY(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> findMaxY
    double interpolateXAtY(org.apache.commons.math3.fitting.WeightedObservedPoint[],int,int,double) -> interpolateXAtY
    org.apache.commons.math3.fitting.WeightedObservedPoint[] getInterpolationPointsForY(org.apache.commons.math3.fitting.WeightedObservedPoint[],int,int,double) -> getInterpolationPointsForY
    boolean isBetween(double,double,double) -> isBetween
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1 -> org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1:
    org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser this$0 -> this$0
    int compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.fitting.GaussianFitter -> org.apache.commons.math3.fitting.GaussianFitter:
    double[] fit(double[]) -> fit
    double[] fit() -> fit
org.apache.commons.math3.fitting.GaussianFitter$1 -> org.apache.commons.math3.fitting.GaussianFitter$1:
    org.apache.commons.math3.fitting.GaussianFitter this$0 -> this$0
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser -> org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser:
    double norm -> norm
    double mean -> mean
    double sigma -> sigma
    double[] guess() -> guess
    org.apache.commons.math3.fitting.WeightedObservedPoint[] sortObservations(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> sortObservations
    double[] basicGuess(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> basicGuess
    int findMaxY(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> findMaxY
    double interpolateXAtY(org.apache.commons.math3.fitting.WeightedObservedPoint[],int,int,double) -> interpolateXAtY
    org.apache.commons.math3.fitting.WeightedObservedPoint[] getInterpolationPointsForY(org.apache.commons.math3.fitting.WeightedObservedPoint[],int,int,double) -> getInterpolationPointsForY
    boolean isBetween(double,double,double) -> isBetween
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1 -> org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1:
    org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser this$0 -> this$0
    int compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.fitting.HarmonicCurveFitter -> org.apache.commons.math3.fitting.HarmonicCurveFitter:
    org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric FUNCTION -> FUNCTION
    double[] initialGuess -> initialGuess
    int maxIter -> maxIter
    org.apache.commons.math3.fitting.HarmonicCurveFitter create() -> create
    org.apache.commons.math3.fitting.HarmonicCurveFitter withStartPoint(double[]) -> withStartPoint
    org.apache.commons.math3.fitting.HarmonicCurveFitter withMaxIterations(int) -> withMaxIterations
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem getProblem(java.util.Collection) -> getProblem
org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser -> org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser:
    double a -> a
    double omega -> omega
    double phi -> phi
    double[] guess() -> guess
    java.util.List sortObservations(java.util.Collection) -> sortObservations
    double[] guessAOmega(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> guessAOmega
    double guessPhi(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> guessPhi
org.apache.commons.math3.fitting.HarmonicFitter -> org.apache.commons.math3.fitting.HarmonicFitter:
    double[] fit(double[]) -> fit
    double[] fit() -> fit
org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser -> org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser:
    double a -> a
    double omega -> omega
    double phi -> phi
    double[] guess() -> guess
    org.apache.commons.math3.fitting.WeightedObservedPoint[] sortObservations(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> sortObservations
    double[] guessAOmega(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> guessAOmega
    double guessPhi(org.apache.commons.math3.fitting.WeightedObservedPoint[]) -> guessPhi
org.apache.commons.math3.fitting.PolynomialCurveFitter -> org.apache.commons.math3.fitting.PolynomialCurveFitter:
    org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric FUNCTION -> FUNCTION
    double[] initialGuess -> initialGuess
    int maxIter -> maxIter
    org.apache.commons.math3.fitting.PolynomialCurveFitter create(int) -> create
    org.apache.commons.math3.fitting.PolynomialCurveFitter withStartPoint(double[]) -> withStartPoint
    org.apache.commons.math3.fitting.PolynomialCurveFitter withMaxIterations(int) -> withMaxIterations
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem getProblem(java.util.Collection) -> getProblem
org.apache.commons.math3.fitting.PolynomialFitter -> org.apache.commons.math3.fitting.PolynomialFitter:
    double[] fit(int,double[]) -> fit
    double[] fit(double[]) -> fit
org.apache.commons.math3.fitting.WeightedObservedPoint -> org.apache.commons.math3.fitting.WeightedObservedPoint:
    long serialVersionUID -> serialVersionUID
    double weight -> weight
    double x -> x
    double y -> y
    double getWeight() -> getWeight
    double getX() -> getX
    double getY() -> getY
org.apache.commons.math3.fitting.WeightedObservedPoints -> org.apache.commons.math3.fitting.WeightedObservedPoints:
    long serialVersionUID -> serialVersionUID
    java.util.List observations -> observations
    void add(double,double) -> add
    void add(double,double,double) -> add
    void add(org.apache.commons.math3.fitting.WeightedObservedPoint) -> add
    java.util.List toList() -> toList
    void clear() -> clear
org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation -> org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:
    int observationSize -> observationSize
    org.apache.commons.math3.linear.RealMatrix getCovariances(double) -> getCovariances
    org.apache.commons.math3.linear.RealVector getSigma(double) -> getSigma
    double getRMS() -> getRMS
    double getCost() -> getCost
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation -> org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation:
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation unweighted -> unweighted
    org.apache.commons.math3.linear.RealMatrix weightSqrt -> weightSqrt
    org.apache.commons.math3.linear.RealMatrix getJacobian() -> getJacobian
    org.apache.commons.math3.linear.RealVector getResiduals() -> getResiduals
    org.apache.commons.math3.linear.RealVector getPoint() -> getPoint
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer -> org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:
    double SINGULARITY_THRESHOLD -> SINGULARITY_THRESHOLD
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition decomposition -> decomposition
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition getDecomposition() -> getDecomposition
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer withDecomposition(org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition) -> withDecomposition
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer$Optimum optimize(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem) -> optimize
    java.lang.String toString() -> toString
    org.apache.commons.math3.util.Pair computeNormalMatrix(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> computeNormalMatrix
    org.apache.commons.math3.util.Pair access$100(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> access$100
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$1 -> org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$1:
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition -> org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition:
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition LU -> LU
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition QR -> QR
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition CHOLESKY -> CHOLESKY
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition SVD -> SVD
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition[] $VALUES -> $VALUES
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition[] values() -> values
    org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition valueOf(java.lang.String) -> valueOf
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> solve
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1 -> org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1:
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> solve
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$2 -> org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$2:
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> solve
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$3 -> org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$3:
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> solve
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$4 -> org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$4:
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> solve
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem -> problem
    org.apache.commons.math3.linear.RealVector getStart() -> getStart
    int getObservationSize() -> getObservationSize
    int getParameterSize() -> getParameterSize
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector) -> evaluate
    org.apache.commons.math3.util.Incrementor getEvaluationCounter() -> getEvaluationCounter
    org.apache.commons.math3.util.Incrementor getIterationCounter() -> getIterationCounter
    org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:
    int maxEvaluations -> maxEvaluations
    int maxIterations -> maxIterations
    org.apache.commons.math3.optim.ConvergenceChecker checker -> checker
    org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model -> model
    org.apache.commons.math3.linear.RealVector target -> target
    org.apache.commons.math3.linear.RealVector start -> start
    org.apache.commons.math3.linear.RealMatrix weight -> weight
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem build() -> build
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder maxEvaluations(int) -> maxEvaluations
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder maxIterations(int) -> maxIterations
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checker(org.apache.commons.math3.optim.ConvergenceChecker) -> checker
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checkerPair(org.apache.commons.math3.optim.ConvergenceChecker) -> checkerPair
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.analysis.MultivariateMatrixFunction) -> model
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction) -> model
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(org.apache.commons.math3.linear.RealVector) -> target
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(double[]) -> target
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(org.apache.commons.math3.linear.RealVector) -> start
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(double[]) -> start
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder weight(org.apache.commons.math3.linear.RealMatrix) -> weight
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem create(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.optim.ConvergenceChecker,int,int) -> create
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem create(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.optim.ConvergenceChecker,int,int) -> create
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem create(org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.analysis.MultivariateMatrixFunction,double[],double[],org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.optim.ConvergenceChecker,int,int) -> create
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem weightMatrix(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem,org.apache.commons.math3.linear.RealMatrix) -> weightMatrix
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem weightDiagonal(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem,org.apache.commons.math3.linear.RealVector) -> weightDiagonal
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem countEvaluations(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem,org.apache.commons.math3.util.Incrementor) -> countEvaluations
    org.apache.commons.math3.optim.ConvergenceChecker evaluationChecker(org.apache.commons.math3.optim.ConvergenceChecker) -> evaluationChecker
    org.apache.commons.math3.linear.RealMatrix squareRoot(org.apache.commons.math3.linear.RealMatrix) -> squareRoot
    org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model(org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.analysis.MultivariateMatrixFunction) -> model
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1 -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1:
    org.apache.commons.math3.linear.RealMatrix val$weightSquareRoot -> val$weightSquareRoot
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector) -> evaluate
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$2 -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$2:
    org.apache.commons.math3.util.Incrementor val$counter -> val$counter
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector) -> evaluate
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3 -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3:
    org.apache.commons.math3.optim.ConvergenceChecker val$checker -> val$checker
    boolean converged(int,org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation,org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$4 -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$4:
    org.apache.commons.math3.analysis.MultivariateVectorFunction val$value -> val$value
    org.apache.commons.math3.analysis.MultivariateMatrixFunction val$jacobian -> val$jacobian
    org.apache.commons.math3.util.Pair value(org.apache.commons.math3.linear.RealVector) -> value
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:
    org.apache.commons.math3.linear.RealVector target -> target
    org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model -> model
    org.apache.commons.math3.linear.RealVector start -> start
    int getObservationSize() -> getObservationSize
    int getParameterSize() -> getParameterSize
    org.apache.commons.math3.linear.RealVector getStart() -> getStart
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector) -> evaluate
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation:
    org.apache.commons.math3.linear.RealVector point -> point
    org.apache.commons.math3.linear.RealMatrix jacobian -> jacobian
    org.apache.commons.math3.linear.RealVector residuals -> residuals
    org.apache.commons.math3.linear.RealMatrix getJacobian() -> getJacobian
    org.apache.commons.math3.linear.RealVector getPoint() -> getPoint
    org.apache.commons.math3.linear.RealVector getResiduals() -> getResiduals
org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer:
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer$Optimum optimize(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem) -> optimize
org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer$Optimum -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer$Optimum:
    int getEvaluations() -> getEvaluations
    int getIterations() -> getIterations
org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:
    org.apache.commons.math3.linear.RealVector getStart() -> getStart
    int getObservationSize() -> getObservationSize
    int getParameterSize() -> getParameterSize
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector) -> evaluate
org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation -> org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation:
    org.apache.commons.math3.linear.RealMatrix getCovariances(double) -> getCovariances
    org.apache.commons.math3.linear.RealVector getSigma(double) -> getSigma
    double getRMS() -> getRMS
    org.apache.commons.math3.linear.RealMatrix getJacobian() -> getJacobian
    double getCost() -> getCost
    org.apache.commons.math3.linear.RealVector getResiduals() -> getResiduals
    org.apache.commons.math3.linear.RealVector getPoint() -> getPoint
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer -> org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:
    double TWO_EPS -> TWO_EPS
    double initialStepBoundFactor -> initialStepBoundFactor
    double costRelativeTolerance -> costRelativeTolerance
    double parRelativeTolerance -> parRelativeTolerance
    double orthoTolerance -> orthoTolerance
    double qrRankingThreshold -> qrRankingThreshold
    org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer withInitialStepBoundFactor(double) -> withInitialStepBoundFactor
    org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer withCostRelativeTolerance(double) -> withCostRelativeTolerance
    org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer withParameterRelativeTolerance(double) -> withParameterRelativeTolerance
    org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer withOrthoTolerance(double) -> withOrthoTolerance
    org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer withRankingThreshold(double) -> withRankingThreshold
    double getInitialStepBoundFactor() -> getInitialStepBoundFactor
    double getCostRelativeTolerance() -> getCostRelativeTolerance
    double getParameterRelativeTolerance() -> getParameterRelativeTolerance
    double getOrthoTolerance() -> getOrthoTolerance
    double getRankingThreshold() -> getRankingThreshold
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer$Optimum optimize(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem) -> optimize
    double determineLMParameter(double[],double,double[],org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData,int,double[],double[],double[],double[],double) -> determineLMParameter
    void determineLMDirection(double[],double[],double[],org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData,int,double[],double[]) -> determineLMDirection
    org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData qrDecomposition(org.apache.commons.math3.linear.RealMatrix,int) -> qrDecomposition
    void qTy(double[],org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData) -> qTy
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData -> org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData:
    double[][] weightedJacobian -> weightedJacobian
    int[] permutation -> permutation
    int rank -> rank
    double[] diagR -> diagR
    double[] jacNorm -> jacNorm
    double[] beta -> beta
    double[][] access$000(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData) -> access$000
    int[] access$100(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData) -> access$100
    double[] access$200(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData) -> access$200
    double[] access$300(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData) -> access$300
    int access$400(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData) -> access$400
    double[] access$500(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData) -> access$500
org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction -> org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction:
    org.apache.commons.math3.util.Pair value(org.apache.commons.math3.linear.RealVector) -> value
org.apache.commons.math3.fitting.leastsquares.OptimumImpl -> org.apache.commons.math3.fitting.leastsquares.OptimumImpl:
    org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation value -> value
    int evaluations -> evaluations
    int iterations -> iterations
    int getEvaluations() -> getEvaluations
    int getIterations() -> getIterations
    org.apache.commons.math3.linear.RealMatrix getCovariances(double) -> getCovariances
    org.apache.commons.math3.linear.RealVector getSigma(double) -> getSigma
    double getRMS() -> getRMS
    org.apache.commons.math3.linear.RealMatrix getJacobian() -> getJacobian
    double getCost() -> getCost
    org.apache.commons.math3.linear.RealVector getResiduals() -> getResiduals
    org.apache.commons.math3.linear.RealVector getPoint() -> getPoint
org.apache.commons.math3.fraction.AbstractFormat -> org.apache.commons.math3.fraction.AbstractFormat:
    long serialVersionUID -> serialVersionUID
    java.text.NumberFormat denominatorFormat -> denominatorFormat
    java.text.NumberFormat numeratorFormat -> numeratorFormat
    java.text.NumberFormat getDefaultNumberFormat() -> getDefaultNumberFormat
    java.text.NumberFormat getDefaultNumberFormat(java.util.Locale) -> getDefaultNumberFormat
    java.text.NumberFormat getDenominatorFormat() -> getDenominatorFormat
    java.text.NumberFormat getNumeratorFormat() -> getNumeratorFormat
    void setDenominatorFormat(java.text.NumberFormat) -> setDenominatorFormat
    void setNumeratorFormat(java.text.NumberFormat) -> setNumeratorFormat
    void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition) -> parseAndIgnoreWhitespace
    char parseNextCharacter(java.lang.String,java.text.ParsePosition) -> parseNextCharacter
    java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition) -> format
org.apache.commons.math3.fraction.BigFraction -> org.apache.commons.math3.fraction.BigFraction:
    org.apache.commons.math3.fraction.BigFraction TWO -> TWO
    org.apache.commons.math3.fraction.BigFraction ONE -> ONE
    org.apache.commons.math3.fraction.BigFraction ZERO -> ZERO
    org.apache.commons.math3.fraction.BigFraction MINUS_ONE -> MINUS_ONE
    org.apache.commons.math3.fraction.BigFraction FOUR_FIFTHS -> FOUR_FIFTHS
    org.apache.commons.math3.fraction.BigFraction ONE_FIFTH -> ONE_FIFTH
    org.apache.commons.math3.fraction.BigFraction ONE_HALF -> ONE_HALF
    org.apache.commons.math3.fraction.BigFraction ONE_QUARTER -> ONE_QUARTER
    org.apache.commons.math3.fraction.BigFraction ONE_THIRD -> ONE_THIRD
    org.apache.commons.math3.fraction.BigFraction THREE_FIFTHS -> THREE_FIFTHS
    org.apache.commons.math3.fraction.BigFraction THREE_QUARTERS -> THREE_QUARTERS
    org.apache.commons.math3.fraction.BigFraction TWO_FIFTHS -> TWO_FIFTHS
    org.apache.commons.math3.fraction.BigFraction TWO_QUARTERS -> TWO_QUARTERS
    org.apache.commons.math3.fraction.BigFraction TWO_THIRDS -> TWO_THIRDS
    long serialVersionUID -> serialVersionUID
    java.math.BigInteger ONE_HUNDRED -> ONE_HUNDRED
    java.math.BigInteger numerator -> numerator
    java.math.BigInteger denominator -> denominator
    org.apache.commons.math3.fraction.BigFraction getReducedFraction(int,int) -> getReducedFraction
    org.apache.commons.math3.fraction.BigFraction abs() -> abs
    org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger) -> add
    org.apache.commons.math3.fraction.BigFraction add(int) -> add
    org.apache.commons.math3.fraction.BigFraction add(long) -> add
    org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction) -> add
    java.math.BigDecimal bigDecimalValue() -> bigDecimalValue
    java.math.BigDecimal bigDecimalValue(int) -> bigDecimalValue
    java.math.BigDecimal bigDecimalValue(int,int) -> bigDecimalValue
    int compareTo(org.apache.commons.math3.fraction.BigFraction) -> compareTo
    org.apache.commons.math3.fraction.BigFraction divide(java.math.BigInteger) -> divide
    org.apache.commons.math3.fraction.BigFraction divide(int) -> divide
    org.apache.commons.math3.fraction.BigFraction divide(long) -> divide
    org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction) -> divide
    double doubleValue() -> doubleValue
    boolean equals(java.lang.Object) -> equals
    float floatValue() -> floatValue
    java.math.BigInteger getDenominator() -> getDenominator
    int getDenominatorAsInt() -> getDenominatorAsInt
    long getDenominatorAsLong() -> getDenominatorAsLong
    java.math.BigInteger getNumerator() -> getNumerator
    int getNumeratorAsInt() -> getNumeratorAsInt
    long getNumeratorAsLong() -> getNumeratorAsLong
    int hashCode() -> hashCode
    int intValue() -> intValue
    long longValue() -> longValue
    org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger) -> multiply
    org.apache.commons.math3.fraction.BigFraction multiply(int) -> multiply
    org.apache.commons.math3.fraction.BigFraction multiply(long) -> multiply
    org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction) -> multiply
    org.apache.commons.math3.fraction.BigFraction negate() -> negate
    double percentageValue() -> percentageValue
    org.apache.commons.math3.fraction.BigFraction pow(int) -> pow
    org.apache.commons.math3.fraction.BigFraction pow(long) -> pow
    org.apache.commons.math3.fraction.BigFraction pow(java.math.BigInteger) -> pow
    double pow(double) -> pow
    org.apache.commons.math3.fraction.BigFraction reciprocal() -> reciprocal
    org.apache.commons.math3.fraction.BigFraction reduce() -> reduce
    org.apache.commons.math3.fraction.BigFraction subtract(java.math.BigInteger) -> subtract
    org.apache.commons.math3.fraction.BigFraction subtract(int) -> subtract
    org.apache.commons.math3.fraction.BigFraction subtract(long) -> subtract
    org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction) -> subtract
    java.lang.String toString() -> toString
    org.apache.commons.math3.fraction.BigFractionField getField() -> getField
    org.apache.commons.math3.Field getField() -> getField
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.fraction.BigFractionField -> org.apache.commons.math3.fraction.BigFractionField:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.fraction.BigFractionField getInstance() -> getInstance
    org.apache.commons.math3.fraction.BigFraction getOne() -> getOne
    org.apache.commons.math3.fraction.BigFraction getZero() -> getZero
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    java.lang.Object readResolve() -> readResolve
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.fraction.BigFractionField$1 -> org.apache.commons.math3.fraction.BigFractionField$1:
org.apache.commons.math3.fraction.BigFractionField$LazyHolder -> org.apache.commons.math3.fraction.BigFractionField$LazyHolder:
    org.apache.commons.math3.fraction.BigFractionField INSTANCE -> INSTANCE
    org.apache.commons.math3.fraction.BigFractionField access$000() -> access$000
org.apache.commons.math3.fraction.BigFractionFormat -> org.apache.commons.math3.fraction.BigFractionFormat:
    long serialVersionUID -> serialVersionUID
    java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    java.lang.String formatBigFraction(org.apache.commons.math3.fraction.BigFraction) -> formatBigFraction
    org.apache.commons.math3.fraction.BigFractionFormat getImproperInstance() -> getImproperInstance
    org.apache.commons.math3.fraction.BigFractionFormat getImproperInstance(java.util.Locale) -> getImproperInstance
    org.apache.commons.math3.fraction.BigFractionFormat getProperInstance() -> getProperInstance
    org.apache.commons.math3.fraction.BigFractionFormat getProperInstance(java.util.Locale) -> getProperInstance
    java.lang.StringBuffer format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    org.apache.commons.math3.fraction.BigFraction parse(java.lang.String) -> parse
    org.apache.commons.math3.fraction.BigFraction parse(java.lang.String,java.text.ParsePosition) -> parse
    java.math.BigInteger parseNextBigInteger(java.lang.String,java.text.ParsePosition) -> parseNextBigInteger
    java.lang.Number parse(java.lang.String) -> parse
    java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.commons.math3.fraction.Fraction -> org.apache.commons.math3.fraction.Fraction:
    org.apache.commons.math3.fraction.Fraction TWO -> TWO
    org.apache.commons.math3.fraction.Fraction ONE -> ONE
    org.apache.commons.math3.fraction.Fraction ZERO -> ZERO
    org.apache.commons.math3.fraction.Fraction FOUR_FIFTHS -> FOUR_FIFTHS
    org.apache.commons.math3.fraction.Fraction ONE_FIFTH -> ONE_FIFTH
    org.apache.commons.math3.fraction.Fraction ONE_HALF -> ONE_HALF
    org.apache.commons.math3.fraction.Fraction ONE_QUARTER -> ONE_QUARTER
    org.apache.commons.math3.fraction.Fraction ONE_THIRD -> ONE_THIRD
    org.apache.commons.math3.fraction.Fraction THREE_FIFTHS -> THREE_FIFTHS
    org.apache.commons.math3.fraction.Fraction THREE_QUARTERS -> THREE_QUARTERS
    org.apache.commons.math3.fraction.Fraction TWO_FIFTHS -> TWO_FIFTHS
    org.apache.commons.math3.fraction.Fraction TWO_QUARTERS -> TWO_QUARTERS
    org.apache.commons.math3.fraction.Fraction TWO_THIRDS -> TWO_THIRDS
    org.apache.commons.math3.fraction.Fraction MINUS_ONE -> MINUS_ONE
    long serialVersionUID -> serialVersionUID
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    int denominator -> denominator
    int numerator -> numerator
    org.apache.commons.math3.fraction.Fraction abs() -> abs
    int compareTo(org.apache.commons.math3.fraction.Fraction) -> compareTo
    double doubleValue() -> doubleValue
    boolean equals(java.lang.Object) -> equals
    float floatValue() -> floatValue
    int getDenominator() -> getDenominator
    int getNumerator() -> getNumerator
    int hashCode() -> hashCode
    int intValue() -> intValue
    long longValue() -> longValue
    org.apache.commons.math3.fraction.Fraction negate() -> negate
    org.apache.commons.math3.fraction.Fraction reciprocal() -> reciprocal
    org.apache.commons.math3.fraction.Fraction add(org.apache.commons.math3.fraction.Fraction) -> add
    org.apache.commons.math3.fraction.Fraction add(int) -> add
    org.apache.commons.math3.fraction.Fraction subtract(org.apache.commons.math3.fraction.Fraction) -> subtract
    org.apache.commons.math3.fraction.Fraction subtract(int) -> subtract
    org.apache.commons.math3.fraction.Fraction addSub(org.apache.commons.math3.fraction.Fraction,boolean) -> addSub
    org.apache.commons.math3.fraction.Fraction multiply(org.apache.commons.math3.fraction.Fraction) -> multiply
    org.apache.commons.math3.fraction.Fraction multiply(int) -> multiply
    org.apache.commons.math3.fraction.Fraction divide(org.apache.commons.math3.fraction.Fraction) -> divide
    org.apache.commons.math3.fraction.Fraction divide(int) -> divide
    double percentageValue() -> percentageValue
    org.apache.commons.math3.fraction.Fraction getReducedFraction(int,int) -> getReducedFraction
    java.lang.String toString() -> toString
    org.apache.commons.math3.fraction.FractionField getField() -> getField
    org.apache.commons.math3.Field getField() -> getField
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.fraction.FractionConversionException -> org.apache.commons.math3.fraction.FractionConversionException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.fraction.FractionField -> org.apache.commons.math3.fraction.FractionField:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.fraction.FractionField getInstance() -> getInstance
    org.apache.commons.math3.fraction.Fraction getOne() -> getOne
    org.apache.commons.math3.fraction.Fraction getZero() -> getZero
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    java.lang.Object readResolve() -> readResolve
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.fraction.FractionField$1 -> org.apache.commons.math3.fraction.FractionField$1:
org.apache.commons.math3.fraction.FractionField$LazyHolder -> org.apache.commons.math3.fraction.FractionField$LazyHolder:
    org.apache.commons.math3.fraction.FractionField INSTANCE -> INSTANCE
    org.apache.commons.math3.fraction.FractionField access$000() -> access$000
org.apache.commons.math3.fraction.FractionFormat -> org.apache.commons.math3.fraction.FractionFormat:
    long serialVersionUID -> serialVersionUID
    java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    java.lang.String formatFraction(org.apache.commons.math3.fraction.Fraction) -> formatFraction
    org.apache.commons.math3.fraction.FractionFormat getImproperInstance() -> getImproperInstance
    org.apache.commons.math3.fraction.FractionFormat getImproperInstance(java.util.Locale) -> getImproperInstance
    org.apache.commons.math3.fraction.FractionFormat getProperInstance() -> getProperInstance
    org.apache.commons.math3.fraction.FractionFormat getProperInstance(java.util.Locale) -> getProperInstance
    java.text.NumberFormat getDefaultNumberFormat() -> getDefaultNumberFormat
    java.lang.StringBuffer format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    org.apache.commons.math3.fraction.Fraction parse(java.lang.String) -> parse
    org.apache.commons.math3.fraction.Fraction parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.Number parse(java.lang.String) -> parse
    java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.commons.math3.fraction.ProperBigFractionFormat -> org.apache.commons.math3.fraction.ProperBigFractionFormat:
    long serialVersionUID -> serialVersionUID
    java.text.NumberFormat wholeFormat -> wholeFormat
    java.lang.StringBuffer format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.text.NumberFormat getWholeFormat() -> getWholeFormat
    org.apache.commons.math3.fraction.BigFraction parse(java.lang.String,java.text.ParsePosition) -> parse
    void setWholeFormat(java.text.NumberFormat) -> setWholeFormat
    java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.commons.math3.fraction.ProperFractionFormat -> org.apache.commons.math3.fraction.ProperFractionFormat:
    long serialVersionUID -> serialVersionUID
    java.text.NumberFormat wholeFormat -> wholeFormat
    java.lang.StringBuffer format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.text.NumberFormat getWholeFormat() -> getWholeFormat
    org.apache.commons.math3.fraction.Fraction parse(java.lang.String,java.text.ParsePosition) -> parse
    void setWholeFormat(java.text.NumberFormat) -> setWholeFormat
    java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.commons.math3.genetics.AbstractListChromosome -> org.apache.commons.math3.genetics.AbstractListChromosome:
    java.util.List representation -> representation
    void checkValidity(java.util.List) -> checkValidity
    java.util.List getRepresentation() -> getRepresentation
    int getLength() -> getLength
    org.apache.commons.math3.genetics.AbstractListChromosome newFixedLengthChromosome(java.util.List) -> newFixedLengthChromosome
    java.lang.String toString() -> toString
org.apache.commons.math3.genetics.BinaryChromosome -> org.apache.commons.math3.genetics.BinaryChromosome:
    void checkValidity(java.util.List) -> checkValidity
    java.util.List randomBinaryRepresentation(int) -> randomBinaryRepresentation
    boolean isSame(org.apache.commons.math3.genetics.Chromosome) -> isSame
org.apache.commons.math3.genetics.BinaryMutation -> org.apache.commons.math3.genetics.BinaryMutation:
    org.apache.commons.math3.genetics.Chromosome mutate(org.apache.commons.math3.genetics.Chromosome) -> mutate
org.apache.commons.math3.genetics.Chromosome -> org.apache.commons.math3.genetics.Chromosome:
    double NO_FITNESS -> NO_FITNESS
    double fitness -> fitness
    double getFitness() -> getFitness
    int compareTo(org.apache.commons.math3.genetics.Chromosome) -> compareTo
    boolean isSame(org.apache.commons.math3.genetics.Chromosome) -> isSame
    org.apache.commons.math3.genetics.Chromosome findSameChromosome(org.apache.commons.math3.genetics.Population) -> findSameChromosome
    void searchForFitnessUpdate(org.apache.commons.math3.genetics.Population) -> searchForFitnessUpdate
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.genetics.ChromosomePair -> org.apache.commons.math3.genetics.ChromosomePair:
    org.apache.commons.math3.genetics.Chromosome first -> first
    org.apache.commons.math3.genetics.Chromosome second -> second
    org.apache.commons.math3.genetics.Chromosome getFirst() -> getFirst
    org.apache.commons.math3.genetics.Chromosome getSecond() -> getSecond
    java.lang.String toString() -> toString
org.apache.commons.math3.genetics.CrossoverPolicy -> org.apache.commons.math3.genetics.CrossoverPolicy:
    org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome) -> crossover
org.apache.commons.math3.genetics.CycleCrossover -> org.apache.commons.math3.genetics.CycleCrossover:
    boolean randomStart -> randomStart
    boolean isRandomStart() -> isRandomStart
    org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome) -> crossover
    org.apache.commons.math3.genetics.ChromosomePair mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome) -> mate
org.apache.commons.math3.genetics.ElitisticListPopulation -> org.apache.commons.math3.genetics.ElitisticListPopulation:
    double elitismRate -> elitismRate
    org.apache.commons.math3.genetics.Population nextGeneration() -> nextGeneration
    void setElitismRate(double) -> setElitismRate
    double getElitismRate() -> getElitismRate
org.apache.commons.math3.genetics.Fitness -> org.apache.commons.math3.genetics.Fitness:
    double fitness() -> fitness
org.apache.commons.math3.genetics.FixedElapsedTime -> org.apache.commons.math3.genetics.FixedElapsedTime:
    long maxTimePeriod -> maxTimePeriod
    long endTime -> endTime
    boolean isSatisfied(org.apache.commons.math3.genetics.Population) -> isSatisfied
org.apache.commons.math3.genetics.FixedGenerationCount -> org.apache.commons.math3.genetics.FixedGenerationCount:
    int numGenerations -> numGenerations
    int maxGenerations -> maxGenerations
    boolean isSatisfied(org.apache.commons.math3.genetics.Population) -> isSatisfied
    int getNumGenerations() -> getNumGenerations
org.apache.commons.math3.genetics.GeneticAlgorithm -> org.apache.commons.math3.genetics.GeneticAlgorithm:
    org.apache.commons.math3.random.RandomGenerator randomGenerator -> randomGenerator
    org.apache.commons.math3.genetics.CrossoverPolicy crossoverPolicy -> crossoverPolicy
    double crossoverRate -> crossoverRate
    org.apache.commons.math3.genetics.MutationPolicy mutationPolicy -> mutationPolicy
    double mutationRate -> mutationRate
    org.apache.commons.math3.genetics.SelectionPolicy selectionPolicy -> selectionPolicy
    int generationsEvolved -> generationsEvolved
    void setRandomGenerator(org.apache.commons.math3.random.RandomGenerator) -> setRandomGenerator
    org.apache.commons.math3.random.RandomGenerator getRandomGenerator() -> getRandomGenerator
    org.apache.commons.math3.genetics.Population evolve(org.apache.commons.math3.genetics.Population,org.apache.commons.math3.genetics.StoppingCondition) -> evolve
    org.apache.commons.math3.genetics.Population nextGeneration(org.apache.commons.math3.genetics.Population) -> nextGeneration
    org.apache.commons.math3.genetics.CrossoverPolicy getCrossoverPolicy() -> getCrossoverPolicy
    double getCrossoverRate() -> getCrossoverRate
    org.apache.commons.math3.genetics.MutationPolicy getMutationPolicy() -> getMutationPolicy
    double getMutationRate() -> getMutationRate
    org.apache.commons.math3.genetics.SelectionPolicy getSelectionPolicy() -> getSelectionPolicy
    int getGenerationsEvolved() -> getGenerationsEvolved
org.apache.commons.math3.genetics.InvalidRepresentationException -> org.apache.commons.math3.genetics.InvalidRepresentationException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.genetics.ListPopulation -> org.apache.commons.math3.genetics.ListPopulation:
    java.util.List chromosomes -> chromosomes
    int populationLimit -> populationLimit
    void setChromosomes(java.util.List) -> setChromosomes
    void addChromosomes(java.util.Collection) -> addChromosomes
    java.util.List getChromosomes() -> getChromosomes
    java.util.List getChromosomeList() -> getChromosomeList
    void addChromosome(org.apache.commons.math3.genetics.Chromosome) -> addChromosome
    org.apache.commons.math3.genetics.Chromosome getFittestChromosome() -> getFittestChromosome
    int getPopulationLimit() -> getPopulationLimit
    void setPopulationLimit(int) -> setPopulationLimit
    int getPopulationSize() -> getPopulationSize
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
org.apache.commons.math3.genetics.MutationPolicy -> org.apache.commons.math3.genetics.MutationPolicy:
    org.apache.commons.math3.genetics.Chromosome mutate(org.apache.commons.math3.genetics.Chromosome) -> mutate
org.apache.commons.math3.genetics.NPointCrossover -> org.apache.commons.math3.genetics.NPointCrossover:
    int crossoverPoints -> crossoverPoints
    int getCrossoverPoints() -> getCrossoverPoints
    org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome) -> crossover
    org.apache.commons.math3.genetics.ChromosomePair mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome) -> mate
org.apache.commons.math3.genetics.OnePointCrossover -> org.apache.commons.math3.genetics.OnePointCrossover:
    org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome) -> crossover
    org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome) -> crossover
org.apache.commons.math3.genetics.OrderedCrossover -> org.apache.commons.math3.genetics.OrderedCrossover:
    org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome) -> crossover
    org.apache.commons.math3.genetics.ChromosomePair mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome) -> mate
org.apache.commons.math3.genetics.PermutationChromosome -> org.apache.commons.math3.genetics.PermutationChromosome:
    java.util.List decode(java.util.List) -> decode
org.apache.commons.math3.genetics.Population -> org.apache.commons.math3.genetics.Population:
    int getPopulationSize() -> getPopulationSize
    int getPopulationLimit() -> getPopulationLimit
    org.apache.commons.math3.genetics.Population nextGeneration() -> nextGeneration
    void addChromosome(org.apache.commons.math3.genetics.Chromosome) -> addChromosome
    org.apache.commons.math3.genetics.Chromosome getFittestChromosome() -> getFittestChromosome
org.apache.commons.math3.genetics.RandomKey -> org.apache.commons.math3.genetics.RandomKey:
    java.util.List sortedRepresentation -> sortedRepresentation
    java.util.List baseSeqPermutation -> baseSeqPermutation
    java.util.List decode(java.util.List) -> decode
    java.util.List decodeGeneric(java.util.List,java.util.List,java.util.List) -> decodeGeneric
    boolean isSame(org.apache.commons.math3.genetics.Chromosome) -> isSame
    void checkValidity(java.util.List) -> checkValidity
    java.util.List randomPermutation(int) -> randomPermutation
    java.util.List identityPermutation(int) -> identityPermutation
    java.util.List comparatorPermutation(java.util.List,java.util.Comparator) -> comparatorPermutation
    java.util.List inducedPermutation(java.util.List,java.util.List) -> inducedPermutation
    java.lang.String toString() -> toString
    java.util.List baseSequence(int) -> baseSequence
org.apache.commons.math3.genetics.RandomKeyMutation -> org.apache.commons.math3.genetics.RandomKeyMutation:
    org.apache.commons.math3.genetics.Chromosome mutate(org.apache.commons.math3.genetics.Chromosome) -> mutate
org.apache.commons.math3.genetics.SelectionPolicy -> org.apache.commons.math3.genetics.SelectionPolicy:
    org.apache.commons.math3.genetics.ChromosomePair select(org.apache.commons.math3.genetics.Population) -> select
org.apache.commons.math3.genetics.StoppingCondition -> org.apache.commons.math3.genetics.StoppingCondition:
    boolean isSatisfied(org.apache.commons.math3.genetics.Population) -> isSatisfied
org.apache.commons.math3.genetics.TournamentSelection -> org.apache.commons.math3.genetics.TournamentSelection:
    int arity -> arity
    org.apache.commons.math3.genetics.ChromosomePair select(org.apache.commons.math3.genetics.Population) -> select
    org.apache.commons.math3.genetics.Chromosome tournament(org.apache.commons.math3.genetics.ListPopulation) -> tournament
    int getArity() -> getArity
    void setArity(int) -> setArity
org.apache.commons.math3.genetics.TournamentSelection$1 -> org.apache.commons.math3.genetics.TournamentSelection$1:
    org.apache.commons.math3.genetics.TournamentSelection this$0 -> this$0
    org.apache.commons.math3.genetics.Population nextGeneration() -> nextGeneration
org.apache.commons.math3.genetics.UniformCrossover -> org.apache.commons.math3.genetics.UniformCrossover:
    double ratio -> ratio
    double getRatio() -> getRatio
    org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome) -> crossover
    org.apache.commons.math3.genetics.ChromosomePair mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome) -> mate
org.apache.commons.math3.geometry.Point -> org.apache.commons.math3.geometry.Point:
    org.apache.commons.math3.geometry.Space getSpace() -> getSpace
    boolean isNaN() -> isNaN
    double distance(org.apache.commons.math3.geometry.Point) -> distance
org.apache.commons.math3.geometry.Space -> org.apache.commons.math3.geometry.Space:
    int getDimension() -> getDimension
    org.apache.commons.math3.geometry.Space getSubSpace() -> getSubSpace
org.apache.commons.math3.geometry.Vector -> org.apache.commons.math3.geometry.Vector:
    org.apache.commons.math3.geometry.Vector getZero() -> getZero
    double getNorm1() -> getNorm1
    double getNorm() -> getNorm
    double getNormSq() -> getNormSq
    double getNormInf() -> getNormInf
    org.apache.commons.math3.geometry.Vector add(org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector add(double,org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector subtract(org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector subtract(double,org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector negate() -> negate
    org.apache.commons.math3.geometry.Vector normalize() -> normalize
    org.apache.commons.math3.geometry.Vector scalarMultiply(double) -> scalarMultiply
    boolean isInfinite() -> isInfinite
    double distance1(org.apache.commons.math3.geometry.Vector) -> distance1
    double distance(org.apache.commons.math3.geometry.Vector) -> distance
    double distanceInf(org.apache.commons.math3.geometry.Vector) -> distanceInf
    double distanceSq(org.apache.commons.math3.geometry.Vector) -> distanceSq
    double dotProduct(org.apache.commons.math3.geometry.Vector) -> dotProduct
    java.lang.String toString(java.text.NumberFormat) -> toString
org.apache.commons.math3.geometry.VectorFormat -> org.apache.commons.math3.geometry.VectorFormat:
    java.lang.String DEFAULT_PREFIX -> DEFAULT_PREFIX
    java.lang.String DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    java.lang.String DEFAULT_SEPARATOR -> DEFAULT_SEPARATOR
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.lang.String separator -> separator
    java.lang.String trimmedPrefix -> trimmedPrefix
    java.lang.String trimmedSuffix -> trimmedSuffix
    java.lang.String trimmedSeparator -> trimmedSeparator
    java.text.NumberFormat format -> format
    java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.String getSeparator() -> getSeparator
    java.text.NumberFormat getFormat() -> getFormat
    java.lang.String format(org.apache.commons.math3.geometry.Vector) -> format
    java.lang.StringBuffer format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(java.lang.StringBuffer,java.text.FieldPosition,double[]) -> format
    org.apache.commons.math3.geometry.Vector parse(java.lang.String) -> parse
    org.apache.commons.math3.geometry.Vector parse(java.lang.String,java.text.ParsePosition) -> parse
    double[] parseCoordinates(int,java.lang.String,java.text.ParsePosition) -> parseCoordinates
org.apache.commons.math3.geometry.enclosing.Encloser -> org.apache.commons.math3.geometry.enclosing.Encloser:
    org.apache.commons.math3.geometry.enclosing.EnclosingBall enclose(java.lang.Iterable) -> enclose
org.apache.commons.math3.geometry.enclosing.EnclosingBall -> org.apache.commons.math3.geometry.enclosing.EnclosingBall:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.Point center -> center
    double radius -> radius
    org.apache.commons.math3.geometry.Point[] support -> support
    org.apache.commons.math3.geometry.Point getCenter() -> getCenter
    double getRadius() -> getRadius
    org.apache.commons.math3.geometry.Point[] getSupport() -> getSupport
    int getSupportSize() -> getSupportSize
    boolean contains(org.apache.commons.math3.geometry.Point) -> contains
    boolean contains(org.apache.commons.math3.geometry.Point,double) -> contains
org.apache.commons.math3.geometry.enclosing.SupportBallGenerator -> org.apache.commons.math3.geometry.enclosing.SupportBallGenerator:
    org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List) -> ballOnSupport
org.apache.commons.math3.geometry.enclosing.WelzlEncloser -> org.apache.commons.math3.geometry.enclosing.WelzlEncloser:
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator -> generator
    org.apache.commons.math3.geometry.enclosing.EnclosingBall enclose(java.lang.Iterable) -> enclose
    org.apache.commons.math3.geometry.enclosing.EnclosingBall pivotingBall(java.lang.Iterable) -> pivotingBall
    org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List,int,java.util.List) -> moveToFrontBall
    org.apache.commons.math3.geometry.Point selectFarthest(java.lang.Iterable,org.apache.commons.math3.geometry.enclosing.EnclosingBall) -> selectFarthest
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D -> org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D getInstance() -> getInstance
    int getDimension() -> getDimension
    org.apache.commons.math3.geometry.Space getSubSpace() -> getSubSpace
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$1 -> org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$1:
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder -> org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder:
    org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D INSTANCE -> INSTANCE
    org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D access$000() -> access$000
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException -> org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.geometry.euclidean.oned.Interval -> org.apache.commons.math3.geometry.euclidean.oned.Interval:
    double lower -> lower
    double upper -> upper
    double getInf() -> getInf
    double getLower() -> getLower
    double getSup() -> getSup
    double getUpper() -> getUpper
    double getSize() -> getSize
    double getLength() -> getLength
    double getBarycenter() -> getBarycenter
    double getMidPoint() -> getMidPoint
    org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(double,double) -> checkPoint
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet -> org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    org.apache.commons.math3.geometry.partitioning.BSPTree buildTree(double,double,double) -> buildTree
    org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    void computeGeometricalProperties() -> computeGeometricalProperties
    double getInf() -> getInf
    double getSup() -> getSup
    org.apache.commons.math3.geometry.partitioning.BoundaryProjection projectToBoundary(org.apache.commons.math3.geometry.Point) -> projectToBoundary
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D finiteOrNullPoint(double) -> finiteOrNullPoint
    java.util.List asList() -> asList
    org.apache.commons.math3.geometry.partitioning.BSPTree getFirstLeaf(org.apache.commons.math3.geometry.partitioning.BSPTree) -> getFirstLeaf
    org.apache.commons.math3.geometry.partitioning.BSPTree getFirstIntervalBoundary() -> getFirstIntervalBoundary
    boolean isIntervalStart(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isIntervalStart
    boolean isIntervalEnd(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isIntervalEnd
    org.apache.commons.math3.geometry.partitioning.BSPTree nextInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> nextInternalNode
    org.apache.commons.math3.geometry.partitioning.BSPTree previousInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> previousInternalNode
    org.apache.commons.math3.geometry.partitioning.BSPTree leafBefore(org.apache.commons.math3.geometry.partitioning.BSPTree) -> leafBefore
    org.apache.commons.math3.geometry.partitioning.BSPTree leafAfter(org.apache.commons.math3.geometry.partitioning.BSPTree) -> leafAfter
    boolean isBeforeParent(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isBeforeParent
    boolean isAfterParent(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isAfterParent
    org.apache.commons.math3.geometry.partitioning.BSPTree childBefore(org.apache.commons.math3.geometry.partitioning.BSPTree) -> childBefore
    org.apache.commons.math3.geometry.partitioning.BSPTree childAfter(org.apache.commons.math3.geometry.partitioning.BSPTree) -> childAfter
    boolean isDirect(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isDirect
    double getAngle(org.apache.commons.math3.geometry.partitioning.BSPTree) -> getAngle
    java.util.Iterator iterator() -> iterator
    org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.BSPTree access$000(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet) -> access$000
    org.apache.commons.math3.geometry.partitioning.BSPTree access$100(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$100
    boolean access$200(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$200
    double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$300
    boolean access$400(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$400
    org.apache.commons.math3.geometry.partitioning.BSPTree access$500(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$500
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator -> org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator:
    org.apache.commons.math3.geometry.partitioning.BSPTree current -> current
    double[] pending -> pending
    org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0 -> this$0
    void selectPending() -> selectPending
    boolean hasNext() -> hasNext
    double[] next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint -> org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D location -> location
    boolean direct -> direct
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint copySelf() -> copySelf
    double getOffset(org.apache.commons.math3.geometry.Vector) -> getOffset
    double getOffset(org.apache.commons.math3.geometry.Point) -> getOffset
    org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet wholeSpace() -> wholeSpace
    boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> sameOrientationAs
    org.apache.commons.math3.geometry.Point project(org.apache.commons.math3.geometry.Point) -> project
    double getTolerance() -> getTolerance
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D getLocation() -> getLocation
    boolean isDirect() -> isDirect
    void revertSelf() -> revertSelf
    org.apache.commons.math3.geometry.partitioning.Region wholeSpace() -> wholeSpace
    org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.partitioning.Hyperplane copySelf() -> copySelf
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint -> org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:
    double getSize() -> getSize
    boolean isEmpty() -> isEmpty
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> split
org.apache.commons.math3.geometry.euclidean.oned.Vector1D -> org.apache.commons.math3.geometry.euclidean.oned.Vector1D:
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D ZERO -> ZERO
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D ONE -> ONE
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D NaN -> NaN
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D POSITIVE_INFINITY -> POSITIVE_INFINITY
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D NEGATIVE_INFINITY -> NEGATIVE_INFINITY
    long serialVersionUID -> serialVersionUID
    double x -> x
    double getX() -> getX
    org.apache.commons.math3.geometry.Space getSpace() -> getSpace
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D getZero() -> getZero
    double getNorm1() -> getNorm1
    double getNorm() -> getNorm
    double getNormSq() -> getNormSq
    double getNormInf() -> getNormInf
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D add(org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D add(double,org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D subtract(org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D subtract(double,org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D normalize() -> normalize
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D negate() -> negate
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D scalarMultiply(double) -> scalarMultiply
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    double distance1(org.apache.commons.math3.geometry.Vector) -> distance1
    double distance(org.apache.commons.math3.geometry.Vector) -> distance
    double distance(org.apache.commons.math3.geometry.Point) -> distance
    double distanceInf(org.apache.commons.math3.geometry.Vector) -> distanceInf
    double distanceSq(org.apache.commons.math3.geometry.Vector) -> distanceSq
    double dotProduct(org.apache.commons.math3.geometry.Vector) -> dotProduct
    double distance(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) -> distance
    double distanceInf(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) -> distanceInf
    double distanceSq(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) -> distanceSq
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.text.NumberFormat) -> toString
    org.apache.commons.math3.geometry.Vector scalarMultiply(double) -> scalarMultiply
    org.apache.commons.math3.geometry.Vector normalize() -> normalize
    org.apache.commons.math3.geometry.Vector negate() -> negate
    org.apache.commons.math3.geometry.Vector subtract(double,org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector subtract(org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector add(double,org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector add(org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector getZero() -> getZero
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat -> org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:
    org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat getInstance() -> getInstance
    org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat getInstance(java.util.Locale) -> getInstance
    java.lang.StringBuffer format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) -> format
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D parse(java.lang.String) -> parse
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D parse(java.lang.String,java.text.ParsePosition) -> parse
    org.apache.commons.math3.geometry.Vector parse(java.lang.String,java.text.ParsePosition) -> parse
    org.apache.commons.math3.geometry.Vector parse(java.lang.String) -> parse
org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException -> org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D -> org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D getInstance() -> getInstance
    int getDimension() -> getDimension
    org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D getSubSpace() -> getSubSpace
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.math3.geometry.Space getSubSpace() -> getSubSpace
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$1 -> org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$1:
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$LazyHolder -> org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$LazyHolder:
    org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D INSTANCE -> INSTANCE
    org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D access$000() -> access$000
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation -> org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.RealFieldElement q0 -> q0
    org.apache.commons.math3.RealFieldElement q1 -> q1
    org.apache.commons.math3.RealFieldElement q2 -> q2
    org.apache.commons.math3.RealFieldElement q3 -> q3
    org.apache.commons.math3.RealFieldElement[] mat2quat(org.apache.commons.math3.RealFieldElement[][]) -> mat2quat
    org.apache.commons.math3.geometry.euclidean.threed.FieldRotation revert() -> revert
    org.apache.commons.math3.RealFieldElement getQ0() -> getQ0
    org.apache.commons.math3.RealFieldElement getQ1() -> getQ1
    org.apache.commons.math3.RealFieldElement getQ2() -> getQ2
    org.apache.commons.math3.RealFieldElement getQ3() -> getQ3
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D getAxis() -> getAxis
    org.apache.commons.math3.RealFieldElement getAngle() -> getAngle
    org.apache.commons.math3.RealFieldElement[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder) -> getAngles
    org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement) -> buildArray
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double) -> vector
    org.apache.commons.math3.RealFieldElement[][] getMatrix() -> getMatrix
    org.apache.commons.math3.geometry.euclidean.threed.Rotation toRotation() -> toRotation
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> applyTo
    void applyTo(org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[]) -> applyTo
    void applyTo(double[],org.apache.commons.math3.RealFieldElement[]) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> applyInverseTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> applyInverseTo
    void applyInverseTo(org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[]) -> applyInverseTo
    void applyInverseTo(double[],org.apache.commons.math3.RealFieldElement[]) -> applyInverseTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> applyInverseTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation) -> applyInverseTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> applyInverseTo
    org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation) -> applyInverseTo
    org.apache.commons.math3.RealFieldElement[][] orthogonalizeMatrix(org.apache.commons.math3.RealFieldElement[][],double) -> orthogonalizeMatrix
    org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation) -> distance
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D -> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.RealFieldElement x -> x
    org.apache.commons.math3.RealFieldElement y -> y
    org.apache.commons.math3.RealFieldElement z -> z
    org.apache.commons.math3.RealFieldElement getX() -> getX
    org.apache.commons.math3.RealFieldElement getY() -> getY
    org.apache.commons.math3.RealFieldElement getZ() -> getZ
    org.apache.commons.math3.RealFieldElement[] toArray() -> toArray
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D() -> toVector3D
    org.apache.commons.math3.RealFieldElement getNorm1() -> getNorm1
    org.apache.commons.math3.RealFieldElement getNorm() -> getNorm
    org.apache.commons.math3.RealFieldElement getNormSq() -> getNormSq
    org.apache.commons.math3.RealFieldElement getNormInf() -> getNormInf
    org.apache.commons.math3.RealFieldElement getAlpha() -> getAlpha
    org.apache.commons.math3.RealFieldElement getDelta() -> getDelta
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> add
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> add
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> add
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> add
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> add
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> add
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize() -> normalize
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D orthogonal() -> orthogonal
    org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> angle
    org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> angle
    org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> angle
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D negate() -> negate
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(org.apache.commons.math3.RealFieldElement) -> scalarMultiply
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(double) -> scalarMultiply
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> dotProduct
    org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> dotProduct
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> crossProduct
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> crossProduct
    org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distance1
    org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distance1
    org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distance
    org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distance
    org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distanceInf
    org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distanceInf
    org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distanceSq
    org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distanceSq
    org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> dotProduct
    org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> dotProduct
    org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> dotProduct
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> crossProduct
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> crossProduct
    org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> crossProduct
    org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distance1
    org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distance1
    org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distance1
    org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distance
    org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distance
    org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distance
    org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distanceInf
    org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distanceInf
    org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distanceInf
    org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distanceSq
    org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distanceSq
    org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) -> distanceSq
    java.lang.String toString() -> toString
    java.lang.String toString(java.text.NumberFormat) -> toString
org.apache.commons.math3.geometry.euclidean.threed.Line -> org.apache.commons.math3.geometry.euclidean.threed.Line:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D direction -> direction
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D zero -> zero
    double tolerance -> tolerance
    void reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> reset
    double getTolerance() -> getTolerance
    org.apache.commons.math3.geometry.euclidean.threed.Line revert() -> revert
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getDirection() -> getDirection
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getOrigin() -> getOrigin
    double getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> getAbscissa
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D pointAt(double) -> pointAt
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D toSubSpace(org.apache.commons.math3.geometry.Vector) -> toSubSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D toSpace(org.apache.commons.math3.geometry.Vector) -> toSpace
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    boolean isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line) -> isSimilarTo
    boolean contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> contains
    double distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distance
    double distance(org.apache.commons.math3.geometry.euclidean.threed.Line) -> distance
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line) -> closestPoint
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.Line) -> intersection
    org.apache.commons.math3.geometry.euclidean.threed.SubLine wholeLine() -> wholeLine
    org.apache.commons.math3.geometry.Point toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    org.apache.commons.math3.geometry.Point toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException -> org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor -> org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D u -> u
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D v -> v
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D w -> w
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] getOutline(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet) -> getOutline
    boolean pointIsBetween(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[],int,int) -> pointIsBetween
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$000(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor) -> access$000
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$100(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor) -> access$100
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$200(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor) -> access$200
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector -> org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector:
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet projected -> projected
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    void addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) -> addContribution
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet getProjected() -> getProjected
org.apache.commons.math3.geometry.euclidean.threed.Plane -> org.apache.commons.math3.geometry.euclidean.threed.Plane:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    double originOffset -> originOffset
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D origin -> origin
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D u -> u
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D v -> v
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D w -> w
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.euclidean.threed.Plane copySelf() -> copySelf
    void reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> reset
    void reset(org.apache.commons.math3.geometry.euclidean.threed.Plane) -> reset
    void setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> setNormal
    void setFrame() -> setFrame
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getOrigin() -> getOrigin
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getNormal() -> getNormal
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getU() -> getU
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getV() -> getV
    org.apache.commons.math3.geometry.Point project(org.apache.commons.math3.geometry.Point) -> project
    double getTolerance() -> getTolerance
    void revertSelf() -> revertSelf
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Vector) -> toSubSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D toSpace(org.apache.commons.math3.geometry.Vector) -> toSpace
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) -> getPointAt
    boolean isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Plane) -> isSimilarTo
    org.apache.commons.math3.geometry.euclidean.threed.Plane rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> rotate
    org.apache.commons.math3.geometry.euclidean.threed.Plane translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> translate
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.Line) -> intersection
    org.apache.commons.math3.geometry.euclidean.threed.Line intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) -> intersection
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) -> intersection
    org.apache.commons.math3.geometry.euclidean.threed.SubPlane wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet wholeSpace() -> wholeSpace
    boolean contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> contains
    double getOffset(org.apache.commons.math3.geometry.euclidean.threed.Plane) -> getOffset
    double getOffset(org.apache.commons.math3.geometry.Vector) -> getOffset
    double getOffset(org.apache.commons.math3.geometry.Point) -> getOffset
    boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> sameOrientationAs
    org.apache.commons.math3.geometry.partitioning.Region wholeSpace() -> wholeSpace
    org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.partitioning.Hyperplane copySelf() -> copySelf
    org.apache.commons.math3.geometry.Point toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    org.apache.commons.math3.geometry.Point toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet -> org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    org.apache.commons.math3.geometry.partitioning.BSPTree buildBoundary(double,double,double,double,double,double,double) -> buildBoundary
    org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    void computeGeometricalProperties() -> computeGeometricalProperties
    org.apache.commons.math3.geometry.partitioning.SubHyperplane firstIntersection(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Line) -> firstIntersection
    org.apache.commons.math3.geometry.partitioning.SubHyperplane recurseFirstIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Line) -> recurseFirstIntersection
    org.apache.commons.math3.geometry.partitioning.SubHyperplane boundaryFacet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.partitioning.BSPTree) -> boundaryFacet
    org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> rotate
    org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> translate
    org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    void access$000(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double) -> access$000
    void access$100(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Point) -> access$100
    void access$200(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double) -> access$200
    void access$300(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Point) -> access$300
    void access$400(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double) -> access$400
    void access$500(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Point) -> access$500
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor -> org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor:
    org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    void addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) -> addContribution
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform -> org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D center -> center
    org.apache.commons.math3.geometry.euclidean.threed.Rotation rotation -> rotation
    org.apache.commons.math3.geometry.euclidean.threed.Plane cachedOriginal -> cachedOriginal
    org.apache.commons.math3.geometry.partitioning.Transform cachedTransform -> cachedTransform
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D apply(org.apache.commons.math3.geometry.Point) -> apply
    org.apache.commons.math3.geometry.euclidean.threed.Plane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.SubHyperplane apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point) -> apply
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform -> org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D translation -> translation
    org.apache.commons.math3.geometry.euclidean.threed.Plane cachedOriginal -> cachedOriginal
    org.apache.commons.math3.geometry.partitioning.Transform cachedTransform -> cachedTransform
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D apply(org.apache.commons.math3.geometry.Point) -> apply
    org.apache.commons.math3.geometry.euclidean.threed.Plane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.SubHyperplane apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point) -> apply
org.apache.commons.math3.geometry.euclidean.threed.Rotation -> org.apache.commons.math3.geometry.euclidean.threed.Rotation:
    org.apache.commons.math3.geometry.euclidean.threed.Rotation IDENTITY -> IDENTITY
    long serialVersionUID -> serialVersionUID
    double q0 -> q0
    double q1 -> q1
    double q2 -> q2
    double q3 -> q3
    double[] mat2quat(double[][]) -> mat2quat
    org.apache.commons.math3.geometry.euclidean.threed.Rotation revert() -> revert
    double getQ0() -> getQ0
    double getQ1() -> getQ1
    double getQ2() -> getQ2
    double getQ3() -> getQ3
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getAxis() -> getAxis
    double getAngle() -> getAngle
    double[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder) -> getAngles
    double[][] getMatrix() -> getMatrix
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> applyTo
    void applyTo(double[],double[]) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> applyInverseTo
    void applyInverseTo(double[],double[]) -> applyInverseTo
    org.apache.commons.math3.geometry.euclidean.threed.Rotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> applyTo
    org.apache.commons.math3.geometry.euclidean.threed.Rotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> applyInverseTo
    double[][] orthogonalizeMatrix(double[][],double) -> orthogonalizeMatrix
    double distance(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> distance
org.apache.commons.math3.geometry.euclidean.threed.RotationOrder -> org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XYZ -> XYZ
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XZY -> XZY
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YXZ -> YXZ
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YZX -> YZX
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZXY -> ZXY
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZYX -> ZYX
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XYX -> XYX
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XZX -> XZX
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YXY -> YXY
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YZY -> YZY
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZXZ -> ZXZ
    org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZYZ -> ZYZ
    java.lang.String name -> name
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D a1 -> a1
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D a2 -> a2
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D a3 -> a3
    java.lang.String toString() -> toString
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getA1() -> getA1
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getA2() -> getA2
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getA3() -> getA3
org.apache.commons.math3.geometry.euclidean.threed.Segment -> org.apache.commons.math3.geometry.euclidean.threed.Segment:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D start -> start
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D end -> end
    org.apache.commons.math3.geometry.euclidean.threed.Line line -> line
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getStart() -> getStart
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getEnd() -> getEnd
    org.apache.commons.math3.geometry.euclidean.threed.Line getLine() -> getLine
org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator -> org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator:
    org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List) -> ballOnSupport
    org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[]) -> minor
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates -> org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D v -> v
    double r -> r
    double theta -> theta
    double phi -> phi
    double[][] jacobian -> jacobian
    double[][] rHessian -> rHessian
    double[][] thetaHessian -> thetaHessian
    double[][] phiHessian -> phiHessian
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getCartesian() -> getCartesian
    double getR() -> getR
    double getTheta() -> getTheta
    double getPhi() -> getPhi
    double[] toCartesianGradient(double[]) -> toCartesianGradient
    double[][] toCartesianHessian(double[][],double[]) -> toCartesianHessian
    void computeJacobian() -> computeJacobian
    void computeHessians() -> computeHessians
    java.lang.Object writeReplace() -> writeReplace
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates$DataTransferObject -> org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates$DataTransferObject:
    long serialVersionUID -> serialVersionUID
    double x -> x
    double y -> y
    double z -> z
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.geometry.euclidean.threed.SubLine -> org.apache.commons.math3.geometry.euclidean.threed.SubLine:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    org.apache.commons.math3.geometry.euclidean.threed.Line line -> line
    org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet remainingRegion -> remainingRegion
    java.util.List getSegments() -> getSegments
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine,boolean) -> intersection
    org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet buildIntervalSet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double) -> buildIntervalSet
org.apache.commons.math3.geometry.euclidean.threed.SubPlane -> org.apache.commons.math3.geometry.euclidean.threed.SubPlane:
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> split
org.apache.commons.math3.geometry.euclidean.threed.Vector3D -> org.apache.commons.math3.geometry.euclidean.threed.Vector3D:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D ZERO -> ZERO
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I -> PLUS_I
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D MINUS_I -> MINUS_I
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J -> PLUS_J
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D MINUS_J -> MINUS_J
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K -> PLUS_K
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D MINUS_K -> MINUS_K
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D NaN -> NaN
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D POSITIVE_INFINITY -> POSITIVE_INFINITY
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D NEGATIVE_INFINITY -> NEGATIVE_INFINITY
    long serialVersionUID -> serialVersionUID
    double x -> x
    double y -> y
    double z -> z
    double getX() -> getX
    double getY() -> getY
    double getZ() -> getZ
    double[] toArray() -> toArray
    org.apache.commons.math3.geometry.Space getSpace() -> getSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getZero() -> getZero
    double getNorm1() -> getNorm1
    double getNorm() -> getNorm
    double getNormSq() -> getNormSq
    double getNormInf() -> getNormInf
    double getAlpha() -> getAlpha
    double getDelta() -> getDelta
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D add(org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D add(double,org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D subtract(org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D subtract(double,org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D normalize() -> normalize
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D orthogonal() -> orthogonal
    double angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> angle
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D negate() -> negate
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D scalarMultiply(double) -> scalarMultiply
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    double dotProduct(org.apache.commons.math3.geometry.Vector) -> dotProduct
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D crossProduct(org.apache.commons.math3.geometry.Vector) -> crossProduct
    double distance1(org.apache.commons.math3.geometry.Vector) -> distance1
    double distance(org.apache.commons.math3.geometry.Vector) -> distance
    double distance(org.apache.commons.math3.geometry.Point) -> distance
    double distanceInf(org.apache.commons.math3.geometry.Vector) -> distanceInf
    double distanceSq(org.apache.commons.math3.geometry.Vector) -> distanceSq
    double dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> dotProduct
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> crossProduct
    double distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distance1
    double distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distance
    double distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distanceInf
    double distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> distanceSq
    java.lang.String toString() -> toString
    java.lang.String toString(java.text.NumberFormat) -> toString
    org.apache.commons.math3.geometry.Vector scalarMultiply(double) -> scalarMultiply
    org.apache.commons.math3.geometry.Vector normalize() -> normalize
    org.apache.commons.math3.geometry.Vector negate() -> negate
    org.apache.commons.math3.geometry.Vector subtract(double,org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector subtract(org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector add(double,org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector add(org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector getZero() -> getZero
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat -> org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat getInstance() -> getInstance
    org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat getInstance(java.util.Locale) -> getInstance
    java.lang.StringBuffer format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) -> format
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D parse(java.lang.String) -> parse
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D parse(java.lang.String,java.text.ParsePosition) -> parse
    org.apache.commons.math3.geometry.Vector parse(java.lang.String,java.text.ParsePosition) -> parse
    org.apache.commons.math3.geometry.Vector parse(java.lang.String) -> parse
org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator -> org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator:
    org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List) -> ballOnSupport
    org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[]) -> minor
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D -> org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D getInstance() -> getInstance
    int getDimension() -> getDimension
    org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D getSubSpace() -> getSubSpace
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.math3.geometry.Space getSubSpace() -> getSubSpace
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$1 -> org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$1:
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$LazyHolder -> org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$LazyHolder:
    org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D INSTANCE -> INSTANCE
    org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D access$000() -> access$000
org.apache.commons.math3.geometry.euclidean.twod.Line -> org.apache.commons.math3.geometry.euclidean.twod.Line:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    double angle -> angle
    double cos -> cos
    double sin -> sin
    double originOffset -> originOffset
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.euclidean.twod.Line copySelf() -> copySelf
    void reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> reset
    void reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) -> reset
    void revertSelf() -> revertSelf
    org.apache.commons.math3.geometry.euclidean.twod.Line getReverse() -> getReverse
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D toSubSpace(org.apache.commons.math3.geometry.Vector) -> toSubSpace
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSpace(org.apache.commons.math3.geometry.Vector) -> toSpace
    org.apache.commons.math3.geometry.euclidean.oned.Vector1D toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D intersection(org.apache.commons.math3.geometry.euclidean.twod.Line) -> intersection
    org.apache.commons.math3.geometry.Point project(org.apache.commons.math3.geometry.Point) -> project
    double getTolerance() -> getTolerance
    org.apache.commons.math3.geometry.euclidean.twod.SubLine wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet wholeSpace() -> wholeSpace
    double getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line) -> getOffset
    double getOffset(org.apache.commons.math3.geometry.Vector) -> getOffset
    double getOffset(org.apache.commons.math3.geometry.Point) -> getOffset
    boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> sameOrientationAs
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D getPointAt(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double) -> getPointAt
    boolean contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> contains
    double distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> distance
    boolean isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line) -> isParallelTo
    void translateToPoint(org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> translateToPoint
    double getAngle() -> getAngle
    void setAngle(double) -> setAngle
    double getOriginOffset() -> getOriginOffset
    void setOriginOffset(double) -> setOriginOffset
    org.apache.commons.math3.geometry.partitioning.Transform getTransform(java.awt.geom.AffineTransform) -> getTransform
    org.apache.commons.math3.geometry.partitioning.Region wholeSpace() -> wholeSpace
    org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.partitioning.Hyperplane copySelf() -> copySelf
    org.apache.commons.math3.geometry.Point toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    org.apache.commons.math3.geometry.Point toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
    double access$000(org.apache.commons.math3.geometry.euclidean.twod.Line) -> access$000
    double access$100(org.apache.commons.math3.geometry.euclidean.twod.Line) -> access$100
    double access$200(org.apache.commons.math3.geometry.euclidean.twod.Line) -> access$200
    double access$300(org.apache.commons.math3.geometry.euclidean.twod.Line) -> access$300
org.apache.commons.math3.geometry.euclidean.twod.Line$1 -> org.apache.commons.math3.geometry.euclidean.twod.Line$1:
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform -> org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform:
    double cXX -> cXX
    double cXY -> cXY
    double cX1 -> cX1
    double cYX -> cYX
    double cYY -> cYY
    double cY1 -> cY1
    double c1Y -> c1Y
    double c1X -> c1X
    double c11 -> c11
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D apply(org.apache.commons.math3.geometry.Point) -> apply
    org.apache.commons.math3.geometry.euclidean.twod.Line apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.SubHyperplane apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point) -> apply
org.apache.commons.math3.geometry.euclidean.twod.NestedLoops -> org.apache.commons.math3.geometry.euclidean.twod.NestedLoops:
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] loop -> loop
    java.util.ArrayList surrounded -> surrounded
    org.apache.commons.math3.geometry.partitioning.Region polygon -> polygon
    boolean originalIsClockwise -> originalIsClockwise
    double tolerance -> tolerance
    void add(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[]) -> add
    void add(org.apache.commons.math3.geometry.euclidean.twod.NestedLoops) -> add
    void correctOrientation() -> correctOrientation
    void setClockWise(boolean) -> setClockWise
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet -> org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vertices -> vertices
    org.apache.commons.math3.geometry.euclidean.twod.Line[] boxBoundary(double,double,double,double,double) -> boxBoundary
    org.apache.commons.math3.geometry.partitioning.BSPTree verticesToTree(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D[]) -> verticesToTree
    void insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List) -> insertEdges
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    void computeGeometricalProperties() -> computeGeometricalProperties
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] getVertices() -> getVertices
    java.util.List followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) -> followLoop
    org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$1 -> org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$1:
    int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side -> $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment -> org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment:
    org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple sortingKey -> sortingKey
    int compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge -> org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge:
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex start -> start
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex end -> end
    org.apache.commons.math3.geometry.euclidean.twod.Line line -> line
    org.apache.commons.math3.geometry.partitioning.BSPTree node -> node
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex getStart() -> getStart
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex getEnd() -> getEnd
    org.apache.commons.math3.geometry.euclidean.twod.Line getLine() -> getLine
    void setNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> setNode
    org.apache.commons.math3.geometry.partitioning.BSPTree getNode() -> getNode
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex split(org.apache.commons.math3.geometry.euclidean.twod.Line) -> split
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder -> org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder:
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree sorted -> sorted
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    void addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) -> addContribution
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree getSorted() -> getSorted
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex -> org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex:
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D location -> location
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge incoming -> incoming
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge outgoing -> outgoing
    java.util.List lines -> lines
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D getLocation() -> getLocation
    void bindWith(org.apache.commons.math3.geometry.euclidean.twod.Line) -> bindWith
    org.apache.commons.math3.geometry.euclidean.twod.Line sharedLineWith(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex) -> sharedLineWith
    void setIncoming(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge) -> setIncoming
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge getIncoming() -> getIncoming
    void setOutgoing(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge) -> setOutgoing
    org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge getOutgoing() -> getOutgoing
org.apache.commons.math3.geometry.euclidean.twod.Segment -> org.apache.commons.math3.geometry.euclidean.twod.Segment:
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D start -> start
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D end -> end
    org.apache.commons.math3.geometry.euclidean.twod.Line line -> line
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D getStart() -> getStart
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D getEnd() -> getEnd
    org.apache.commons.math3.geometry.euclidean.twod.Line getLine() -> getLine
    double distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> distance
org.apache.commons.math3.geometry.euclidean.twod.SubLine -> org.apache.commons.math3.geometry.euclidean.twod.SubLine:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    java.util.List getSegments() -> getSegments
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine,boolean) -> intersection
    org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet buildIntervalSet(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) -> buildIntervalSet
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> split
org.apache.commons.math3.geometry.euclidean.twod.Vector2D -> org.apache.commons.math3.geometry.euclidean.twod.Vector2D:
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D ZERO -> ZERO
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D NaN -> NaN
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D POSITIVE_INFINITY -> POSITIVE_INFINITY
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D NEGATIVE_INFINITY -> NEGATIVE_INFINITY
    long serialVersionUID -> serialVersionUID
    double x -> x
    double y -> y
    double getX() -> getX
    double getY() -> getY
    double[] toArray() -> toArray
    org.apache.commons.math3.geometry.Space getSpace() -> getSpace
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D getZero() -> getZero
    double getNorm1() -> getNorm1
    double getNorm() -> getNorm
    double getNormSq() -> getNormSq
    double getNormInf() -> getNormInf
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D add(org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D add(double,org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D subtract(org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D subtract(double,org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D normalize() -> normalize
    double angle(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> angle
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D negate() -> negate
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D scalarMultiply(double) -> scalarMultiply
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    double distance1(org.apache.commons.math3.geometry.Vector) -> distance1
    double distance(org.apache.commons.math3.geometry.Vector) -> distance
    double distance(org.apache.commons.math3.geometry.Point) -> distance
    double distanceInf(org.apache.commons.math3.geometry.Vector) -> distanceInf
    double distanceSq(org.apache.commons.math3.geometry.Vector) -> distanceSq
    double dotProduct(org.apache.commons.math3.geometry.Vector) -> dotProduct
    double crossProduct(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> crossProduct
    double distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> distance
    double distanceInf(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> distanceInf
    double distanceSq(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> distanceSq
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(java.text.NumberFormat) -> toString
    org.apache.commons.math3.geometry.Vector scalarMultiply(double) -> scalarMultiply
    org.apache.commons.math3.geometry.Vector normalize() -> normalize
    org.apache.commons.math3.geometry.Vector negate() -> negate
    org.apache.commons.math3.geometry.Vector subtract(double,org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector subtract(org.apache.commons.math3.geometry.Vector) -> subtract
    org.apache.commons.math3.geometry.Vector add(double,org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector add(org.apache.commons.math3.geometry.Vector) -> add
    org.apache.commons.math3.geometry.Vector getZero() -> getZero
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat -> org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:
    org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat getInstance() -> getInstance
    org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat getInstance(java.util.Locale) -> getInstance
    java.lang.StringBuffer format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) -> format
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D parse(java.lang.String) -> parse
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D parse(java.lang.String,java.text.ParsePosition) -> parse
    org.apache.commons.math3.geometry.Vector parse(java.lang.String,java.text.ParsePosition) -> parse
    org.apache.commons.math3.geometry.Vector parse(java.lang.String) -> parse
org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D -> org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D:
    double DEFAULT_TOLERANCE -> DEFAULT_TOLERANCE
    double tolerance -> tolerance
    boolean includeCollinearPoints -> includeCollinearPoints
    double getTolerance() -> getTolerance
    boolean isIncludeCollinearPoints() -> isIncludeCollinearPoints
    org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D generate(java.util.Collection) -> generate
    java.util.Collection findHullVertices(java.util.Collection) -> findHullVertices
    org.apache.commons.math3.geometry.hull.ConvexHull generate(java.util.Collection) -> generate
org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic -> org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic:
    java.util.Collection reducePoints(java.util.Collection) -> reducePoints
    java.util.List buildQuadrilateral(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[]) -> buildQuadrilateral
    boolean insideQuadrilateral(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,java.util.List) -> insideQuadrilateral
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D -> org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] vertices -> vertices
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.euclidean.twod.Segment[] lineSegments -> lineSegments
    boolean isConvex(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[]) -> isConvex
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] getVertices() -> getVertices
    org.apache.commons.math3.geometry.euclidean.twod.Segment[] getLineSegments() -> getLineSegments
    org.apache.commons.math3.geometry.euclidean.twod.Segment[] retrieveLineSegments() -> retrieveLineSegments
    org.apache.commons.math3.geometry.partitioning.Region createRegion() -> createRegion
    org.apache.commons.math3.geometry.Point[] getVertices() -> getVertices
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2D -> org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2D:
    org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D generate(java.util.Collection) -> generate
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain -> org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain:
    java.util.Collection findHullVertices(java.util.Collection) -> findHullVertices
    void updateHull(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,java.util.List) -> updateHull
    org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D generate(java.util.Collection) -> generate
    boolean isIncludeCollinearPoints() -> isIncludeCollinearPoints
    double getTolerance() -> getTolerance
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1 -> org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1:
    org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain this$0 -> this$0
    int compare(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.geometry.hull.ConvexHull -> org.apache.commons.math3.geometry.hull.ConvexHull:
    org.apache.commons.math3.geometry.Point[] getVertices() -> getVertices
    org.apache.commons.math3.geometry.partitioning.Region createRegion() -> createRegion
org.apache.commons.math3.geometry.hull.ConvexHullGenerator -> org.apache.commons.math3.geometry.hull.ConvexHullGenerator:
    org.apache.commons.math3.geometry.hull.ConvexHull generate(java.util.Collection) -> generate
org.apache.commons.math3.geometry.partitioning.AbstractRegion -> org.apache.commons.math3.geometry.partitioning.AbstractRegion:
    org.apache.commons.math3.geometry.partitioning.BSPTree tree -> tree
    double tolerance -> tolerance
    double size -> size
    org.apache.commons.math3.geometry.Point barycenter -> barycenter
    org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    double getTolerance() -> getTolerance
    void insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) -> insertCuts
    org.apache.commons.math3.geometry.partitioning.AbstractRegion copySelf() -> copySelf
    boolean isEmpty() -> isEmpty
    boolean isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isEmpty
    boolean isFull() -> isFull
    boolean isFull(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isFull
    boolean contains(org.apache.commons.math3.geometry.partitioning.Region) -> contains
    org.apache.commons.math3.geometry.partitioning.BoundaryProjection projectToBoundary(org.apache.commons.math3.geometry.Point) -> projectToBoundary
    org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.Vector) -> checkPoint
    org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.Point) -> checkPoint
    org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) -> checkPoint
    org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Point) -> checkPoint
    org.apache.commons.math3.geometry.partitioning.BSPTree getTree(boolean) -> getTree
    double getBoundarySize() -> getBoundarySize
    double getSize() -> getSize
    void setSize(double) -> setSize
    org.apache.commons.math3.geometry.Point getBarycenter() -> getBarycenter
    void setBarycenter(org.apache.commons.math3.geometry.Vector) -> setBarycenter
    void setBarycenter(org.apache.commons.math3.geometry.Point) -> setBarycenter
    void computeGeometricalProperties() -> computeGeometricalProperties
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    void recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) -> recurseSides
    org.apache.commons.math3.geometry.partitioning.SubHyperplane intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> intersection
    org.apache.commons.math3.geometry.partitioning.SubHyperplane recurseIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> recurseIntersection
    org.apache.commons.math3.geometry.partitioning.AbstractRegion applyTransform(org.apache.commons.math3.geometry.partitioning.Transform) -> applyTransform
    org.apache.commons.math3.geometry.partitioning.BSPTree recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Transform) -> recurseTransform
    org.apache.commons.math3.geometry.partitioning.Region copySelf() -> copySelf
    org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1 -> org.apache.commons.math3.geometry.partitioning.AbstractRegion$1:
    org.apache.commons.math3.geometry.partitioning.AbstractRegion this$0 -> this$0
    int compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2 -> org.apache.commons.math3.geometry.partitioning.AbstractRegion$2:
    org.apache.commons.math3.geometry.partitioning.AbstractRegion this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
org.apache.commons.math3.geometry.partitioning.AbstractRegion$3 -> org.apache.commons.math3.geometry.partitioning.AbstractRegion$3:
    int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side -> $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder -> org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder:
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    void characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) -> characterize
org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides -> org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides:
    boolean plusFound -> plusFound
    boolean minusFound -> minusFound
    void rememberPlusFound() -> rememberPlusFound
    boolean plusFound() -> plusFound
    void rememberMinusFound() -> rememberMinusFound
    boolean minusFound() -> minusFound
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane -> org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:
    org.apache.commons.math3.geometry.partitioning.Hyperplane hyperplane -> hyperplane
    org.apache.commons.math3.geometry.partitioning.Region remainingRegion -> remainingRegion
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> buildNew
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane copySelf() -> copySelf
    org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane() -> getHyperplane
    org.apache.commons.math3.geometry.partitioning.Region getRemainingRegion() -> getRemainingRegion
    double getSize() -> getSize
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> reunite
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane applyTransform(org.apache.commons.math3.geometry.partitioning.Transform) -> applyTransform
    org.apache.commons.math3.geometry.partitioning.BSPTree recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Transform) -> recurseTransform
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> split
    boolean isEmpty() -> isEmpty
    org.apache.commons.math3.geometry.partitioning.SubHyperplane reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> reunite
    org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf() -> copySelf
org.apache.commons.math3.geometry.partitioning.BSPTree -> org.apache.commons.math3.geometry.partitioning.BSPTree:
    org.apache.commons.math3.geometry.partitioning.SubHyperplane cut -> cut
    org.apache.commons.math3.geometry.partitioning.BSPTree plus -> plus
    org.apache.commons.math3.geometry.partitioning.BSPTree minus -> minus
    org.apache.commons.math3.geometry.partitioning.BSPTree parent -> parent
    java.lang.Object attribute -> attribute
    boolean insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> insertCut
    org.apache.commons.math3.geometry.partitioning.BSPTree copySelf() -> copySelf
    org.apache.commons.math3.geometry.partitioning.SubHyperplane getCut() -> getCut
    org.apache.commons.math3.geometry.partitioning.BSPTree getPlus() -> getPlus
    org.apache.commons.math3.geometry.partitioning.BSPTree getMinus() -> getMinus
    org.apache.commons.math3.geometry.partitioning.BSPTree getParent() -> getParent
    void setAttribute(java.lang.Object) -> setAttribute
    java.lang.Object getAttribute() -> getAttribute
    void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) -> visit
    org.apache.commons.math3.geometry.partitioning.SubHyperplane fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> fitToCell
    org.apache.commons.math3.geometry.partitioning.BSPTree getCell(org.apache.commons.math3.geometry.Vector) -> getCell
    org.apache.commons.math3.geometry.partitioning.BSPTree getCell(org.apache.commons.math3.geometry.Point,double) -> getCell
    java.util.List getCloseCuts(org.apache.commons.math3.geometry.Point,double) -> getCloseCuts
    void recurseCloseCuts(org.apache.commons.math3.geometry.Point,double,java.util.List) -> recurseCloseCuts
    void condense() -> condense
    org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger) -> merge
    org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) -> merge
    org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> split
    void insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) -> insertInTree
    org.apache.commons.math3.geometry.partitioning.BSPTree pruneAroundConvexCell(java.lang.Object,java.lang.Object,java.lang.Object) -> pruneAroundConvexCell
    void chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> chopOffMinus
    void chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> chopOffPlus
org.apache.commons.math3.geometry.partitioning.BSPTree$1 -> org.apache.commons.math3.geometry.partitioning.BSPTree$1:
    int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order -> $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order
    int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side -> $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side
org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger -> org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger:
    org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) -> merge
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor -> org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor:
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order -> org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order:
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_MINUS_SUB -> PLUS_MINUS_SUB
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_SUB_MINUS -> PLUS_SUB_MINUS
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_PLUS_SUB -> MINUS_PLUS_SUB
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_SUB_PLUS -> MINUS_SUB_PLUS
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_PLUS_MINUS -> SUB_PLUS_MINUS
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_MINUS_PLUS -> SUB_MINUS_PLUS
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] $VALUES -> $VALUES
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] values() -> values
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.geometry.partitioning.BoundaryAttribute -> org.apache.commons.math3.geometry.partitioning.BoundaryAttribute:
    org.apache.commons.math3.geometry.partitioning.SubHyperplane plusOutside -> plusOutside
    org.apache.commons.math3.geometry.partitioning.SubHyperplane plusInside -> plusInside
    org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlusOutside() -> getPlusOutside
    org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlusInside() -> getPlusInside
org.apache.commons.math3.geometry.partitioning.BoundaryProjection -> org.apache.commons.math3.geometry.partitioning.BoundaryProjection:
    org.apache.commons.math3.geometry.Point original -> original
    org.apache.commons.math3.geometry.Point projected -> projected
    double offset -> offset
    org.apache.commons.math3.geometry.Point getOriginal() -> getOriginal
    org.apache.commons.math3.geometry.Point getProjected() -> getProjected
    double getOffset() -> getOffset
org.apache.commons.math3.geometry.partitioning.BoundaryProjector -> org.apache.commons.math3.geometry.partitioning.BoundaryProjector:
    org.apache.commons.math3.geometry.Point original -> original
    org.apache.commons.math3.geometry.Point projected -> projected
    org.apache.commons.math3.geometry.partitioning.BSPTree leaf -> leaf
    double offset -> offset
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    org.apache.commons.math3.geometry.partitioning.BoundaryProjection getProjection() -> getProjection
    java.util.List boundaryRegions(org.apache.commons.math3.geometry.partitioning.BSPTree) -> boundaryRegions
    void addRegion(org.apache.commons.math3.geometry.partitioning.SubHyperplane,java.util.List) -> addRegion
    boolean belongsToPart(org.apache.commons.math3.geometry.Point,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> belongsToPart
    org.apache.commons.math3.geometry.Point singularProjection(org.apache.commons.math3.geometry.Point,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> singularProjection
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor -> org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor:
    double boundarySize -> boundarySize
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    double getSize() -> getSize
org.apache.commons.math3.geometry.partitioning.Embedding -> org.apache.commons.math3.geometry.partitioning.Embedding:
    org.apache.commons.math3.geometry.Point toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
    org.apache.commons.math3.geometry.Point toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
org.apache.commons.math3.geometry.partitioning.Hyperplane -> org.apache.commons.math3.geometry.partitioning.Hyperplane:
    org.apache.commons.math3.geometry.partitioning.Hyperplane copySelf() -> copySelf
    double getOffset(org.apache.commons.math3.geometry.Point) -> getOffset
    org.apache.commons.math3.geometry.Point project(org.apache.commons.math3.geometry.Point) -> project
    double getTolerance() -> getTolerance
    boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> sameOrientationAs
    org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.partitioning.Region wholeSpace() -> wholeSpace
org.apache.commons.math3.geometry.partitioning.Region -> org.apache.commons.math3.geometry.partitioning.Region:
    org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Region copySelf() -> copySelf
    boolean isEmpty() -> isEmpty
    boolean isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isEmpty
    boolean isFull() -> isFull
    boolean isFull(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isFull
    boolean contains(org.apache.commons.math3.geometry.partitioning.Region) -> contains
    org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(org.apache.commons.math3.geometry.Point) -> checkPoint
    org.apache.commons.math3.geometry.partitioning.BoundaryProjection projectToBoundary(org.apache.commons.math3.geometry.Point) -> projectToBoundary
    org.apache.commons.math3.geometry.partitioning.BSPTree getTree(boolean) -> getTree
    double getBoundarySize() -> getBoundarySize
    double getSize() -> getSize
    org.apache.commons.math3.geometry.Point getBarycenter() -> getBarycenter
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> intersection
org.apache.commons.math3.geometry.partitioning.Region$Location -> org.apache.commons.math3.geometry.partitioning.Region$Location:
    org.apache.commons.math3.geometry.partitioning.Region$Location INSIDE -> INSIDE
    org.apache.commons.math3.geometry.partitioning.Region$Location OUTSIDE -> OUTSIDE
    org.apache.commons.math3.geometry.partitioning.Region$Location BOUNDARY -> BOUNDARY
    org.apache.commons.math3.geometry.partitioning.Region$Location[] $VALUES -> $VALUES
    org.apache.commons.math3.geometry.partitioning.Region$Location[] values() -> values
    org.apache.commons.math3.geometry.partitioning.Region$Location valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.geometry.partitioning.RegionFactory -> org.apache.commons.math3.geometry.partitioning.RegionFactory:
    org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner nodeCleaner -> nodeCleaner
    org.apache.commons.math3.geometry.partitioning.Region buildConvex(org.apache.commons.math3.geometry.partitioning.Hyperplane[]) -> buildConvex
    org.apache.commons.math3.geometry.partitioning.Region union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) -> union
    org.apache.commons.math3.geometry.partitioning.Region intersection(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) -> intersection
    org.apache.commons.math3.geometry.partitioning.Region xor(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) -> xor
    org.apache.commons.math3.geometry.partitioning.Region difference(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) -> difference
    org.apache.commons.math3.geometry.partitioning.Region getComplement(org.apache.commons.math3.geometry.partitioning.Region) -> getComplement
    org.apache.commons.math3.geometry.partitioning.BSPTree recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) -> recurseComplement
    org.apache.commons.math3.geometry.partitioning.BSPTree access$500(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$500
org.apache.commons.math3.geometry.partitioning.RegionFactory$1 -> org.apache.commons.math3.geometry.partitioning.RegionFactory$1:
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger -> org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger:
    org.apache.commons.math3.geometry.partitioning.RegionFactory this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) -> merge
org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger -> org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger:
    org.apache.commons.math3.geometry.partitioning.RegionFactory this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) -> merge
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner -> org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner:
    org.apache.commons.math3.geometry.partitioning.RegionFactory this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger -> org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger:
    org.apache.commons.math3.geometry.partitioning.RegionFactory this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) -> merge
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger -> org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger:
    org.apache.commons.math3.geometry.partitioning.RegionFactory this$0 -> this$0
    org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) -> merge
org.apache.commons.math3.geometry.partitioning.Side -> org.apache.commons.math3.geometry.partitioning.Side:
    org.apache.commons.math3.geometry.partitioning.Side PLUS -> PLUS
    org.apache.commons.math3.geometry.partitioning.Side MINUS -> MINUS
    org.apache.commons.math3.geometry.partitioning.Side BOTH -> BOTH
    org.apache.commons.math3.geometry.partitioning.Side HYPER -> HYPER
    org.apache.commons.math3.geometry.partitioning.Side[] $VALUES -> $VALUES
    org.apache.commons.math3.geometry.partitioning.Side[] values() -> values
    org.apache.commons.math3.geometry.partitioning.Side valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.geometry.partitioning.SubHyperplane -> org.apache.commons.math3.geometry.partitioning.SubHyperplane:
    org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf() -> copySelf
    org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane() -> getHyperplane
    boolean isEmpty() -> isEmpty
    double getSize() -> getSize
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> split
    org.apache.commons.math3.geometry.partitioning.SubHyperplane reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) -> reunite
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane -> org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane:
    org.apache.commons.math3.geometry.partitioning.SubHyperplane plus -> plus
    org.apache.commons.math3.geometry.partitioning.SubHyperplane minus -> minus
    org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus() -> getPlus
    org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus() -> getMinus
org.apache.commons.math3.geometry.partitioning.Transform -> org.apache.commons.math3.geometry.partitioning.Transform:
    org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point) -> apply
    org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.SubHyperplane apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree -> org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node top -> top
    void insert(java.lang.Comparable) -> insert
    boolean delete(java.lang.Comparable) -> delete
    boolean isEmpty() -> isEmpty
    int size() -> size
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getSmallest() -> getSmallest
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getLargest() -> getLargest
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getNotSmaller(java.lang.Comparable) -> getNotSmaller
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getNotLarger(java.lang.Comparable) -> getNotLarger
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node access$302(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node) -> access$302
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1 -> org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1:
    int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew -> $SwitchMap$org$apache$commons$math3$geometry$partitioning$utilities$AVLTree$Skew
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node -> org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node:
    java.lang.Comparable element -> element
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node left -> left
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node right -> right
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node parent -> parent
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew skew -> skew
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree this$0 -> this$0
    java.lang.Comparable getElement() -> getElement
    int size() -> size
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getSmallest() -> getSmallest
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getLargest() -> getLargest
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getPrevious() -> getPrevious
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getNext() -> getNext
    boolean insert(java.lang.Comparable) -> insert
    void delete() -> delete
    boolean rebalanceLeftGrown() -> rebalanceLeftGrown
    boolean rebalanceRightGrown() -> rebalanceRightGrown
    boolean rebalanceLeftShrunk() -> rebalanceLeftShrunk
    boolean rebalanceRightShrunk() -> rebalanceRightShrunk
    void rotateCW() -> rotateCW
    void rotateCCW() -> rotateCCW
    java.lang.Comparable access$000(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node) -> access$000
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node access$100(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node) -> access$100
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node access$200(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node) -> access$200
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew -> org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew:
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew LEFT_HIGH -> LEFT_HIGH
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew RIGHT_HIGH -> RIGHT_HIGH
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew BALANCED -> BALANCED
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew[] $VALUES -> $VALUES
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew[] values() -> values
    org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple -> org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:
    long SIGN_MASK -> SIGN_MASK
    long EXPONENT_MASK -> EXPONENT_MASK
    long MANTISSA_MASK -> MANTISSA_MASK
    long IMPLICIT_ONE -> IMPLICIT_ONE
    double[] components -> components
    int offset -> offset
    int lsb -> lsb
    long[] encoding -> encoding
    boolean posInf -> posInf
    boolean negInf -> negInf
    boolean nan -> nan
    void encode(int) -> encode
    int compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    double[] getComponents() -> getComponents
    long sign(long) -> sign
    int exponent(long) -> exponent
    long mantissa(long) -> mantissa
    int computeMSB(long) -> computeMSB
    int computeLSB(long) -> computeLSB
    int getBit(int,int) -> getBit
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.geometry.spherical.oned.Arc -> org.apache.commons.math3.geometry.spherical.oned.Arc:
    double lower -> lower
    double upper -> upper
    double middle -> middle
    double tolerance -> tolerance
    double getInf() -> getInf
    double getSup() -> getSup
    double getSize() -> getSize
    double getBarycenter() -> getBarycenter
    double getTolerance() -> getTolerance
    org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(double) -> checkPoint
org.apache.commons.math3.geometry.spherical.oned.ArcsSet -> org.apache.commons.math3.geometry.spherical.oned.ArcsSet:
    org.apache.commons.math3.geometry.partitioning.BSPTree buildTree(double,double,double) -> buildTree
    void check2PiConsistency() -> check2PiConsistency
    org.apache.commons.math3.geometry.partitioning.BSPTree getFirstLeaf(org.apache.commons.math3.geometry.partitioning.BSPTree) -> getFirstLeaf
    org.apache.commons.math3.geometry.partitioning.BSPTree getLastLeaf(org.apache.commons.math3.geometry.partitioning.BSPTree) -> getLastLeaf
    org.apache.commons.math3.geometry.partitioning.BSPTree getFirstArcStart() -> getFirstArcStart
    boolean isArcStart(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isArcStart
    boolean isArcEnd(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isArcEnd
    org.apache.commons.math3.geometry.partitioning.BSPTree nextInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> nextInternalNode
    org.apache.commons.math3.geometry.partitioning.BSPTree previousInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> previousInternalNode
    org.apache.commons.math3.geometry.partitioning.BSPTree leafBefore(org.apache.commons.math3.geometry.partitioning.BSPTree) -> leafBefore
    org.apache.commons.math3.geometry.partitioning.BSPTree leafAfter(org.apache.commons.math3.geometry.partitioning.BSPTree) -> leafAfter
    boolean isBeforeParent(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isBeforeParent
    boolean isAfterParent(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isAfterParent
    org.apache.commons.math3.geometry.partitioning.BSPTree childBefore(org.apache.commons.math3.geometry.partitioning.BSPTree) -> childBefore
    org.apache.commons.math3.geometry.partitioning.BSPTree childAfter(org.apache.commons.math3.geometry.partitioning.BSPTree) -> childAfter
    boolean isDirect(org.apache.commons.math3.geometry.partitioning.BSPTree) -> isDirect
    double getAngle(org.apache.commons.math3.geometry.partitioning.BSPTree) -> getAngle
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    void computeGeometricalProperties() -> computeGeometricalProperties
    org.apache.commons.math3.geometry.partitioning.BoundaryProjection projectToBoundary(org.apache.commons.math3.geometry.Point) -> projectToBoundary
    java.util.List asList() -> asList
    java.util.Iterator iterator() -> iterator
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.spherical.oned.Arc) -> side
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split split(org.apache.commons.math3.geometry.spherical.oned.Arc) -> split
    void addArcLimit(org.apache.commons.math3.geometry.partitioning.BSPTree,double,boolean) -> addArcLimit
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet createSplitPart(java.util.List) -> createSplitPart
    org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.BSPTree access$000(org.apache.commons.math3.geometry.spherical.oned.ArcsSet) -> access$000
    org.apache.commons.math3.geometry.partitioning.BSPTree access$100(org.apache.commons.math3.geometry.spherical.oned.ArcsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$100
    boolean access$200(org.apache.commons.math3.geometry.spherical.oned.ArcsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$200
    org.apache.commons.math3.geometry.partitioning.BSPTree access$300(org.apache.commons.math3.geometry.spherical.oned.ArcsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$300
    boolean access$400(org.apache.commons.math3.geometry.spherical.oned.ArcsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$400
    double access$500(org.apache.commons.math3.geometry.spherical.oned.ArcsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$500
    org.apache.commons.math3.geometry.partitioning.BSPTree access$600(org.apache.commons.math3.geometry.spherical.oned.ArcsSet,org.apache.commons.math3.geometry.partitioning.BSPTree) -> access$600
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$1 -> org.apache.commons.math3.geometry.spherical.oned.ArcsSet$1:
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$InconsistentStateAt2PiWrapping -> org.apache.commons.math3.geometry.spherical.oned.ArcsSet$InconsistentStateAt2PiWrapping:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split -> org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split:
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet plus -> plus
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet minus -> minus
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet getPlus() -> getPlus
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet getMinus() -> getMinus
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator -> org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator:
    org.apache.commons.math3.geometry.partitioning.BSPTree firstStart -> firstStart
    org.apache.commons.math3.geometry.partitioning.BSPTree current -> current
    double[] pending -> pending
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet this$0 -> this$0
    void selectPending() -> selectPending
    boolean hasNext() -> hasNext
    double[] next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.geometry.spherical.oned.LimitAngle -> org.apache.commons.math3.geometry.spherical.oned.LimitAngle:
    org.apache.commons.math3.geometry.spherical.oned.S1Point location -> location
    boolean direct -> direct
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.spherical.oned.LimitAngle copySelf() -> copySelf
    double getOffset(org.apache.commons.math3.geometry.Point) -> getOffset
    boolean isDirect() -> isDirect
    org.apache.commons.math3.geometry.spherical.oned.LimitAngle getReverse() -> getReverse
    org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.spherical.oned.ArcsSet wholeSpace() -> wholeSpace
    boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> sameOrientationAs
    org.apache.commons.math3.geometry.spherical.oned.S1Point getLocation() -> getLocation
    org.apache.commons.math3.geometry.Point project(org.apache.commons.math3.geometry.Point) -> project
    double getTolerance() -> getTolerance
    org.apache.commons.math3.geometry.partitioning.Region wholeSpace() -> wholeSpace
    org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.partitioning.Hyperplane copySelf() -> copySelf
org.apache.commons.math3.geometry.spherical.oned.S1Point -> org.apache.commons.math3.geometry.spherical.oned.S1Point:
    org.apache.commons.math3.geometry.spherical.oned.S1Point NaN -> NaN
    long serialVersionUID -> serialVersionUID
    double alpha -> alpha
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D vector -> vector
    double getAlpha() -> getAlpha
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D getVector() -> getVector
    org.apache.commons.math3.geometry.Space getSpace() -> getSpace
    boolean isNaN() -> isNaN
    double distance(org.apache.commons.math3.geometry.Point) -> distance
    double distance(org.apache.commons.math3.geometry.spherical.oned.S1Point,org.apache.commons.math3.geometry.spherical.oned.S1Point) -> distance
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.math3.geometry.spherical.oned.Sphere1D -> org.apache.commons.math3.geometry.spherical.oned.Sphere1D:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.spherical.oned.Sphere1D getInstance() -> getInstance
    int getDimension() -> getDimension
    org.apache.commons.math3.geometry.Space getSubSpace() -> getSubSpace
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.geometry.spherical.oned.Sphere1D$1 -> org.apache.commons.math3.geometry.spherical.oned.Sphere1D$1:
org.apache.commons.math3.geometry.spherical.oned.Sphere1D$LazyHolder -> org.apache.commons.math3.geometry.spherical.oned.Sphere1D$LazyHolder:
    org.apache.commons.math3.geometry.spherical.oned.Sphere1D INSTANCE -> INSTANCE
    org.apache.commons.math3.geometry.spherical.oned.Sphere1D access$000() -> access$000
org.apache.commons.math3.geometry.spherical.oned.Sphere1D$NoSubSpaceException -> org.apache.commons.math3.geometry.spherical.oned.Sphere1D$NoSubSpaceException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle -> org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle:
    double getSize() -> getSize
    boolean isEmpty() -> isEmpty
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> split
org.apache.commons.math3.geometry.spherical.twod.Circle -> org.apache.commons.math3.geometry.spherical.twod.Circle:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D pole -> pole
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D x -> x
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D y -> y
    double tolerance -> tolerance
    org.apache.commons.math3.geometry.spherical.twod.Circle copySelf() -> copySelf
    void reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> reset
    void revertSelf() -> revertSelf
    org.apache.commons.math3.geometry.spherical.twod.Circle getReverse() -> getReverse
    org.apache.commons.math3.geometry.Point project(org.apache.commons.math3.geometry.Point) -> project
    double getTolerance() -> getTolerance
    org.apache.commons.math3.geometry.spherical.oned.S1Point toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
    double getPhase(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> getPhase
    org.apache.commons.math3.geometry.spherical.twod.S2Point toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double) -> getPointAt
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getXAxis() -> getXAxis
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getYAxis() -> getYAxis
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPole() -> getPole
    org.apache.commons.math3.geometry.spherical.oned.Arc getInsideArc(org.apache.commons.math3.geometry.spherical.twod.Circle) -> getInsideArc
    org.apache.commons.math3.geometry.spherical.twod.SubCircle wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet wholeSpace() -> wholeSpace
    double getOffset(org.apache.commons.math3.geometry.Point) -> getOffset
    double getOffset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> getOffset
    boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> sameOrientationAs
    org.apache.commons.math3.geometry.partitioning.Transform getTransform(org.apache.commons.math3.geometry.euclidean.threed.Rotation) -> getTransform
    org.apache.commons.math3.geometry.partitioning.Region wholeSpace() -> wholeSpace
    org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane() -> wholeHyperplane
    org.apache.commons.math3.geometry.partitioning.Hyperplane copySelf() -> copySelf
    org.apache.commons.math3.geometry.Point toSpace(org.apache.commons.math3.geometry.Point) -> toSpace
    org.apache.commons.math3.geometry.Point toSubSpace(org.apache.commons.math3.geometry.Point) -> toSubSpace
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$000(org.apache.commons.math3.geometry.spherical.twod.Circle) -> access$000
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$100(org.apache.commons.math3.geometry.spherical.twod.Circle) -> access$100
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D access$200(org.apache.commons.math3.geometry.spherical.twod.Circle) -> access$200
    double access$300(org.apache.commons.math3.geometry.spherical.twod.Circle) -> access$300
org.apache.commons.math3.geometry.spherical.twod.Circle$1 -> org.apache.commons.math3.geometry.spherical.twod.Circle$1:
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform -> org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform:
    org.apache.commons.math3.geometry.euclidean.threed.Rotation rotation -> rotation
    org.apache.commons.math3.geometry.spherical.twod.S2Point apply(org.apache.commons.math3.geometry.Point) -> apply
    org.apache.commons.math3.geometry.spherical.twod.Circle apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.SubHyperplane apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> apply
    org.apache.commons.math3.geometry.Point apply(org.apache.commons.math3.geometry.Point) -> apply
org.apache.commons.math3.geometry.spherical.twod.Edge -> org.apache.commons.math3.geometry.spherical.twod.Edge:
    org.apache.commons.math3.geometry.spherical.twod.Vertex start -> start
    org.apache.commons.math3.geometry.spherical.twod.Vertex end -> end
    double length -> length
    org.apache.commons.math3.geometry.spherical.twod.Circle circle -> circle
    org.apache.commons.math3.geometry.spherical.twod.Vertex getStart() -> getStart
    org.apache.commons.math3.geometry.spherical.twod.Vertex getEnd() -> getEnd
    double getLength() -> getLength
    org.apache.commons.math3.geometry.spherical.twod.Circle getCircle() -> getCircle
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double) -> getPointAt
    void setNextEdge(org.apache.commons.math3.geometry.spherical.twod.Edge) -> setNextEdge
    void split(org.apache.commons.math3.geometry.spherical.twod.Circle,java.util.List,java.util.List) -> split
    org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,java.util.List,org.apache.commons.math3.geometry.spherical.twod.Circle) -> addSubEdge
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder -> org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:
    org.apache.commons.math3.geometry.partitioning.BSPTree root -> root
    double tolerance -> tolerance
    java.util.Map edgeToNode -> edgeToNode
    java.util.Map nodeToEdgesList -> nodeToEdgesList
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    void addContribution(org.apache.commons.math3.geometry.spherical.twod.SubCircle,boolean,org.apache.commons.math3.geometry.partitioning.BSPTree) -> addContribution
    org.apache.commons.math3.geometry.spherical.twod.Edge getFollowingEdge(org.apache.commons.math3.geometry.spherical.twod.Edge) -> getFollowingEdge
    java.util.List getEdges() -> getEdges
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer -> org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:
    double tolerance -> tolerance
    double summedArea -> summedArea
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D summedBarycenter -> summedBarycenter
    java.util.List convexCellsInsidePoints -> convexCellsInsidePoints
    org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitOrder
    void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitInternalNode
    void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) -> visitLeafNode
    double convexCellArea(org.apache.commons.math3.geometry.spherical.twod.Vertex) -> convexCellArea
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D convexCellBarycenter(org.apache.commons.math3.geometry.spherical.twod.Vertex) -> convexCellBarycenter
    double getArea() -> getArea
    org.apache.commons.math3.geometry.spherical.twod.S2Point getBarycenter() -> getBarycenter
    java.util.List getConvexCellsInsidePoints() -> getConvexCellsInsidePoints
org.apache.commons.math3.geometry.spherical.twod.S2Point -> org.apache.commons.math3.geometry.spherical.twod.S2Point:
    org.apache.commons.math3.geometry.spherical.twod.S2Point PLUS_I -> PLUS_I
    org.apache.commons.math3.geometry.spherical.twod.S2Point PLUS_J -> PLUS_J
    org.apache.commons.math3.geometry.spherical.twod.S2Point PLUS_K -> PLUS_K
    org.apache.commons.math3.geometry.spherical.twod.S2Point MINUS_I -> MINUS_I
    org.apache.commons.math3.geometry.spherical.twod.S2Point MINUS_J -> MINUS_J
    org.apache.commons.math3.geometry.spherical.twod.S2Point MINUS_K -> MINUS_K
    org.apache.commons.math3.geometry.spherical.twod.S2Point NaN -> NaN
    long serialVersionUID -> serialVersionUID
    double theta -> theta
    double phi -> phi
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D vector -> vector
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D vector(double,double) -> vector
    double getTheta() -> getTheta
    double getPhi() -> getPhi
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D getVector() -> getVector
    org.apache.commons.math3.geometry.Space getSpace() -> getSpace
    boolean isNaN() -> isNaN
    org.apache.commons.math3.geometry.spherical.twod.S2Point negate() -> negate
    double distance(org.apache.commons.math3.geometry.Point) -> distance
    double distance(org.apache.commons.math3.geometry.spherical.twod.S2Point,org.apache.commons.math3.geometry.spherical.twod.S2Point) -> distance
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.math3.geometry.spherical.twod.Sphere2D -> org.apache.commons.math3.geometry.spherical.twod.Sphere2D:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.geometry.spherical.twod.Sphere2D getInstance() -> getInstance
    int getDimension() -> getDimension
    org.apache.commons.math3.geometry.spherical.oned.Sphere1D getSubSpace() -> getSubSpace
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.math3.geometry.Space getSubSpace() -> getSubSpace
org.apache.commons.math3.geometry.spherical.twod.Sphere2D$1 -> org.apache.commons.math3.geometry.spherical.twod.Sphere2D$1:
org.apache.commons.math3.geometry.spherical.twod.Sphere2D$LazyHolder -> org.apache.commons.math3.geometry.spherical.twod.Sphere2D$LazyHolder:
    org.apache.commons.math3.geometry.spherical.twod.Sphere2D INSTANCE -> INSTANCE
    org.apache.commons.math3.geometry.spherical.twod.Sphere2D access$000() -> access$000
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet -> org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:
    java.util.List loops -> loops
    org.apache.commons.math3.geometry.spherical.twod.S2Point[] createRegularPolygonVertices(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,int) -> createRegularPolygonVertices
    org.apache.commons.math3.geometry.partitioning.BSPTree verticesToTree(double,org.apache.commons.math3.geometry.spherical.twod.S2Point[]) -> verticesToTree
    void insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List) -> insertEdges
    org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    void computeGeometricalProperties() -> computeGeometricalProperties
    java.util.List getBoundaryLoops() -> getBoundaryLoops
    org.apache.commons.math3.geometry.enclosing.EnclosingBall getEnclosingCap() -> getEnclosingCap
    java.util.List getInsidePoints() -> getInsidePoints
    java.util.List getOutsidePoints() -> getOutsidePoints
    org.apache.commons.math3.geometry.partitioning.AbstractRegion buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Region buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) -> buildNew
org.apache.commons.math3.geometry.spherical.twod.SubCircle -> org.apache.commons.math3.geometry.spherical.twod.SubCircle:
    org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) -> buildNew
    org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> side
    org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane) -> split
org.apache.commons.math3.geometry.spherical.twod.Vertex -> org.apache.commons.math3.geometry.spherical.twod.Vertex:
    org.apache.commons.math3.geometry.spherical.twod.S2Point location -> location
    org.apache.commons.math3.geometry.spherical.twod.Edge incoming -> incoming
    org.apache.commons.math3.geometry.spherical.twod.Edge outgoing -> outgoing
    java.util.List circles -> circles
    org.apache.commons.math3.geometry.spherical.twod.S2Point getLocation() -> getLocation
    void bindWith(org.apache.commons.math3.geometry.spherical.twod.Circle) -> bindWith
    org.apache.commons.math3.geometry.spherical.twod.Circle sharedCircleWith(org.apache.commons.math3.geometry.spherical.twod.Vertex) -> sharedCircleWith
    void setIncoming(org.apache.commons.math3.geometry.spherical.twod.Edge) -> setIncoming
    org.apache.commons.math3.geometry.spherical.twod.Edge getIncoming() -> getIncoming
    void setOutgoing(org.apache.commons.math3.geometry.spherical.twod.Edge) -> setOutgoing
    org.apache.commons.math3.geometry.spherical.twod.Edge getOutgoing() -> getOutgoing
org.apache.commons.math3.linear.AbstractFieldMatrix -> org.apache.commons.math3.linear.AbstractFieldMatrix:
    org.apache.commons.math3.Field field -> field
    org.apache.commons.math3.Field extractField(org.apache.commons.math3.FieldElement[][]) -> extractField
    org.apache.commons.math3.Field extractField(org.apache.commons.math3.FieldElement[]) -> extractField
    org.apache.commons.math3.FieldElement[][] buildArray(org.apache.commons.math3.Field,int,int) -> buildArray
    org.apache.commons.math3.FieldElement[] buildArray(org.apache.commons.math3.Field,int) -> buildArray
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.linear.FieldMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.FieldMatrix copy() -> copy
    org.apache.commons.math3.linear.FieldMatrix add(org.apache.commons.math3.linear.FieldMatrix) -> add
    org.apache.commons.math3.linear.FieldMatrix subtract(org.apache.commons.math3.linear.FieldMatrix) -> subtract
    org.apache.commons.math3.linear.FieldMatrix scalarAdd(org.apache.commons.math3.FieldElement) -> scalarAdd
    org.apache.commons.math3.linear.FieldMatrix scalarMultiply(org.apache.commons.math3.FieldElement) -> scalarMultiply
    org.apache.commons.math3.linear.FieldMatrix multiply(org.apache.commons.math3.linear.FieldMatrix) -> multiply
    org.apache.commons.math3.linear.FieldMatrix preMultiply(org.apache.commons.math3.linear.FieldMatrix) -> preMultiply
    org.apache.commons.math3.linear.FieldMatrix power(int) -> power
    org.apache.commons.math3.FieldElement[][] getData() -> getData
    org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int,int,int,int) -> getSubMatrix
    org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int[],int[]) -> getSubMatrix
    void copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][]) -> copySubMatrix
    void copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][]) -> copySubMatrix
    void setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int) -> setSubMatrix
    org.apache.commons.math3.linear.FieldMatrix getRowMatrix(int) -> getRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix) -> setRowMatrix
    org.apache.commons.math3.linear.FieldMatrix getColumnMatrix(int) -> getColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix) -> setColumnMatrix
    org.apache.commons.math3.linear.FieldVector getRowVector(int) -> getRowVector
    void setRowVector(int,org.apache.commons.math3.linear.FieldVector) -> setRowVector
    org.apache.commons.math3.linear.FieldVector getColumnVector(int) -> getColumnVector
    void setColumnVector(int,org.apache.commons.math3.linear.FieldVector) -> setColumnVector
    org.apache.commons.math3.FieldElement[] getRow(int) -> getRow
    void setRow(int,org.apache.commons.math3.FieldElement[]) -> setRow
    org.apache.commons.math3.FieldElement[] getColumn(int) -> getColumn
    void setColumn(int,org.apache.commons.math3.FieldElement[]) -> setColumn
    org.apache.commons.math3.FieldElement getEntry(int,int) -> getEntry
    void setEntry(int,int,org.apache.commons.math3.FieldElement) -> setEntry
    void addToEntry(int,int,org.apache.commons.math3.FieldElement) -> addToEntry
    void multiplyEntry(int,int,org.apache.commons.math3.FieldElement) -> multiplyEntry
    org.apache.commons.math3.linear.FieldMatrix transpose() -> transpose
    boolean isSquare() -> isSquare
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    org.apache.commons.math3.FieldElement getTrace() -> getTrace
    org.apache.commons.math3.FieldElement[] operate(org.apache.commons.math3.FieldElement[]) -> operate
    org.apache.commons.math3.linear.FieldVector operate(org.apache.commons.math3.linear.FieldVector) -> operate
    org.apache.commons.math3.FieldElement[] preMultiply(org.apache.commons.math3.FieldElement[]) -> preMultiply
    org.apache.commons.math3.linear.FieldVector preMultiply(org.apache.commons.math3.linear.FieldVector) -> preMultiply
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInOptimizedOrder
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void checkRowIndex(int) -> checkRowIndex
    void checkColumnIndex(int) -> checkColumnIndex
    void checkSubMatrixIndex(int,int,int,int) -> checkSubMatrixIndex
    void checkSubMatrixIndex(int[],int[]) -> checkSubMatrixIndex
    void checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix) -> checkAdditionCompatible
    void checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix) -> checkSubtractionCompatible
    void checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix) -> checkMultiplicationCompatible
org.apache.commons.math3.linear.AbstractFieldMatrix$1 -> org.apache.commons.math3.linear.AbstractFieldMatrix$1:
    int[] val$selectedRows -> val$selectedRows
    int[] val$selectedColumns -> val$selectedColumns
    org.apache.commons.math3.linear.AbstractFieldMatrix this$0 -> this$0
    org.apache.commons.math3.FieldElement visit(int,int,org.apache.commons.math3.FieldElement) -> visit
org.apache.commons.math3.linear.AbstractFieldMatrix$2 -> org.apache.commons.math3.linear.AbstractFieldMatrix$2:
    int startRow -> startRow
    int startColumn -> startColumn
    org.apache.commons.math3.FieldElement[][] val$destination -> val$destination
    org.apache.commons.math3.linear.AbstractFieldMatrix this$0 -> this$0
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,org.apache.commons.math3.FieldElement) -> visit
org.apache.commons.math3.linear.AbstractFieldMatrix$3 -> org.apache.commons.math3.linear.AbstractFieldMatrix$3:
    org.apache.commons.math3.linear.FieldMatrix val$out -> val$out
    org.apache.commons.math3.linear.AbstractFieldMatrix this$0 -> this$0
    void visit(int,int,org.apache.commons.math3.FieldElement) -> visit
org.apache.commons.math3.linear.AbstractRealMatrix -> org.apache.commons.math3.linear.AbstractRealMatrix:
    org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT -> DEFAULT_FORMAT
    org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix) -> add
    org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) -> subtract
    org.apache.commons.math3.linear.RealMatrix scalarAdd(double) -> scalarAdd
    org.apache.commons.math3.linear.RealMatrix scalarMultiply(double) -> scalarMultiply
    org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) -> multiply
    org.apache.commons.math3.linear.RealMatrix preMultiply(org.apache.commons.math3.linear.RealMatrix) -> preMultiply
    org.apache.commons.math3.linear.RealMatrix power(int) -> power
    double[][] getData() -> getData
    double getNorm() -> getNorm
    double getFrobeniusNorm() -> getFrobeniusNorm
    org.apache.commons.math3.linear.RealMatrix getSubMatrix(int,int,int,int) -> getSubMatrix
    org.apache.commons.math3.linear.RealMatrix getSubMatrix(int[],int[]) -> getSubMatrix
    void copySubMatrix(int,int,int,int,double[][]) -> copySubMatrix
    void copySubMatrix(int[],int[],double[][]) -> copySubMatrix
    void setSubMatrix(double[][],int,int) -> setSubMatrix
    org.apache.commons.math3.linear.RealMatrix getRowMatrix(int) -> getRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix) -> setRowMatrix
    org.apache.commons.math3.linear.RealMatrix getColumnMatrix(int) -> getColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix) -> setColumnMatrix
    org.apache.commons.math3.linear.RealVector getRowVector(int) -> getRowVector
    void setRowVector(int,org.apache.commons.math3.linear.RealVector) -> setRowVector
    org.apache.commons.math3.linear.RealVector getColumnVector(int) -> getColumnVector
    void setColumnVector(int,org.apache.commons.math3.linear.RealVector) -> setColumnVector
    double[] getRow(int) -> getRow
    void setRow(int,double[]) -> setRow
    double[] getColumn(int) -> getColumn
    void setColumn(int,double[]) -> setColumn
    void addToEntry(int,int,double) -> addToEntry
    void multiplyEntry(int,int,double) -> multiplyEntry
    org.apache.commons.math3.linear.RealMatrix transpose() -> transpose
    boolean isSquare() -> isSquare
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    double getTrace() -> getTrace
    double[] operate(double[]) -> operate
    org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector) -> operate
    double[] preMultiply(double[]) -> preMultiply
    org.apache.commons.math3.linear.RealVector preMultiply(org.apache.commons.math3.linear.RealVector) -> preMultiply
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInColumnOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInOptimizedOrder
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.linear.RealMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.RealMatrix copy() -> copy
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
org.apache.commons.math3.linear.AbstractRealMatrix$1 -> org.apache.commons.math3.linear.AbstractRealMatrix$1:
    double endRow -> endRow
    double columnSum -> columnSum
    double maxColSum -> maxColSum
    org.apache.commons.math3.linear.AbstractRealMatrix this$0 -> this$0
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.AbstractRealMatrix$2 -> org.apache.commons.math3.linear.AbstractRealMatrix$2:
    double sum -> sum
    org.apache.commons.math3.linear.AbstractRealMatrix this$0 -> this$0
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.AbstractRealMatrix$3 -> org.apache.commons.math3.linear.AbstractRealMatrix$3:
    int[] val$selectedRows -> val$selectedRows
    int[] val$selectedColumns -> val$selectedColumns
    org.apache.commons.math3.linear.AbstractRealMatrix this$0 -> this$0
    double visit(int,int,double) -> visit
org.apache.commons.math3.linear.AbstractRealMatrix$4 -> org.apache.commons.math3.linear.AbstractRealMatrix$4:
    int startRow -> startRow
    int startColumn -> startColumn
    double[][] val$destination -> val$destination
    org.apache.commons.math3.linear.AbstractRealMatrix this$0 -> this$0
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,double) -> visit
org.apache.commons.math3.linear.AbstractRealMatrix$5 -> org.apache.commons.math3.linear.AbstractRealMatrix$5:
    org.apache.commons.math3.linear.RealMatrix val$out -> val$out
    org.apache.commons.math3.linear.AbstractRealMatrix this$0 -> this$0
    void visit(int,int,double) -> visit
org.apache.commons.math3.linear.AnyMatrix -> org.apache.commons.math3.linear.AnyMatrix:
    boolean isSquare() -> isSquare
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
org.apache.commons.math3.linear.Array2DRowFieldMatrix -> org.apache.commons.math3.linear.Array2DRowFieldMatrix:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.FieldElement[][] data -> data
    org.apache.commons.math3.linear.FieldMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.FieldMatrix copy() -> copy
    org.apache.commons.math3.linear.Array2DRowFieldMatrix add(org.apache.commons.math3.linear.Array2DRowFieldMatrix) -> add
    org.apache.commons.math3.linear.Array2DRowFieldMatrix subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix) -> subtract
    org.apache.commons.math3.linear.Array2DRowFieldMatrix multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix) -> multiply
    org.apache.commons.math3.FieldElement[][] getData() -> getData
    org.apache.commons.math3.FieldElement[][] getDataRef() -> getDataRef
    void setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int) -> setSubMatrix
    org.apache.commons.math3.FieldElement getEntry(int,int) -> getEntry
    void setEntry(int,int,org.apache.commons.math3.FieldElement) -> setEntry
    void addToEntry(int,int,org.apache.commons.math3.FieldElement) -> addToEntry
    void multiplyEntry(int,int,org.apache.commons.math3.FieldElement) -> multiplyEntry
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    org.apache.commons.math3.FieldElement[] operate(org.apache.commons.math3.FieldElement[]) -> operate
    org.apache.commons.math3.FieldElement[] preMultiply(org.apache.commons.math3.FieldElement[]) -> preMultiply
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement[][] copyOut() -> copyOut
    void copyIn(org.apache.commons.math3.FieldElement[][]) -> copyIn
org.apache.commons.math3.linear.Array2DRowRealMatrix -> org.apache.commons.math3.linear.Array2DRowRealMatrix:
    long serialVersionUID -> serialVersionUID
    double[][] data -> data
    org.apache.commons.math3.linear.RealMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.RealMatrix copy() -> copy
    org.apache.commons.math3.linear.Array2DRowRealMatrix add(org.apache.commons.math3.linear.Array2DRowRealMatrix) -> add
    org.apache.commons.math3.linear.Array2DRowRealMatrix subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix) -> subtract
    org.apache.commons.math3.linear.Array2DRowRealMatrix multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix) -> multiply
    double[][] getData() -> getData
    double[][] getDataRef() -> getDataRef
    void setSubMatrix(double[][],int,int) -> setSubMatrix
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    void addToEntry(int,int,double) -> addToEntry
    void multiplyEntry(int,int,double) -> multiplyEntry
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    double[] operate(double[]) -> operate
    double[] preMultiply(double[]) -> preMultiply
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInColumnOrder
    double[][] copyOut() -> copyOut
    void copyIn(double[][]) -> copyIn
org.apache.commons.math3.linear.ArrayFieldVector -> org.apache.commons.math3.linear.ArrayFieldVector:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.FieldElement[] data -> data
    org.apache.commons.math3.Field field -> field
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.linear.FieldVector copy() -> copy
    org.apache.commons.math3.linear.FieldVector add(org.apache.commons.math3.linear.FieldVector) -> add
    org.apache.commons.math3.linear.ArrayFieldVector add(org.apache.commons.math3.linear.ArrayFieldVector) -> add
    org.apache.commons.math3.linear.FieldVector subtract(org.apache.commons.math3.linear.FieldVector) -> subtract
    org.apache.commons.math3.linear.ArrayFieldVector subtract(org.apache.commons.math3.linear.ArrayFieldVector) -> subtract
    org.apache.commons.math3.linear.FieldVector mapAdd(org.apache.commons.math3.FieldElement) -> mapAdd
    org.apache.commons.math3.linear.FieldVector mapAddToSelf(org.apache.commons.math3.FieldElement) -> mapAddToSelf
    org.apache.commons.math3.linear.FieldVector mapSubtract(org.apache.commons.math3.FieldElement) -> mapSubtract
    org.apache.commons.math3.linear.FieldVector mapSubtractToSelf(org.apache.commons.math3.FieldElement) -> mapSubtractToSelf
    org.apache.commons.math3.linear.FieldVector mapMultiply(org.apache.commons.math3.FieldElement) -> mapMultiply
    org.apache.commons.math3.linear.FieldVector mapMultiplyToSelf(org.apache.commons.math3.FieldElement) -> mapMultiplyToSelf
    org.apache.commons.math3.linear.FieldVector mapDivide(org.apache.commons.math3.FieldElement) -> mapDivide
    org.apache.commons.math3.linear.FieldVector mapDivideToSelf(org.apache.commons.math3.FieldElement) -> mapDivideToSelf
    org.apache.commons.math3.linear.FieldVector mapInv() -> mapInv
    org.apache.commons.math3.linear.FieldVector mapInvToSelf() -> mapInvToSelf
    org.apache.commons.math3.linear.FieldVector ebeMultiply(org.apache.commons.math3.linear.FieldVector) -> ebeMultiply
    org.apache.commons.math3.linear.ArrayFieldVector ebeMultiply(org.apache.commons.math3.linear.ArrayFieldVector) -> ebeMultiply
    org.apache.commons.math3.linear.FieldVector ebeDivide(org.apache.commons.math3.linear.FieldVector) -> ebeDivide
    org.apache.commons.math3.linear.ArrayFieldVector ebeDivide(org.apache.commons.math3.linear.ArrayFieldVector) -> ebeDivide
    org.apache.commons.math3.FieldElement[] getData() -> getData
    org.apache.commons.math3.FieldElement[] getDataRef() -> getDataRef
    org.apache.commons.math3.FieldElement dotProduct(org.apache.commons.math3.linear.FieldVector) -> dotProduct
    org.apache.commons.math3.FieldElement dotProduct(org.apache.commons.math3.linear.ArrayFieldVector) -> dotProduct
    org.apache.commons.math3.linear.FieldVector projection(org.apache.commons.math3.linear.FieldVector) -> projection
    org.apache.commons.math3.linear.ArrayFieldVector projection(org.apache.commons.math3.linear.ArrayFieldVector) -> projection
    org.apache.commons.math3.linear.FieldMatrix outerProduct(org.apache.commons.math3.linear.FieldVector) -> outerProduct
    org.apache.commons.math3.linear.FieldMatrix outerProduct(org.apache.commons.math3.linear.ArrayFieldVector) -> outerProduct
    org.apache.commons.math3.FieldElement getEntry(int) -> getEntry
    int getDimension() -> getDimension
    org.apache.commons.math3.linear.FieldVector append(org.apache.commons.math3.linear.FieldVector) -> append
    org.apache.commons.math3.linear.ArrayFieldVector append(org.apache.commons.math3.linear.ArrayFieldVector) -> append
    org.apache.commons.math3.linear.FieldVector append(org.apache.commons.math3.FieldElement) -> append
    org.apache.commons.math3.linear.FieldVector getSubVector(int,int) -> getSubVector
    void setEntry(int,org.apache.commons.math3.FieldElement) -> setEntry
    void setSubVector(int,org.apache.commons.math3.linear.FieldVector) -> setSubVector
    void set(int,org.apache.commons.math3.linear.ArrayFieldVector) -> set
    void set(org.apache.commons.math3.FieldElement) -> set
    org.apache.commons.math3.FieldElement[] toArray() -> toArray
    void checkVectorDimensions(org.apache.commons.math3.linear.FieldVector) -> checkVectorDimensions
    void checkVectorDimensions(int) -> checkVectorDimensions
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int) -> walkInOptimizedOrder
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void checkIndex(int) -> checkIndex
    void checkIndices(int,int) -> checkIndices
org.apache.commons.math3.linear.ArrayRealVector -> org.apache.commons.math3.linear.ArrayRealVector:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.linear.RealVectorFormat DEFAULT_FORMAT -> DEFAULT_FORMAT
    double[] data -> data
    org.apache.commons.math3.linear.ArrayRealVector copy() -> copy
    org.apache.commons.math3.linear.ArrayRealVector add(org.apache.commons.math3.linear.RealVector) -> add
    org.apache.commons.math3.linear.ArrayRealVector subtract(org.apache.commons.math3.linear.RealVector) -> subtract
    org.apache.commons.math3.linear.ArrayRealVector map(org.apache.commons.math3.analysis.UnivariateFunction) -> map
    org.apache.commons.math3.linear.ArrayRealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) -> mapToSelf
    org.apache.commons.math3.linear.RealVector mapAddToSelf(double) -> mapAddToSelf
    org.apache.commons.math3.linear.RealVector mapSubtractToSelf(double) -> mapSubtractToSelf
    org.apache.commons.math3.linear.RealVector mapMultiplyToSelf(double) -> mapMultiplyToSelf
    org.apache.commons.math3.linear.RealVector mapDivideToSelf(double) -> mapDivideToSelf
    org.apache.commons.math3.linear.ArrayRealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) -> ebeMultiply
    org.apache.commons.math3.linear.ArrayRealVector ebeDivide(org.apache.commons.math3.linear.RealVector) -> ebeDivide
    double[] getDataRef() -> getDataRef
    double dotProduct(org.apache.commons.math3.linear.RealVector) -> dotProduct
    double getNorm() -> getNorm
    double getL1Norm() -> getL1Norm
    double getLInfNorm() -> getLInfNorm
    double getDistance(org.apache.commons.math3.linear.RealVector) -> getDistance
    double getL1Distance(org.apache.commons.math3.linear.RealVector) -> getL1Distance
    double getLInfDistance(org.apache.commons.math3.linear.RealVector) -> getLInfDistance
    org.apache.commons.math3.linear.RealMatrix outerProduct(org.apache.commons.math3.linear.RealVector) -> outerProduct
    double getEntry(int) -> getEntry
    int getDimension() -> getDimension
    org.apache.commons.math3.linear.RealVector append(org.apache.commons.math3.linear.RealVector) -> append
    org.apache.commons.math3.linear.ArrayRealVector append(org.apache.commons.math3.linear.ArrayRealVector) -> append
    org.apache.commons.math3.linear.RealVector append(double) -> append
    org.apache.commons.math3.linear.RealVector getSubVector(int,int) -> getSubVector
    void setEntry(int,double) -> setEntry
    void addToEntry(int,double) -> addToEntry
    void setSubVector(int,org.apache.commons.math3.linear.RealVector) -> setSubVector
    void setSubVector(int,double[]) -> setSubVector
    void set(double) -> set
    double[] toArray() -> toArray
    java.lang.String toString() -> toString
    void checkVectorDimensions(org.apache.commons.math3.linear.RealVector) -> checkVectorDimensions
    void checkVectorDimensions(int) -> checkVectorDimensions
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.linear.ArrayRealVector combine(double,double,org.apache.commons.math3.linear.RealVector) -> combine
    org.apache.commons.math3.linear.ArrayRealVector combineToSelf(double,double,org.apache.commons.math3.linear.RealVector) -> combineToSelf
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor) -> walkInDefaultOrder
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int) -> walkInDefaultOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int) -> walkInOptimizedOrder
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor) -> walkInDefaultOrder
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int) -> walkInDefaultOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int) -> walkInOptimizedOrder
    org.apache.commons.math3.linear.RealVector combineToSelf(double,double,org.apache.commons.math3.linear.RealVector) -> combineToSelf
    org.apache.commons.math3.linear.RealVector combine(double,double,org.apache.commons.math3.linear.RealVector) -> combine
    org.apache.commons.math3.linear.RealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) -> mapToSelf
    org.apache.commons.math3.linear.RealVector map(org.apache.commons.math3.analysis.UnivariateFunction) -> map
    org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) -> ebeMultiply
    org.apache.commons.math3.linear.RealVector ebeDivide(org.apache.commons.math3.linear.RealVector) -> ebeDivide
    org.apache.commons.math3.linear.RealVector copy() -> copy
    org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector) -> subtract
    org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector) -> add
org.apache.commons.math3.linear.BiDiagonalTransformer -> org.apache.commons.math3.linear.BiDiagonalTransformer:
    double[][] householderVectors -> householderVectors
    double[] main -> main
    double[] secondary -> secondary
    org.apache.commons.math3.linear.RealMatrix cachedU -> cachedU
    org.apache.commons.math3.linear.RealMatrix cachedB -> cachedB
    org.apache.commons.math3.linear.RealMatrix cachedV -> cachedV
    org.apache.commons.math3.linear.RealMatrix getU() -> getU
    org.apache.commons.math3.linear.RealMatrix getB() -> getB
    org.apache.commons.math3.linear.RealMatrix getV() -> getV
    double[][] getHouseholderVectorsRef() -> getHouseholderVectorsRef
    double[] getMainDiagonalRef() -> getMainDiagonalRef
    double[] getSecondaryDiagonalRef() -> getSecondaryDiagonalRef
    boolean isUpperBiDiagonal() -> isUpperBiDiagonal
    void transformToUpperBiDiagonal() -> transformToUpperBiDiagonal
    void transformToLowerBiDiagonal() -> transformToLowerBiDiagonal
org.apache.commons.math3.linear.BlockFieldMatrix -> org.apache.commons.math3.linear.BlockFieldMatrix:
    int BLOCK_SIZE -> BLOCK_SIZE
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.FieldElement[][] blocks -> blocks
    int rows -> rows
    int columns -> columns
    int blockRows -> blockRows
    int blockColumns -> blockColumns
    org.apache.commons.math3.FieldElement[][] toBlocksLayout(org.apache.commons.math3.FieldElement[][]) -> toBlocksLayout
    org.apache.commons.math3.FieldElement[][] createBlocksLayout(org.apache.commons.math3.Field,int,int) -> createBlocksLayout
    org.apache.commons.math3.linear.FieldMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.FieldMatrix copy() -> copy
    org.apache.commons.math3.linear.FieldMatrix add(org.apache.commons.math3.linear.FieldMatrix) -> add
    org.apache.commons.math3.linear.BlockFieldMatrix add(org.apache.commons.math3.linear.BlockFieldMatrix) -> add
    org.apache.commons.math3.linear.FieldMatrix subtract(org.apache.commons.math3.linear.FieldMatrix) -> subtract
    org.apache.commons.math3.linear.BlockFieldMatrix subtract(org.apache.commons.math3.linear.BlockFieldMatrix) -> subtract
    org.apache.commons.math3.linear.FieldMatrix scalarAdd(org.apache.commons.math3.FieldElement) -> scalarAdd
    org.apache.commons.math3.linear.FieldMatrix scalarMultiply(org.apache.commons.math3.FieldElement) -> scalarMultiply
    org.apache.commons.math3.linear.FieldMatrix multiply(org.apache.commons.math3.linear.FieldMatrix) -> multiply
    org.apache.commons.math3.linear.BlockFieldMatrix multiply(org.apache.commons.math3.linear.BlockFieldMatrix) -> multiply
    org.apache.commons.math3.FieldElement[][] getData() -> getData
    org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int,int,int,int) -> getSubMatrix
    void copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int) -> copyBlockPart
    void setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int) -> setSubMatrix
    org.apache.commons.math3.linear.FieldMatrix getRowMatrix(int) -> getRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix) -> setRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix) -> setRowMatrix
    org.apache.commons.math3.linear.FieldMatrix getColumnMatrix(int) -> getColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix) -> setColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix) -> setColumnMatrix
    org.apache.commons.math3.linear.FieldVector getRowVector(int) -> getRowVector
    void setRowVector(int,org.apache.commons.math3.linear.FieldVector) -> setRowVector
    org.apache.commons.math3.linear.FieldVector getColumnVector(int) -> getColumnVector
    void setColumnVector(int,org.apache.commons.math3.linear.FieldVector) -> setColumnVector
    org.apache.commons.math3.FieldElement[] getRow(int) -> getRow
    void setRow(int,org.apache.commons.math3.FieldElement[]) -> setRow
    org.apache.commons.math3.FieldElement[] getColumn(int) -> getColumn
    void setColumn(int,org.apache.commons.math3.FieldElement[]) -> setColumn
    org.apache.commons.math3.FieldElement getEntry(int,int) -> getEntry
    void setEntry(int,int,org.apache.commons.math3.FieldElement) -> setEntry
    void addToEntry(int,int,org.apache.commons.math3.FieldElement) -> addToEntry
    void multiplyEntry(int,int,org.apache.commons.math3.FieldElement) -> multiplyEntry
    org.apache.commons.math3.linear.FieldMatrix transpose() -> transpose
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    org.apache.commons.math3.FieldElement[] operate(org.apache.commons.math3.FieldElement[]) -> operate
    org.apache.commons.math3.FieldElement[] preMultiply(org.apache.commons.math3.FieldElement[]) -> preMultiply
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInOptimizedOrder
    int blockHeight(int) -> blockHeight
    int blockWidth(int) -> blockWidth
org.apache.commons.math3.linear.BlockRealMatrix -> org.apache.commons.math3.linear.BlockRealMatrix:
    int BLOCK_SIZE -> BLOCK_SIZE
    long serialVersionUID -> serialVersionUID
    double[][] blocks -> blocks
    int rows -> rows
    int columns -> columns
    int blockRows -> blockRows
    int blockColumns -> blockColumns
    double[][] toBlocksLayout(double[][]) -> toBlocksLayout
    double[][] createBlocksLayout(int,int) -> createBlocksLayout
    org.apache.commons.math3.linear.BlockRealMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.BlockRealMatrix copy() -> copy
    org.apache.commons.math3.linear.BlockRealMatrix add(org.apache.commons.math3.linear.RealMatrix) -> add
    org.apache.commons.math3.linear.BlockRealMatrix add(org.apache.commons.math3.linear.BlockRealMatrix) -> add
    org.apache.commons.math3.linear.BlockRealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) -> subtract
    org.apache.commons.math3.linear.BlockRealMatrix subtract(org.apache.commons.math3.linear.BlockRealMatrix) -> subtract
    org.apache.commons.math3.linear.BlockRealMatrix scalarAdd(double) -> scalarAdd
    org.apache.commons.math3.linear.RealMatrix scalarMultiply(double) -> scalarMultiply
    org.apache.commons.math3.linear.BlockRealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) -> multiply
    org.apache.commons.math3.linear.BlockRealMatrix multiply(org.apache.commons.math3.linear.BlockRealMatrix) -> multiply
    double[][] getData() -> getData
    double getNorm() -> getNorm
    double getFrobeniusNorm() -> getFrobeniusNorm
    org.apache.commons.math3.linear.BlockRealMatrix getSubMatrix(int,int,int,int) -> getSubMatrix
    void copyBlockPart(double[],int,int,int,int,int,double[],int,int,int) -> copyBlockPart
    void setSubMatrix(double[][],int,int) -> setSubMatrix
    org.apache.commons.math3.linear.BlockRealMatrix getRowMatrix(int) -> getRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix) -> setRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix) -> setRowMatrix
    org.apache.commons.math3.linear.BlockRealMatrix getColumnMatrix(int) -> getColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix) -> setColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix) -> setColumnMatrix
    org.apache.commons.math3.linear.RealVector getRowVector(int) -> getRowVector
    void setRowVector(int,org.apache.commons.math3.linear.RealVector) -> setRowVector
    org.apache.commons.math3.linear.RealVector getColumnVector(int) -> getColumnVector
    void setColumnVector(int,org.apache.commons.math3.linear.RealVector) -> setColumnVector
    double[] getRow(int) -> getRow
    void setRow(int,double[]) -> setRow
    double[] getColumn(int) -> getColumn
    void setColumn(int,double[]) -> setColumn
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    void addToEntry(int,int,double) -> addToEntry
    void multiplyEntry(int,int,double) -> multiplyEntry
    org.apache.commons.math3.linear.BlockRealMatrix transpose() -> transpose
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    double[] operate(double[]) -> operate
    double[] preMultiply(double[]) -> preMultiply
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInOptimizedOrder
    int blockHeight(int) -> blockHeight
    int blockWidth(int) -> blockWidth
    org.apache.commons.math3.linear.RealMatrix copy() -> copy
    org.apache.commons.math3.linear.RealMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.RealMatrix transpose() -> transpose
    org.apache.commons.math3.linear.RealMatrix getColumnMatrix(int) -> getColumnMatrix
    org.apache.commons.math3.linear.RealMatrix getRowMatrix(int) -> getRowMatrix
    org.apache.commons.math3.linear.RealMatrix getSubMatrix(int,int,int,int) -> getSubMatrix
    org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) -> multiply
    org.apache.commons.math3.linear.RealMatrix scalarAdd(double) -> scalarAdd
    org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) -> subtract
    org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix) -> add
org.apache.commons.math3.linear.CholeskyDecomposition -> org.apache.commons.math3.linear.CholeskyDecomposition:
    double DEFAULT_RELATIVE_SYMMETRY_THRESHOLD -> DEFAULT_RELATIVE_SYMMETRY_THRESHOLD
    double DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD -> DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD
    double[][] lTData -> lTData
    org.apache.commons.math3.linear.RealMatrix cachedL -> cachedL
    org.apache.commons.math3.linear.RealMatrix cachedLT -> cachedLT
    org.apache.commons.math3.linear.RealMatrix getL() -> getL
    org.apache.commons.math3.linear.RealMatrix getLT() -> getLT
    double getDeterminant() -> getDeterminant
    org.apache.commons.math3.linear.DecompositionSolver getSolver() -> getSolver
org.apache.commons.math3.linear.CholeskyDecomposition$1 -> org.apache.commons.math3.linear.CholeskyDecomposition$1:
org.apache.commons.math3.linear.CholeskyDecomposition$Solver -> org.apache.commons.math3.linear.CholeskyDecomposition$Solver:
    double[][] lTData -> lTData
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix) -> solve
    org.apache.commons.math3.linear.RealMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.ConjugateGradient -> org.apache.commons.math3.linear.ConjugateGradient:
    java.lang.String OPERATOR -> OPERATOR
    java.lang.String VECTOR -> VECTOR
    boolean check -> check
    double delta -> delta
    boolean getCheck() -> getCheck
    org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solveInPlace
org.apache.commons.math3.linear.DecompositionSolver -> org.apache.commons.math3.linear.DecompositionSolver:
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix) -> solve
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.RealMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor -> org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor:
    org.apache.commons.math3.FieldElement zero -> zero
    void start(int,int,int,int,int,int) -> start
    org.apache.commons.math3.FieldElement visit(int,int,org.apache.commons.math3.FieldElement) -> visit
    org.apache.commons.math3.FieldElement end() -> end
org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor -> org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor:
    org.apache.commons.math3.FieldElement zero -> zero
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,org.apache.commons.math3.FieldElement) -> visit
    org.apache.commons.math3.FieldElement end() -> end
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent -> org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.linear.RealVector b -> b
    org.apache.commons.math3.linear.RealVector r -> r
    double rnorm -> rnorm
    org.apache.commons.math3.linear.RealVector x -> x
    double getNormOfResidual() -> getNormOfResidual
    org.apache.commons.math3.linear.RealVector getResidual() -> getResidual
    org.apache.commons.math3.linear.RealVector getRightHandSideVector() -> getRightHandSideVector
    org.apache.commons.math3.linear.RealVector getSolution() -> getSolution
    boolean providesResidual() -> providesResidual
org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor -> org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor:
    void start(int,int,int,int,int,int) -> start
    double visit(int,int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor -> org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.DiagonalMatrix -> org.apache.commons.math3.linear.DiagonalMatrix:
    long serialVersionUID -> serialVersionUID
    double[] data -> data
    org.apache.commons.math3.linear.RealMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.RealMatrix copy() -> copy
    org.apache.commons.math3.linear.DiagonalMatrix add(org.apache.commons.math3.linear.DiagonalMatrix) -> add
    org.apache.commons.math3.linear.DiagonalMatrix subtract(org.apache.commons.math3.linear.DiagonalMatrix) -> subtract
    org.apache.commons.math3.linear.DiagonalMatrix multiply(org.apache.commons.math3.linear.DiagonalMatrix) -> multiply
    org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) -> multiply
    double[][] getData() -> getData
    double[] getDataRef() -> getDataRef
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    void addToEntry(int,int,double) -> addToEntry
    void multiplyEntry(int,int,double) -> multiplyEntry
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    double[] operate(double[]) -> operate
    double[] preMultiply(double[]) -> preMultiply
    org.apache.commons.math3.linear.RealVector preMultiply(org.apache.commons.math3.linear.RealVector) -> preMultiply
    void ensureZero(double) -> ensureZero
    org.apache.commons.math3.linear.DiagonalMatrix inverse() -> inverse
    org.apache.commons.math3.linear.DiagonalMatrix inverse(double) -> inverse
    boolean isSingular(double) -> isSingular
org.apache.commons.math3.linear.EigenDecomposition -> org.apache.commons.math3.linear.EigenDecomposition:
    double EPSILON -> EPSILON
    byte maxIter -> maxIter
    double[] main -> main
    double[] secondary -> secondary
    org.apache.commons.math3.linear.TriDiagonalTransformer transformer -> transformer
    double[] realEigenvalues -> realEigenvalues
    double[] imagEigenvalues -> imagEigenvalues
    org.apache.commons.math3.linear.ArrayRealVector[] eigenvectors -> eigenvectors
    org.apache.commons.math3.linear.RealMatrix cachedV -> cachedV
    org.apache.commons.math3.linear.RealMatrix cachedD -> cachedD
    org.apache.commons.math3.linear.RealMatrix cachedVt -> cachedVt
    boolean isSymmetric -> isSymmetric
    org.apache.commons.math3.linear.RealMatrix getV() -> getV
    org.apache.commons.math3.linear.RealMatrix getD() -> getD
    org.apache.commons.math3.linear.RealMatrix getVT() -> getVT
    boolean hasComplexEigenvalues() -> hasComplexEigenvalues
    double[] getRealEigenvalues() -> getRealEigenvalues
    double getRealEigenvalue(int) -> getRealEigenvalue
    double[] getImagEigenvalues() -> getImagEigenvalues
    double getImagEigenvalue(int) -> getImagEigenvalue
    org.apache.commons.math3.linear.RealVector getEigenvector(int) -> getEigenvector
    double getDeterminant() -> getDeterminant
    org.apache.commons.math3.linear.RealMatrix getSquareRoot() -> getSquareRoot
    org.apache.commons.math3.linear.DecompositionSolver getSolver() -> getSolver
    void transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix) -> transformToTridiagonal
    void findEigenVectors(double[][]) -> findEigenVectors
    org.apache.commons.math3.linear.SchurTransformer transformToSchur(org.apache.commons.math3.linear.RealMatrix) -> transformToSchur
    org.apache.commons.math3.complex.Complex cdiv(double,double,double,double) -> cdiv
    void findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer) -> findEigenVectorsFromSchur
org.apache.commons.math3.linear.EigenDecomposition$1 -> org.apache.commons.math3.linear.EigenDecomposition$1:
org.apache.commons.math3.linear.EigenDecomposition$Solver -> org.apache.commons.math3.linear.EigenDecomposition$Solver:
    double[] realEigenvalues -> realEigenvalues
    double[] imagEigenvalues -> imagEigenvalues
    org.apache.commons.math3.linear.ArrayRealVector[] eigenvectors -> eigenvectors
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix) -> solve
    boolean isNonSingular() -> isNonSingular
    double eigenvalueNorm(int) -> eigenvalueNorm
    org.apache.commons.math3.linear.RealMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.FieldDecompositionSolver -> org.apache.commons.math3.linear.FieldDecompositionSolver:
    org.apache.commons.math3.linear.FieldVector solve(org.apache.commons.math3.linear.FieldVector) -> solve
    org.apache.commons.math3.linear.FieldMatrix solve(org.apache.commons.math3.linear.FieldMatrix) -> solve
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.FieldMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.FieldLUDecomposition -> org.apache.commons.math3.linear.FieldLUDecomposition:
    org.apache.commons.math3.Field field -> field
    org.apache.commons.math3.FieldElement[][] lu -> lu
    int[] pivot -> pivot
    boolean even -> even
    boolean singular -> singular
    org.apache.commons.math3.linear.FieldMatrix cachedL -> cachedL
    org.apache.commons.math3.linear.FieldMatrix cachedU -> cachedU
    org.apache.commons.math3.linear.FieldMatrix cachedP -> cachedP
    org.apache.commons.math3.linear.FieldMatrix getL() -> getL
    org.apache.commons.math3.linear.FieldMatrix getU() -> getU
    org.apache.commons.math3.linear.FieldMatrix getP() -> getP
    int[] getPivot() -> getPivot
    org.apache.commons.math3.FieldElement getDeterminant() -> getDeterminant
    org.apache.commons.math3.linear.FieldDecompositionSolver getSolver() -> getSolver
org.apache.commons.math3.linear.FieldLUDecomposition$1 -> org.apache.commons.math3.linear.FieldLUDecomposition$1:
org.apache.commons.math3.linear.FieldLUDecomposition$Solver -> org.apache.commons.math3.linear.FieldLUDecomposition$Solver:
    org.apache.commons.math3.Field field -> field
    org.apache.commons.math3.FieldElement[][] lu -> lu
    int[] pivot -> pivot
    boolean singular -> singular
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.FieldVector solve(org.apache.commons.math3.linear.FieldVector) -> solve
    org.apache.commons.math3.linear.ArrayFieldVector solve(org.apache.commons.math3.linear.ArrayFieldVector) -> solve
    org.apache.commons.math3.linear.FieldMatrix solve(org.apache.commons.math3.linear.FieldMatrix) -> solve
    org.apache.commons.math3.linear.FieldMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.FieldMatrix -> org.apache.commons.math3.linear.FieldMatrix:
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.linear.FieldMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.FieldMatrix copy() -> copy
    org.apache.commons.math3.linear.FieldMatrix add(org.apache.commons.math3.linear.FieldMatrix) -> add
    org.apache.commons.math3.linear.FieldMatrix subtract(org.apache.commons.math3.linear.FieldMatrix) -> subtract
    org.apache.commons.math3.linear.FieldMatrix scalarAdd(org.apache.commons.math3.FieldElement) -> scalarAdd
    org.apache.commons.math3.linear.FieldMatrix scalarMultiply(org.apache.commons.math3.FieldElement) -> scalarMultiply
    org.apache.commons.math3.linear.FieldMatrix multiply(org.apache.commons.math3.linear.FieldMatrix) -> multiply
    org.apache.commons.math3.linear.FieldMatrix preMultiply(org.apache.commons.math3.linear.FieldMatrix) -> preMultiply
    org.apache.commons.math3.linear.FieldMatrix power(int) -> power
    org.apache.commons.math3.FieldElement[][] getData() -> getData
    org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int,int,int,int) -> getSubMatrix
    org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int[],int[]) -> getSubMatrix
    void copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][]) -> copySubMatrix
    void copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][]) -> copySubMatrix
    void setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int) -> setSubMatrix
    org.apache.commons.math3.linear.FieldMatrix getRowMatrix(int) -> getRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix) -> setRowMatrix
    org.apache.commons.math3.linear.FieldMatrix getColumnMatrix(int) -> getColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix) -> setColumnMatrix
    org.apache.commons.math3.linear.FieldVector getRowVector(int) -> getRowVector
    void setRowVector(int,org.apache.commons.math3.linear.FieldVector) -> setRowVector
    org.apache.commons.math3.linear.FieldVector getColumnVector(int) -> getColumnVector
    void setColumnVector(int,org.apache.commons.math3.linear.FieldVector) -> setColumnVector
    org.apache.commons.math3.FieldElement[] getRow(int) -> getRow
    void setRow(int,org.apache.commons.math3.FieldElement[]) -> setRow
    org.apache.commons.math3.FieldElement[] getColumn(int) -> getColumn
    void setColumn(int,org.apache.commons.math3.FieldElement[]) -> setColumn
    org.apache.commons.math3.FieldElement getEntry(int,int) -> getEntry
    void setEntry(int,int,org.apache.commons.math3.FieldElement) -> setEntry
    void addToEntry(int,int,org.apache.commons.math3.FieldElement) -> addToEntry
    void multiplyEntry(int,int,org.apache.commons.math3.FieldElement) -> multiplyEntry
    org.apache.commons.math3.linear.FieldMatrix transpose() -> transpose
    org.apache.commons.math3.FieldElement getTrace() -> getTrace
    org.apache.commons.math3.FieldElement[] operate(org.apache.commons.math3.FieldElement[]) -> operate
    org.apache.commons.math3.linear.FieldVector operate(org.apache.commons.math3.linear.FieldVector) -> operate
    org.apache.commons.math3.FieldElement[] preMultiply(org.apache.commons.math3.FieldElement[]) -> preMultiply
    org.apache.commons.math3.linear.FieldVector preMultiply(org.apache.commons.math3.linear.FieldVector) -> preMultiply
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInColumnOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int) -> walkInOptimizedOrder
org.apache.commons.math3.linear.FieldMatrixChangingVisitor -> org.apache.commons.math3.linear.FieldMatrixChangingVisitor:
    void start(int,int,int,int,int,int) -> start
    org.apache.commons.math3.FieldElement visit(int,int,org.apache.commons.math3.FieldElement) -> visit
    org.apache.commons.math3.FieldElement end() -> end
org.apache.commons.math3.linear.FieldMatrixPreservingVisitor -> org.apache.commons.math3.linear.FieldMatrixPreservingVisitor:
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,org.apache.commons.math3.FieldElement) -> visit
    org.apache.commons.math3.FieldElement end() -> end
org.apache.commons.math3.linear.FieldVector -> org.apache.commons.math3.linear.FieldVector:
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.linear.FieldVector copy() -> copy
    org.apache.commons.math3.linear.FieldVector add(org.apache.commons.math3.linear.FieldVector) -> add
    org.apache.commons.math3.linear.FieldVector subtract(org.apache.commons.math3.linear.FieldVector) -> subtract
    org.apache.commons.math3.linear.FieldVector mapAdd(org.apache.commons.math3.FieldElement) -> mapAdd
    org.apache.commons.math3.linear.FieldVector mapAddToSelf(org.apache.commons.math3.FieldElement) -> mapAddToSelf
    org.apache.commons.math3.linear.FieldVector mapSubtract(org.apache.commons.math3.FieldElement) -> mapSubtract
    org.apache.commons.math3.linear.FieldVector mapSubtractToSelf(org.apache.commons.math3.FieldElement) -> mapSubtractToSelf
    org.apache.commons.math3.linear.FieldVector mapMultiply(org.apache.commons.math3.FieldElement) -> mapMultiply
    org.apache.commons.math3.linear.FieldVector mapMultiplyToSelf(org.apache.commons.math3.FieldElement) -> mapMultiplyToSelf
    org.apache.commons.math3.linear.FieldVector mapDivide(org.apache.commons.math3.FieldElement) -> mapDivide
    org.apache.commons.math3.linear.FieldVector mapDivideToSelf(org.apache.commons.math3.FieldElement) -> mapDivideToSelf
    org.apache.commons.math3.linear.FieldVector mapInv() -> mapInv
    org.apache.commons.math3.linear.FieldVector mapInvToSelf() -> mapInvToSelf
    org.apache.commons.math3.linear.FieldVector ebeMultiply(org.apache.commons.math3.linear.FieldVector) -> ebeMultiply
    org.apache.commons.math3.linear.FieldVector ebeDivide(org.apache.commons.math3.linear.FieldVector) -> ebeDivide
    org.apache.commons.math3.FieldElement[] getData() -> getData
    org.apache.commons.math3.FieldElement dotProduct(org.apache.commons.math3.linear.FieldVector) -> dotProduct
    org.apache.commons.math3.linear.FieldVector projection(org.apache.commons.math3.linear.FieldVector) -> projection
    org.apache.commons.math3.linear.FieldMatrix outerProduct(org.apache.commons.math3.linear.FieldVector) -> outerProduct
    org.apache.commons.math3.FieldElement getEntry(int) -> getEntry
    void setEntry(int,org.apache.commons.math3.FieldElement) -> setEntry
    int getDimension() -> getDimension
    org.apache.commons.math3.linear.FieldVector append(org.apache.commons.math3.linear.FieldVector) -> append
    org.apache.commons.math3.linear.FieldVector append(org.apache.commons.math3.FieldElement) -> append
    org.apache.commons.math3.linear.FieldVector getSubVector(int,int) -> getSubVector
    void setSubVector(int,org.apache.commons.math3.linear.FieldVector) -> setSubVector
    void set(org.apache.commons.math3.FieldElement) -> set
    org.apache.commons.math3.FieldElement[] toArray() -> toArray
org.apache.commons.math3.linear.FieldVectorChangingVisitor -> org.apache.commons.math3.linear.FieldVectorChangingVisitor:
    void start(int,int,int) -> start
    org.apache.commons.math3.FieldElement visit(int,org.apache.commons.math3.FieldElement) -> visit
    org.apache.commons.math3.FieldElement end() -> end
org.apache.commons.math3.linear.FieldVectorPreservingVisitor -> org.apache.commons.math3.linear.FieldVectorPreservingVisitor:
    void start(int,int,int) -> start
    void visit(int,org.apache.commons.math3.FieldElement) -> visit
    org.apache.commons.math3.FieldElement end() -> end
org.apache.commons.math3.linear.HessenbergTransformer -> org.apache.commons.math3.linear.HessenbergTransformer:
    double[][] householderVectors -> householderVectors
    double[] ort -> ort
    org.apache.commons.math3.linear.RealMatrix cachedP -> cachedP
    org.apache.commons.math3.linear.RealMatrix cachedPt -> cachedPt
    org.apache.commons.math3.linear.RealMatrix cachedH -> cachedH
    org.apache.commons.math3.linear.RealMatrix getP() -> getP
    org.apache.commons.math3.linear.RealMatrix getPT() -> getPT
    org.apache.commons.math3.linear.RealMatrix getH() -> getH
    double[][] getHouseholderVectorsRef() -> getHouseholderVectorsRef
    void transform() -> transform
org.apache.commons.math3.linear.IllConditionedOperatorException -> org.apache.commons.math3.linear.IllConditionedOperatorException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.linear.IterativeLinearSolver -> org.apache.commons.math3.linear.IterativeLinearSolver:
    org.apache.commons.math3.util.IterationManager manager -> manager
    void checkParameters(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> checkParameters
    org.apache.commons.math3.util.IterationManager getIterationManager() -> getIterationManager
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solveInPlace
org.apache.commons.math3.linear.IterativeLinearSolverEvent -> org.apache.commons.math3.linear.IterativeLinearSolverEvent:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.linear.RealVector getRightHandSideVector() -> getRightHandSideVector
    double getNormOfResidual() -> getNormOfResidual
    org.apache.commons.math3.linear.RealVector getResidual() -> getResidual
    org.apache.commons.math3.linear.RealVector getSolution() -> getSolution
    boolean providesResidual() -> providesResidual
org.apache.commons.math3.linear.JacobiPreconditioner -> org.apache.commons.math3.linear.JacobiPreconditioner:
    org.apache.commons.math3.linear.ArrayRealVector diag -> diag
    org.apache.commons.math3.linear.JacobiPreconditioner create(org.apache.commons.math3.linear.RealLinearOperator) -> create
    int getColumnDimension() -> getColumnDimension
    int getRowDimension() -> getRowDimension
    org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector) -> operate
    org.apache.commons.math3.linear.RealLinearOperator sqrt() -> sqrt
org.apache.commons.math3.linear.JacobiPreconditioner$1 -> org.apache.commons.math3.linear.JacobiPreconditioner$1:
    org.apache.commons.math3.linear.RealVector val$sqrtDiag -> val$sqrtDiag
    org.apache.commons.math3.linear.JacobiPreconditioner this$0 -> this$0
    org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector) -> operate
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
org.apache.commons.math3.linear.LUDecomposition -> org.apache.commons.math3.linear.LUDecomposition:
    double DEFAULT_TOO_SMALL -> DEFAULT_TOO_SMALL
    double[][] lu -> lu
    int[] pivot -> pivot
    boolean even -> even
    boolean singular -> singular
    org.apache.commons.math3.linear.RealMatrix cachedL -> cachedL
    org.apache.commons.math3.linear.RealMatrix cachedU -> cachedU
    org.apache.commons.math3.linear.RealMatrix cachedP -> cachedP
    org.apache.commons.math3.linear.RealMatrix getL() -> getL
    org.apache.commons.math3.linear.RealMatrix getU() -> getU
    org.apache.commons.math3.linear.RealMatrix getP() -> getP
    int[] getPivot() -> getPivot
    double getDeterminant() -> getDeterminant
    org.apache.commons.math3.linear.DecompositionSolver getSolver() -> getSolver
org.apache.commons.math3.linear.LUDecomposition$1 -> org.apache.commons.math3.linear.LUDecomposition$1:
org.apache.commons.math3.linear.LUDecomposition$Solver -> org.apache.commons.math3.linear.LUDecomposition$Solver:
    double[][] lu -> lu
    int[] pivot -> pivot
    boolean singular -> singular
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix) -> solve
    org.apache.commons.math3.linear.RealMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.MatrixDimensionMismatchException -> org.apache.commons.math3.linear.MatrixDimensionMismatchException:
    long serialVersionUID -> serialVersionUID
    int getWrongRowDimension() -> getWrongRowDimension
    int getExpectedRowDimension() -> getExpectedRowDimension
    int getWrongColumnDimension() -> getWrongColumnDimension
    int getExpectedColumnDimension() -> getExpectedColumnDimension
org.apache.commons.math3.linear.MatrixUtils -> org.apache.commons.math3.linear.MatrixUtils:
    org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT -> DEFAULT_FORMAT
    org.apache.commons.math3.linear.RealMatrixFormat OCTAVE_FORMAT -> OCTAVE_FORMAT
    org.apache.commons.math3.linear.RealMatrix createRealMatrix(int,int) -> createRealMatrix
    org.apache.commons.math3.linear.FieldMatrix createFieldMatrix(org.apache.commons.math3.Field,int,int) -> createFieldMatrix
    org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][]) -> createRealMatrix
    org.apache.commons.math3.linear.FieldMatrix createFieldMatrix(org.apache.commons.math3.FieldElement[][]) -> createFieldMatrix
    org.apache.commons.math3.linear.RealMatrix createRealIdentityMatrix(int) -> createRealIdentityMatrix
    org.apache.commons.math3.linear.FieldMatrix createFieldIdentityMatrix(org.apache.commons.math3.Field,int) -> createFieldIdentityMatrix
    org.apache.commons.math3.linear.RealMatrix createRealDiagonalMatrix(double[]) -> createRealDiagonalMatrix
    org.apache.commons.math3.linear.FieldMatrix createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[]) -> createFieldDiagonalMatrix
    org.apache.commons.math3.linear.RealVector createRealVector(double[]) -> createRealVector
    org.apache.commons.math3.linear.FieldVector createFieldVector(org.apache.commons.math3.FieldElement[]) -> createFieldVector
    org.apache.commons.math3.linear.RealMatrix createRowRealMatrix(double[]) -> createRowRealMatrix
    org.apache.commons.math3.linear.FieldMatrix createRowFieldMatrix(org.apache.commons.math3.FieldElement[]) -> createRowFieldMatrix
    org.apache.commons.math3.linear.RealMatrix createColumnRealMatrix(double[]) -> createColumnRealMatrix
    org.apache.commons.math3.linear.FieldMatrix createColumnFieldMatrix(org.apache.commons.math3.FieldElement[]) -> createColumnFieldMatrix
    boolean isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean) -> isSymmetricInternal
    void checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double) -> checkSymmetric
    boolean isSymmetric(org.apache.commons.math3.linear.RealMatrix,double) -> isSymmetric
    void checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int) -> checkMatrixIndex
    void checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) -> checkRowIndex
    void checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) -> checkColumnIndex
    void checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int) -> checkSubMatrixIndex
    void checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[]) -> checkSubMatrixIndex
    void checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) -> checkAdditionCompatible
    void checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) -> checkSubtractionCompatible
    void checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) -> checkMultiplicationCompatible
    org.apache.commons.math3.linear.Array2DRowRealMatrix fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix) -> fractionMatrixToRealMatrix
    org.apache.commons.math3.linear.Array2DRowRealMatrix bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix) -> bigFractionMatrixToRealMatrix
    void serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream) -> serializeRealVector
    void deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream) -> deserializeRealVector
    void serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream) -> serializeRealMatrix
    void deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream) -> deserializeRealMatrix
    void solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> solveLowerTriangularSystem
    void solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector) -> solveUpperTriangularSystem
    org.apache.commons.math3.linear.RealMatrix blockInverse(org.apache.commons.math3.linear.RealMatrix,int) -> blockInverse
    org.apache.commons.math3.linear.RealMatrix inverse(org.apache.commons.math3.linear.RealMatrix) -> inverse
    org.apache.commons.math3.linear.RealMatrix inverse(org.apache.commons.math3.linear.RealMatrix,double) -> inverse
org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter -> org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter:
    double[][] data -> data
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,org.apache.commons.math3.fraction.BigFraction) -> visit
    org.apache.commons.math3.linear.Array2DRowRealMatrix getConvertedMatrix() -> getConvertedMatrix
    void visit(int,int,org.apache.commons.math3.FieldElement) -> visit
org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter -> org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter:
    double[][] data -> data
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,org.apache.commons.math3.fraction.Fraction) -> visit
    org.apache.commons.math3.linear.Array2DRowRealMatrix getConvertedMatrix() -> getConvertedMatrix
    void visit(int,int,org.apache.commons.math3.FieldElement) -> visit
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException -> org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException:
    long serialVersionUID -> serialVersionUID
    int index -> index
    double threshold -> threshold
    int getRow() -> getRow
    int getColumn() -> getColumn
    double getThreshold() -> getThreshold
org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException -> org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.linear.NonSelfAdjointOperatorException -> org.apache.commons.math3.linear.NonSelfAdjointOperatorException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.linear.NonSquareMatrixException -> org.apache.commons.math3.linear.NonSquareMatrixException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.linear.NonSquareOperatorException -> org.apache.commons.math3.linear.NonSquareOperatorException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.linear.NonSymmetricMatrixException -> org.apache.commons.math3.linear.NonSymmetricMatrixException:
    long serialVersionUID -> serialVersionUID
    int row -> row
    int column -> column
    double threshold -> threshold
    int getRow() -> getRow
    int getColumn() -> getColumn
    double getThreshold() -> getThreshold
org.apache.commons.math3.linear.OpenMapRealMatrix -> org.apache.commons.math3.linear.OpenMapRealMatrix:
    long serialVersionUID -> serialVersionUID
    int rows -> rows
    int columns -> columns
    org.apache.commons.math3.util.OpenIntToDoubleHashMap entries -> entries
    org.apache.commons.math3.linear.OpenMapRealMatrix copy() -> copy
    org.apache.commons.math3.linear.OpenMapRealMatrix createMatrix(int,int) -> createMatrix
    int getColumnDimension() -> getColumnDimension
    org.apache.commons.math3.linear.OpenMapRealMatrix add(org.apache.commons.math3.linear.OpenMapRealMatrix) -> add
    org.apache.commons.math3.linear.OpenMapRealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) -> subtract
    org.apache.commons.math3.linear.OpenMapRealMatrix subtract(org.apache.commons.math3.linear.OpenMapRealMatrix) -> subtract
    org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) -> multiply
    org.apache.commons.math3.linear.OpenMapRealMatrix multiply(org.apache.commons.math3.linear.OpenMapRealMatrix) -> multiply
    double getEntry(int,int) -> getEntry
    int getRowDimension() -> getRowDimension
    void setEntry(int,int,double) -> setEntry
    void addToEntry(int,int,double) -> addToEntry
    void multiplyEntry(int,int,double) -> multiplyEntry
    int computeKey(int,int) -> computeKey
    org.apache.commons.math3.linear.RealMatrix copy() -> copy
    org.apache.commons.math3.linear.RealMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) -> subtract
org.apache.commons.math3.linear.OpenMapRealVector -> org.apache.commons.math3.linear.OpenMapRealVector:
    double DEFAULT_ZERO_TOLERANCE -> DEFAULT_ZERO_TOLERANCE
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.util.OpenIntToDoubleHashMap entries -> entries
    int virtualSize -> virtualSize
    double epsilon -> epsilon
    org.apache.commons.math3.util.OpenIntToDoubleHashMap getEntries() -> getEntries
    boolean isDefaultValue(double) -> isDefaultValue
    org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector) -> add
    org.apache.commons.math3.linear.OpenMapRealVector add(org.apache.commons.math3.linear.OpenMapRealVector) -> add
    org.apache.commons.math3.linear.OpenMapRealVector append(org.apache.commons.math3.linear.OpenMapRealVector) -> append
    org.apache.commons.math3.linear.OpenMapRealVector append(org.apache.commons.math3.linear.RealVector) -> append
    org.apache.commons.math3.linear.OpenMapRealVector append(double) -> append
    org.apache.commons.math3.linear.OpenMapRealVector copy() -> copy
    double dotProduct(org.apache.commons.math3.linear.OpenMapRealVector) -> dotProduct
    org.apache.commons.math3.linear.OpenMapRealVector ebeDivide(org.apache.commons.math3.linear.RealVector) -> ebeDivide
    org.apache.commons.math3.linear.OpenMapRealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) -> ebeMultiply
    org.apache.commons.math3.linear.OpenMapRealVector getSubVector(int,int) -> getSubVector
    int getDimension() -> getDimension
    double getDistance(org.apache.commons.math3.linear.OpenMapRealVector) -> getDistance
    double getDistance(org.apache.commons.math3.linear.RealVector) -> getDistance
    double getEntry(int) -> getEntry
    double getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector) -> getL1Distance
    double getL1Distance(org.apache.commons.math3.linear.RealVector) -> getL1Distance
    double getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector) -> getLInfDistance
    double getLInfDistance(org.apache.commons.math3.linear.RealVector) -> getLInfDistance
    boolean isInfinite() -> isInfinite
    boolean isNaN() -> isNaN
    org.apache.commons.math3.linear.OpenMapRealVector mapAdd(double) -> mapAdd
    org.apache.commons.math3.linear.OpenMapRealVector mapAddToSelf(double) -> mapAddToSelf
    void setEntry(int,double) -> setEntry
    void setSubVector(int,org.apache.commons.math3.linear.RealVector) -> setSubVector
    void set(double) -> set
    org.apache.commons.math3.linear.OpenMapRealVector subtract(org.apache.commons.math3.linear.OpenMapRealVector) -> subtract
    org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector) -> subtract
    org.apache.commons.math3.linear.OpenMapRealVector unitVector() -> unitVector
    void unitize() -> unitize
    double[] toArray() -> toArray
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    double getSparsity() -> getSparsity
    java.util.Iterator sparseIterator() -> sparseIterator
    org.apache.commons.math3.linear.RealVector unitVector() -> unitVector
    org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) -> ebeMultiply
    org.apache.commons.math3.linear.RealVector ebeDivide(org.apache.commons.math3.linear.RealVector) -> ebeDivide
    org.apache.commons.math3.linear.RealVector copy() -> copy
    org.apache.commons.math3.linear.RealVector mapAddToSelf(double) -> mapAddToSelf
    org.apache.commons.math3.linear.RealVector mapAdd(double) -> mapAdd
    org.apache.commons.math3.linear.RealVector getSubVector(int,int) -> getSubVector
    org.apache.commons.math3.linear.RealVector append(double) -> append
    org.apache.commons.math3.linear.RealVector append(org.apache.commons.math3.linear.RealVector) -> append
    org.apache.commons.math3.util.OpenIntToDoubleHashMap access$000(org.apache.commons.math3.linear.OpenMapRealVector) -> access$000
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry -> org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry:
    org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iter -> iter
    org.apache.commons.math3.linear.OpenMapRealVector this$0 -> this$0
    double getValue() -> getValue
    void setValue(double) -> setValue
    int getIndex() -> getIndex
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator -> org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator:
    org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iter -> iter
    org.apache.commons.math3.linear.RealVector$Entry current -> current
    org.apache.commons.math3.linear.OpenMapRealVector this$0 -> this$0
    boolean hasNext() -> hasNext
    org.apache.commons.math3.linear.RealVector$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver -> org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solve
    void checkParameters(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> checkParameters
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solveInPlace
    org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solveInPlace
org.apache.commons.math3.linear.QRDecomposition -> org.apache.commons.math3.linear.QRDecomposition:
    double[][] qrt -> qrt
    double[] rDiag -> rDiag
    org.apache.commons.math3.linear.RealMatrix cachedQ -> cachedQ
    org.apache.commons.math3.linear.RealMatrix cachedQT -> cachedQT
    org.apache.commons.math3.linear.RealMatrix cachedR -> cachedR
    org.apache.commons.math3.linear.RealMatrix cachedH -> cachedH
    double threshold -> threshold
    void decompose(double[][]) -> decompose
    void performHouseholderReflection(int,double[][]) -> performHouseholderReflection
    org.apache.commons.math3.linear.RealMatrix getR() -> getR
    org.apache.commons.math3.linear.RealMatrix getQ() -> getQ
    org.apache.commons.math3.linear.RealMatrix getQT() -> getQT
    org.apache.commons.math3.linear.RealMatrix getH() -> getH
    org.apache.commons.math3.linear.DecompositionSolver getSolver() -> getSolver
org.apache.commons.math3.linear.QRDecomposition$1 -> org.apache.commons.math3.linear.QRDecomposition$1:
org.apache.commons.math3.linear.QRDecomposition$Solver -> org.apache.commons.math3.linear.QRDecomposition$Solver:
    double[][] qrt -> qrt
    double[] rDiag -> rDiag
    double threshold -> threshold
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix) -> solve
    org.apache.commons.math3.linear.RealMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.RRQRDecomposition -> org.apache.commons.math3.linear.RRQRDecomposition:
    int[] p -> p
    org.apache.commons.math3.linear.RealMatrix cachedP -> cachedP
    void decompose(double[][]) -> decompose
    void performHouseholderReflection(int,double[][]) -> performHouseholderReflection
    org.apache.commons.math3.linear.RealMatrix getP() -> getP
    int getRank(double) -> getRank
    org.apache.commons.math3.linear.DecompositionSolver getSolver() -> getSolver
org.apache.commons.math3.linear.RRQRDecomposition$1 -> org.apache.commons.math3.linear.RRQRDecomposition$1:
org.apache.commons.math3.linear.RRQRDecomposition$Solver -> org.apache.commons.math3.linear.RRQRDecomposition$Solver:
    org.apache.commons.math3.linear.DecompositionSolver upper -> upper
    org.apache.commons.math3.linear.RealMatrix p -> p
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix) -> solve
    org.apache.commons.math3.linear.RealMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.RealLinearOperator -> org.apache.commons.math3.linear.RealLinearOperator:
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector) -> operate
    org.apache.commons.math3.linear.RealVector operateTranspose(org.apache.commons.math3.linear.RealVector) -> operateTranspose
    boolean isTransposable() -> isTransposable
org.apache.commons.math3.linear.RealMatrix -> org.apache.commons.math3.linear.RealMatrix:
    org.apache.commons.math3.linear.RealMatrix createMatrix(int,int) -> createMatrix
    org.apache.commons.math3.linear.RealMatrix copy() -> copy
    org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix) -> add
    org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix) -> subtract
    org.apache.commons.math3.linear.RealMatrix scalarAdd(double) -> scalarAdd
    org.apache.commons.math3.linear.RealMatrix scalarMultiply(double) -> scalarMultiply
    org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix) -> multiply
    org.apache.commons.math3.linear.RealMatrix preMultiply(org.apache.commons.math3.linear.RealMatrix) -> preMultiply
    org.apache.commons.math3.linear.RealMatrix power(int) -> power
    double[][] getData() -> getData
    double getNorm() -> getNorm
    double getFrobeniusNorm() -> getFrobeniusNorm
    org.apache.commons.math3.linear.RealMatrix getSubMatrix(int,int,int,int) -> getSubMatrix
    org.apache.commons.math3.linear.RealMatrix getSubMatrix(int[],int[]) -> getSubMatrix
    void copySubMatrix(int,int,int,int,double[][]) -> copySubMatrix
    void copySubMatrix(int[],int[],double[][]) -> copySubMatrix
    void setSubMatrix(double[][],int,int) -> setSubMatrix
    org.apache.commons.math3.linear.RealMatrix getRowMatrix(int) -> getRowMatrix
    void setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix) -> setRowMatrix
    org.apache.commons.math3.linear.RealMatrix getColumnMatrix(int) -> getColumnMatrix
    void setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix) -> setColumnMatrix
    org.apache.commons.math3.linear.RealVector getRowVector(int) -> getRowVector
    void setRowVector(int,org.apache.commons.math3.linear.RealVector) -> setRowVector
    org.apache.commons.math3.linear.RealVector getColumnVector(int) -> getColumnVector
    void setColumnVector(int,org.apache.commons.math3.linear.RealVector) -> setColumnVector
    double[] getRow(int) -> getRow
    void setRow(int,double[]) -> setRow
    double[] getColumn(int) -> getColumn
    void setColumn(int,double[]) -> setColumn
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    void addToEntry(int,int,double) -> addToEntry
    void multiplyEntry(int,int,double) -> multiplyEntry
    org.apache.commons.math3.linear.RealMatrix transpose() -> transpose
    double getTrace() -> getTrace
    double[] operate(double[]) -> operate
    org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector) -> operate
    double[] preMultiply(double[]) -> preMultiply
    org.apache.commons.math3.linear.RealVector preMultiply(org.apache.commons.math3.linear.RealVector) -> preMultiply
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInRowOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInColumnOrder
    double walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInColumnOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int) -> walkInOptimizedOrder
org.apache.commons.math3.linear.RealMatrixChangingVisitor -> org.apache.commons.math3.linear.RealMatrixChangingVisitor:
    void start(int,int,int,int,int,int) -> start
    double visit(int,int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.RealMatrixFormat -> org.apache.commons.math3.linear.RealMatrixFormat:
    java.lang.String DEFAULT_PREFIX -> DEFAULT_PREFIX
    java.lang.String DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    java.lang.String DEFAULT_ROW_PREFIX -> DEFAULT_ROW_PREFIX
    java.lang.String DEFAULT_ROW_SUFFIX -> DEFAULT_ROW_SUFFIX
    java.lang.String DEFAULT_ROW_SEPARATOR -> DEFAULT_ROW_SEPARATOR
    java.lang.String DEFAULT_COLUMN_SEPARATOR -> DEFAULT_COLUMN_SEPARATOR
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.lang.String rowPrefix -> rowPrefix
    java.lang.String rowSuffix -> rowSuffix
    java.lang.String rowSeparator -> rowSeparator
    java.lang.String columnSeparator -> columnSeparator
    java.text.NumberFormat format -> format
    java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.String getRowPrefix() -> getRowPrefix
    java.lang.String getRowSuffix() -> getRowSuffix
    java.lang.String getRowSeparator() -> getRowSeparator
    java.lang.String getColumnSeparator() -> getColumnSeparator
    java.text.NumberFormat getFormat() -> getFormat
    org.apache.commons.math3.linear.RealMatrixFormat getInstance() -> getInstance
    org.apache.commons.math3.linear.RealMatrixFormat getInstance(java.util.Locale) -> getInstance
    java.lang.String format(org.apache.commons.math3.linear.RealMatrix) -> format
    java.lang.StringBuffer format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) -> format
    org.apache.commons.math3.linear.RealMatrix parse(java.lang.String) -> parse
    org.apache.commons.math3.linear.RealMatrix parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.commons.math3.linear.RealMatrixPreservingVisitor -> org.apache.commons.math3.linear.RealMatrixPreservingVisitor:
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.RealVector -> org.apache.commons.math3.linear.RealVector:
    int getDimension() -> getDimension
    double getEntry(int) -> getEntry
    void setEntry(int,double) -> setEntry
    void addToEntry(int,double) -> addToEntry
    org.apache.commons.math3.linear.RealVector append(org.apache.commons.math3.linear.RealVector) -> append
    org.apache.commons.math3.linear.RealVector append(double) -> append
    org.apache.commons.math3.linear.RealVector getSubVector(int,int) -> getSubVector
    void setSubVector(int,org.apache.commons.math3.linear.RealVector) -> setSubVector
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    void checkVectorDimensions(org.apache.commons.math3.linear.RealVector) -> checkVectorDimensions
    void checkVectorDimensions(int) -> checkVectorDimensions
    void checkIndex(int) -> checkIndex
    void checkIndices(int,int) -> checkIndices
    org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector) -> add
    org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector) -> subtract
    org.apache.commons.math3.linear.RealVector mapAdd(double) -> mapAdd
    org.apache.commons.math3.linear.RealVector mapAddToSelf(double) -> mapAddToSelf
    org.apache.commons.math3.linear.RealVector copy() -> copy
    double dotProduct(org.apache.commons.math3.linear.RealVector) -> dotProduct
    double cosine(org.apache.commons.math3.linear.RealVector) -> cosine
    org.apache.commons.math3.linear.RealVector ebeDivide(org.apache.commons.math3.linear.RealVector) -> ebeDivide
    org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) -> ebeMultiply
    double getDistance(org.apache.commons.math3.linear.RealVector) -> getDistance
    double getNorm() -> getNorm
    double getL1Norm() -> getL1Norm
    double getLInfNorm() -> getLInfNorm
    double getL1Distance(org.apache.commons.math3.linear.RealVector) -> getL1Distance
    double getLInfDistance(org.apache.commons.math3.linear.RealVector) -> getLInfDistance
    int getMinIndex() -> getMinIndex
    double getMinValue() -> getMinValue
    int getMaxIndex() -> getMaxIndex
    double getMaxValue() -> getMaxValue
    org.apache.commons.math3.linear.RealVector mapMultiply(double) -> mapMultiply
    org.apache.commons.math3.linear.RealVector mapMultiplyToSelf(double) -> mapMultiplyToSelf
    org.apache.commons.math3.linear.RealVector mapSubtract(double) -> mapSubtract
    org.apache.commons.math3.linear.RealVector mapSubtractToSelf(double) -> mapSubtractToSelf
    org.apache.commons.math3.linear.RealVector mapDivide(double) -> mapDivide
    org.apache.commons.math3.linear.RealVector mapDivideToSelf(double) -> mapDivideToSelf
    org.apache.commons.math3.linear.RealMatrix outerProduct(org.apache.commons.math3.linear.RealVector) -> outerProduct
    org.apache.commons.math3.linear.RealVector projection(org.apache.commons.math3.linear.RealVector) -> projection
    void set(double) -> set
    double[] toArray() -> toArray
    org.apache.commons.math3.linear.RealVector unitVector() -> unitVector
    void unitize() -> unitize
    java.util.Iterator sparseIterator() -> sparseIterator
    java.util.Iterator iterator() -> iterator
    org.apache.commons.math3.linear.RealVector map(org.apache.commons.math3.analysis.UnivariateFunction) -> map
    org.apache.commons.math3.linear.RealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) -> mapToSelf
    org.apache.commons.math3.linear.RealVector combine(double,double,org.apache.commons.math3.linear.RealVector) -> combine
    org.apache.commons.math3.linear.RealVector combineToSelf(double,double,org.apache.commons.math3.linear.RealVector) -> combineToSelf
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor) -> walkInDefaultOrder
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int) -> walkInDefaultOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int) -> walkInOptimizedOrder
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor) -> walkInDefaultOrder
    double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int) -> walkInDefaultOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor) -> walkInOptimizedOrder
    double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int) -> walkInOptimizedOrder
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.linear.RealVector unmodifiableRealVector(org.apache.commons.math3.linear.RealVector) -> unmodifiableRealVector
org.apache.commons.math3.linear.RealVector$1 -> org.apache.commons.math3.linear.RealVector$1:
    int i -> i
    org.apache.commons.math3.linear.RealVector$Entry e -> e
    int val$dim -> val$dim
    org.apache.commons.math3.linear.RealVector this$0 -> this$0
    boolean hasNext() -> hasNext
    org.apache.commons.math3.linear.RealVector$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.linear.RealVector$2 -> org.apache.commons.math3.linear.RealVector$2:
    org.apache.commons.math3.linear.RealVector val$v -> val$v
    org.apache.commons.math3.linear.RealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) -> mapToSelf
    org.apache.commons.math3.linear.RealVector map(org.apache.commons.math3.analysis.UnivariateFunction) -> map
    java.util.Iterator iterator() -> iterator
    java.util.Iterator sparseIterator() -> sparseIterator
    org.apache.commons.math3.linear.RealVector copy() -> copy
    org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector) -> add
    org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector) -> subtract
    org.apache.commons.math3.linear.RealVector mapAdd(double) -> mapAdd
    org.apache.commons.math3.linear.RealVector mapAddToSelf(double) -> mapAddToSelf
    org.apache.commons.math3.linear.RealVector mapSubtract(double) -> mapSubtract
    org.apache.commons.math3.linear.RealVector mapSubtractToSelf(double) -> mapSubtractToSelf
    org.apache.commons.math3.linear.RealVector mapMultiply(double) -> mapMultiply
    org.apache.commons.math3.linear.RealVector mapMultiplyToSelf(double) -> mapMultiplyToSelf
    org.apache.commons.math3.linear.RealVector mapDivide(double) -> mapDivide
    org.apache.commons.math3.linear.RealVector mapDivideToSelf(double) -> mapDivideToSelf
    org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) -> ebeMultiply
    org.apache.commons.math3.linear.RealVector ebeDivide(org.apache.commons.math3.linear.RealVector) -> ebeDivide
    double dotProduct(org.apache.commons.math3.linear.RealVector) -> dotProduct
    double cosine(org.apache.commons.math3.linear.RealVector) -> cosine
    double getNorm() -> getNorm
    double getL1Norm() -> getL1Norm
    double getLInfNorm() -> getLInfNorm
    double getDistance(org.apache.commons.math3.linear.RealVector) -> getDistance
    double getL1Distance(org.apache.commons.math3.linear.RealVector) -> getL1Distance
    double getLInfDistance(org.apache.commons.math3.linear.RealVector) -> getLInfDistance
    org.apache.commons.math3.linear.RealVector unitVector() -> unitVector
    void unitize() -> unitize
    org.apache.commons.math3.linear.RealMatrix outerProduct(org.apache.commons.math3.linear.RealVector) -> outerProduct
    double getEntry(int) -> getEntry
    void setEntry(int,double) -> setEntry
    void addToEntry(int,double) -> addToEntry
    int getDimension() -> getDimension
    org.apache.commons.math3.linear.RealVector append(org.apache.commons.math3.linear.RealVector) -> append
    org.apache.commons.math3.linear.RealVector append(double) -> append
    org.apache.commons.math3.linear.RealVector getSubVector(int,int) -> getSubVector
    void setSubVector(int,org.apache.commons.math3.linear.RealVector) -> setSubVector
    void set(double) -> set
    double[] toArray() -> toArray
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    org.apache.commons.math3.linear.RealVector combine(double,double,org.apache.commons.math3.linear.RealVector) -> combine
    org.apache.commons.math3.linear.RealVector combineToSelf(double,double,org.apache.commons.math3.linear.RealVector) -> combineToSelf
org.apache.commons.math3.linear.RealVector$2$1 -> org.apache.commons.math3.linear.RealVector$2$1:
    org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry e -> e
    java.util.Iterator val$i -> val$i
    org.apache.commons.math3.linear.RealVector$2 this$0 -> this$0
    boolean hasNext() -> hasNext
    org.apache.commons.math3.linear.RealVector$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.linear.RealVector$2$2 -> org.apache.commons.math3.linear.RealVector$2$2:
    org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry e -> e
    java.util.Iterator val$i -> val$i
    org.apache.commons.math3.linear.RealVector$2 this$0 -> this$0
    boolean hasNext() -> hasNext
    org.apache.commons.math3.linear.RealVector$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry -> org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry:
    org.apache.commons.math3.linear.RealVector$2 this$0 -> this$0
    double getValue() -> getValue
    void setValue(double) -> setValue
org.apache.commons.math3.linear.RealVector$Entry -> org.apache.commons.math3.linear.RealVector$Entry:
    int index -> index
    org.apache.commons.math3.linear.RealVector this$0 -> this$0
    double getValue() -> getValue
    void setValue(double) -> setValue
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
org.apache.commons.math3.linear.RealVector$SparseEntryIterator -> org.apache.commons.math3.linear.RealVector$SparseEntryIterator:
    int dim -> dim
    org.apache.commons.math3.linear.RealVector$Entry current -> current
    org.apache.commons.math3.linear.RealVector$Entry next -> next
    org.apache.commons.math3.linear.RealVector this$0 -> this$0
    void advance(org.apache.commons.math3.linear.RealVector$Entry) -> advance
    boolean hasNext() -> hasNext
    org.apache.commons.math3.linear.RealVector$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.linear.RealVectorChangingVisitor -> org.apache.commons.math3.linear.RealVectorChangingVisitor:
    void start(int,int,int) -> start
    double visit(int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.RealVectorFormat -> org.apache.commons.math3.linear.RealVectorFormat:
    java.lang.String DEFAULT_PREFIX -> DEFAULT_PREFIX
    java.lang.String DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    java.lang.String DEFAULT_SEPARATOR -> DEFAULT_SEPARATOR
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.lang.String separator -> separator
    java.lang.String trimmedPrefix -> trimmedPrefix
    java.lang.String trimmedSuffix -> trimmedSuffix
    java.lang.String trimmedSeparator -> trimmedSeparator
    java.text.NumberFormat format -> format
    java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.String getSeparator() -> getSeparator
    java.text.NumberFormat getFormat() -> getFormat
    org.apache.commons.math3.linear.RealVectorFormat getInstance() -> getInstance
    org.apache.commons.math3.linear.RealVectorFormat getInstance(java.util.Locale) -> getInstance
    java.lang.String format(org.apache.commons.math3.linear.RealVector) -> format
    java.lang.StringBuffer format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) -> format
    org.apache.commons.math3.linear.ArrayRealVector parse(java.lang.String) -> parse
    org.apache.commons.math3.linear.ArrayRealVector parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.commons.math3.linear.RealVectorPreservingVisitor -> org.apache.commons.math3.linear.RealVectorPreservingVisitor:
    void start(int,int,int) -> start
    void visit(int,double) -> visit
    double end() -> end
org.apache.commons.math3.linear.RectangularCholeskyDecomposition -> org.apache.commons.math3.linear.RectangularCholeskyDecomposition:
    org.apache.commons.math3.linear.RealMatrix root -> root
    int rank -> rank
    org.apache.commons.math3.linear.RealMatrix getRootMatrix() -> getRootMatrix
    int getRank() -> getRank
org.apache.commons.math3.linear.SchurTransformer -> org.apache.commons.math3.linear.SchurTransformer:
    int MAX_ITERATIONS -> MAX_ITERATIONS
    double[][] matrixP -> matrixP
    double[][] matrixT -> matrixT
    org.apache.commons.math3.linear.RealMatrix cachedP -> cachedP
    org.apache.commons.math3.linear.RealMatrix cachedT -> cachedT
    org.apache.commons.math3.linear.RealMatrix cachedPt -> cachedPt
    double epsilon -> epsilon
    org.apache.commons.math3.linear.RealMatrix getP() -> getP
    org.apache.commons.math3.linear.RealMatrix getPT() -> getPT
    org.apache.commons.math3.linear.RealMatrix getT() -> getT
    void transform() -> transform
    double getNorm() -> getNorm
    int findSmallSubDiagonalElement(int,double) -> findSmallSubDiagonalElement
    void computeShift(int,int,int,org.apache.commons.math3.linear.SchurTransformer$ShiftInfo) -> computeShift
    int initQRStep(int,int,org.apache.commons.math3.linear.SchurTransformer$ShiftInfo,double[]) -> initQRStep
    void performDoubleQRStep(int,int,int,org.apache.commons.math3.linear.SchurTransformer$ShiftInfo,double[]) -> performDoubleQRStep
org.apache.commons.math3.linear.SchurTransformer$1 -> org.apache.commons.math3.linear.SchurTransformer$1:
org.apache.commons.math3.linear.SchurTransformer$ShiftInfo -> org.apache.commons.math3.linear.SchurTransformer$ShiftInfo:
    double x -> x
    double y -> y
    double w -> w
    double exShift -> exShift
org.apache.commons.math3.linear.SingularMatrixException -> org.apache.commons.math3.linear.SingularMatrixException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.linear.SingularOperatorException -> org.apache.commons.math3.linear.SingularOperatorException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.linear.SingularValueDecomposition -> org.apache.commons.math3.linear.SingularValueDecomposition:
    double EPS -> EPS
    double TINY -> TINY
    double[] singularValues -> singularValues
    int m -> m
    int n -> n
    boolean transposed -> transposed
    org.apache.commons.math3.linear.RealMatrix cachedU -> cachedU
    org.apache.commons.math3.linear.RealMatrix cachedUt -> cachedUt
    org.apache.commons.math3.linear.RealMatrix cachedS -> cachedS
    org.apache.commons.math3.linear.RealMatrix cachedV -> cachedV
    org.apache.commons.math3.linear.RealMatrix cachedVt -> cachedVt
    double tol -> tol
    org.apache.commons.math3.linear.RealMatrix getU() -> getU
    org.apache.commons.math3.linear.RealMatrix getUT() -> getUT
    org.apache.commons.math3.linear.RealMatrix getS() -> getS
    double[] getSingularValues() -> getSingularValues
    org.apache.commons.math3.linear.RealMatrix getV() -> getV
    org.apache.commons.math3.linear.RealMatrix getVT() -> getVT
    org.apache.commons.math3.linear.RealMatrix getCovariance(double) -> getCovariance
    double getNorm() -> getNorm
    double getConditionNumber() -> getConditionNumber
    double getInverseConditionNumber() -> getInverseConditionNumber
    int getRank() -> getRank
    org.apache.commons.math3.linear.DecompositionSolver getSolver() -> getSolver
    double[] access$000(org.apache.commons.math3.linear.SingularValueDecomposition) -> access$000
org.apache.commons.math3.linear.SingularValueDecomposition$1 -> org.apache.commons.math3.linear.SingularValueDecomposition$1:
    double[][] val$data -> val$data
    org.apache.commons.math3.linear.SingularValueDecomposition this$0 -> this$0
    void visit(int,int,double) -> visit
org.apache.commons.math3.linear.SingularValueDecomposition$Solver -> org.apache.commons.math3.linear.SingularValueDecomposition$Solver:
    org.apache.commons.math3.linear.RealMatrix pseudoInverse -> pseudoInverse
    boolean nonSingular -> nonSingular
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix) -> solve
    boolean isNonSingular() -> isNonSingular
    org.apache.commons.math3.linear.RealMatrix getInverse() -> getInverse
org.apache.commons.math3.linear.SparseFieldMatrix -> org.apache.commons.math3.linear.SparseFieldMatrix:
    org.apache.commons.math3.util.OpenIntToFieldHashMap entries -> entries
    int rows -> rows
    int columns -> columns
    void addToEntry(int,int,org.apache.commons.math3.FieldElement) -> addToEntry
    org.apache.commons.math3.linear.FieldMatrix copy() -> copy
    org.apache.commons.math3.linear.FieldMatrix createMatrix(int,int) -> createMatrix
    int getColumnDimension() -> getColumnDimension
    org.apache.commons.math3.FieldElement getEntry(int,int) -> getEntry
    int getRowDimension() -> getRowDimension
    void multiplyEntry(int,int,org.apache.commons.math3.FieldElement) -> multiplyEntry
    void setEntry(int,int,org.apache.commons.math3.FieldElement) -> setEntry
    int computeKey(int,int) -> computeKey
org.apache.commons.math3.linear.SparseFieldVector -> org.apache.commons.math3.linear.SparseFieldVector:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.Field field -> field
    org.apache.commons.math3.util.OpenIntToFieldHashMap entries -> entries
    int virtualSize -> virtualSize
    org.apache.commons.math3.util.OpenIntToFieldHashMap getEntries() -> getEntries
    org.apache.commons.math3.linear.FieldVector add(org.apache.commons.math3.linear.SparseFieldVector) -> add
    org.apache.commons.math3.linear.FieldVector append(org.apache.commons.math3.linear.SparseFieldVector) -> append
    org.apache.commons.math3.linear.FieldVector append(org.apache.commons.math3.linear.FieldVector) -> append
    org.apache.commons.math3.linear.FieldVector append(org.apache.commons.math3.FieldElement) -> append
    org.apache.commons.math3.linear.FieldVector copy() -> copy
    org.apache.commons.math3.FieldElement dotProduct(org.apache.commons.math3.linear.FieldVector) -> dotProduct
    org.apache.commons.math3.linear.FieldVector ebeDivide(org.apache.commons.math3.linear.FieldVector) -> ebeDivide
    org.apache.commons.math3.linear.FieldVector ebeMultiply(org.apache.commons.math3.linear.FieldVector) -> ebeMultiply
    org.apache.commons.math3.FieldElement[] getData() -> getData
    int getDimension() -> getDimension
    org.apache.commons.math3.FieldElement getEntry(int) -> getEntry
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.linear.FieldVector getSubVector(int,int) -> getSubVector
    org.apache.commons.math3.linear.FieldVector mapAdd(org.apache.commons.math3.FieldElement) -> mapAdd
    org.apache.commons.math3.linear.FieldVector mapAddToSelf(org.apache.commons.math3.FieldElement) -> mapAddToSelf
    org.apache.commons.math3.linear.FieldVector mapDivide(org.apache.commons.math3.FieldElement) -> mapDivide
    org.apache.commons.math3.linear.FieldVector mapDivideToSelf(org.apache.commons.math3.FieldElement) -> mapDivideToSelf
    org.apache.commons.math3.linear.FieldVector mapInv() -> mapInv
    org.apache.commons.math3.linear.FieldVector mapInvToSelf() -> mapInvToSelf
    org.apache.commons.math3.linear.FieldVector mapMultiply(org.apache.commons.math3.FieldElement) -> mapMultiply
    org.apache.commons.math3.linear.FieldVector mapMultiplyToSelf(org.apache.commons.math3.FieldElement) -> mapMultiplyToSelf
    org.apache.commons.math3.linear.FieldVector mapSubtract(org.apache.commons.math3.FieldElement) -> mapSubtract
    org.apache.commons.math3.linear.FieldVector mapSubtractToSelf(org.apache.commons.math3.FieldElement) -> mapSubtractToSelf
    org.apache.commons.math3.linear.FieldMatrix outerProduct(org.apache.commons.math3.linear.SparseFieldVector) -> outerProduct
    org.apache.commons.math3.linear.FieldMatrix outerProduct(org.apache.commons.math3.linear.FieldVector) -> outerProduct
    org.apache.commons.math3.linear.FieldVector projection(org.apache.commons.math3.linear.FieldVector) -> projection
    void set(org.apache.commons.math3.FieldElement) -> set
    void setEntry(int,org.apache.commons.math3.FieldElement) -> setEntry
    void setSubVector(int,org.apache.commons.math3.linear.FieldVector) -> setSubVector
    org.apache.commons.math3.linear.SparseFieldVector subtract(org.apache.commons.math3.linear.SparseFieldVector) -> subtract
    org.apache.commons.math3.linear.FieldVector subtract(org.apache.commons.math3.linear.FieldVector) -> subtract
    org.apache.commons.math3.FieldElement[] toArray() -> toArray
    void checkIndex(int) -> checkIndex
    void checkIndices(int,int) -> checkIndices
    void checkVectorDimensions(int) -> checkVectorDimensions
    org.apache.commons.math3.linear.FieldVector add(org.apache.commons.math3.linear.FieldVector) -> add
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int) -> walkInDefaultOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor) -> walkInOptimizedOrder
    org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int) -> walkInOptimizedOrder
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.math3.linear.SparseRealMatrix -> org.apache.commons.math3.linear.SparseRealMatrix:
org.apache.commons.math3.linear.SparseRealVector -> org.apache.commons.math3.linear.SparseRealVector:
org.apache.commons.math3.linear.SymmLQ -> org.apache.commons.math3.linear.SymmLQ:
    java.lang.String OPERATOR -> OPERATOR
    java.lang.String THRESHOLD -> THRESHOLD
    java.lang.String VECTOR -> VECTOR
    java.lang.String VECTOR1 -> VECTOR1
    java.lang.String VECTOR2 -> VECTOR2
    boolean check -> check
    double delta -> delta
    boolean getCheck() -> getCheck
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,boolean,double) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,boolean,double) -> solve
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solve
    org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solveInPlace
    org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double) -> solveInPlace
    org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> solveInPlace
org.apache.commons.math3.linear.SymmLQ$State -> org.apache.commons.math3.linear.SymmLQ$State:
    double CBRT_MACH_PREC -> CBRT_MACH_PREC
    double MACH_PREC -> MACH_PREC
    org.apache.commons.math3.linear.RealLinearOperator a -> a
    org.apache.commons.math3.linear.RealVector b -> b
    boolean check -> check
    double delta -> delta
    double beta -> beta
    double beta1 -> beta1
    double bstep -> bstep
    double cgnorm -> cgnorm
    double dbar -> dbar
    double gammaZeta -> gammaZeta
    double gbar -> gbar
    double gmax -> gmax
    double gmin -> gmin
    boolean goodb -> goodb
    boolean hasConverged -> hasConverged
    double lqnorm -> lqnorm
    org.apache.commons.math3.linear.RealLinearOperator m -> m
    double minusEpsZeta -> minusEpsZeta
    org.apache.commons.math3.linear.RealVector mb -> mb
    double oldb -> oldb
    org.apache.commons.math3.linear.RealVector r1 -> r1
    org.apache.commons.math3.linear.RealVector r2 -> r2
    double rnorm -> rnorm
    double shift -> shift
    double snprod -> snprod
    double tnorm -> tnorm
    org.apache.commons.math3.linear.RealVector wbar -> wbar
    org.apache.commons.math3.linear.RealVector xL -> xL
    org.apache.commons.math3.linear.RealVector y -> y
    double ynorm2 -> ynorm2
    boolean bIsNull -> bIsNull
    void checkSymmetry(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> checkSymmetry
    void throwNPDLOException(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector) -> throwNPDLOException
    void daxpy(double,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> daxpy
    void daxpbypz(double,org.apache.commons.math3.linear.RealVector,double,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) -> daxpbypz
    void refineSolution(org.apache.commons.math3.linear.RealVector) -> refineSolution
    void init() -> init
    void update() -> update
    void updateNorms() -> updateNorms
    boolean hasConverged() -> hasConverged
    boolean bEqualsNullVector() -> bEqualsNullVector
    boolean betaEqualsZero() -> betaEqualsZero
    double getNormOfResidual() -> getNormOfResidual
org.apache.commons.math3.linear.TriDiagonalTransformer -> org.apache.commons.math3.linear.TriDiagonalTransformer:
    double[][] householderVectors -> householderVectors
    double[] main -> main
    double[] secondary -> secondary
    org.apache.commons.math3.linear.RealMatrix cachedQ -> cachedQ
    org.apache.commons.math3.linear.RealMatrix cachedQt -> cachedQt
    org.apache.commons.math3.linear.RealMatrix cachedT -> cachedT
    org.apache.commons.math3.linear.RealMatrix getQ() -> getQ
    org.apache.commons.math3.linear.RealMatrix getQT() -> getQT
    org.apache.commons.math3.linear.RealMatrix getT() -> getT
    double[][] getHouseholderVectorsRef() -> getHouseholderVectorsRef
    double[] getMainDiagonalRef() -> getMainDiagonalRef
    double[] getSecondaryDiagonalRef() -> getSecondaryDiagonalRef
    void transform() -> transform
org.apache.commons.math3.ml.clustering.CentroidCluster -> org.apache.commons.math3.ml.clustering.CentroidCluster:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.ml.clustering.Clusterable center -> center
    org.apache.commons.math3.ml.clustering.Clusterable getCenter() -> getCenter
org.apache.commons.math3.ml.clustering.Cluster -> org.apache.commons.math3.ml.clustering.Cluster:
    long serialVersionUID -> serialVersionUID
    java.util.List points -> points
    void addPoint(org.apache.commons.math3.ml.clustering.Clusterable) -> addPoint
    java.util.List getPoints() -> getPoints
org.apache.commons.math3.ml.clustering.Clusterable -> org.apache.commons.math3.ml.clustering.Clusterable:
    double[] getPoint() -> getPoint
org.apache.commons.math3.ml.clustering.Clusterer -> org.apache.commons.math3.ml.clustering.Clusterer:
    org.apache.commons.math3.ml.distance.DistanceMeasure measure -> measure
    java.util.List cluster(java.util.Collection) -> cluster
    org.apache.commons.math3.ml.distance.DistanceMeasure getDistanceMeasure() -> getDistanceMeasure
    double distance(org.apache.commons.math3.ml.clustering.Clusterable,org.apache.commons.math3.ml.clustering.Clusterable) -> distance
org.apache.commons.math3.ml.clustering.DBSCANClusterer -> org.apache.commons.math3.ml.clustering.DBSCANClusterer:
    double eps -> eps
    int minPts -> minPts
    double getEps() -> getEps
    int getMinPts() -> getMinPts
    java.util.List cluster(java.util.Collection) -> cluster
    org.apache.commons.math3.ml.clustering.Cluster expandCluster(org.apache.commons.math3.ml.clustering.Cluster,org.apache.commons.math3.ml.clustering.Clusterable,java.util.List,java.util.Collection,java.util.Map) -> expandCluster
    java.util.List getNeighbors(org.apache.commons.math3.ml.clustering.Clusterable,java.util.Collection) -> getNeighbors
    java.util.List merge(java.util.List,java.util.List) -> merge
org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus -> org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus:
    org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus NOISE -> NOISE
    org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus PART_OF_CLUSTER -> PART_OF_CLUSTER
    org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus[] $VALUES -> $VALUES
    org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus[] values() -> values
    org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.ml.clustering.DoublePoint -> org.apache.commons.math3.ml.clustering.DoublePoint:
    long serialVersionUID -> serialVersionUID
    double[] point -> point
    double[] getPoint() -> getPoint
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer -> org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    int k -> k
    int maxIterations -> maxIterations
    double fuzziness -> fuzziness
    double epsilon -> epsilon
    org.apache.commons.math3.random.RandomGenerator random -> random
    double[][] membershipMatrix -> membershipMatrix
    java.util.List points -> points
    java.util.List clusters -> clusters
    int getK() -> getK
    double getFuzziness() -> getFuzziness
    int getMaxIterations() -> getMaxIterations
    double getEpsilon() -> getEpsilon
    org.apache.commons.math3.random.RandomGenerator getRandomGenerator() -> getRandomGenerator
    org.apache.commons.math3.linear.RealMatrix getMembershipMatrix() -> getMembershipMatrix
    java.util.List getDataPoints() -> getDataPoints
    java.util.List getClusters() -> getClusters
    double getObjectiveFunctionValue() -> getObjectiveFunctionValue
    java.util.List cluster(java.util.Collection) -> cluster
    void updateClusterCenters() -> updateClusterCenters
    void updateMembershipMatrix() -> updateMembershipMatrix
    void initializeMembershipMatrix() -> initializeMembershipMatrix
    double calculateMaxMembershipChange(double[][]) -> calculateMaxMembershipChange
    void saveMembershipMatrix(double[][]) -> saveMembershipMatrix
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer -> org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:
    int k -> k
    int maxIterations -> maxIterations
    org.apache.commons.math3.random.RandomGenerator random -> random
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy emptyStrategy -> emptyStrategy
    int getK() -> getK
    int getMaxIterations() -> getMaxIterations
    org.apache.commons.math3.random.RandomGenerator getRandomGenerator() -> getRandomGenerator
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy getEmptyClusterStrategy() -> getEmptyClusterStrategy
    java.util.List cluster(java.util.Collection) -> cluster
    int assignPointsToClusters(java.util.List,java.util.Collection,int[]) -> assignPointsToClusters
    java.util.List chooseInitialCenters(java.util.Collection) -> chooseInitialCenters
    org.apache.commons.math3.ml.clustering.Clusterable getPointFromLargestVarianceCluster(java.util.Collection) -> getPointFromLargestVarianceCluster
    org.apache.commons.math3.ml.clustering.Clusterable getPointFromLargestNumberCluster(java.util.Collection) -> getPointFromLargestNumberCluster
    org.apache.commons.math3.ml.clustering.Clusterable getFarthestPoint(java.util.Collection) -> getFarthestPoint
    int getNearestCluster(java.util.Collection,org.apache.commons.math3.ml.clustering.Clusterable) -> getNearestCluster
    org.apache.commons.math3.ml.clustering.Clusterable centroidOf(java.util.Collection,int) -> centroidOf
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$1 -> org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$1:
    int[] $SwitchMap$org$apache$commons$math3$ml$clustering$KMeansPlusPlusClusterer$EmptyClusterStrategy -> $SwitchMap$org$apache$commons$math3$ml$clustering$KMeansPlusPlusClusterer$EmptyClusterStrategy
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy -> org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy:
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_VARIANCE -> LARGEST_VARIANCE
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_POINTS_NUMBER -> LARGEST_POINTS_NUMBER
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy FARTHEST_POINT -> FARTHEST_POINT
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy ERROR -> ERROR
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] $VALUES -> $VALUES
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] values() -> values
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer -> org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer clusterer -> clusterer
    int numTrials -> numTrials
    org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator evaluator -> evaluator
    org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer getClusterer() -> getClusterer
    int getNumTrials() -> getNumTrials
    org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator getClusterEvaluator() -> getClusterEvaluator
    java.util.List cluster(java.util.Collection) -> cluster
org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator -> org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator:
    org.apache.commons.math3.ml.distance.DistanceMeasure measure -> measure
    double score(java.util.List) -> score
    boolean isBetterScore(double,double) -> isBetterScore
    double distance(org.apache.commons.math3.ml.clustering.Clusterable,org.apache.commons.math3.ml.clustering.Clusterable) -> distance
    org.apache.commons.math3.ml.clustering.Clusterable centroidOf(org.apache.commons.math3.ml.clustering.Cluster) -> centroidOf
org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances -> org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances:
    double score(java.util.List) -> score
org.apache.commons.math3.ml.distance.CanberraDistance -> org.apache.commons.math3.ml.distance.CanberraDistance:
    long serialVersionUID -> serialVersionUID
    double compute(double[],double[]) -> compute
org.apache.commons.math3.ml.distance.ChebyshevDistance -> org.apache.commons.math3.ml.distance.ChebyshevDistance:
    long serialVersionUID -> serialVersionUID
    double compute(double[],double[]) -> compute
org.apache.commons.math3.ml.distance.DistanceMeasure -> org.apache.commons.math3.ml.distance.DistanceMeasure:
    double compute(double[],double[]) -> compute
org.apache.commons.math3.ml.distance.EarthMoversDistance -> org.apache.commons.math3.ml.distance.EarthMoversDistance:
    long serialVersionUID -> serialVersionUID
    double compute(double[],double[]) -> compute
org.apache.commons.math3.ml.distance.EuclideanDistance -> org.apache.commons.math3.ml.distance.EuclideanDistance:
    long serialVersionUID -> serialVersionUID
    double compute(double[],double[]) -> compute
org.apache.commons.math3.ml.distance.ManhattanDistance -> org.apache.commons.math3.ml.distance.ManhattanDistance:
    long serialVersionUID -> serialVersionUID
    double compute(double[],double[]) -> compute
org.apache.commons.math3.ml.neuralnet.FeatureInitializer -> org.apache.commons.math3.ml.neuralnet.FeatureInitializer:
    double value() -> value
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory -> org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:
    org.apache.commons.math3.ml.neuralnet.FeatureInitializer uniform(org.apache.commons.math3.random.RandomGenerator,double,double) -> uniform
    org.apache.commons.math3.ml.neuralnet.FeatureInitializer uniform(double,double) -> uniform
    org.apache.commons.math3.ml.neuralnet.FeatureInitializer function(org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> function
    org.apache.commons.math3.ml.neuralnet.FeatureInitializer randomize(org.apache.commons.math3.distribution.RealDistribution,org.apache.commons.math3.ml.neuralnet.FeatureInitializer) -> randomize
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1 -> org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1:
    double arg -> arg
    double val$init -> val$init
    org.apache.commons.math3.analysis.UnivariateFunction val$f -> val$f
    double val$inc -> val$inc
    double value() -> value
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2 -> org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2:
    org.apache.commons.math3.ml.neuralnet.FeatureInitializer val$orig -> val$orig
    org.apache.commons.math3.distribution.RealDistribution val$random -> val$random
    double value() -> value
org.apache.commons.math3.ml.neuralnet.MapUtils -> org.apache.commons.math3.ml.neuralnet.MapUtils:
    org.apache.commons.math3.ml.neuralnet.Neuron findBest(double[],java.lang.Iterable,org.apache.commons.math3.ml.distance.DistanceMeasure) -> findBest
    org.apache.commons.math3.util.Pair findBestAndSecondBest(double[],java.lang.Iterable,org.apache.commons.math3.ml.distance.DistanceMeasure) -> findBestAndSecondBest
    double[][] computeU(org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D,org.apache.commons.math3.ml.distance.DistanceMeasure) -> computeU
    int[][] computeHitHistogram(java.lang.Iterable,org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D,org.apache.commons.math3.ml.distance.DistanceMeasure) -> computeHitHistogram
    double computeQuantizationError(java.lang.Iterable,java.lang.Iterable,org.apache.commons.math3.ml.distance.DistanceMeasure) -> computeQuantizationError
    double computeTopographicError(java.lang.Iterable,org.apache.commons.math3.ml.neuralnet.Network,org.apache.commons.math3.ml.distance.DistanceMeasure) -> computeTopographicError
org.apache.commons.math3.ml.neuralnet.Network -> org.apache.commons.math3.ml.neuralnet.Network:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.ConcurrentHashMap neuronMap -> neuronMap
    java.util.concurrent.atomic.AtomicLong nextId -> nextId
    int featureSize -> featureSize
    java.util.concurrent.ConcurrentHashMap linkMap -> linkMap
    java.util.Iterator iterator() -> iterator
    java.util.Collection getNeurons(java.util.Comparator) -> getNeurons
    long createNeuron(double[]) -> createNeuron
    void deleteNeuron(org.apache.commons.math3.ml.neuralnet.Neuron) -> deleteNeuron
    int getFeaturesSize() -> getFeaturesSize
    void addLink(org.apache.commons.math3.ml.neuralnet.Neuron,org.apache.commons.math3.ml.neuralnet.Neuron) -> addLink
    void addLinkToLinkSet(java.util.Set,long) -> addLinkToLinkSet
    void deleteLink(org.apache.commons.math3.ml.neuralnet.Neuron,org.apache.commons.math3.ml.neuralnet.Neuron) -> deleteLink
    void deleteLinkFromLinkSet(java.util.Set,long) -> deleteLinkFromLinkSet
    org.apache.commons.math3.ml.neuralnet.Neuron getNeuron(long) -> getNeuron
    java.util.Collection getNeighbours(java.lang.Iterable) -> getNeighbours
    java.util.Collection getNeighbours(java.lang.Iterable,java.lang.Iterable) -> getNeighbours
    java.util.Collection getNeighbours(org.apache.commons.math3.ml.neuralnet.Neuron) -> getNeighbours
    java.util.Collection getNeighbours(org.apache.commons.math3.ml.neuralnet.Neuron,java.lang.Iterable) -> getNeighbours
    java.lang.Long createNextId() -> createNextId
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator -> org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator:
    long serialVersionUID -> serialVersionUID
    int compare(org.apache.commons.math3.ml.neuralnet.Neuron,org.apache.commons.math3.ml.neuralnet.Neuron) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.ml.neuralnet.Network$SerializationProxy -> org.apache.commons.math3.ml.neuralnet.Network$SerializationProxy:
    long serialVersionUID -> serialVersionUID
    long nextId -> nextId
    int featureSize -> featureSize
    org.apache.commons.math3.ml.neuralnet.Neuron[] neuronList -> neuronList
    long[][] neighbourIdList -> neighbourIdList
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.ml.neuralnet.Neuron -> org.apache.commons.math3.ml.neuralnet.Neuron:
    long serialVersionUID -> serialVersionUID
    long identifier -> identifier
    int size -> size
    java.util.concurrent.atomic.AtomicReference features -> features
    long getIdentifier() -> getIdentifier
    int getSize() -> getSize
    double[] getFeatures() -> getFeatures
    boolean compareAndSetFeatures(double[],double[]) -> compareAndSetFeatures
    boolean containSameValues(double[],double[]) -> containSameValues
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
org.apache.commons.math3.ml.neuralnet.Neuron$SerializationProxy -> org.apache.commons.math3.ml.neuralnet.Neuron$SerializationProxy:
    long serialVersionUID -> serialVersionUID
    double[] features -> features
    long identifier -> identifier
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood -> org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood:
    org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood VON_NEUMANN -> VON_NEUMANN
    org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood MOORE -> MOORE
    org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood[] $VALUES -> $VALUES
    org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood[] values() -> values
    org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.ml.neuralnet.UpdateAction -> org.apache.commons.math3.ml.neuralnet.UpdateAction:
    void update(org.apache.commons.math3.ml.neuralnet.Network,double[]) -> update
org.apache.commons.math3.ml.neuralnet.oned.NeuronString -> org.apache.commons.math3.ml.neuralnet.oned.NeuronString:
    org.apache.commons.math3.ml.neuralnet.Network network -> network
    int size -> size
    boolean wrap -> wrap
    long[] identifiers -> identifiers
    org.apache.commons.math3.ml.neuralnet.Network getNetwork() -> getNetwork
    int getSize() -> getSize
    double[] getFeatures(int) -> getFeatures
    void createLinks() -> createLinks
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy -> org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy:
    long serialVersionUID -> serialVersionUID
    boolean wrap -> wrap
    double[][] featuresList -> featuresList
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask -> org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask:
    org.apache.commons.math3.ml.neuralnet.Network net -> net
    java.util.Iterator featuresIterator -> featuresIterator
    org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction updateAction -> updateAction
    void run() -> run
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction -> org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction:
    org.apache.commons.math3.ml.distance.DistanceMeasure distance -> distance
    org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction learningFactor -> learningFactor
    org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction neighbourhoodSize -> neighbourhoodSize
    java.util.concurrent.atomic.AtomicLong numberOfCalls -> numberOfCalls
    void update(org.apache.commons.math3.ml.neuralnet.Network,double[]) -> update
    long getNumberOfCalls() -> getNumberOfCalls
    void updateNeighbouringNeuron(org.apache.commons.math3.ml.neuralnet.Neuron,double[],double) -> updateNeighbouringNeuron
    org.apache.commons.math3.ml.neuralnet.Neuron findAndUpdateBestNeuron(org.apache.commons.math3.ml.neuralnet.Network,double[],double) -> findAndUpdateBestNeuron
    double[] computeFeatures(double[],double[],double) -> computeFeatures
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction -> org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction:
    double value(long) -> value
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory -> org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory:
    org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction exponentialDecay(double,double,long) -> exponentialDecay
    org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction quasiSigmoidDecay(double,double,long) -> quasiSigmoidDecay
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$1 -> org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$1:
    org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction decay -> decay
    double val$initValue -> val$initValue
    double val$valueAtNumCall -> val$valueAtNumCall
    long val$numCall -> val$numCall
    double value(long) -> value
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$2 -> org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$2:
    org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction decay -> decay
    double val$initValue -> val$initValue
    double val$slope -> val$slope
    long val$numCall -> val$numCall
    double value(long) -> value
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction -> org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction:
    int value(long) -> value
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory -> org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory:
    org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction exponentialDecay(double,double,long) -> exponentialDecay
    org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction quasiSigmoidDecay(double,double,long) -> quasiSigmoidDecay
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$1 -> org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$1:
    org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction decay -> decay
    double val$initValue -> val$initValue
    double val$valueAtNumCall -> val$valueAtNumCall
    long val$numCall -> val$numCall
    int value(long) -> value
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$2 -> org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$2:
    org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction decay -> decay
    double val$initValue -> val$initValue
    double val$slope -> val$slope
    long val$numCall -> val$numCall
    int value(long) -> value
org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction -> org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction:
    double a -> a
    double oneOverB -> oneOverB
    double value(long) -> value
org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction -> org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction:
    org.apache.commons.math3.analysis.function.Logistic sigmoid -> sigmoid
    double scale -> scale
    double value(long) -> value
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D -> org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:
    org.apache.commons.math3.ml.neuralnet.Network network -> network
    int numberOfRows -> numberOfRows
    int numberOfColumns -> numberOfColumns
    boolean wrapRows -> wrapRows
    boolean wrapColumns -> wrapColumns
    org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood neighbourhood -> neighbourhood
    long[][] identifiers -> identifiers
    org.apache.commons.math3.ml.neuralnet.Network getNetwork() -> getNetwork
    int getNumberOfRows() -> getNumberOfRows
    int getNumberOfColumns() -> getNumberOfColumns
    org.apache.commons.math3.ml.neuralnet.Neuron getNeuron(int,int) -> getNeuron
    void createLinks() -> createLinks
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$1 -> org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$1:
    int[] $SwitchMap$org$apache$commons$math3$ml$neuralnet$SquareNeighbourhood -> $SwitchMap$org$apache$commons$math3$ml$neuralnet$SquareNeighbourhood
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$SerializationProxy -> org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$SerializationProxy:
    long serialVersionUID -> serialVersionUID
    boolean wrapRows -> wrapRows
    boolean wrapColumns -> wrapColumns
    org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood neighbourhood -> neighbourhood
    double[][][] featuresList -> featuresList
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.ode.AbstractIntegrator -> org.apache.commons.math3.ode.AbstractIntegrator:
    java.util.Collection stepHandlers -> stepHandlers
    double stepStart -> stepStart
    double stepSize -> stepSize
    boolean isLastStep -> isLastStep
    boolean resetOccurred -> resetOccurred
    java.util.Collection eventsStates -> eventsStates
    boolean statesInitialized -> statesInitialized
    java.lang.String name -> name
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    org.apache.commons.math3.ode.ExpandableStatefulODE expandable -> expandable
    java.lang.String getName() -> getName
    void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler) -> addStepHandler
    java.util.Collection getStepHandlers() -> getStepHandlers
    void clearStepHandlers() -> clearStepHandlers
    void addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int) -> addEventHandler
    void addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver) -> addEventHandler
    java.util.Collection getEventHandlers() -> getEventHandlers
    void clearEventHandlers() -> clearEventHandlers
    double getCurrentStepStart() -> getCurrentStepStart
    double getCurrentSignedStepsize() -> getCurrentSignedStepsize
    void setMaxEvaluations(int) -> setMaxEvaluations
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    void initIntegration(double,double[],double) -> initIntegration
    void setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE) -> setEquations
    org.apache.commons.math3.ode.ExpandableStatefulODE getExpandable() -> getExpandable
    org.apache.commons.math3.util.Incrementor getEvaluationsCounter() -> getEvaluationsCounter
    double integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]) -> integrate
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
    void computeDerivatives(double,double[],double[]) -> computeDerivatives
    void setStateInitialized(boolean) -> setStateInitialized
    double acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double) -> acceptStep
    void sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> sanityChecks
org.apache.commons.math3.ode.AbstractIntegrator$1 -> org.apache.commons.math3.ode.AbstractIntegrator$1:
    int val$orderingSign -> val$orderingSign
    org.apache.commons.math3.ode.AbstractIntegrator this$0 -> this$0
    int compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.ode.AbstractParameterizable -> org.apache.commons.math3.ode.AbstractParameterizable:
    java.util.Collection parametersNames -> parametersNames
    java.util.Collection getParametersNames() -> getParametersNames
    boolean isSupported(java.lang.String) -> isSupported
    void complainIfNotSupported(java.lang.String) -> complainIfNotSupported
org.apache.commons.math3.ode.ContinuousOutputModel -> org.apache.commons.math3.ode.ContinuousOutputModel:
    long serialVersionUID -> serialVersionUID
    double initialTime -> initialTime
    double finalTime -> finalTime
    boolean forward -> forward
    int index -> index
    java.util.List steps -> steps
    void append(org.apache.commons.math3.ode.ContinuousOutputModel) -> append
    void init(double,double[],double) -> init
    void handleStep(org.apache.commons.math3.ode.sampling.StepInterpolator,boolean) -> handleStep
    double getInitialTime() -> getInitialTime
    double getFinalTime() -> getFinalTime
    double getInterpolatedTime() -> getInterpolatedTime
    void setInterpolatedTime(double) -> setInterpolatedTime
    double[] getInterpolatedState() -> getInterpolatedState
    double[] getInterpolatedSecondaryState(int) -> getInterpolatedSecondaryState
    int locatePoint(double,org.apache.commons.math3.ode.sampling.StepInterpolator) -> locatePoint
org.apache.commons.math3.ode.EquationsMapper -> org.apache.commons.math3.ode.EquationsMapper:
    long serialVersionUID -> serialVersionUID
    int firstIndex -> firstIndex
    int dimension -> dimension
    int getFirstIndex() -> getFirstIndex
    int getDimension() -> getDimension
    void extractEquationData(double[],double[]) -> extractEquationData
    void insertEquationData(double[],double[]) -> insertEquationData
org.apache.commons.math3.ode.ExpandableStatefulODE -> org.apache.commons.math3.ode.ExpandableStatefulODE:
    org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary -> primary
    org.apache.commons.math3.ode.EquationsMapper primaryMapper -> primaryMapper
    double time -> time
    double[] primaryState -> primaryState
    double[] primaryStateDot -> primaryStateDot
    java.util.List components -> components
    org.apache.commons.math3.ode.FirstOrderDifferentialEquations getPrimary() -> getPrimary
    int getTotalDimension() -> getTotalDimension
    void computeDerivatives(double,double[],double[]) -> computeDerivatives
    int addSecondaryEquations(org.apache.commons.math3.ode.SecondaryEquations) -> addSecondaryEquations
    org.apache.commons.math3.ode.EquationsMapper getPrimaryMapper() -> getPrimaryMapper
    org.apache.commons.math3.ode.EquationsMapper[] getSecondaryMappers() -> getSecondaryMappers
    void setTime(double) -> setTime
    double getTime() -> getTime
    void setPrimaryState(double[]) -> setPrimaryState
    double[] getPrimaryState() -> getPrimaryState
    double[] getPrimaryStateDot() -> getPrimaryStateDot
    void setSecondaryState(int,double[]) -> setSecondaryState
    double[] getSecondaryState(int) -> getSecondaryState
    double[] getSecondaryStateDot(int) -> getSecondaryStateDot
    void setCompleteState(double[]) -> setCompleteState
    double[] getCompleteState() -> getCompleteState
org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent -> org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent:
    org.apache.commons.math3.ode.SecondaryEquations equation -> equation
    org.apache.commons.math3.ode.EquationsMapper mapper -> mapper
    double[] state -> state
    double[] stateDot -> stateDot
    org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) -> access$000
    double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) -> access$100
    double[] access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) -> access$200
    org.apache.commons.math3.ode.SecondaryEquations access$300(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) -> access$300
org.apache.commons.math3.ode.FirstOrderConverter -> org.apache.commons.math3.ode.FirstOrderConverter:
    org.apache.commons.math3.ode.SecondOrderDifferentialEquations equations -> equations
    int dimension -> dimension
    double[] z -> z
    double[] zDot -> zDot
    double[] zDDot -> zDDot
    int getDimension() -> getDimension
    void computeDerivatives(double,double[],double[]) -> computeDerivatives
org.apache.commons.math3.ode.FirstOrderDifferentialEquations -> org.apache.commons.math3.ode.FirstOrderDifferentialEquations:
    int getDimension() -> getDimension
    void computeDerivatives(double,double[],double[]) -> computeDerivatives
org.apache.commons.math3.ode.FirstOrderIntegrator -> org.apache.commons.math3.ode.FirstOrderIntegrator:
    double integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]) -> integrate
org.apache.commons.math3.ode.JacobianMatrices -> org.apache.commons.math3.ode.JacobianMatrices:
    org.apache.commons.math3.ode.ExpandableStatefulODE efode -> efode
    int index -> index
    org.apache.commons.math3.ode.MainStateJacobianProvider jode -> jode
    org.apache.commons.math3.ode.ParameterizedODE pode -> pode
    int stateDim -> stateDim
    org.apache.commons.math3.ode.ParameterConfiguration[] selectedParameters -> selectedParameters
    java.util.List jacobianProviders -> jacobianProviders
    int paramDim -> paramDim
    boolean dirtyParameter -> dirtyParameter
    double[] matricesData -> matricesData
    void registerVariationalEquations(org.apache.commons.math3.ode.ExpandableStatefulODE) -> registerVariationalEquations
    void addParameterJacobianProvider(org.apache.commons.math3.ode.ParameterJacobianProvider) -> addParameterJacobianProvider
    void setParameterizedODE(org.apache.commons.math3.ode.ParameterizedODE) -> setParameterizedODE
    void setParameterStep(java.lang.String,double) -> setParameterStep
    void setInitialMainStateJacobian(double[][]) -> setInitialMainStateJacobian
    void setInitialParameterJacobian(java.lang.String,double[]) -> setInitialParameterJacobian
    void getCurrentMainSetJacobian(double[][]) -> getCurrentMainSetJacobian
    void getCurrentParameterJacobian(java.lang.String,double[]) -> getCurrentParameterJacobian
    void checkDimension(int,java.lang.Object) -> checkDimension
    int access$200(org.apache.commons.math3.ode.JacobianMatrices) -> access$200
    int access$300(org.apache.commons.math3.ode.JacobianMatrices) -> access$300
    boolean access$400(org.apache.commons.math3.ode.JacobianMatrices) -> access$400
    org.apache.commons.math3.ode.MainStateJacobianProvider access$500(org.apache.commons.math3.ode.JacobianMatrices) -> access$500
    org.apache.commons.math3.ode.ParameterizedODE access$600(org.apache.commons.math3.ode.JacobianMatrices) -> access$600
    org.apache.commons.math3.ode.ParameterConfiguration[] access$700(org.apache.commons.math3.ode.JacobianMatrices) -> access$700
    java.util.List access$800(org.apache.commons.math3.ode.JacobianMatrices) -> access$800
    boolean access$402(org.apache.commons.math3.ode.JacobianMatrices,boolean) -> access$402
org.apache.commons.math3.ode.JacobianMatrices$1 -> org.apache.commons.math3.ode.JacobianMatrices$1:
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations -> org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations:
    org.apache.commons.math3.ode.JacobianMatrices this$0 -> this$0
    int getDimension() -> getDimension
    void computeDerivatives(double,double[],double[],double[],double[]) -> computeDerivatives
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper -> org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper:
    org.apache.commons.math3.ode.FirstOrderDifferentialEquations ode -> ode
    double[] hY -> hY
    int getDimension() -> getDimension
    void computeDerivatives(double,double[],double[]) -> computeDerivatives
    void computeMainStateJacobian(double,double[],double[],double[][]) -> computeMainStateJacobian
    org.apache.commons.math3.ode.FirstOrderDifferentialEquations access$000(org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper) -> access$000
org.apache.commons.math3.ode.JacobianMatrices$MismatchedEquations -> org.apache.commons.math3.ode.JacobianMatrices$MismatchedEquations:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.ode.MainStateJacobianProvider -> org.apache.commons.math3.ode.MainStateJacobianProvider:
    void computeMainStateJacobian(double,double[],double[],double[][]) -> computeMainStateJacobian
org.apache.commons.math3.ode.MultistepIntegrator -> org.apache.commons.math3.ode.MultistepIntegrator:
    double[] scaled -> scaled
    org.apache.commons.math3.linear.Array2DRowRealMatrix nordsieck -> nordsieck
    org.apache.commons.math3.ode.FirstOrderIntegrator starter -> starter
    int nSteps -> nSteps
    double exp -> exp
    double safety -> safety
    double minReduction -> minReduction
    double maxGrowth -> maxGrowth
    org.apache.commons.math3.ode.ODEIntegrator getStarterIntegrator() -> getStarterIntegrator
    void setStarterIntegrator(org.apache.commons.math3.ode.FirstOrderIntegrator) -> setStarterIntegrator
    void start(double,double[],double) -> start
    org.apache.commons.math3.linear.Array2DRowRealMatrix initializeHighOrderDerivatives(double,double[],double[][],double[][]) -> initializeHighOrderDerivatives
    double getMinReduction() -> getMinReduction
    void setMinReduction(double) -> setMinReduction
    double getMaxGrowth() -> getMaxGrowth
    void setMaxGrowth(double) -> setMaxGrowth
    double getSafety() -> getSafety
    void setSafety(double) -> setSafety
    double computeStepGrowShrinkFactor(double) -> computeStepGrowShrinkFactor
org.apache.commons.math3.ode.MultistepIntegrator$1 -> org.apache.commons.math3.ode.MultistepIntegrator$1:
    org.apache.commons.math3.ode.MultistepIntegrator this$0 -> this$0
    int getDimension() -> getDimension
    void computeDerivatives(double,double[],double[]) -> computeDerivatives
org.apache.commons.math3.ode.MultistepIntegrator$InitializationCompletedMarkerException -> org.apache.commons.math3.ode.MultistepIntegrator$InitializationCompletedMarkerException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer -> org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer:
    int count -> count
    double[] t -> t
    double[][] y -> y
    double[][] yDot -> yDot
    org.apache.commons.math3.ode.MultistepIntegrator this$0 -> this$0
    void handleStep(org.apache.commons.math3.ode.sampling.StepInterpolator,boolean) -> handleStep
    void init(double,double[],double) -> init
org.apache.commons.math3.ode.MultistepIntegrator$NordsieckTransformer -> org.apache.commons.math3.ode.MultistepIntegrator$NordsieckTransformer:
    org.apache.commons.math3.linear.Array2DRowRealMatrix initializeHighOrderDerivatives(double,double[],double[][],double[][]) -> initializeHighOrderDerivatives
org.apache.commons.math3.ode.ODEIntegrator -> org.apache.commons.math3.ode.ODEIntegrator:
    java.lang.String getName() -> getName
    void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler) -> addStepHandler
    java.util.Collection getStepHandlers() -> getStepHandlers
    void clearStepHandlers() -> clearStepHandlers
    void addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int) -> addEventHandler
    void addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver) -> addEventHandler
    java.util.Collection getEventHandlers() -> getEventHandlers
    void clearEventHandlers() -> clearEventHandlers
    double getCurrentStepStart() -> getCurrentStepStart
    double getCurrentSignedStepsize() -> getCurrentSignedStepsize
    void setMaxEvaluations(int) -> setMaxEvaluations
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
org.apache.commons.math3.ode.ParameterConfiguration -> org.apache.commons.math3.ode.ParameterConfiguration:
    long serialVersionUID -> serialVersionUID
    java.lang.String parameterName -> parameterName
    double hP -> hP
    java.lang.String getParameterName() -> getParameterName
    double getHP() -> getHP
    void setHP(double) -> setHP
org.apache.commons.math3.ode.ParameterJacobianProvider -> org.apache.commons.math3.ode.ParameterJacobianProvider:
    void computeParameterJacobian(double,double[],double[],java.lang.String,double[]) -> computeParameterJacobian
org.apache.commons.math3.ode.ParameterJacobianWrapper -> org.apache.commons.math3.ode.ParameterJacobianWrapper:
    org.apache.commons.math3.ode.FirstOrderDifferentialEquations fode -> fode
    org.apache.commons.math3.ode.ParameterizedODE pode -> pode
    java.util.Map hParam -> hParam
    java.util.Collection getParametersNames() -> getParametersNames
    boolean isSupported(java.lang.String) -> isSupported
    void computeParameterJacobian(double,double[],double[],java.lang.String,double[]) -> computeParameterJacobian
org.apache.commons.math3.ode.Parameterizable -> org.apache.commons.math3.ode.Parameterizable:
    java.util.Collection getParametersNames() -> getParametersNames
    boolean isSupported(java.lang.String) -> isSupported
org.apache.commons.math3.ode.ParameterizedODE -> org.apache.commons.math3.ode.ParameterizedODE:
    double getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,double) -> setParameter
org.apache.commons.math3.ode.ParameterizedWrapper -> org.apache.commons.math3.ode.ParameterizedWrapper:
    org.apache.commons.math3.ode.FirstOrderDifferentialEquations fode -> fode
    int getDimension() -> getDimension
    void computeDerivatives(double,double[],double[]) -> computeDerivatives
    java.util.Collection getParametersNames() -> getParametersNames
    boolean isSupported(java.lang.String) -> isSupported
    double getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,double) -> setParameter
org.apache.commons.math3.ode.SecondOrderDifferentialEquations -> org.apache.commons.math3.ode.SecondOrderDifferentialEquations:
    int getDimension() -> getDimension
    void computeSecondDerivatives(double,double[],double[],double[]) -> computeSecondDerivatives
org.apache.commons.math3.ode.SecondOrderIntegrator -> org.apache.commons.math3.ode.SecondOrderIntegrator:
    void integrate(org.apache.commons.math3.ode.SecondOrderDifferentialEquations,double,double[],double[],double,double[],double[]) -> integrate
org.apache.commons.math3.ode.SecondaryEquations -> org.apache.commons.math3.ode.SecondaryEquations:
    int getDimension() -> getDimension
    void computeDerivatives(double,double[],double[],double[],double[]) -> computeDerivatives
org.apache.commons.math3.ode.UnknownParameterException -> org.apache.commons.math3.ode.UnknownParameterException:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String getName() -> getName
org.apache.commons.math3.ode.events.EventFilter -> org.apache.commons.math3.ode.events.EventFilter:
    int HISTORY_SIZE -> HISTORY_SIZE
    org.apache.commons.math3.ode.events.EventHandler rawHandler -> rawHandler
    org.apache.commons.math3.ode.events.FilterType filter -> filter
    org.apache.commons.math3.ode.events.Transformer[] transformers -> transformers
    double[] updates -> updates
    boolean forward -> forward
    double extremeT -> extremeT
    void init(double,double[],double) -> init
    double g(double,double[]) -> g
    org.apache.commons.math3.ode.events.EventHandler$Action eventOccurred(double,double[],boolean) -> eventOccurred
    void resetState(double,double[]) -> resetState
org.apache.commons.math3.ode.events.EventHandler -> org.apache.commons.math3.ode.events.EventHandler:
    void init(double,double[],double) -> init
    double g(double,double[]) -> g
    org.apache.commons.math3.ode.events.EventHandler$Action eventOccurred(double,double[],boolean) -> eventOccurred
    void resetState(double,double[]) -> resetState
org.apache.commons.math3.ode.events.EventHandler$Action -> org.apache.commons.math3.ode.events.EventHandler$Action:
    org.apache.commons.math3.ode.events.EventHandler$Action STOP -> STOP
    org.apache.commons.math3.ode.events.EventHandler$Action RESET_STATE -> RESET_STATE
    org.apache.commons.math3.ode.events.EventHandler$Action RESET_DERIVATIVES -> RESET_DERIVATIVES
    org.apache.commons.math3.ode.events.EventHandler$Action CONTINUE -> CONTINUE
    org.apache.commons.math3.ode.events.EventHandler$Action[] $VALUES -> $VALUES
    org.apache.commons.math3.ode.events.EventHandler$Action[] values() -> values
    org.apache.commons.math3.ode.events.EventHandler$Action valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.ode.events.EventState -> org.apache.commons.math3.ode.events.EventState:
    org.apache.commons.math3.ode.events.EventHandler handler -> handler
    double maxCheckInterval -> maxCheckInterval
    double convergence -> convergence
    int maxIterationCount -> maxIterationCount
    org.apache.commons.math3.ode.ExpandableStatefulODE expandable -> expandable
    double t0 -> t0
    double g0 -> g0
    boolean g0Positive -> g0Positive
    boolean pendingEvent -> pendingEvent
    double pendingEventTime -> pendingEventTime
    double previousEventTime -> previousEventTime
    boolean forward -> forward
    boolean increasing -> increasing
    org.apache.commons.math3.ode.events.EventHandler$Action nextAction -> nextAction
    org.apache.commons.math3.analysis.solvers.UnivariateSolver solver -> solver
    org.apache.commons.math3.ode.events.EventHandler getEventHandler() -> getEventHandler
    void setExpandable(org.apache.commons.math3.ode.ExpandableStatefulODE) -> setExpandable
    double getMaxCheckInterval() -> getMaxCheckInterval
    double getConvergence() -> getConvergence
    int getMaxIterationCount() -> getMaxIterationCount
    void reinitializeBegin(org.apache.commons.math3.ode.sampling.StepInterpolator) -> reinitializeBegin
    double[] getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator) -> getCompleteState
    boolean evaluateStep(org.apache.commons.math3.ode.sampling.StepInterpolator) -> evaluateStep
    double getEventTime() -> getEventTime
    void stepAccepted(double,double[]) -> stepAccepted
    boolean stop() -> stop
    boolean reset(double,double[]) -> reset
    double[] access$000(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.sampling.StepInterpolator) -> access$000
    org.apache.commons.math3.ode.events.EventHandler access$100(org.apache.commons.math3.ode.events.EventState) -> access$100
org.apache.commons.math3.ode.events.EventState$1 -> org.apache.commons.math3.ode.events.EventState$1:
    org.apache.commons.math3.ode.sampling.StepInterpolator val$interpolator -> val$interpolator
    org.apache.commons.math3.ode.events.EventState this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException -> org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.exception.MaxCountExceededException wrapped -> wrapped
    org.apache.commons.math3.exception.MaxCountExceededException getException() -> getException
org.apache.commons.math3.ode.events.FilterType -> org.apache.commons.math3.ode.events.FilterType:
    org.apache.commons.math3.ode.events.FilterType TRIGGER_ONLY_DECREASING_EVENTS -> TRIGGER_ONLY_DECREASING_EVENTS
    org.apache.commons.math3.ode.events.FilterType TRIGGER_ONLY_INCREASING_EVENTS -> TRIGGER_ONLY_INCREASING_EVENTS
    org.apache.commons.math3.ode.events.FilterType[] $VALUES -> $VALUES
    org.apache.commons.math3.ode.events.FilterType[] values() -> values
    org.apache.commons.math3.ode.events.FilterType valueOf(java.lang.String) -> valueOf
    boolean getTriggeredIncreasing() -> getTriggeredIncreasing
    org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) -> selectTransformer
org.apache.commons.math3.ode.events.FilterType$1 -> org.apache.commons.math3.ode.events.FilterType$1:
    boolean getTriggeredIncreasing() -> getTriggeredIncreasing
    org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) -> selectTransformer
org.apache.commons.math3.ode.events.FilterType$2 -> org.apache.commons.math3.ode.events.FilterType$2:
    boolean getTriggeredIncreasing() -> getTriggeredIncreasing
    org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) -> selectTransformer
org.apache.commons.math3.ode.events.FilterType$3 -> org.apache.commons.math3.ode.events.FilterType$3:
    int[] $SwitchMap$org$apache$commons$math3$ode$events$Transformer -> $SwitchMap$org$apache$commons$math3$ode$events$Transformer
org.apache.commons.math3.ode.events.Transformer -> org.apache.commons.math3.ode.events.Transformer:
    org.apache.commons.math3.ode.events.Transformer UNINITIALIZED -> UNINITIALIZED
    org.apache.commons.math3.ode.events.Transformer PLUS -> PLUS
    org.apache.commons.math3.ode.events.Transformer MINUS -> MINUS
    org.apache.commons.math3.ode.events.Transformer MIN -> MIN
    org.apache.commons.math3.ode.events.Transformer MAX -> MAX
    org.apache.commons.math3.ode.events.Transformer[] $VALUES -> $VALUES
    org.apache.commons.math3.ode.events.Transformer[] values() -> values
    org.apache.commons.math3.ode.events.Transformer valueOf(java.lang.String) -> valueOf
    double transformed(double) -> transformed
org.apache.commons.math3.ode.events.Transformer$1 -> org.apache.commons.math3.ode.events.Transformer$1:
    double transformed(double) -> transformed
org.apache.commons.math3.ode.events.Transformer$2 -> org.apache.commons.math3.ode.events.Transformer$2:
    double transformed(double) -> transformed
org.apache.commons.math3.ode.events.Transformer$3 -> org.apache.commons.math3.ode.events.Transformer$3:
    double transformed(double) -> transformed
org.apache.commons.math3.ode.events.Transformer$4 -> org.apache.commons.math3.ode.events.Transformer$4:
    double transformed(double) -> transformed
org.apache.commons.math3.ode.events.Transformer$5 -> org.apache.commons.math3.ode.events.Transformer$5:
    double transformed(double) -> transformed
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator -> org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:
    java.lang.String METHOD_NAME -> METHOD_NAME
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
org.apache.commons.math3.ode.nonstiff.AdamsIntegrator -> org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:
    org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer transformer -> transformer
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
    org.apache.commons.math3.linear.Array2DRowRealMatrix initializeHighOrderDerivatives(double,double[],double[][],double[][]) -> initializeHighOrderDerivatives
    org.apache.commons.math3.linear.Array2DRowRealMatrix updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowRealMatrix) -> updateHighOrderDerivativesPhase1
    void updateHighOrderDerivativesPhase2(double[],double[],org.apache.commons.math3.linear.Array2DRowRealMatrix) -> updateHighOrderDerivativesPhase2
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator -> org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:
    java.lang.String METHOD_NAME -> METHOD_NAME
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector -> org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector:
    double[] previous -> previous
    double[] scaled -> scaled
    double[] before -> before
    double[] after -> after
    org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator this$0 -> this$0
    void start(int,int,int,int,int,int) -> start
    void visit(int,int,double) -> visit
    double end() -> end
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer -> org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:
    java.util.Map CACHE -> CACHE
    org.apache.commons.math3.linear.Array2DRowRealMatrix update -> update
    double[] c1 -> c1
    org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer getInstance(int) -> getInstance
    int getNSteps() -> getNSteps
    org.apache.commons.math3.linear.FieldMatrix buildP(int) -> buildP
    org.apache.commons.math3.linear.Array2DRowRealMatrix initializeHighOrderDerivatives(double,double[],double[][],double[][]) -> initializeHighOrderDerivatives
    org.apache.commons.math3.linear.Array2DRowRealMatrix updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowRealMatrix) -> updateHighOrderDerivativesPhase1
    void updateHighOrderDerivativesPhase2(double[],double[],org.apache.commons.math3.linear.Array2DRowRealMatrix) -> updateHighOrderDerivativesPhase2
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator -> org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:
    double scalAbsoluteTolerance -> scalAbsoluteTolerance
    double scalRelativeTolerance -> scalRelativeTolerance
    double[] vecAbsoluteTolerance -> vecAbsoluteTolerance
    double[] vecRelativeTolerance -> vecRelativeTolerance
    int mainSetDimension -> mainSetDimension
    double initialStep -> initialStep
    double minStep -> minStep
    double maxStep -> maxStep
    void setStepSizeControl(double,double,double,double) -> setStepSizeControl
    void setStepSizeControl(double,double,double[],double[]) -> setStepSizeControl
    void setInitialStepSize(double) -> setInitialStepSize
    void sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> sanityChecks
    double initializeStep(boolean,int,double[],double,double[],double[],double[],double[]) -> initializeStep
    double filterStep(double,boolean,boolean) -> filterStep
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
    double getCurrentStepStart() -> getCurrentStepStart
    void resetInternalState() -> resetInternalState
    double getMinStep() -> getMinStep
    double getMaxStep() -> getMaxStep
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator -> org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator:
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator -> org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator -> org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator:
    java.lang.String METHOD_NAME -> METHOD_NAME
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
    double E1 -> E1
    double E3 -> E3
    double E4 -> E4
    double E5 -> E5
    double E6 -> E6
    double E7 -> E7
    int getOrder() -> getOrder
    double estimateError(double[][],double[],double[],double) -> estimateError
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator -> org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:
    double A70 -> A70
    double A72 -> A72
    double A73 -> A73
    double A74 -> A74
    double A75 -> A75
    double D0 -> D0
    double D2 -> D2
    double D3 -> D3
    double D4 -> D4
    double D5 -> D5
    double D6 -> D6
    long serialVersionUID -> serialVersionUID
    double[] v1 -> v1
    double[] v2 -> v2
    double[] v3 -> v3
    double[] v4 -> v4
    boolean vectorsInitialized -> vectorsInitialized
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[]) -> reinitialize
    void storeTime(double) -> storeTime
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator -> org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:
    java.lang.String METHOD_NAME -> METHOD_NAME
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
    double E1_01 -> E1_01
    double E1_06 -> E1_06
    double E1_07 -> E1_07
    double E1_08 -> E1_08
    double E1_09 -> E1_09
    double E1_10 -> E1_10
    double E1_11 -> E1_11
    double E1_12 -> E1_12
    double E2_01 -> E2_01
    double E2_06 -> E2_06
    double E2_07 -> E2_07
    double E2_08 -> E2_08
    double E2_09 -> E2_09
    double E2_10 -> E2_10
    double E2_11 -> E2_11
    double E2_12 -> E2_12
    int getOrder() -> getOrder
    double estimateError(double[][],double[],double[],double) -> estimateError
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator -> org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:
    long serialVersionUID -> serialVersionUID
    double B_01 -> B_01
    double B_06 -> B_06
    double B_07 -> B_07
    double B_08 -> B_08
    double B_09 -> B_09
    double B_10 -> B_10
    double B_11 -> B_11
    double B_12 -> B_12
    double C14 -> C14
    double K14_01 -> K14_01
    double K14_06 -> K14_06
    double K14_07 -> K14_07
    double K14_08 -> K14_08
    double K14_09 -> K14_09
    double K14_10 -> K14_10
    double K14_11 -> K14_11
    double K14_12 -> K14_12
    double K14_13 -> K14_13
    double C15 -> C15
    double K15_01 -> K15_01
    double K15_06 -> K15_06
    double K15_07 -> K15_07
    double K15_08 -> K15_08
    double K15_09 -> K15_09
    double K15_10 -> K15_10
    double K15_11 -> K15_11
    double K15_12 -> K15_12
    double K15_13 -> K15_13
    double K15_14 -> K15_14
    double C16 -> C16
    double K16_01 -> K16_01
    double K16_06 -> K16_06
    double K16_07 -> K16_07
    double K16_08 -> K16_08
    double K16_09 -> K16_09
    double K16_10 -> K16_10
    double K16_11 -> K16_11
    double K16_12 -> K16_12
    double K16_13 -> K16_13
    double K16_14 -> K16_14
    double K16_15 -> K16_15
    double[][] D -> D
    double[][] yDotKLast -> yDotKLast
    double[][] v -> v
    boolean vectorsInitialized -> vectorsInitialized
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[]) -> reinitialize
    void storeTime(double) -> storeTime
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
    void doFinalize() -> doFinalize
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator -> org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:
    boolean fsal -> fsal
    double[] c -> c
    double[][] a -> a
    double[] b -> b
    org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator prototype -> prototype
    double exp -> exp
    double safety -> safety
    double minReduction -> minReduction
    double maxGrowth -> maxGrowth
    int getOrder() -> getOrder
    double getSafety() -> getSafety
    void setSafety(double) -> setSafety
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
    double getMinReduction() -> getMinReduction
    void setMinReduction(double) -> setMinReduction
    double getMaxGrowth() -> getMaxGrowth
    void setMaxGrowth(double) -> setMaxGrowth
    double estimateError(double[][],double[],double[],double) -> estimateError
org.apache.commons.math3.ode.nonstiff.EulerIntegrator -> org.apache.commons.math3.ode.nonstiff.EulerIntegrator:
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator -> org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.nonstiff.GillIntegrator -> org.apache.commons.math3.ode.nonstiff.GillIntegrator:
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator -> org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:
    double ONE_MINUS_INV_SQRT_2 -> ONE_MINUS_INV_SQRT_2
    double ONE_PLUS_INV_SQRT_2 -> ONE_PLUS_INV_SQRT_2
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator -> org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:
    java.lang.String METHOD_NAME -> METHOD_NAME
    int maxOrder -> maxOrder
    int[] sequence -> sequence
    int[] costPerStep -> costPerStep
    double[] costPerTimeUnit -> costPerTimeUnit
    double[] optimalStep -> optimalStep
    double[][] coeff -> coeff
    boolean performTest -> performTest
    int maxChecks -> maxChecks
    int maxIter -> maxIter
    double stabilityReduction -> stabilityReduction
    double stepControl1 -> stepControl1
    double stepControl2 -> stepControl2
    double stepControl3 -> stepControl3
    double stepControl4 -> stepControl4
    double orderControl1 -> orderControl1
    double orderControl2 -> orderControl2
    boolean useInterpolationError -> useInterpolationError
    int mudif -> mudif
    void setStabilityCheck(boolean,int,int,double) -> setStabilityCheck
    void setControlFactors(double,double,double,double) -> setControlFactors
    void setOrderControl(int,double,double) -> setOrderControl
    void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler) -> addStepHandler
    void addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver) -> addEventHandler
    void initializeArrays() -> initializeArrays
    void setInterpolationControl(boolean,int) -> setInterpolationControl
    void rescale(double[],double[],double[]) -> rescale
    boolean tryStep(double,double[],double,int,double[],double[][],double[],double[],double[]) -> tryStep
    void extrapolate(int,int,double[][],double[]) -> extrapolate
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator -> org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:
    long serialVersionUID -> serialVersionUID
    double[] y0Dot -> y0Dot
    double[] y1 -> y1
    double[] y1Dot -> y1Dot
    double[][] yMidDots -> yMidDots
    double[][] polynomials -> polynomials
    double[] errfac -> errfac
    int currentDegree -> currentDegree
    void resetTables(int) -> resetTables
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeCoefficients(int,double) -> computeCoefficients
    double estimateError(double[]) -> estimateError
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator -> org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator:
    java.lang.String METHOD_NAME -> METHOD_NAME
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
    double[] STATIC_E -> STATIC_E
    int getOrder() -> getOrder
    double estimateError(double[][],double[],double[],double) -> estimateError
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator -> org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.nonstiff.LutherIntegrator -> org.apache.commons.math3.ode.nonstiff.LutherIntegrator:
    double Q -> Q
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator -> org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator:
    long serialVersionUID -> serialVersionUID
    double Q -> Q
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.nonstiff.MidpointIntegrator -> org.apache.commons.math3.ode.nonstiff.MidpointIntegrator:
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator -> org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator -> org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator:
    double[] c -> c
    double[][] a -> a
    double[] b -> b
    org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator prototype -> prototype
    double step -> step
    void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double) -> integrate
    double[] singleStep(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double) -> singleStep
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator -> org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:
    double[] previousState -> previousState
    double[][] yDotK -> yDotK
    org.apache.commons.math3.ode.AbstractIntegrator integrator -> integrator
    void reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[]) -> reinitialize
    void shift() -> shift
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator -> org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator:
    double[] STATIC_C -> STATIC_C
    double[][] STATIC_A -> STATIC_A
    double[] STATIC_B -> STATIC_B
org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator -> org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator -> org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:
    double h -> h
    double[] currentState -> currentState
    double interpolatedTime -> interpolatedTime
    double[] interpolatedState -> interpolatedState
    double[] interpolatedDerivatives -> interpolatedDerivatives
    double[] interpolatedPrimaryState -> interpolatedPrimaryState
    double[] interpolatedPrimaryDerivatives -> interpolatedPrimaryDerivatives
    double[][] interpolatedSecondaryState -> interpolatedSecondaryState
    double[][] interpolatedSecondaryDerivatives -> interpolatedSecondaryDerivatives
    double globalPreviousTime -> globalPreviousTime
    double globalCurrentTime -> globalCurrentTime
    double softPreviousTime -> softPreviousTime
    double softCurrentTime -> softCurrentTime
    boolean finalized -> finalized
    boolean forward -> forward
    boolean dirtyState -> dirtyState
    org.apache.commons.math3.ode.EquationsMapper primaryMapper -> primaryMapper
    org.apache.commons.math3.ode.EquationsMapper[] secondaryMappers -> secondaryMappers
    void allocateInterpolatedArrays(int) -> allocateInterpolatedArrays
    void reinitialize(double[],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[]) -> reinitialize
    org.apache.commons.math3.ode.sampling.StepInterpolator copy() -> copy
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void shift() -> shift
    void storeTime(double) -> storeTime
    void setSoftPreviousTime(double) -> setSoftPreviousTime
    void setSoftCurrentTime(double) -> setSoftCurrentTime
    double getGlobalPreviousTime() -> getGlobalPreviousTime
    double getGlobalCurrentTime() -> getGlobalCurrentTime
    double getPreviousTime() -> getPreviousTime
    double getCurrentTime() -> getCurrentTime
    double getInterpolatedTime() -> getInterpolatedTime
    void setInterpolatedTime(double) -> setInterpolatedTime
    boolean isForward() -> isForward
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
    void evaluateCompleteInterpolatedState() -> evaluateCompleteInterpolatedState
    double[] getInterpolatedState() -> getInterpolatedState
    double[] getInterpolatedDerivatives() -> getInterpolatedDerivatives
    double[] getInterpolatedSecondaryState(int) -> getInterpolatedSecondaryState
    double[] getInterpolatedSecondaryDerivatives(int) -> getInterpolatedSecondaryDerivatives
    void finalizeStep() -> finalizeStep
    void doFinalize() -> doFinalize
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeBaseExternal(java.io.ObjectOutput) -> writeBaseExternal
    double readBaseExternal(java.io.ObjectInput) -> readBaseExternal
org.apache.commons.math3.ode.sampling.DummyStepHandler -> org.apache.commons.math3.ode.sampling.DummyStepHandler:
    org.apache.commons.math3.ode.sampling.DummyStepHandler getInstance() -> getInstance
    void init(double,double[],double) -> init
    void handleStep(org.apache.commons.math3.ode.sampling.StepInterpolator,boolean) -> handleStep
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.ode.sampling.DummyStepHandler$1 -> org.apache.commons.math3.ode.sampling.DummyStepHandler$1:
org.apache.commons.math3.ode.sampling.DummyStepHandler$LazyHolder -> org.apache.commons.math3.ode.sampling.DummyStepHandler$LazyHolder:
    org.apache.commons.math3.ode.sampling.DummyStepHandler INSTANCE -> INSTANCE
    org.apache.commons.math3.ode.sampling.DummyStepHandler access$000() -> access$000
org.apache.commons.math3.ode.sampling.FixedStepHandler -> org.apache.commons.math3.ode.sampling.FixedStepHandler:
    void init(double,double[],double) -> init
    void handleStep(double,double[],double[],boolean) -> handleStep
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator -> org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:
    long serialVersionUID -> serialVersionUID
    double[] stateVariation -> stateVariation
    double scalingH -> scalingH
    double referenceTime -> referenceTime
    double[] scaled -> scaled
    org.apache.commons.math3.linear.Array2DRowRealMatrix nordsieck -> nordsieck
    org.apache.commons.math3.ode.sampling.StepInterpolator doCopy() -> doCopy
    void reinitialize(double[],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[]) -> reinitialize
    void reinitialize(double,double,double[],org.apache.commons.math3.linear.Array2DRowRealMatrix) -> reinitialize
    void rescale(double) -> rescale
    double[] getInterpolatedStateVariation() -> getInterpolatedStateVariation
    void computeInterpolatedStateAndDerivatives(double,double) -> computeInterpolatedStateAndDerivatives
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
org.apache.commons.math3.ode.sampling.StepHandler -> org.apache.commons.math3.ode.sampling.StepHandler:
    void init(double,double[],double) -> init
    void handleStep(org.apache.commons.math3.ode.sampling.StepInterpolator,boolean) -> handleStep
org.apache.commons.math3.ode.sampling.StepInterpolator -> org.apache.commons.math3.ode.sampling.StepInterpolator:
    double getPreviousTime() -> getPreviousTime
    double getCurrentTime() -> getCurrentTime
    double getInterpolatedTime() -> getInterpolatedTime
    void setInterpolatedTime(double) -> setInterpolatedTime
    double[] getInterpolatedState() -> getInterpolatedState
    double[] getInterpolatedDerivatives() -> getInterpolatedDerivatives
    double[] getInterpolatedSecondaryState(int) -> getInterpolatedSecondaryState
    double[] getInterpolatedSecondaryDerivatives(int) -> getInterpolatedSecondaryDerivatives
    boolean isForward() -> isForward
    org.apache.commons.math3.ode.sampling.StepInterpolator copy() -> copy
org.apache.commons.math3.ode.sampling.StepNormalizer -> org.apache.commons.math3.ode.sampling.StepNormalizer:
    double h -> h
    org.apache.commons.math3.ode.sampling.FixedStepHandler handler -> handler
    double firstTime -> firstTime
    double lastTime -> lastTime
    double[] lastState -> lastState
    double[] lastDerivatives -> lastDerivatives
    boolean forward -> forward
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds bounds -> bounds
    org.apache.commons.math3.ode.sampling.StepNormalizerMode mode -> mode
    void init(double,double[],double) -> init
    void handleStep(org.apache.commons.math3.ode.sampling.StepInterpolator,boolean) -> handleStep
    boolean isNextInStep(double,org.apache.commons.math3.ode.sampling.StepInterpolator) -> isNextInStep
    void doNormalizedStep(boolean) -> doNormalizedStep
    void storeStep(org.apache.commons.math3.ode.sampling.StepInterpolator,double) -> storeStep
org.apache.commons.math3.ode.sampling.StepNormalizerBounds -> org.apache.commons.math3.ode.sampling.StepNormalizerBounds:
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds NEITHER -> NEITHER
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds FIRST -> FIRST
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds LAST -> LAST
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds BOTH -> BOTH
    boolean first -> first
    boolean last -> last
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] $VALUES -> $VALUES
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] values() -> values
    org.apache.commons.math3.ode.sampling.StepNormalizerBounds valueOf(java.lang.String) -> valueOf
    boolean firstIncluded() -> firstIncluded
    boolean lastIncluded() -> lastIncluded
org.apache.commons.math3.ode.sampling.StepNormalizerMode -> org.apache.commons.math3.ode.sampling.StepNormalizerMode:
    org.apache.commons.math3.ode.sampling.StepNormalizerMode INCREMENT -> INCREMENT
    org.apache.commons.math3.ode.sampling.StepNormalizerMode MULTIPLES -> MULTIPLES
    org.apache.commons.math3.ode.sampling.StepNormalizerMode[] $VALUES -> $VALUES
    org.apache.commons.math3.ode.sampling.StepNormalizerMode[] values() -> values
    org.apache.commons.math3.ode.sampling.StepNormalizerMode valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.optim.AbstractConvergenceChecker -> org.apache.commons.math3.optim.AbstractConvergenceChecker:
    double relativeThreshold -> relativeThreshold
    double absoluteThreshold -> absoluteThreshold
    double getRelativeThreshold() -> getRelativeThreshold
    double getAbsoluteThreshold() -> getAbsoluteThreshold
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optim.AbstractOptimizationProblem -> org.apache.commons.math3.optim.AbstractOptimizationProblem:
    org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback MAX_EVAL_CALLBACK -> MAX_EVAL_CALLBACK
    org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback MAX_ITER_CALLBACK -> MAX_ITER_CALLBACK
    int maxEvaluations -> maxEvaluations
    int maxIterations -> maxIterations
    org.apache.commons.math3.optim.ConvergenceChecker checker -> checker
    org.apache.commons.math3.util.Incrementor getEvaluationCounter() -> getEvaluationCounter
    org.apache.commons.math3.util.Incrementor getIterationCounter() -> getIterationCounter
    org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
org.apache.commons.math3.optim.AbstractOptimizationProblem$1 -> org.apache.commons.math3.optim.AbstractOptimizationProblem$1:
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback -> org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback:
    void trigger(int) -> trigger
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback -> org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback:
    void trigger(int) -> trigger
org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer -> org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:
    org.apache.commons.math3.optim.BaseMultivariateOptimizer optimizer -> optimizer
    int totalEvaluations -> totalEvaluations
    int starts -> starts
    org.apache.commons.math3.random.RandomVectorGenerator generator -> generator
    org.apache.commons.math3.optim.OptimizationData[] optimData -> optimData
    int maxEvalIndex -> maxEvalIndex
    int initialGuessIndex -> initialGuessIndex
    int getEvaluations() -> getEvaluations
    java.lang.Object[] getOptima() -> getOptima
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    java.lang.Object doOptimize() -> doOptimize
    void store(java.lang.Object) -> store
    void clear() -> clear
org.apache.commons.math3.optim.BaseMultivariateOptimizer -> org.apache.commons.math3.optim.BaseMultivariateOptimizer:
    double[] start -> start
    double[] lowerBound -> lowerBound
    double[] upperBound -> upperBound
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    double[] getStartPoint() -> getStartPoint
    double[] getLowerBound() -> getLowerBound
    double[] getUpperBound() -> getUpperBound
    void checkParameters() -> checkParameters
org.apache.commons.math3.optim.BaseOptimizer -> org.apache.commons.math3.optim.BaseOptimizer:
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    org.apache.commons.math3.util.Incrementor iterations -> iterations
    org.apache.commons.math3.optim.ConvergenceChecker checker -> checker
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    int getMaxIterations() -> getMaxIterations
    int getIterations() -> getIterations
    org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    java.lang.Object optimize() -> optimize
    java.lang.Object doOptimize() -> doOptimize
    void incrementEvaluationCount() -> incrementEvaluationCount
    void incrementIterationCount() -> incrementIterationCount
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
org.apache.commons.math3.optim.BaseOptimizer$1 -> org.apache.commons.math3.optim.BaseOptimizer$1:
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback -> org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:
    void trigger(int) -> trigger
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback -> org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:
    void trigger(int) -> trigger
org.apache.commons.math3.optim.ConvergenceChecker -> org.apache.commons.math3.optim.ConvergenceChecker:
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optim.InitialGuess -> org.apache.commons.math3.optim.InitialGuess:
    double[] init -> init
    double[] getInitialGuess() -> getInitialGuess
org.apache.commons.math3.optim.MaxEval -> org.apache.commons.math3.optim.MaxEval:
    int maxEval -> maxEval
    int getMaxEval() -> getMaxEval
    org.apache.commons.math3.optim.MaxEval unlimited() -> unlimited
org.apache.commons.math3.optim.MaxIter -> org.apache.commons.math3.optim.MaxIter:
    int maxIter -> maxIter
    int getMaxIter() -> getMaxIter
    org.apache.commons.math3.optim.MaxIter unlimited() -> unlimited
org.apache.commons.math3.optim.OptimizationData -> org.apache.commons.math3.optim.OptimizationData:
org.apache.commons.math3.optim.OptimizationProblem -> org.apache.commons.math3.optim.OptimizationProblem:
    org.apache.commons.math3.util.Incrementor getEvaluationCounter() -> getEvaluationCounter
    org.apache.commons.math3.util.Incrementor getIterationCounter() -> getIterationCounter
    org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
org.apache.commons.math3.optim.PointValuePair -> org.apache.commons.math3.optim.PointValuePair:
    long serialVersionUID -> serialVersionUID
    double[] getPoint() -> getPoint
    double[] getPointRef() -> getPointRef
    java.lang.Object writeReplace() -> writeReplace
org.apache.commons.math3.optim.PointValuePair$DataTransferObject -> org.apache.commons.math3.optim.PointValuePair$DataTransferObject:
    long serialVersionUID -> serialVersionUID
    double[] point -> point
    double value -> value
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.optim.PointVectorValuePair -> org.apache.commons.math3.optim.PointVectorValuePair:
    long serialVersionUID -> serialVersionUID
    double[] getPoint() -> getPoint
    double[] getPointRef() -> getPointRef
    double[] getValue() -> getValue
    double[] getValueRef() -> getValueRef
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object getValue() -> getValue
org.apache.commons.math3.optim.PointVectorValuePair$DataTransferObject -> org.apache.commons.math3.optim.PointVectorValuePair$DataTransferObject:
    long serialVersionUID -> serialVersionUID
    double[] point -> point
    double[] value -> value
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.optim.SimpleBounds -> org.apache.commons.math3.optim.SimpleBounds:
    double[] lower -> lower
    double[] upper -> upper
    double[] getLower() -> getLower
    double[] getUpper() -> getUpper
    org.apache.commons.math3.optim.SimpleBounds unbounded(int) -> unbounded
org.apache.commons.math3.optim.SimplePointChecker -> org.apache.commons.math3.optim.SimplePointChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optim.SimpleValueChecker -> org.apache.commons.math3.optim.SimpleValueChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optim.SimpleVectorValueChecker -> org.apache.commons.math3.optim.SimpleVectorValueChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optim.linear.LinearConstraint -> org.apache.commons.math3.optim.linear.LinearConstraint:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.linear.RealVector coefficients -> coefficients
    org.apache.commons.math3.optim.linear.Relationship relationship -> relationship
    double value -> value
    org.apache.commons.math3.linear.RealVector getCoefficients() -> getCoefficients
    org.apache.commons.math3.optim.linear.Relationship getRelationship() -> getRelationship
    double getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.apache.commons.math3.optim.linear.LinearConstraintSet -> org.apache.commons.math3.optim.linear.LinearConstraintSet:
    java.util.Set linearConstraints -> linearConstraints
    java.util.Collection getConstraints() -> getConstraints
org.apache.commons.math3.optim.linear.LinearObjectiveFunction -> org.apache.commons.math3.optim.linear.LinearObjectiveFunction:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.linear.RealVector coefficients -> coefficients
    double constantTerm -> constantTerm
    org.apache.commons.math3.linear.RealVector getCoefficients() -> getCoefficients
    double getConstantTerm() -> getConstantTerm
    double value(double[]) -> value
    double value(org.apache.commons.math3.linear.RealVector) -> value
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.apache.commons.math3.optim.linear.LinearOptimizer -> org.apache.commons.math3.optim.linear.LinearOptimizer:
    org.apache.commons.math3.optim.linear.LinearObjectiveFunction function -> function
    java.util.Collection linearConstraints -> linearConstraints
    boolean nonNegative -> nonNegative
    boolean isRestrictedToNonNegative() -> isRestrictedToNonNegative
    org.apache.commons.math3.optim.linear.LinearObjectiveFunction getFunction() -> getFunction
    java.util.Collection getConstraints() -> getConstraints
    org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.linear.NoFeasibleSolutionException -> org.apache.commons.math3.optim.linear.NoFeasibleSolutionException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.optim.linear.NonNegativeConstraint -> org.apache.commons.math3.optim.linear.NonNegativeConstraint:
    boolean isRestricted -> isRestricted
    boolean isRestrictedToNonNegative() -> isRestrictedToNonNegative
org.apache.commons.math3.optim.linear.PivotSelectionRule -> org.apache.commons.math3.optim.linear.PivotSelectionRule:
    org.apache.commons.math3.optim.linear.PivotSelectionRule DANTZIG -> DANTZIG
    org.apache.commons.math3.optim.linear.PivotSelectionRule BLAND -> BLAND
    org.apache.commons.math3.optim.linear.PivotSelectionRule[] $VALUES -> $VALUES
    org.apache.commons.math3.optim.linear.PivotSelectionRule[] values() -> values
    org.apache.commons.math3.optim.linear.PivotSelectionRule valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.optim.linear.Relationship -> org.apache.commons.math3.optim.linear.Relationship:
    org.apache.commons.math3.optim.linear.Relationship EQ -> EQ
    org.apache.commons.math3.optim.linear.Relationship LEQ -> LEQ
    org.apache.commons.math3.optim.linear.Relationship GEQ -> GEQ
    java.lang.String stringValue -> stringValue
    org.apache.commons.math3.optim.linear.Relationship[] $VALUES -> $VALUES
    org.apache.commons.math3.optim.linear.Relationship[] values() -> values
    org.apache.commons.math3.optim.linear.Relationship valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.apache.commons.math3.optim.linear.Relationship oppositeRelationship() -> oppositeRelationship
org.apache.commons.math3.optim.linear.Relationship$1 -> org.apache.commons.math3.optim.linear.Relationship$1:
    int[] $SwitchMap$org$apache$commons$math3$optim$linear$Relationship -> $SwitchMap$org$apache$commons$math3$optim$linear$Relationship
org.apache.commons.math3.optim.linear.SimplexSolver -> org.apache.commons.math3.optim.linear.SimplexSolver:
    int DEFAULT_ULPS -> DEFAULT_ULPS
    double DEFAULT_CUT_OFF -> DEFAULT_CUT_OFF
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    double epsilon -> epsilon
    int maxUlps -> maxUlps
    double cutOff -> cutOff
    org.apache.commons.math3.optim.linear.PivotSelectionRule pivotSelection -> pivotSelection
    org.apache.commons.math3.optim.linear.SolutionCallback solutionCallback -> solutionCallback
    org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    java.lang.Integer getPivotColumn(org.apache.commons.math3.optim.linear.SimplexTableau) -> getPivotColumn
    boolean isValidPivotColumn(org.apache.commons.math3.optim.linear.SimplexTableau,int) -> isValidPivotColumn
    java.lang.Integer getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int) -> getPivotRow
    void doIteration(org.apache.commons.math3.optim.linear.SimplexTableau) -> doIteration
    void solvePhase1(org.apache.commons.math3.optim.linear.SimplexTableau) -> solvePhase1
    org.apache.commons.math3.optim.PointValuePair doOptimize() -> doOptimize
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    java.lang.Object doOptimize() -> doOptimize
org.apache.commons.math3.optim.linear.SimplexTableau -> org.apache.commons.math3.optim.linear.SimplexTableau:
    java.lang.String NEGATIVE_VAR_COLUMN_LABEL -> NEGATIVE_VAR_COLUMN_LABEL
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.optim.linear.LinearObjectiveFunction f -> f
    java.util.List constraints -> constraints
    boolean restrictToNonNegative -> restrictToNonNegative
    java.util.List columnLabels -> columnLabels
    org.apache.commons.math3.linear.Array2DRowRealMatrix tableau -> tableau
    int numDecisionVariables -> numDecisionVariables
    int numSlackVariables -> numSlackVariables
    int numArtificialVariables -> numArtificialVariables
    double epsilon -> epsilon
    int maxUlps -> maxUlps
    int[] basicVariables -> basicVariables
    int[] basicRows -> basicRows
    void initializeColumnLabels() -> initializeColumnLabels
    org.apache.commons.math3.linear.Array2DRowRealMatrix createTableau(boolean) -> createTableau
    java.util.List normalizeConstraints(java.util.Collection) -> normalizeConstraints
    org.apache.commons.math3.optim.linear.LinearConstraint normalize(org.apache.commons.math3.optim.linear.LinearConstraint) -> normalize
    int getNumObjectiveFunctions() -> getNumObjectiveFunctions
    int getConstraintTypeCounts(org.apache.commons.math3.optim.linear.Relationship) -> getConstraintTypeCounts
    double getInvertedCoefficientSum(org.apache.commons.math3.linear.RealVector) -> getInvertedCoefficientSum
    java.lang.Integer getBasicRow(int) -> getBasicRow
    int getBasicVariable(int) -> getBasicVariable
    void initializeBasicVariables(int) -> initializeBasicVariables
    java.lang.Integer findBasicRow(int) -> findBasicRow
    void dropPhase1Objective() -> dropPhase1Objective
    void copyArray(double[],double[]) -> copyArray
    boolean isOptimal() -> isOptimal
    org.apache.commons.math3.optim.PointValuePair getSolution() -> getSolution
    void performRowOperations(int,int) -> performRowOperations
    void divideRow(int,double) -> divideRow
    void subtractRow(int,int,double) -> subtractRow
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    int getSlackVariableOffset() -> getSlackVariableOffset
    int getArtificialVariableOffset() -> getArtificialVariableOffset
    int getRhsOffset() -> getRhsOffset
    int getNumDecisionVariables() -> getNumDecisionVariables
    int getOriginalNumDecisionVariables() -> getOriginalNumDecisionVariables
    int getNumSlackVariables() -> getNumSlackVariables
    int getNumArtificialVariables() -> getNumArtificialVariables
    double[] getRow(int) -> getRow
    double[][] getData() -> getData
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.apache.commons.math3.optim.linear.SolutionCallback -> org.apache.commons.math3.optim.linear.SolutionCallback:
    org.apache.commons.math3.optim.linear.SimplexTableau tableau -> tableau
    void setTableau(org.apache.commons.math3.optim.linear.SimplexTableau) -> setTableau
    org.apache.commons.math3.optim.PointValuePair getSolution() -> getSolution
    boolean isSolutionOptimal() -> isSolutionOptimal
org.apache.commons.math3.optim.linear.UnboundedSolutionException -> org.apache.commons.math3.optim.linear.UnboundedSolutionException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.optim.nonlinear.scalar.GoalType -> org.apache.commons.math3.optim.nonlinear.scalar.GoalType:
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType MAXIMIZE -> MAXIMIZE
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType MINIMIZE -> MINIMIZE
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType[] $VALUES -> $VALUES
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType[] values() -> values
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer:
    org.apache.commons.math3.analysis.MultivariateVectorFunction gradient -> gradient
    double[] computeObjectiveGradient(double[]) -> computeObjectiveGradient
    org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter -> org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter:
    org.apache.commons.math3.analysis.MultivariateVectorFunction function -> function
    double[] observations -> observations
    double[] weights -> weights
    org.apache.commons.math3.linear.RealMatrix scale -> scale
    double value(double[]) -> value
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch -> org.apache.commons.math3.optim.nonlinear.scalar.LineSearch:
    double REL_TOL_UNUSED -> REL_TOL_UNUSED
    double ABS_TOL_UNUSED -> ABS_TOL_UNUSED
    org.apache.commons.math3.optim.univariate.UnivariateOptimizer lineOptimizer -> lineOptimizer
    org.apache.commons.math3.optim.univariate.BracketFinder bracket -> bracket
    double initialBracketingRange -> initialBracketingRange
    org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer mainOptimizer -> mainOptimizer
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair search(double[],double[]) -> search
    org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer access$000(org.apache.commons.math3.optim.nonlinear.scalar.LineSearch) -> access$000
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1 -> org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1:
    int val$n -> val$n
    double[] val$startPoint -> val$startPoint
    double[] val$direction -> val$direction
    org.apache.commons.math3.optim.nonlinear.scalar.LineSearch this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer:
    org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer optimizer -> optimizer
    java.util.List optima -> optima
    org.apache.commons.math3.optim.PointValuePair[] getOptima() -> getOptima
    void store(org.apache.commons.math3.optim.PointValuePair) -> store
    void clear() -> clear
    java.util.Comparator getPairComparator() -> getPairComparator
    void store(java.lang.Object) -> store
    java.lang.Object[] getOptima() -> getOptima
    org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer access$000(org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer) -> access$000
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1 -> org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1:
    org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:
    org.apache.commons.math3.analysis.MultivariateFunction bounded -> bounded
    org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$Mapper[] mappers -> mappers
    double[] unboundedToBounded(double[]) -> unboundedToBounded
    double[] boundedToUnbounded(double[]) -> boundedToUnbounded
    double value(double[]) -> value
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$1 -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$1:
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper:
    double lower -> lower
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper:
    org.apache.commons.math3.analysis.UnivariateFunction boundingFunction -> boundingFunction
    org.apache.commons.math3.analysis.UnivariateFunction unboundingFunction -> unboundingFunction
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$Mapper -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$Mapper:
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper:
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper:
    double upper -> upper
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:
    org.apache.commons.math3.analysis.MultivariateFunction bounded -> bounded
    double[] lower -> lower
    double[] upper -> upper
    double offset -> offset
    double[] scale -> scale
    double value(double[]) -> value
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:
    org.apache.commons.math3.analysis.MultivariateFunction function -> function
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType goal -> goal
    org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType getGoalType() -> getGoalType
    double computeObjectiveValue(double[]) -> computeObjectiveValue
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction -> org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction:
    org.apache.commons.math3.analysis.MultivariateFunction function -> function
    org.apache.commons.math3.analysis.MultivariateFunction getObjectiveFunction() -> getObjectiveFunction
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient -> org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient:
    org.apache.commons.math3.analysis.MultivariateVectorFunction gradient -> gradient
    org.apache.commons.math3.analysis.MultivariateVectorFunction getObjectiveFunctionGradient() -> getObjectiveFunctionGradient
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:
    org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula updateFormula -> updateFormula
    org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner preconditioner -> preconditioner
    org.apache.commons.math3.optim.nonlinear.scalar.LineSearch line -> line
    org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    org.apache.commons.math3.optim.PointValuePair doOptimize() -> doOptimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    void checkParameters() -> checkParameters
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    java.lang.Object doOptimize() -> doOptimize
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$1 -> org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$1:
    int[] $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula -> $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$BracketingStep -> org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$BracketingStep:
    double initialStep -> initialStep
    double getBracketingStep() -> getBracketingStep
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula -> org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula:
    org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula FLETCHER_REEVES -> FLETCHER_REEVES
    org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula POLAK_RIBIERE -> POLAK_RIBIERE
    org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula[] $VALUES -> $VALUES
    org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula[] values() -> values
    org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner -> org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner:
    double[] precondition(double[],double[]) -> precondition
org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner -> org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner:
    double[] precondition(double[],double[]) -> precondition
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:
    org.apache.commons.math3.optim.PointValuePair[] simplex -> simplex
    double[][] startConfiguration -> startConfiguration
    int dimension -> dimension
    int getDimension() -> getDimension
    int getSize() -> getSize
    void iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> iterate
    void build(double[]) -> build
    void evaluate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> evaluate
    void replaceWorstPoint(org.apache.commons.math3.optim.PointValuePair,java.util.Comparator) -> replaceWorstPoint
    org.apache.commons.math3.optim.PointValuePair[] getPoints() -> getPoints
    org.apache.commons.math3.optim.PointValuePair getPoint(int) -> getPoint
    void setPoint(int,org.apache.commons.math3.optim.PointValuePair) -> setPoint
    void setPoints(org.apache.commons.math3.optim.PointValuePair[]) -> setPoints
    double[] createHypercubeSteps(int,double) -> createHypercubeSteps
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:
    int MINIMUM_PROBLEM_DIMENSION -> MINIMUM_PROBLEM_DIMENSION
    double DEFAULT_INITIAL_RADIUS -> DEFAULT_INITIAL_RADIUS
    double DEFAULT_STOPPING_RADIUS -> DEFAULT_STOPPING_RADIUS
    double ZERO -> ZERO
    double ONE -> ONE
    double TWO -> TWO
    double TEN -> TEN
    double SIXTEEN -> SIXTEEN
    double TWO_HUNDRED_FIFTY -> TWO_HUNDRED_FIFTY
    double MINUS_ONE -> MINUS_ONE
    double HALF -> HALF
    double ONE_OVER_FOUR -> ONE_OVER_FOUR
    double ONE_OVER_EIGHT -> ONE_OVER_EIGHT
    double ONE_OVER_TEN -> ONE_OVER_TEN
    double ONE_OVER_A_THOUSAND -> ONE_OVER_A_THOUSAND
    int numberOfInterpolationPoints -> numberOfInterpolationPoints
    double initialTrustRegionRadius -> initialTrustRegionRadius
    double stoppingTrustRegionRadius -> stoppingTrustRegionRadius
    boolean isMinimize -> isMinimize
    org.apache.commons.math3.linear.ArrayRealVector currentBest -> currentBest
    double[] boundDifference -> boundDifference
    int trustRegionCenterInterpolationPointIndex -> trustRegionCenterInterpolationPointIndex
    org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix -> bMatrix
    org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix -> zMatrix
    org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints -> interpolationPoints
    org.apache.commons.math3.linear.ArrayRealVector originShift -> originShift
    org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints -> fAtInterpolationPoints
    org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset -> trustRegionCenterOffset
    org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter -> gradientAtTrustRegionCenter
    org.apache.commons.math3.linear.ArrayRealVector lowerDifference -> lowerDifference
    org.apache.commons.math3.linear.ArrayRealVector upperDifference -> upperDifference
    org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters -> modelSecondDerivativesParameters
    org.apache.commons.math3.linear.ArrayRealVector newPoint -> newPoint
    org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint -> alternativeNewPoint
    org.apache.commons.math3.linear.ArrayRealVector trialStepPoint -> trialStepPoint
    org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint -> lagrangeValuesAtNewPoint
    org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues -> modelSecondDerivativesValues
    org.apache.commons.math3.optim.PointValuePair doOptimize() -> doOptimize
    double bobyqa(double[],double[]) -> bobyqa
    double bobyqb(double[],double[]) -> bobyqb
    double[] altmov(int,double) -> altmov
    void prelim(double[],double[]) -> prelim
    double[] trsbox(double,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector) -> trsbox
    void update(double,double,int) -> update
    void setup(double[],double[]) -> setup
    java.lang.String caller(int) -> caller
    void printState(int) -> printState
    void printMethod() -> printMethod
    java.lang.Object doOptimize() -> doOptimize
    java.lang.String access$000(int) -> access$000
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer$PathIsExploredException -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer$PathIsExploredException:
    long serialVersionUID -> serialVersionUID
    java.lang.String PATH_IS_EXPLORED -> PATH_IS_EXPLORED
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:
    int lambda -> lambda
    boolean isActiveCMA -> isActiveCMA
    int checkFeasableCount -> checkFeasableCount
    double[] inputSigma -> inputSigma
    int dimension -> dimension
    int diagonalOnly -> diagonalOnly
    boolean isMinimize -> isMinimize
    boolean generateStatistics -> generateStatistics
    int maxIterations -> maxIterations
    double stopFitness -> stopFitness
    double stopTolUpX -> stopTolUpX
    double stopTolX -> stopTolX
    double stopTolFun -> stopTolFun
    double stopTolHistFun -> stopTolHistFun
    int mu -> mu
    double logMu2 -> logMu2
    org.apache.commons.math3.linear.RealMatrix weights -> weights
    double mueff -> mueff
    double sigma -> sigma
    double cc -> cc
    double cs -> cs
    double damps -> damps
    double ccov1 -> ccov1
    double ccovmu -> ccovmu
    double chiN -> chiN
    double ccov1Sep -> ccov1Sep
    double ccovmuSep -> ccovmuSep
    org.apache.commons.math3.linear.RealMatrix xmean -> xmean
    org.apache.commons.math3.linear.RealMatrix pc -> pc
    org.apache.commons.math3.linear.RealMatrix ps -> ps
    double normps -> normps
    org.apache.commons.math3.linear.RealMatrix B -> B
    org.apache.commons.math3.linear.RealMatrix D -> D
    org.apache.commons.math3.linear.RealMatrix BD -> BD
    org.apache.commons.math3.linear.RealMatrix diagD -> diagD
    org.apache.commons.math3.linear.RealMatrix C -> C
    org.apache.commons.math3.linear.RealMatrix diagC -> diagC
    int iterations -> iterations
    double[] fitnessHistory -> fitnessHistory
    int historySize -> historySize
    org.apache.commons.math3.random.RandomGenerator random -> random
    java.util.List statisticsSigmaHistory -> statisticsSigmaHistory
    java.util.List statisticsMeanHistory -> statisticsMeanHistory
    java.util.List statisticsFitnessHistory -> statisticsFitnessHistory
    java.util.List statisticsDHistory -> statisticsDHistory
    java.util.List getStatisticsSigmaHistory() -> getStatisticsSigmaHistory
    java.util.List getStatisticsMeanHistory() -> getStatisticsMeanHistory
    java.util.List getStatisticsFitnessHistory() -> getStatisticsFitnessHistory
    java.util.List getStatisticsDHistory() -> getStatisticsDHistory
    org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    org.apache.commons.math3.optim.PointValuePair doOptimize() -> doOptimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    void checkParameters() -> checkParameters
    void initializeCMA(double[]) -> initializeCMA
    boolean updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix) -> updateEvolutionPaths
    void updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix) -> updateCovarianceDiagonalOnly
    void updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix) -> updateCovariance
    void updateBD(double) -> updateBD
    void push(double[],double) -> push
    int[] sortedIndices(double[]) -> sortedIndices
    double valueRange(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair[]) -> valueRange
    org.apache.commons.math3.linear.RealMatrix log(org.apache.commons.math3.linear.RealMatrix) -> log
    org.apache.commons.math3.linear.RealMatrix sqrt(org.apache.commons.math3.linear.RealMatrix) -> sqrt
    org.apache.commons.math3.linear.RealMatrix square(org.apache.commons.math3.linear.RealMatrix) -> square
    org.apache.commons.math3.linear.RealMatrix times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix) -> times
    org.apache.commons.math3.linear.RealMatrix divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix) -> divide
    org.apache.commons.math3.linear.RealMatrix selectColumns(org.apache.commons.math3.linear.RealMatrix,int[]) -> selectColumns
    org.apache.commons.math3.linear.RealMatrix triu(org.apache.commons.math3.linear.RealMatrix,int) -> triu
    org.apache.commons.math3.linear.RealMatrix sumRows(org.apache.commons.math3.linear.RealMatrix) -> sumRows
    org.apache.commons.math3.linear.RealMatrix diag(org.apache.commons.math3.linear.RealMatrix) -> diag
    void copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int) -> copyColumn
    org.apache.commons.math3.linear.RealMatrix ones(int,int) -> ones
    org.apache.commons.math3.linear.RealMatrix eye(int,int) -> eye
    org.apache.commons.math3.linear.RealMatrix zeros(int,int) -> zeros
    org.apache.commons.math3.linear.RealMatrix repmat(org.apache.commons.math3.linear.RealMatrix,int,int) -> repmat
    org.apache.commons.math3.linear.RealMatrix sequence(double,double,double) -> sequence
    double max(org.apache.commons.math3.linear.RealMatrix) -> max
    double min(org.apache.commons.math3.linear.RealMatrix) -> min
    double max(double[]) -> max
    double min(double[]) -> min
    int[] inverse(int[]) -> inverse
    int[] reverse(int[]) -> reverse
    double[] randn(int) -> randn
    org.apache.commons.math3.linear.RealMatrix randn1(int,int) -> randn1
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    java.lang.Object doOptimize() -> doOptimize
    boolean access$400(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer) -> access$400
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex:
    double value -> value
    int index -> index
    int compareTo(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    int access$300(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex) -> access$300
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:
    boolean isRepairMode -> isRepairMode
    org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer this$0 -> this$0
    org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair value(double[]) -> value
    boolean isFeasible(double[]) -> isFeasible
    double[] repair(double[]) -> repair
    double penalty(double[],double[]) -> penalty
    double[] access$200(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction,double[]) -> access$200
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize:
    int lambda -> lambda
    int getPopulationSize() -> getPopulationSize
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma:
    double[] sigma -> sigma
    double[] getSigma() -> getSigma
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair:
    double value -> value
    double penalty -> penalty
    double access$000(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair) -> access$000
    double access$100(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair) -> access$100
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:
    double DEFAULT_KHI -> DEFAULT_KHI
    double DEFAULT_GAMMA -> DEFAULT_GAMMA
    double khi -> khi
    double gamma -> gamma
    void iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> iterate
    org.apache.commons.math3.optim.PointValuePair evaluateNewSimplex(org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optim.PointValuePair[],double,java.util.Comparator) -> evaluateNewSimplex
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:
    double DEFAULT_RHO -> DEFAULT_RHO
    double DEFAULT_KHI -> DEFAULT_KHI
    double DEFAULT_GAMMA -> DEFAULT_GAMMA
    double DEFAULT_SIGMA -> DEFAULT_SIGMA
    double rho -> rho
    double khi -> khi
    double gamma -> gamma
    double sigma -> sigma
    void iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> iterate
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:
    double MIN_RELATIVE_TOLERANCE -> MIN_RELATIVE_TOLERANCE
    double relativeThreshold -> relativeThreshold
    double absoluteThreshold -> absoluteThreshold
    org.apache.commons.math3.optim.nonlinear.scalar.LineSearch line -> line
    org.apache.commons.math3.optim.PointValuePair doOptimize() -> doOptimize
    double[][] newPointAndDirection(double[],double[],double) -> newPointAndDirection
    void checkParameters() -> checkParameters
    java.lang.Object doOptimize() -> doOptimize
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:
    org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex simplex -> simplex
    org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    org.apache.commons.math3.optim.PointValuePair doOptimize() -> doOptimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    void checkParameters() -> checkParameters
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    java.lang.Object doOptimize() -> doOptimize
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1 -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1:
    org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer this$0 -> this$0
    double value(double[]) -> value
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2 -> org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2:
    boolean val$isMinim -> val$isMinim
    org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer -> org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:
    org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian -> jacobian
    double[][] computeJacobian(double[]) -> computeJacobian
    org.apache.commons.math3.optim.PointVectorValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction -> org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:
    org.apache.commons.math3.analysis.MultivariateVectorFunction model -> model
    org.apache.commons.math3.analysis.MultivariateVectorFunction getModelFunction() -> getModelFunction
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian -> org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:
    org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian -> jacobian
    org.apache.commons.math3.analysis.MultivariateMatrixFunction getModelFunctionJacobian() -> getModelFunctionJacobian
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer -> org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:
    org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer optimizer -> optimizer
    java.util.List optima -> optima
    org.apache.commons.math3.optim.PointVectorValuePair[] getOptima() -> getOptima
    void store(org.apache.commons.math3.optim.PointVectorValuePair) -> store
    void clear() -> clear
    java.util.Comparator getPairComparator() -> getPairComparator
    void store(java.lang.Object) -> store
    java.lang.Object[] getOptima() -> getOptima
    org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer access$000(org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer) -> access$000
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 -> org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1:
    org.apache.commons.math3.linear.RealVector target -> target
    org.apache.commons.math3.linear.RealMatrix weight -> weight
    org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair) -> compare
    double weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) -> weightedResidual
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer -> org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:
    double[] target -> target
    org.apache.commons.math3.linear.RealMatrix weightMatrix -> weightMatrix
    org.apache.commons.math3.analysis.MultivariateVectorFunction model -> model
    double[] computeObjectiveValue(double[]) -> computeObjectiveValue
    org.apache.commons.math3.optim.PointVectorValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    org.apache.commons.math3.linear.RealMatrix getWeight() -> getWeight
    double[] getTarget() -> getTarget
    int getTargetSize() -> getTargetSize
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    void checkParameters() -> checkParameters
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.nonlinear.vector.Target -> org.apache.commons.math3.optim.nonlinear.vector.Target:
    double[] target -> target
    double[] getTarget() -> getTarget
org.apache.commons.math3.optim.nonlinear.vector.Weight -> org.apache.commons.math3.optim.nonlinear.vector.Weight:
    org.apache.commons.math3.linear.RealMatrix weightMatrix -> weightMatrix
    org.apache.commons.math3.linear.RealMatrix getWeight() -> getWeight
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer -> org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:
    org.apache.commons.math3.linear.RealMatrix weightMatrixSqrt -> weightMatrixSqrt
    double cost -> cost
    org.apache.commons.math3.linear.RealMatrix computeWeightedJacobian(double[]) -> computeWeightedJacobian
    double computeCost(double[]) -> computeCost
    double getRMS() -> getRMS
    double getChiSquare() -> getChiSquare
    org.apache.commons.math3.linear.RealMatrix getWeightSquareRoot() -> getWeightSquareRoot
    void setCost(double) -> setCost
    double[][] computeCovariances(double[],double) -> computeCovariances
    double[] computeSigma(double[],double) -> computeSigma
    org.apache.commons.math3.optim.PointVectorValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    double[] computeResiduals(double[]) -> computeResiduals
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    org.apache.commons.math3.linear.RealMatrix squareRoot(org.apache.commons.math3.linear.RealMatrix) -> squareRoot
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer -> org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:
    boolean useLU -> useLU
    org.apache.commons.math3.optim.PointVectorValuePair doOptimize() -> doOptimize
    void checkParameters() -> checkParameters
    java.lang.Object doOptimize() -> doOptimize
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer -> org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:
    double TWO_EPS -> TWO_EPS
    int solvedCols -> solvedCols
    double[] diagR -> diagR
    double[] jacNorm -> jacNorm
    double[] beta -> beta
    int[] permutation -> permutation
    int rank -> rank
    double lmPar -> lmPar
    double[] lmDir -> lmDir
    double initialStepBoundFactor -> initialStepBoundFactor
    double costRelativeTolerance -> costRelativeTolerance
    double parRelativeTolerance -> parRelativeTolerance
    double orthoTolerance -> orthoTolerance
    double qrRankingThreshold -> qrRankingThreshold
    double[] weightedResidual -> weightedResidual
    double[][] weightedJacobian -> weightedJacobian
    org.apache.commons.math3.optim.PointVectorValuePair doOptimize() -> doOptimize
    void determineLMParameter(double[],double,double[],double[],double[],double[]) -> determineLMParameter
    void determineLMDirection(double[],double[],double[],double[]) -> determineLMDirection
    void qrDecomposition(org.apache.commons.math3.linear.RealMatrix) -> qrDecomposition
    void qTy(double[]) -> qTy
    void checkParameters() -> checkParameters
    java.lang.Object doOptimize() -> doOptimize
org.apache.commons.math3.optim.univariate.BracketFinder -> org.apache.commons.math3.optim.univariate.BracketFinder:
    double EPS_MIN -> EPS_MIN
    double GOLD -> GOLD
    double growLimit -> growLimit
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    double lo -> lo
    double hi -> hi
    double mid -> mid
    double fLo -> fLo
    double fHi -> fHi
    double fMid -> fMid
    void search(org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optim.nonlinear.scalar.GoalType,double,double) -> search
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    double getLo() -> getLo
    double getFLo() -> getFLo
    double getHi() -> getHi
    double getFHi() -> getFHi
    double getMid() -> getMid
    double getFMid() -> getFMid
    double eval(org.apache.commons.math3.analysis.UnivariateFunction,double) -> eval
org.apache.commons.math3.optim.univariate.BrentOptimizer -> org.apache.commons.math3.optim.univariate.BrentOptimizer:
    double GOLDEN_SECTION -> GOLDEN_SECTION
    double MIN_RELATIVE_TOLERANCE -> MIN_RELATIVE_TOLERANCE
    double relativeThreshold -> relativeThreshold
    double absoluteThreshold -> absoluteThreshold
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair doOptimize() -> doOptimize
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair best(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,boolean) -> best
    java.lang.Object doOptimize() -> doOptimize
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer -> org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:
    org.apache.commons.math3.optim.univariate.UnivariateOptimizer optimizer -> optimizer
    int totalEvaluations -> totalEvaluations
    int starts -> starts
    org.apache.commons.math3.random.RandomGenerator generator -> generator
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair[] optima -> optima
    org.apache.commons.math3.optim.OptimizationData[] optimData -> optimData
    int maxEvalIndex -> maxEvalIndex
    int searchIntervalIndex -> searchIntervalIndex
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair[] getOptima() -> getOptima
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair doOptimize() -> doOptimize
    void sortPairs(org.apache.commons.math3.optim.nonlinear.scalar.GoalType) -> sortPairs
    java.lang.Object doOptimize() -> doOptimize
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1 -> org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1:
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType val$goal -> val$goal
    org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optim.univariate.SearchInterval -> org.apache.commons.math3.optim.univariate.SearchInterval:
    double lower -> lower
    double upper -> upper
    double start -> start
    double getMin() -> getMin
    double getMax() -> getMax
    double getStartValue() -> getStartValue
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker -> org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction -> org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction:
    org.apache.commons.math3.analysis.UnivariateFunction function -> function
    org.apache.commons.math3.analysis.UnivariateFunction getObjectiveFunction() -> getObjectiveFunction
org.apache.commons.math3.optim.univariate.UnivariateOptimizer -> org.apache.commons.math3.optim.univariate.UnivariateOptimizer:
    org.apache.commons.math3.analysis.UnivariateFunction function -> function
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType goal -> goal
    double start -> start
    double min -> min
    double max -> max
    org.apache.commons.math3.optim.univariate.UnivariatePointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
    org.apache.commons.math3.optim.nonlinear.scalar.GoalType getGoalType() -> getGoalType
    void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[]) -> parseOptimizationData
    double getStartValue() -> getStartValue
    double getMin() -> getMin
    double getMax() -> getMax
    double computeObjectiveValue(double) -> computeObjectiveValue
    java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) -> optimize
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair -> org.apache.commons.math3.optim.univariate.UnivariatePointValuePair:
    long serialVersionUID -> serialVersionUID
    double point -> point
    double value -> value
    double getPoint() -> getPoint
    double getValue() -> getValue
org.apache.commons.math3.optimization.AbstractConvergenceChecker -> org.apache.commons.math3.optimization.AbstractConvergenceChecker:
    double DEFAULT_RELATIVE_THRESHOLD -> DEFAULT_RELATIVE_THRESHOLD
    double DEFAULT_ABSOLUTE_THRESHOLD -> DEFAULT_ABSOLUTE_THRESHOLD
    double relativeThreshold -> relativeThreshold
    double absoluteThreshold -> absoluteThreshold
    double getRelativeThreshold() -> getRelativeThreshold
    double getAbsoluteThreshold() -> getAbsoluteThreshold
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer -> org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:
    org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer -> optimizer
    int maxEvaluations -> maxEvaluations
    int totalEvaluations -> totalEvaluations
    int starts -> starts
    org.apache.commons.math3.random.RandomVectorGenerator generator -> generator
    org.apache.commons.math3.optimization.PointValuePair[] optima -> optima
    org.apache.commons.math3.optimization.PointValuePair[] getOptima() -> getOptima
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimize
    void sortPairs(org.apache.commons.math3.optimization.GoalType) -> sortPairs
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1 -> org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1:
    org.apache.commons.math3.optimization.GoalType val$goal -> val$goal
    org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optimization.BaseMultivariateOptimizer -> org.apache.commons.math3.optimization.BaseMultivariateOptimizer:
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimize
org.apache.commons.math3.optimization.BaseMultivariateSimpleBoundsOptimizer -> org.apache.commons.math3.optimization.BaseMultivariateSimpleBoundsOptimizer:
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[],double[],double[]) -> optimize
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer -> org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:
    org.apache.commons.math3.optimization.BaseMultivariateVectorOptimizer optimizer -> optimizer
    int maxEvaluations -> maxEvaluations
    int totalEvaluations -> totalEvaluations
    int starts -> starts
    org.apache.commons.math3.random.RandomVectorGenerator generator -> generator
    org.apache.commons.math3.optimization.PointVectorValuePair[] optima -> optima
    org.apache.commons.math3.optimization.PointVectorValuePair[] getOptima() -> getOptima
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
    org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[]) -> optimize
    void sortPairs(double[],double[]) -> sortPairs
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1 -> org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1:
    double[] val$target -> val$target
    double[] val$weights -> val$weights
    org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair) -> compare
    double weightedResidual(org.apache.commons.math3.optimization.PointVectorValuePair) -> weightedResidual
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optimization.BaseMultivariateVectorOptimizer -> org.apache.commons.math3.optimization.BaseMultivariateVectorOptimizer:
    org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[]) -> optimize
org.apache.commons.math3.optimization.BaseOptimizer -> org.apache.commons.math3.optimization.BaseOptimizer:
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
org.apache.commons.math3.optimization.ConvergenceChecker -> org.apache.commons.math3.optimization.ConvergenceChecker:
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizer -> org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizer:
org.apache.commons.math3.optimization.DifferentiableMultivariateOptimizer -> org.apache.commons.math3.optimization.DifferentiableMultivariateOptimizer:
org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizer -> org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizer:
org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer -> org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer:
org.apache.commons.math3.optimization.GoalType -> org.apache.commons.math3.optimization.GoalType:
    org.apache.commons.math3.optimization.GoalType MAXIMIZE -> MAXIMIZE
    org.apache.commons.math3.optimization.GoalType MINIMIZE -> MINIMIZE
    org.apache.commons.math3.optimization.GoalType[] $VALUES -> $VALUES
    org.apache.commons.math3.optimization.GoalType[] values() -> values
    org.apache.commons.math3.optimization.GoalType valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.optimization.InitialGuess -> org.apache.commons.math3.optimization.InitialGuess:
    double[] init -> init
    double[] getInitialGuess() -> getInitialGuess
org.apache.commons.math3.optimization.LeastSquaresConverter -> org.apache.commons.math3.optimization.LeastSquaresConverter:
    org.apache.commons.math3.analysis.MultivariateVectorFunction function -> function
    double[] observations -> observations
    double[] weights -> weights
    org.apache.commons.math3.linear.RealMatrix scale -> scale
    double value(double[]) -> value
org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizer -> org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizer:
org.apache.commons.math3.optimization.MultivariateDifferentiableOptimizer -> org.apache.commons.math3.optimization.MultivariateDifferentiableOptimizer:
org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizer -> org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizer:
org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer -> org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer:
org.apache.commons.math3.optimization.MultivariateMultiStartOptimizer -> org.apache.commons.math3.optimization.MultivariateMultiStartOptimizer:
org.apache.commons.math3.optimization.MultivariateOptimizer -> org.apache.commons.math3.optimization.MultivariateOptimizer:
org.apache.commons.math3.optimization.OptimizationData -> org.apache.commons.math3.optimization.OptimizationData:
org.apache.commons.math3.optimization.PointValuePair -> org.apache.commons.math3.optimization.PointValuePair:
    long serialVersionUID -> serialVersionUID
    double[] getPoint() -> getPoint
    double[] getPointRef() -> getPointRef
    java.lang.Object writeReplace() -> writeReplace
org.apache.commons.math3.optimization.PointValuePair$DataTransferObject -> org.apache.commons.math3.optimization.PointValuePair$DataTransferObject:
    long serialVersionUID -> serialVersionUID
    double[] point -> point
    double value -> value
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.optimization.PointVectorValuePair -> org.apache.commons.math3.optimization.PointVectorValuePair:
    long serialVersionUID -> serialVersionUID
    double[] getPoint() -> getPoint
    double[] getPointRef() -> getPointRef
    double[] getValue() -> getValue
    double[] getValueRef() -> getValueRef
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object getValue() -> getValue
org.apache.commons.math3.optimization.PointVectorValuePair$DataTransferObject -> org.apache.commons.math3.optimization.PointVectorValuePair$DataTransferObject:
    long serialVersionUID -> serialVersionUID
    double[] point -> point
    double[] value -> value
    java.lang.Object readResolve() -> readResolve
org.apache.commons.math3.optimization.SimpleBounds -> org.apache.commons.math3.optimization.SimpleBounds:
    double[] lower -> lower
    double[] upper -> upper
    double[] getLower() -> getLower
    double[] getUpper() -> getUpper
org.apache.commons.math3.optimization.SimplePointChecker -> org.apache.commons.math3.optimization.SimplePointChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optimization.SimpleValueChecker -> org.apache.commons.math3.optimization.SimpleValueChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optimization.SimpleVectorValueChecker -> org.apache.commons.math3.optimization.SimpleVectorValueChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optimization.Target -> org.apache.commons.math3.optimization.Target:
    double[] target -> target
    double[] getTarget() -> getTarget
org.apache.commons.math3.optimization.Weight -> org.apache.commons.math3.optimization.Weight:
    org.apache.commons.math3.linear.RealMatrix weightMatrix -> weightMatrix
    org.apache.commons.math3.linear.RealMatrix getWeight() -> getWeight
org.apache.commons.math3.optimization.direct.AbstractSimplex -> org.apache.commons.math3.optimization.direct.AbstractSimplex:
    org.apache.commons.math3.optimization.PointValuePair[] simplex -> simplex
    double[][] startConfiguration -> startConfiguration
    int dimension -> dimension
    int getDimension() -> getDimension
    int getSize() -> getSize
    void iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> iterate
    void build(double[]) -> build
    void evaluate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> evaluate
    void replaceWorstPoint(org.apache.commons.math3.optimization.PointValuePair,java.util.Comparator) -> replaceWorstPoint
    org.apache.commons.math3.optimization.PointValuePair[] getPoints() -> getPoints
    org.apache.commons.math3.optimization.PointValuePair getPoint(int) -> getPoint
    void setPoint(int,org.apache.commons.math3.optimization.PointValuePair) -> setPoint
    void setPoints(org.apache.commons.math3.optimization.PointValuePair[]) -> setPoints
    double[] createHypercubeSteps(int,double) -> createHypercubeSteps
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer -> org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:
    int MINIMUM_PROBLEM_DIMENSION -> MINIMUM_PROBLEM_DIMENSION
    double DEFAULT_INITIAL_RADIUS -> DEFAULT_INITIAL_RADIUS
    double DEFAULT_STOPPING_RADIUS -> DEFAULT_STOPPING_RADIUS
    double ZERO -> ZERO
    double ONE -> ONE
    double TWO -> TWO
    double TEN -> TEN
    double SIXTEEN -> SIXTEEN
    double TWO_HUNDRED_FIFTY -> TWO_HUNDRED_FIFTY
    double MINUS_ONE -> MINUS_ONE
    double HALF -> HALF
    double ONE_OVER_FOUR -> ONE_OVER_FOUR
    double ONE_OVER_EIGHT -> ONE_OVER_EIGHT
    double ONE_OVER_TEN -> ONE_OVER_TEN
    double ONE_OVER_A_THOUSAND -> ONE_OVER_A_THOUSAND
    int numberOfInterpolationPoints -> numberOfInterpolationPoints
    double initialTrustRegionRadius -> initialTrustRegionRadius
    double stoppingTrustRegionRadius -> stoppingTrustRegionRadius
    boolean isMinimize -> isMinimize
    org.apache.commons.math3.linear.ArrayRealVector currentBest -> currentBest
    double[] boundDifference -> boundDifference
    int trustRegionCenterInterpolationPointIndex -> trustRegionCenterInterpolationPointIndex
    org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix -> bMatrix
    org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix -> zMatrix
    org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints -> interpolationPoints
    org.apache.commons.math3.linear.ArrayRealVector originShift -> originShift
    org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints -> fAtInterpolationPoints
    org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset -> trustRegionCenterOffset
    org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter -> gradientAtTrustRegionCenter
    org.apache.commons.math3.linear.ArrayRealVector lowerDifference -> lowerDifference
    org.apache.commons.math3.linear.ArrayRealVector upperDifference -> upperDifference
    org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters -> modelSecondDerivativesParameters
    org.apache.commons.math3.linear.ArrayRealVector newPoint -> newPoint
    org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint -> alternativeNewPoint
    org.apache.commons.math3.linear.ArrayRealVector trialStepPoint -> trialStepPoint
    org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint -> lagrangeValuesAtNewPoint
    org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues -> modelSecondDerivativesValues
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
    double bobyqa(double[],double[]) -> bobyqa
    double bobyqb(double[],double[]) -> bobyqb
    double[] altmov(int,double) -> altmov
    void prelim(double[],double[]) -> prelim
    double[] trsbox(double,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector) -> trsbox
    void update(double,double,int) -> update
    void setup(double[],double[]) -> setup
    java.lang.String caller(int) -> caller
    void printState(int) -> printState
    void printMethod() -> printMethod
    java.lang.String access$000(int) -> access$000
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer$PathIsExploredException -> org.apache.commons.math3.optimization.direct.BOBYQAOptimizer$PathIsExploredException:
    long serialVersionUID -> serialVersionUID
    java.lang.String PATH_IS_EXPLORED -> PATH_IS_EXPLORED
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer -> org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    org.apache.commons.math3.optimization.ConvergenceChecker checker -> checker
    org.apache.commons.math3.optimization.GoalType goal -> goal
    double[] start -> start
    double[] lowerBound -> lowerBound
    double[] upperBound -> upperBound
    org.apache.commons.math3.analysis.MultivariateFunction function -> function
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
    double computeObjectiveValue(double[]) -> computeObjectiveValue
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimize
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[]) -> optimize
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimizeInternal
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[]) -> optimizeInternal
    void parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData[]) -> parseOptimizationData
    org.apache.commons.math3.optimization.GoalType getGoalType() -> getGoalType
    double[] getStartPoint() -> getStartPoint
    double[] getLowerBound() -> getLowerBound
    double[] getUpperBound() -> getUpperBound
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
    void checkParameters() -> checkParameters
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer -> org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimize
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[],double[],double[]) -> optimize
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer -> org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    org.apache.commons.math3.optimization.ConvergenceChecker checker -> checker
    double[] target -> target
    org.apache.commons.math3.linear.RealMatrix weightMatrix -> weightMatrix
    double[] weight -> weight
    double[] start -> start
    org.apache.commons.math3.analysis.MultivariateVectorFunction function -> function
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
    double[] computeObjectiveValue(double[]) -> computeObjectiveValue
    org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[]) -> optimize
    org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.optimization.OptimizationData[]) -> optimize
    org.apache.commons.math3.optimization.PointVectorValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[]) -> optimizeInternal
    org.apache.commons.math3.optimization.PointVectorValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.optimization.OptimizationData[]) -> optimizeInternal
    double[] getStartPoint() -> getStartPoint
    org.apache.commons.math3.linear.RealMatrix getWeight() -> getWeight
    double[] getTarget() -> getTarget
    org.apache.commons.math3.analysis.MultivariateVectorFunction getObjectiveFunction() -> getObjectiveFunction
    org.apache.commons.math3.optimization.PointVectorValuePair doOptimize() -> doOptimize
    double[] getTargetRef() -> getTargetRef
    double[] getWeightRef() -> getWeightRef
    void setUp() -> setUp
    void parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData[]) -> parseOptimizationData
    void checkParameters() -> checkParameters
org.apache.commons.math3.optimization.direct.CMAESOptimizer -> org.apache.commons.math3.optimization.direct.CMAESOptimizer:
    int DEFAULT_CHECKFEASABLECOUNT -> DEFAULT_CHECKFEASABLECOUNT
    double DEFAULT_STOPFITNESS -> DEFAULT_STOPFITNESS
    boolean DEFAULT_ISACTIVECMA -> DEFAULT_ISACTIVECMA
    int DEFAULT_MAXITERATIONS -> DEFAULT_MAXITERATIONS
    int DEFAULT_DIAGONALONLY -> DEFAULT_DIAGONALONLY
    org.apache.commons.math3.random.RandomGenerator DEFAULT_RANDOMGENERATOR -> DEFAULT_RANDOMGENERATOR
    int lambda -> lambda
    boolean isActiveCMA -> isActiveCMA
    int checkFeasableCount -> checkFeasableCount
    double[] inputSigma -> inputSigma
    int dimension -> dimension
    int diagonalOnly -> diagonalOnly
    boolean isMinimize -> isMinimize
    boolean generateStatistics -> generateStatistics
    int maxIterations -> maxIterations
    double stopFitness -> stopFitness
    double stopTolUpX -> stopTolUpX
    double stopTolX -> stopTolX
    double stopTolFun -> stopTolFun
    double stopTolHistFun -> stopTolHistFun
    int mu -> mu
    double logMu2 -> logMu2
    org.apache.commons.math3.linear.RealMatrix weights -> weights
    double mueff -> mueff
    double sigma -> sigma
    double cc -> cc
    double cs -> cs
    double damps -> damps
    double ccov1 -> ccov1
    double ccovmu -> ccovmu
    double chiN -> chiN
    double ccov1Sep -> ccov1Sep
    double ccovmuSep -> ccovmuSep
    org.apache.commons.math3.linear.RealMatrix xmean -> xmean
    org.apache.commons.math3.linear.RealMatrix pc -> pc
    org.apache.commons.math3.linear.RealMatrix ps -> ps
    double normps -> normps
    org.apache.commons.math3.linear.RealMatrix B -> B
    org.apache.commons.math3.linear.RealMatrix D -> D
    org.apache.commons.math3.linear.RealMatrix BD -> BD
    org.apache.commons.math3.linear.RealMatrix diagD -> diagD
    org.apache.commons.math3.linear.RealMatrix C -> C
    org.apache.commons.math3.linear.RealMatrix diagC -> diagC
    int iterations -> iterations
    double[] fitnessHistory -> fitnessHistory
    int historySize -> historySize
    org.apache.commons.math3.random.RandomGenerator random -> random
    java.util.List statisticsSigmaHistory -> statisticsSigmaHistory
    java.util.List statisticsMeanHistory -> statisticsMeanHistory
    java.util.List statisticsFitnessHistory -> statisticsFitnessHistory
    java.util.List statisticsDHistory -> statisticsDHistory
    java.util.List getStatisticsSigmaHistory() -> getStatisticsSigmaHistory
    java.util.List getStatisticsMeanHistory() -> getStatisticsMeanHistory
    java.util.List getStatisticsFitnessHistory() -> getStatisticsFitnessHistory
    java.util.List getStatisticsDHistory() -> getStatisticsDHistory
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[]) -> optimizeInternal
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
    void parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData[]) -> parseOptimizationData
    void checkParameters() -> checkParameters
    void initializeCMA(double[]) -> initializeCMA
    boolean updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix) -> updateEvolutionPaths
    void updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix) -> updateCovarianceDiagonalOnly
    void updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix) -> updateCovariance
    void updateBD(double) -> updateBD
    void push(double[],double) -> push
    int[] sortedIndices(double[]) -> sortedIndices
    org.apache.commons.math3.linear.RealMatrix log(org.apache.commons.math3.linear.RealMatrix) -> log
    org.apache.commons.math3.linear.RealMatrix sqrt(org.apache.commons.math3.linear.RealMatrix) -> sqrt
    org.apache.commons.math3.linear.RealMatrix square(org.apache.commons.math3.linear.RealMatrix) -> square
    org.apache.commons.math3.linear.RealMatrix times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix) -> times
    org.apache.commons.math3.linear.RealMatrix divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix) -> divide
    org.apache.commons.math3.linear.RealMatrix selectColumns(org.apache.commons.math3.linear.RealMatrix,int[]) -> selectColumns
    org.apache.commons.math3.linear.RealMatrix triu(org.apache.commons.math3.linear.RealMatrix,int) -> triu
    org.apache.commons.math3.linear.RealMatrix sumRows(org.apache.commons.math3.linear.RealMatrix) -> sumRows
    org.apache.commons.math3.linear.RealMatrix diag(org.apache.commons.math3.linear.RealMatrix) -> diag
    void copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int) -> copyColumn
    org.apache.commons.math3.linear.RealMatrix ones(int,int) -> ones
    org.apache.commons.math3.linear.RealMatrix eye(int,int) -> eye
    org.apache.commons.math3.linear.RealMatrix zeros(int,int) -> zeros
    org.apache.commons.math3.linear.RealMatrix repmat(org.apache.commons.math3.linear.RealMatrix,int,int) -> repmat
    org.apache.commons.math3.linear.RealMatrix sequence(double,double,double) -> sequence
    double max(org.apache.commons.math3.linear.RealMatrix) -> max
    double min(org.apache.commons.math3.linear.RealMatrix) -> min
    double max(double[]) -> max
    double min(double[]) -> min
    int[] inverse(int[]) -> inverse
    int[] reverse(int[]) -> reverse
    double[] randn(int) -> randn
    org.apache.commons.math3.linear.RealMatrix randn1(int,int) -> randn1
    boolean access$200(org.apache.commons.math3.optimization.direct.CMAESOptimizer) -> access$200
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex -> org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex:
    double value -> value
    int index -> index
    int compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    int access$100(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex) -> access$100
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction -> org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction:
    double valueRange -> valueRange
    boolean isRepairMode -> isRepairMode
    org.apache.commons.math3.optimization.direct.CMAESOptimizer this$0 -> this$0
    double value(double[]) -> value
    boolean isFeasible(double[]) -> isFeasible
    void setValueRange(double) -> setValueRange
    double[] repair(double[]) -> repair
    double penalty(double[],double[]) -> penalty
    double[] access$000(org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction,double[]) -> access$000
org.apache.commons.math3.optimization.direct.CMAESOptimizer$PopulationSize -> org.apache.commons.math3.optimization.direct.CMAESOptimizer$PopulationSize:
    int lambda -> lambda
    int getPopulationSize() -> getPopulationSize
org.apache.commons.math3.optimization.direct.CMAESOptimizer$Sigma -> org.apache.commons.math3.optimization.direct.CMAESOptimizer$Sigma:
    double[] sigma -> sigma
    double[] getSigma() -> getSigma
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex -> org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:
    double DEFAULT_KHI -> DEFAULT_KHI
    double DEFAULT_GAMMA -> DEFAULT_GAMMA
    double khi -> khi
    double gamma -> gamma
    void iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> iterate
    org.apache.commons.math3.optimization.PointValuePair evaluateNewSimplex(org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.PointValuePair[],double,java.util.Comparator) -> evaluateNewSimplex
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter -> org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:
    org.apache.commons.math3.analysis.MultivariateFunction bounded -> bounded
    org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper[] mappers -> mappers
    double[] unboundedToBounded(double[]) -> unboundedToBounded
    double[] boundedToUnbounded(double[]) -> boundedToUnbounded
    double value(double[]) -> value
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper -> org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper:
    double lower -> lower
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper -> org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper:
    org.apache.commons.math3.analysis.UnivariateFunction boundingFunction -> boundingFunction
    org.apache.commons.math3.analysis.UnivariateFunction unboundingFunction -> unboundingFunction
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper -> org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper:
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper -> org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper:
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper -> org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper:
    double upper -> upper
    double unboundedToBounded(double) -> unboundedToBounded
    double boundedToUnbounded(double) -> boundedToUnbounded
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter -> org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:
    org.apache.commons.math3.analysis.MultivariateFunction bounded -> bounded
    double[] lower -> lower
    double[] upper -> upper
    double offset -> offset
    double[] scale -> scale
    double value(double[]) -> value
org.apache.commons.math3.optimization.direct.NelderMeadSimplex -> org.apache.commons.math3.optimization.direct.NelderMeadSimplex:
    double DEFAULT_RHO -> DEFAULT_RHO
    double DEFAULT_KHI -> DEFAULT_KHI
    double DEFAULT_GAMMA -> DEFAULT_GAMMA
    double DEFAULT_SIGMA -> DEFAULT_SIGMA
    double rho -> rho
    double khi -> khi
    double gamma -> gamma
    double sigma -> sigma
    void iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator) -> iterate
org.apache.commons.math3.optimization.direct.PowellOptimizer -> org.apache.commons.math3.optimization.direct.PowellOptimizer:
    double MIN_RELATIVE_TOLERANCE -> MIN_RELATIVE_TOLERANCE
    double relativeThreshold -> relativeThreshold
    double absoluteThreshold -> absoluteThreshold
    org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch line -> line
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
    double[][] newPointAndDirection(double[],double[],double) -> newPointAndDirection
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch -> org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch:
    double REL_TOL_UNUSED -> REL_TOL_UNUSED
    double ABS_TOL_UNUSED -> ABS_TOL_UNUSED
    org.apache.commons.math3.optimization.univariate.BracketFinder bracket -> bracket
    org.apache.commons.math3.optimization.direct.PowellOptimizer this$0 -> this$0
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair search(double[],double[]) -> search
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1 -> org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1:
    int val$n -> val$n
    double[] val$p -> val$p
    double[] val$d -> val$d
    org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch this$1 -> this$1
    double value(double) -> value
org.apache.commons.math3.optimization.direct.SimplexOptimizer -> org.apache.commons.math3.optimization.direct.SimplexOptimizer:
    org.apache.commons.math3.optimization.direct.AbstractSimplex simplex -> simplex
    void setSimplex(org.apache.commons.math3.optimization.direct.AbstractSimplex) -> setSimplex
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[]) -> optimizeInternal
    void parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData[]) -> parseOptimizationData
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
org.apache.commons.math3.optimization.direct.SimplexOptimizer$1 -> org.apache.commons.math3.optimization.direct.SimplexOptimizer$1:
    org.apache.commons.math3.optimization.direct.SimplexOptimizer this$0 -> this$0
    double value(double[]) -> value
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2 -> org.apache.commons.math3.optimization.direct.SimplexOptimizer$2:
    boolean val$isMinim -> val$isMinim
    org.apache.commons.math3.optimization.direct.SimplexOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optimization.fitting.CurveFitter -> org.apache.commons.math3.optimization.fitting.CurveFitter:
    org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer oldOptimizer -> oldOptimizer
    org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer optimizer -> optimizer
    java.util.List observations -> observations
    void addObservedPoint(double,double) -> addObservedPoint
    void addObservedPoint(double,double,double) -> addObservedPoint
    void addObservedPoint(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint) -> addObservedPoint
    org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[] getObservations() -> getObservations
    void clearObservations() -> clearObservations
    double[] fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[]) -> fit
    double[] fit(int,org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[]) -> fit
    java.util.List access$000(org.apache.commons.math3.optimization.fitting.CurveFitter) -> access$000
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction -> org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction:
    org.apache.commons.math3.analysis.ParametricUnivariateFunction f -> f
    org.apache.commons.math3.optimization.fitting.CurveFitter this$0 -> this$0
    org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian() -> jacobian
    double[] value(double[]) -> value
    org.apache.commons.math3.analysis.ParametricUnivariateFunction access$100(org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction) -> access$100
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction$1 -> org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction$1:
    org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction this$1 -> this$1
    double[][] value(double[]) -> value
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction -> org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction:
    org.apache.commons.math3.analysis.ParametricUnivariateFunction f -> f
    org.apache.commons.math3.optimization.fitting.CurveFitter this$0 -> this$0
    double[] value(double[]) -> value
    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) -> value
org.apache.commons.math3.optimization.fitting.GaussianFitter -> org.apache.commons.math3.optimization.fitting.GaussianFitter:
    double[] fit(double[]) -> fit
    double[] fit() -> fit
org.apache.commons.math3.optimization.fitting.GaussianFitter$1 -> org.apache.commons.math3.optimization.fitting.GaussianFitter$1:
    org.apache.commons.math3.optimization.fitting.GaussianFitter this$0 -> this$0
    double value(double,double[]) -> value
    double[] gradient(double,double[]) -> gradient
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser -> org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser:
    double norm -> norm
    double mean -> mean
    double sigma -> sigma
    double[] guess() -> guess
    org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[] sortObservations(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[]) -> sortObservations
    double[] basicGuess(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[]) -> basicGuess
    int findMaxY(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[]) -> findMaxY
    double interpolateXAtY(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[],int,int,double) -> interpolateXAtY
    org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[] getInterpolationPointsForY(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[],int,int,double) -> getInterpolationPointsForY
    boolean isBetween(double,double,double) -> isBetween
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1 -> org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1:
    org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser this$0 -> this$0
    int compare(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint,org.apache.commons.math3.optimization.fitting.WeightedObservedPoint) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optimization.fitting.HarmonicFitter -> org.apache.commons.math3.optimization.fitting.HarmonicFitter:
    double[] fit(double[]) -> fit
    double[] fit() -> fit
org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser -> org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser:
    double a -> a
    double omega -> omega
    double phi -> phi
    double[] guess() -> guess
    org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[] sortObservations(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[]) -> sortObservations
    double[] guessAOmega(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[]) -> guessAOmega
    double guessPhi(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[]) -> guessPhi
org.apache.commons.math3.optimization.fitting.PolynomialFitter -> org.apache.commons.math3.optimization.fitting.PolynomialFitter:
    int degree -> degree
    double[] fit() -> fit
    double[] fit(int,double[]) -> fit
    double[] fit(double[]) -> fit
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint -> org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:
    long serialVersionUID -> serialVersionUID
    double weight -> weight
    double x -> x
    double y -> y
    double getWeight() -> getWeight
    double getX() -> getX
    double getY() -> getY
org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer -> org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer:
    org.apache.commons.math3.analysis.MultivariateVectorFunction gradient -> gradient
    double[] computeObjectiveGradient(double[]) -> computeObjectiveGradient
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimizeInternal
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[]) -> optimizeInternal
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[]) -> optimizeInternal
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimizeInternal
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer -> org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:
    double DEFAULT_SINGULARITY_THRESHOLD -> DEFAULT_SINGULARITY_THRESHOLD
    double[][] weightedResidualJacobian -> weightedResidualJacobian
    int cols -> cols
    int rows -> rows
    double[] point -> point
    double[] objective -> objective
    double[] weightedResiduals -> weightedResiduals
    double cost -> cost
    org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction jF -> jF
    int jacobianEvaluations -> jacobianEvaluations
    org.apache.commons.math3.linear.RealMatrix weightMatrixSqrt -> weightMatrixSqrt
    int getJacobianEvaluations() -> getJacobianEvaluations
    void updateJacobian() -> updateJacobian
    org.apache.commons.math3.linear.RealMatrix computeWeightedJacobian(double[]) -> computeWeightedJacobian
    void updateResidualsAndCost() -> updateResidualsAndCost
    double computeCost(double[]) -> computeCost
    double getRMS() -> getRMS
    double getChiSquare() -> getChiSquare
    org.apache.commons.math3.linear.RealMatrix getWeightSquareRoot() -> getWeightSquareRoot
    void setCost(double) -> setCost
    double[][] getCovariances() -> getCovariances
    double[][] getCovariances(double) -> getCovariances
    double[][] computeCovariances(double[],double) -> computeCovariances
    double[] guessParametersErrors() -> guessParametersErrors
    double[] computeSigma(double[],double) -> computeSigma
    org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction,double[],double[],double[]) -> optimize
    org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,double[],double[],double[]) -> optimize
    org.apache.commons.math3.optimization.PointVectorValuePair optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,org.apache.commons.math3.optimization.OptimizationData[]) -> optimizeInternal
    void setUp() -> setUp
    double[] computeResiduals(double[]) -> computeResiduals
    org.apache.commons.math3.linear.RealMatrix squareRoot(org.apache.commons.math3.linear.RealMatrix) -> squareRoot
    org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[]) -> optimize
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer -> org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer:
    org.apache.commons.math3.analysis.MultivariateVectorFunction gradient -> gradient
    double[] computeObjectiveGradient(double[]) -> computeObjectiveGradient
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.DifferentiableMultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimizeInternal
    org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimize
    org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[]) -> optimizeInternal
org.apache.commons.math3.optimization.general.ConjugateGradientFormula -> org.apache.commons.math3.optimization.general.ConjugateGradientFormula:
    org.apache.commons.math3.optimization.general.ConjugateGradientFormula FLETCHER_REEVES -> FLETCHER_REEVES
    org.apache.commons.math3.optimization.general.ConjugateGradientFormula POLAK_RIBIERE -> POLAK_RIBIERE
    org.apache.commons.math3.optimization.general.ConjugateGradientFormula[] $VALUES -> $VALUES
    org.apache.commons.math3.optimization.general.ConjugateGradientFormula[] values() -> values
    org.apache.commons.math3.optimization.general.ConjugateGradientFormula valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.optimization.general.GaussNewtonOptimizer -> org.apache.commons.math3.optimization.general.GaussNewtonOptimizer:
    boolean useLU -> useLU
    org.apache.commons.math3.optimization.PointVectorValuePair doOptimize() -> doOptimize
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer -> org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:
    int solvedCols -> solvedCols
    double[] diagR -> diagR
    double[] jacNorm -> jacNorm
    double[] beta -> beta
    int[] permutation -> permutation
    int rank -> rank
    double lmPar -> lmPar
    double[] lmDir -> lmDir
    double initialStepBoundFactor -> initialStepBoundFactor
    double costRelativeTolerance -> costRelativeTolerance
    double parRelativeTolerance -> parRelativeTolerance
    double orthoTolerance -> orthoTolerance
    double qrRankingThreshold -> qrRankingThreshold
    double[] weightedResidual -> weightedResidual
    double[][] weightedJacobian -> weightedJacobian
    org.apache.commons.math3.optimization.PointVectorValuePair doOptimize() -> doOptimize
    void determineLMParameter(double[],double,double[],double[],double[],double[]) -> determineLMParameter
    void determineLMDirection(double[],double[],double[],double[]) -> determineLMDirection
    void qrDecomposition(org.apache.commons.math3.linear.RealMatrix) -> qrDecomposition
    void qTy(double[]) -> qTy
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer -> org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:
    org.apache.commons.math3.optimization.general.ConjugateGradientFormula updateFormula -> updateFormula
    org.apache.commons.math3.optimization.general.Preconditioner preconditioner -> preconditioner
    org.apache.commons.math3.analysis.solvers.UnivariateSolver solver -> solver
    double initialStep -> initialStep
    double[] point -> point
    void setInitialStep(double) -> setInitialStep
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
    double findUpperBound(org.apache.commons.math3.analysis.UnivariateFunction,double,double) -> findUpperBound
    double[] access$000(org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer) -> access$000
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner -> org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner:
    double[] precondition(double[],double[]) -> precondition
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction -> org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction:
    double[] searchDirection -> searchDirection
    org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer this$0 -> this$0
    double value(double) -> value
org.apache.commons.math3.optimization.general.Preconditioner -> org.apache.commons.math3.optimization.general.Preconditioner:
    double[] precondition(double[],double[]) -> precondition
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer -> org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:
    int DEFAULT_MAX_ITERATIONS -> DEFAULT_MAX_ITERATIONS
    org.apache.commons.math3.optimization.linear.LinearObjectiveFunction function -> function
    java.util.Collection linearConstraints -> linearConstraints
    org.apache.commons.math3.optimization.GoalType goal -> goal
    boolean nonNegative -> nonNegative
    int maxIterations -> maxIterations
    int iterations -> iterations
    boolean restrictToNonNegative() -> restrictToNonNegative
    org.apache.commons.math3.optimization.GoalType getGoalType() -> getGoalType
    org.apache.commons.math3.optimization.linear.LinearObjectiveFunction getFunction() -> getFunction
    java.util.Collection getConstraints() -> getConstraints
    void setMaxIterations(int) -> setMaxIterations
    int getMaxIterations() -> getMaxIterations
    int getIterations() -> getIterations
    void incrementIterationsCounter() -> incrementIterationsCounter
    org.apache.commons.math3.optimization.PointValuePair optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean) -> optimize
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
org.apache.commons.math3.optimization.linear.LinearConstraint -> org.apache.commons.math3.optimization.linear.LinearConstraint:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.linear.RealVector coefficients -> coefficients
    org.apache.commons.math3.optimization.linear.Relationship relationship -> relationship
    double value -> value
    org.apache.commons.math3.linear.RealVector getCoefficients() -> getCoefficients
    org.apache.commons.math3.optimization.linear.Relationship getRelationship() -> getRelationship
    double getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction -> org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.linear.RealVector coefficients -> coefficients
    double constantTerm -> constantTerm
    org.apache.commons.math3.linear.RealVector getCoefficients() -> getCoefficients
    double getConstantTerm() -> getConstantTerm
    double getValue(double[]) -> getValue
    double getValue(org.apache.commons.math3.linear.RealVector) -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.apache.commons.math3.optimization.linear.LinearOptimizer -> org.apache.commons.math3.optimization.linear.LinearOptimizer:
    void setMaxIterations(int) -> setMaxIterations
    int getMaxIterations() -> getMaxIterations
    int getIterations() -> getIterations
    org.apache.commons.math3.optimization.PointValuePair optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean) -> optimize
org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException -> org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.optimization.linear.Relationship -> org.apache.commons.math3.optimization.linear.Relationship:
    org.apache.commons.math3.optimization.linear.Relationship EQ -> EQ
    org.apache.commons.math3.optimization.linear.Relationship LEQ -> LEQ
    org.apache.commons.math3.optimization.linear.Relationship GEQ -> GEQ
    java.lang.String stringValue -> stringValue
    org.apache.commons.math3.optimization.linear.Relationship[] $VALUES -> $VALUES
    org.apache.commons.math3.optimization.linear.Relationship[] values() -> values
    org.apache.commons.math3.optimization.linear.Relationship valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.apache.commons.math3.optimization.linear.Relationship oppositeRelationship() -> oppositeRelationship
org.apache.commons.math3.optimization.linear.Relationship$1 -> org.apache.commons.math3.optimization.linear.Relationship$1:
    int[] $SwitchMap$org$apache$commons$math3$optimization$linear$Relationship -> $SwitchMap$org$apache$commons$math3$optimization$linear$Relationship
org.apache.commons.math3.optimization.linear.SimplexSolver -> org.apache.commons.math3.optimization.linear.SimplexSolver:
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    int DEFAULT_ULPS -> DEFAULT_ULPS
    double epsilon -> epsilon
    int maxUlps -> maxUlps
    java.lang.Integer getPivotColumn(org.apache.commons.math3.optimization.linear.SimplexTableau) -> getPivotColumn
    java.lang.Integer getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int) -> getPivotRow
    void doIteration(org.apache.commons.math3.optimization.linear.SimplexTableau) -> doIteration
    void solvePhase1(org.apache.commons.math3.optimization.linear.SimplexTableau) -> solvePhase1
    org.apache.commons.math3.optimization.PointValuePair doOptimize() -> doOptimize
org.apache.commons.math3.optimization.linear.SimplexTableau -> org.apache.commons.math3.optimization.linear.SimplexTableau:
    java.lang.String NEGATIVE_VAR_COLUMN_LABEL -> NEGATIVE_VAR_COLUMN_LABEL
    int DEFAULT_ULPS -> DEFAULT_ULPS
    double CUTOFF_THRESHOLD -> CUTOFF_THRESHOLD
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.optimization.linear.LinearObjectiveFunction f -> f
    java.util.List constraints -> constraints
    boolean restrictToNonNegative -> restrictToNonNegative
    java.util.List columnLabels -> columnLabels
    org.apache.commons.math3.linear.RealMatrix tableau -> tableau
    int numDecisionVariables -> numDecisionVariables
    int numSlackVariables -> numSlackVariables
    int numArtificialVariables -> numArtificialVariables
    double epsilon -> epsilon
    int maxUlps -> maxUlps
    void initializeColumnLabels() -> initializeColumnLabels
    org.apache.commons.math3.linear.RealMatrix createTableau(boolean) -> createTableau
    java.util.List normalizeConstraints(java.util.Collection) -> normalizeConstraints
    org.apache.commons.math3.optimization.linear.LinearConstraint normalize(org.apache.commons.math3.optimization.linear.LinearConstraint) -> normalize
    int getNumObjectiveFunctions() -> getNumObjectiveFunctions
    int getConstraintTypeCounts(org.apache.commons.math3.optimization.linear.Relationship) -> getConstraintTypeCounts
    double getInvertedCoefficientSum(org.apache.commons.math3.linear.RealVector) -> getInvertedCoefficientSum
    java.lang.Integer getBasicRow(int) -> getBasicRow
    void dropPhase1Objective() -> dropPhase1Objective
    void copyArray(double[],double[]) -> copyArray
    boolean isOptimal() -> isOptimal
    org.apache.commons.math3.optimization.PointValuePair getSolution() -> getSolution
    void divideRow(int,double) -> divideRow
    void subtractRow(int,int,double) -> subtractRow
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    int getSlackVariableOffset() -> getSlackVariableOffset
    int getArtificialVariableOffset() -> getArtificialVariableOffset
    int getRhsOffset() -> getRhsOffset
    int getNumDecisionVariables() -> getNumDecisionVariables
    int getOriginalNumDecisionVariables() -> getOriginalNumDecisionVariables
    int getNumSlackVariables() -> getNumSlackVariables
    int getNumArtificialVariables() -> getNumArtificialVariables
    double[][] getData() -> getData
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.apache.commons.math3.optimization.linear.UnboundedSolutionException -> org.apache.commons.math3.optimization.linear.UnboundedSolutionException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer -> org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:
    org.apache.commons.math3.optimization.ConvergenceChecker checker -> checker
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    org.apache.commons.math3.optimization.GoalType goal -> goal
    double searchMin -> searchMin
    double searchMax -> searchMax
    double searchStart -> searchStart
    org.apache.commons.math3.analysis.UnivariateFunction function -> function
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optimization.GoalType getGoalType() -> getGoalType
    double getMin() -> getMin
    double getMax() -> getMax
    double getStartValue() -> getStartValue
    double computeObjectiveValue(double) -> computeObjectiveValue
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double) -> optimize
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double) -> optimize
    org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair doOptimize() -> doOptimize
org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer -> org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer:
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double) -> optimize
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double) -> optimize
org.apache.commons.math3.optimization.univariate.BracketFinder -> org.apache.commons.math3.optimization.univariate.BracketFinder:
    double EPS_MIN -> EPS_MIN
    double GOLD -> GOLD
    double growLimit -> growLimit
    org.apache.commons.math3.util.Incrementor evaluations -> evaluations
    double lo -> lo
    double hi -> hi
    double mid -> mid
    double fLo -> fLo
    double fHi -> fHi
    double fMid -> fMid
    void search(org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double) -> search
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    double getLo() -> getLo
    double getFLo() -> getFLo
    double getHi() -> getHi
    double getFHi() -> getFHi
    double getMid() -> getMid
    double getFMid() -> getFMid
    double eval(org.apache.commons.math3.analysis.UnivariateFunction,double) -> eval
org.apache.commons.math3.optimization.univariate.BrentOptimizer -> org.apache.commons.math3.optimization.univariate.BrentOptimizer:
    double GOLDEN_SECTION -> GOLDEN_SECTION
    double MIN_RELATIVE_TOLERANCE -> MIN_RELATIVE_TOLERANCE
    double relativeThreshold -> relativeThreshold
    double absoluteThreshold -> absoluteThreshold
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair doOptimize() -> doOptimize
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair best(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,boolean) -> best
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker -> org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker:
    int ITERATION_CHECK_DISABLED -> ITERATION_CHECK_DISABLED
    int maxIterationCount -> maxIterationCount
    boolean converged(int,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair) -> converged
    boolean converged(int,java.lang.Object,java.lang.Object) -> converged
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer -> org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:
    org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer -> optimizer
    int maxEvaluations -> maxEvaluations
    int totalEvaluations -> totalEvaluations
    int starts -> starts
    org.apache.commons.math3.random.RandomGenerator generator -> generator
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima -> optima
    org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker() -> getConvergenceChecker
    int getMaxEvaluations() -> getMaxEvaluations
    int getEvaluations() -> getEvaluations
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] getOptima() -> getOptima
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double) -> optimize
    org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double) -> optimize
    void sortPairs(org.apache.commons.math3.optimization.GoalType) -> sortPairs
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1 -> org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1:
    org.apache.commons.math3.optimization.GoalType val$goal -> val$goal
    org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer this$0 -> this$0
    int compare(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.optimization.univariate.UnivariateOptimizer -> org.apache.commons.math3.optimization.univariate.UnivariateOptimizer:
org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair -> org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair:
    long serialVersionUID -> serialVersionUID
    double point -> point
    double value -> value
    double getPoint() -> getPoint
    double getValue() -> getValue
org.apache.commons.math3.primes.PollardRho -> org.apache.commons.math3.primes.PollardRho:
    java.util.List primeFactors(int) -> primeFactors
    int rhoBrent(int) -> rhoBrent
    int gcdPositive(int,int) -> gcdPositive
org.apache.commons.math3.primes.Primes -> org.apache.commons.math3.primes.Primes:
    boolean isPrime(int) -> isPrime
    int nextPrime(int) -> nextPrime
    java.util.List primeFactors(int) -> primeFactors
org.apache.commons.math3.primes.SmallPrimes -> org.apache.commons.math3.primes.SmallPrimes:
    int[] PRIMES -> PRIMES
    int PRIMES_LAST -> PRIMES_LAST
    int smallTrialDivision(int,java.util.List) -> smallTrialDivision
    int boundedTrialDivision(int,int,java.util.List) -> boundedTrialDivision
    java.util.List trialDivision(int) -> trialDivision
    boolean millerRabinPrimeTest(int) -> millerRabinPrimeTest
org.apache.commons.math3.random.AbstractRandomGenerator -> org.apache.commons.math3.random.AbstractRandomGenerator:
    double cachedNormalDeviate -> cachedNormalDeviate
    void clear() -> clear
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
    void nextBytes(byte[]) -> nextBytes
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    boolean nextBoolean() -> nextBoolean
    float nextFloat() -> nextFloat
    double nextDouble() -> nextDouble
    double nextGaussian() -> nextGaussian
org.apache.commons.math3.random.AbstractWell -> org.apache.commons.math3.random.AbstractWell:
    long serialVersionUID -> serialVersionUID
    int index -> index
    int[] v -> v
    int[] iRm1 -> iRm1
    int[] iRm2 -> iRm2
    int[] i1 -> i1
    int[] i2 -> i2
    int[] i3 -> i3
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
    int next(int) -> next
org.apache.commons.math3.random.BitsStreamGenerator -> org.apache.commons.math3.random.BitsStreamGenerator:
    long serialVersionUID -> serialVersionUID
    double nextGaussian -> nextGaussian
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
    int next(int) -> next
    boolean nextBoolean() -> nextBoolean
    void nextBytes(byte[]) -> nextBytes
    double nextDouble() -> nextDouble
    float nextFloat() -> nextFloat
    double nextGaussian() -> nextGaussian
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    long nextLong(long) -> nextLong
    void clear() -> clear
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator -> org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:
    double[] mean -> mean
    org.apache.commons.math3.random.NormalizedRandomGenerator generator -> generator
    double[] normalized -> normalized
    org.apache.commons.math3.linear.RealMatrix root -> root
    org.apache.commons.math3.random.NormalizedRandomGenerator getGenerator() -> getGenerator
    int getRank() -> getRank
    org.apache.commons.math3.linear.RealMatrix getRootMatrix() -> getRootMatrix
    double[] nextVector() -> nextVector
org.apache.commons.math3.random.EmpiricalDistribution -> org.apache.commons.math3.random.EmpiricalDistribution:
    int DEFAULT_BIN_COUNT -> DEFAULT_BIN_COUNT
    java.lang.String FILE_CHARSET -> FILE_CHARSET
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.random.RandomDataGenerator randomData -> randomData
    java.util.List binStats -> binStats
    org.apache.commons.math3.stat.descriptive.SummaryStatistics sampleStats -> sampleStats
    double max -> max
    double min -> min
    double delta -> delta
    int binCount -> binCount
    boolean loaded -> loaded
    double[] upperBounds -> upperBounds
    void load(double[]) -> load
    void load(java.net.URL) -> load
    void load(java.io.File) -> load
    void fillBinStats(org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter) -> fillBinStats
    int findBin(double) -> findBin
    double getNextValue() -> getNextValue
    org.apache.commons.math3.stat.descriptive.StatisticalSummary getSampleStats() -> getSampleStats
    int getBinCount() -> getBinCount
    java.util.List getBinStats() -> getBinStats
    double[] getUpperBounds() -> getUpperBounds
    double[] getGeneratorUpperBounds() -> getGeneratorUpperBounds
    boolean isLoaded() -> isLoaded
    void reSeed(long) -> reSeed
    double probability(double) -> probability
    double density(double) -> density
    double cumulativeProbability(double) -> cumulativeProbability
    double inverseCumulativeProbability(double) -> inverseCumulativeProbability
    double getNumericalMean() -> getNumericalMean
    double getNumericalVariance() -> getNumericalVariance
    double getSupportLowerBound() -> getSupportLowerBound
    double getSupportUpperBound() -> getSupportUpperBound
    boolean isSupportLowerBoundInclusive() -> isSupportLowerBoundInclusive
    boolean isSupportUpperBoundInclusive() -> isSupportUpperBoundInclusive
    boolean isSupportConnected() -> isSupportConnected
    double sample() -> sample
    void reseedRandomGenerator(long) -> reseedRandomGenerator
    double pB(int) -> pB
    double pBminus(int) -> pBminus
    double kB(int) -> kB
    org.apache.commons.math3.distribution.RealDistribution k(double) -> k
    double cumBinP(int) -> cumBinP
    org.apache.commons.math3.distribution.RealDistribution getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) -> getKernel
    int access$100(org.apache.commons.math3.random.EmpiricalDistribution,double) -> access$100
    java.util.List access$200(org.apache.commons.math3.random.EmpiricalDistribution) -> access$200
    org.apache.commons.math3.stat.descriptive.SummaryStatistics access$302(org.apache.commons.math3.random.EmpiricalDistribution,org.apache.commons.math3.stat.descriptive.SummaryStatistics) -> access$302
    org.apache.commons.math3.stat.descriptive.SummaryStatistics access$300(org.apache.commons.math3.random.EmpiricalDistribution) -> access$300
org.apache.commons.math3.random.EmpiricalDistribution$1 -> org.apache.commons.math3.random.EmpiricalDistribution$1:
org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter -> org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter:
    double[] inputArray -> inputArray
    org.apache.commons.math3.random.EmpiricalDistribution this$0 -> this$0
    void computeStats() -> computeStats
    void computeBinStats() -> computeBinStats
org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter -> org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter:
    org.apache.commons.math3.random.EmpiricalDistribution this$0 -> this$0
    void computeBinStats() -> computeBinStats
    void computeStats() -> computeStats
org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter -> org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter:
    java.io.BufferedReader inputStream -> inputStream
    org.apache.commons.math3.random.EmpiricalDistribution this$0 -> this$0
    void computeBinStats() -> computeBinStats
    void computeStats() -> computeStats
org.apache.commons.math3.random.GaussianRandomGenerator -> org.apache.commons.math3.random.GaussianRandomGenerator:
    org.apache.commons.math3.random.RandomGenerator generator -> generator
    double nextNormalizedDouble() -> nextNormalizedDouble
org.apache.commons.math3.random.HaltonSequenceGenerator -> org.apache.commons.math3.random.HaltonSequenceGenerator:
    int[] PRIMES -> PRIMES
    int[] WEIGHTS -> WEIGHTS
    int dimension -> dimension
    int count -> count
    int[] base -> base
    int[] weight -> weight
    double[] nextVector() -> nextVector
    int scramble(int,int,int,int) -> scramble
    double[] skipTo(int) -> skipTo
    int getNextIndex() -> getNextIndex
org.apache.commons.math3.random.ISAACRandom -> org.apache.commons.math3.random.ISAACRandom:
    long serialVersionUID -> serialVersionUID
    int SIZE_L -> SIZE_L
    int SIZE -> SIZE
    int H_SIZE -> H_SIZE
    int MASK -> MASK
    int GLD_RATIO -> GLD_RATIO
    int[] rsl -> rsl
    int[] mem -> mem
    int count -> count
    int isaacA -> isaacA
    int isaacB -> isaacB
    int isaacC -> isaacC
    int[] arr -> arr
    int isaacX -> isaacX
    int isaacI -> isaacI
    int isaacJ -> isaacJ
    void setSeed(int) -> setSeed
    void setSeed(long) -> setSeed
    void setSeed(int[]) -> setSeed
    int next(int) -> next
    void isaac() -> isaac
    void isaac2() -> isaac2
    void isaac3() -> isaac3
    void initState() -> initState
    void shuffle() -> shuffle
    void setState(int) -> setState
org.apache.commons.math3.random.JDKRandomGenerator -> org.apache.commons.math3.random.JDKRandomGenerator:
    long serialVersionUID -> serialVersionUID
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
org.apache.commons.math3.random.MersenneTwister -> org.apache.commons.math3.random.MersenneTwister:
    long serialVersionUID -> serialVersionUID
    int N -> N
    int M -> M
    int[] MAG01 -> MAG01
    int[] mt -> mt
    int mti -> mti
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
    int next(int) -> next
org.apache.commons.math3.random.NormalizedRandomGenerator -> org.apache.commons.math3.random.NormalizedRandomGenerator:
    double nextNormalizedDouble() -> nextNormalizedDouble
org.apache.commons.math3.random.RandomAdaptor -> org.apache.commons.math3.random.RandomAdaptor:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.random.RandomGenerator randomGenerator -> randomGenerator
    java.util.Random createAdaptor(org.apache.commons.math3.random.RandomGenerator) -> createAdaptor
    boolean nextBoolean() -> nextBoolean
    void nextBytes(byte[]) -> nextBytes
    double nextDouble() -> nextDouble
    float nextFloat() -> nextFloat
    double nextGaussian() -> nextGaussian
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
org.apache.commons.math3.random.RandomData -> org.apache.commons.math3.random.RandomData:
    java.lang.String nextHexString(int) -> nextHexString
    int nextInt(int,int) -> nextInt
    long nextLong(long,long) -> nextLong
    java.lang.String nextSecureHexString(int) -> nextSecureHexString
    int nextSecureInt(int,int) -> nextSecureInt
    long nextSecureLong(long,long) -> nextSecureLong
    long nextPoisson(double) -> nextPoisson
    double nextGaussian(double,double) -> nextGaussian
    double nextExponential(double) -> nextExponential
    double nextUniform(double,double) -> nextUniform
    double nextUniform(double,double,boolean) -> nextUniform
    int[] nextPermutation(int,int) -> nextPermutation
    java.lang.Object[] nextSample(java.util.Collection,int) -> nextSample
org.apache.commons.math3.random.RandomDataGenerator -> org.apache.commons.math3.random.RandomDataGenerator:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.random.RandomGenerator rand -> rand
    org.apache.commons.math3.random.RandomGenerator secRand -> secRand
    java.lang.String nextHexString(int) -> nextHexString
    int nextInt(int,int) -> nextInt
    long nextLong(long,long) -> nextLong
    long nextLong(org.apache.commons.math3.random.RandomGenerator,long) -> nextLong
    java.lang.String nextSecureHexString(int) -> nextSecureHexString
    int nextSecureInt(int,int) -> nextSecureInt
    long nextSecureLong(long,long) -> nextSecureLong
    long nextPoisson(double) -> nextPoisson
    double nextGaussian(double,double) -> nextGaussian
    double nextExponential(double) -> nextExponential
    double nextGamma(double,double) -> nextGamma
    int nextHypergeometric(int,int,int) -> nextHypergeometric
    int nextPascal(int,double) -> nextPascal
    double nextT(double) -> nextT
    double nextWeibull(double,double) -> nextWeibull
    int nextZipf(int,double) -> nextZipf
    double nextBeta(double,double) -> nextBeta
    int nextBinomial(int,double) -> nextBinomial
    double nextCauchy(double,double) -> nextCauchy
    double nextChiSquare(double) -> nextChiSquare
    double nextF(double,double) -> nextF
    double nextUniform(double,double) -> nextUniform
    double nextUniform(double,double,boolean) -> nextUniform
    int[] nextPermutation(int,int) -> nextPermutation
    java.lang.Object[] nextSample(java.util.Collection,int) -> nextSample
    void reSeed(long) -> reSeed
    void reSeedSecure() -> reSeedSecure
    void reSeedSecure(long) -> reSeedSecure
    void reSeed() -> reSeed
    void setSecureAlgorithm(java.lang.String,java.lang.String) -> setSecureAlgorithm
    org.apache.commons.math3.random.RandomGenerator getRandomGenerator() -> getRandomGenerator
    void initRan() -> initRan
    org.apache.commons.math3.random.RandomGenerator getSecRan() -> getSecRan
org.apache.commons.math3.random.RandomDataImpl -> org.apache.commons.math3.random.RandomDataImpl:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.random.RandomDataGenerator delegate -> delegate
    org.apache.commons.math3.random.RandomDataGenerator getDelegate() -> getDelegate
    java.lang.String nextHexString(int) -> nextHexString
    int nextInt(int,int) -> nextInt
    long nextLong(long,long) -> nextLong
    java.lang.String nextSecureHexString(int) -> nextSecureHexString
    int nextSecureInt(int,int) -> nextSecureInt
    long nextSecureLong(long,long) -> nextSecureLong
    long nextPoisson(double) -> nextPoisson
    double nextGaussian(double,double) -> nextGaussian
    double nextExponential(double) -> nextExponential
    double nextUniform(double,double) -> nextUniform
    double nextUniform(double,double,boolean) -> nextUniform
    double nextBeta(double,double) -> nextBeta
    int nextBinomial(int,double) -> nextBinomial
    double nextCauchy(double,double) -> nextCauchy
    double nextChiSquare(double) -> nextChiSquare
    double nextF(double,double) -> nextF
    double nextGamma(double,double) -> nextGamma
    int nextHypergeometric(int,int,int) -> nextHypergeometric
    int nextPascal(int,double) -> nextPascal
    double nextT(double) -> nextT
    double nextWeibull(double,double) -> nextWeibull
    int nextZipf(int,double) -> nextZipf
    void reSeed(long) -> reSeed
    void reSeedSecure() -> reSeedSecure
    void reSeedSecure(long) -> reSeedSecure
    void reSeed() -> reSeed
    void setSecureAlgorithm(java.lang.String,java.lang.String) -> setSecureAlgorithm
    int[] nextPermutation(int,int) -> nextPermutation
    java.lang.Object[] nextSample(java.util.Collection,int) -> nextSample
    double nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution) -> nextInversionDeviate
    int nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution) -> nextInversionDeviate
org.apache.commons.math3.random.RandomGenerator -> org.apache.commons.math3.random.RandomGenerator:
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
    void nextBytes(byte[]) -> nextBytes
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    boolean nextBoolean() -> nextBoolean
    float nextFloat() -> nextFloat
    double nextDouble() -> nextDouble
    double nextGaussian() -> nextGaussian
org.apache.commons.math3.random.RandomGeneratorFactory -> org.apache.commons.math3.random.RandomGeneratorFactory:
    org.apache.commons.math3.random.RandomGenerator createRandomGenerator(java.util.Random) -> createRandomGenerator
    long convertToLong(int[]) -> convertToLong
org.apache.commons.math3.random.RandomGeneratorFactory$1 -> org.apache.commons.math3.random.RandomGeneratorFactory$1:
    java.util.Random val$rng -> val$rng
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
    void nextBytes(byte[]) -> nextBytes
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    boolean nextBoolean() -> nextBoolean
    float nextFloat() -> nextFloat
    double nextDouble() -> nextDouble
    double nextGaussian() -> nextGaussian
org.apache.commons.math3.random.RandomVectorGenerator -> org.apache.commons.math3.random.RandomVectorGenerator:
    double[] nextVector() -> nextVector
org.apache.commons.math3.random.SobolSequenceGenerator -> org.apache.commons.math3.random.SobolSequenceGenerator:
    int BITS -> BITS
    double SCALE -> SCALE
    int MAX_DIMENSION -> MAX_DIMENSION
    java.lang.String RESOURCE_NAME -> RESOURCE_NAME
    java.lang.String FILE_CHARSET -> FILE_CHARSET
    int dimension -> dimension
    int count -> count
    long[][] direction -> direction
    long[] x -> x
    int initFromStream(java.io.InputStream) -> initFromStream
    void initDirectionVector(int,int,int[]) -> initDirectionVector
    double[] nextVector() -> nextVector
    double[] skipTo(int) -> skipTo
    int getNextIndex() -> getNextIndex
org.apache.commons.math3.random.StableRandomGenerator -> org.apache.commons.math3.random.StableRandomGenerator:
    org.apache.commons.math3.random.RandomGenerator generator -> generator
    double alpha -> alpha
    double beta -> beta
    double zeta -> zeta
    double nextNormalizedDouble() -> nextNormalizedDouble
org.apache.commons.math3.random.SynchronizedRandomGenerator -> org.apache.commons.math3.random.SynchronizedRandomGenerator:
    org.apache.commons.math3.random.RandomGenerator wrapped -> wrapped
    void setSeed(int) -> setSeed
    void setSeed(int[]) -> setSeed
    void setSeed(long) -> setSeed
    void nextBytes(byte[]) -> nextBytes
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    boolean nextBoolean() -> nextBoolean
    float nextFloat() -> nextFloat
    double nextDouble() -> nextDouble
    double nextGaussian() -> nextGaussian
org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator -> org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator:
    org.apache.commons.math3.random.NormalizedRandomGenerator generator -> generator
    double[] mean -> mean
    double[] standardDeviation -> standardDeviation
    double[] nextVector() -> nextVector
org.apache.commons.math3.random.UniformRandomGenerator -> org.apache.commons.math3.random.UniformRandomGenerator:
    double SQRT3 -> SQRT3
    org.apache.commons.math3.random.RandomGenerator generator -> generator
    double nextNormalizedDouble() -> nextNormalizedDouble
org.apache.commons.math3.random.UnitSphereRandomVectorGenerator -> org.apache.commons.math3.random.UnitSphereRandomVectorGenerator:
    org.apache.commons.math3.random.RandomGenerator rand -> rand
    int dimension -> dimension
    double[] nextVector() -> nextVector
org.apache.commons.math3.random.ValueServer -> org.apache.commons.math3.random.ValueServer:
    int DIGEST_MODE -> DIGEST_MODE
    int REPLAY_MODE -> REPLAY_MODE
    int UNIFORM_MODE -> UNIFORM_MODE
    int EXPONENTIAL_MODE -> EXPONENTIAL_MODE
    int GAUSSIAN_MODE -> GAUSSIAN_MODE
    int CONSTANT_MODE -> CONSTANT_MODE
    int mode -> mode
    java.net.URL valuesFileURL -> valuesFileURL
    double mu -> mu
    double sigma -> sigma
    org.apache.commons.math3.random.EmpiricalDistribution empiricalDistribution -> empiricalDistribution
    java.io.BufferedReader filePointer -> filePointer
    org.apache.commons.math3.random.RandomDataImpl randomData -> randomData
    double getNext() -> getNext
    void fill(double[]) -> fill
    double[] fill(int) -> fill
    void computeDistribution() -> computeDistribution
    void computeDistribution(int) -> computeDistribution
    int getMode() -> getMode
    void setMode(int) -> setMode
    java.net.URL getValuesFileURL() -> getValuesFileURL
    void setValuesFileURL(java.lang.String) -> setValuesFileURL
    void setValuesFileURL(java.net.URL) -> setValuesFileURL
    org.apache.commons.math3.random.EmpiricalDistribution getEmpiricalDistribution() -> getEmpiricalDistribution
    void resetReplayFile() -> resetReplayFile
    void closeReplayFile() -> closeReplayFile
    double getMu() -> getMu
    void setMu(double) -> setMu
    double getSigma() -> getSigma
    void setSigma(double) -> setSigma
    void reSeed(long) -> reSeed
    double getNextDigest() -> getNextDigest
    double getNextReplay() -> getNextReplay
    double getNextUniform() -> getNextUniform
    double getNextExponential() -> getNextExponential
    double getNextGaussian() -> getNextGaussian
org.apache.commons.math3.random.Well1024a -> org.apache.commons.math3.random.Well1024a:
    long serialVersionUID -> serialVersionUID
    int K -> K
    int M1 -> M1
    int M2 -> M2
    int M3 -> M3
    int next(int) -> next
org.apache.commons.math3.random.Well19937a -> org.apache.commons.math3.random.Well19937a:
    long serialVersionUID -> serialVersionUID
    int K -> K
    int M1 -> M1
    int M2 -> M2
    int M3 -> M3
    int next(int) -> next
org.apache.commons.math3.random.Well19937c -> org.apache.commons.math3.random.Well19937c:
    long serialVersionUID -> serialVersionUID
    int K -> K
    int M1 -> M1
    int M2 -> M2
    int M3 -> M3
    int next(int) -> next
org.apache.commons.math3.random.Well44497a -> org.apache.commons.math3.random.Well44497a:
    long serialVersionUID -> serialVersionUID
    int K -> K
    int M1 -> M1
    int M2 -> M2
    int M3 -> M3
    int next(int) -> next
org.apache.commons.math3.random.Well44497b -> org.apache.commons.math3.random.Well44497b:
    long serialVersionUID -> serialVersionUID
    int K -> K
    int M1 -> M1
    int M2 -> M2
    int M3 -> M3
    int next(int) -> next
org.apache.commons.math3.random.Well512a -> org.apache.commons.math3.random.Well512a:
    long serialVersionUID -> serialVersionUID
    int K -> K
    int M1 -> M1
    int M2 -> M2
    int M3 -> M3
    int next(int) -> next
org.apache.commons.math3.special.Beta -> org.apache.commons.math3.special.Beta:
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    double HALF_LOG_TWO_PI -> HALF_LOG_TWO_PI
    double[] DELTA -> DELTA
    double regularizedBeta(double,double,double) -> regularizedBeta
    double regularizedBeta(double,double,double,double) -> regularizedBeta
    double regularizedBeta(double,double,double,int) -> regularizedBeta
    double regularizedBeta(double,double,double,double,int) -> regularizedBeta
    double logBeta(double,double,double,int) -> logBeta
    double logGammaSum(double,double) -> logGammaSum
    double logGammaMinusLogGammaSum(double,double) -> logGammaMinusLogGammaSum
    double deltaMinusDeltaSum(double,double) -> deltaMinusDeltaSum
    double sumDeltaMinusDeltaSum(double,double) -> sumDeltaMinusDeltaSum
    double logBeta(double,double) -> logBeta
org.apache.commons.math3.special.Beta$1 -> org.apache.commons.math3.special.Beta$1:
    double val$b -> val$b
    double val$a -> val$a
    double getB(int,double) -> getB
    double getA(int,double) -> getA
org.apache.commons.math3.special.Erf -> org.apache.commons.math3.special.Erf:
    double X_CRIT -> X_CRIT
    double erf(double) -> erf
    double erfc(double) -> erfc
    double erf(double,double) -> erf
    double erfInv(double) -> erfInv
    double erfcInv(double) -> erfcInv
org.apache.commons.math3.special.Gamma -> org.apache.commons.math3.special.Gamma:
    double GAMMA -> GAMMA
    double LANCZOS_G -> LANCZOS_G
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    double[] LANCZOS -> LANCZOS
    double HALF_LOG_2_PI -> HALF_LOG_2_PI
    double SQRT_TWO_PI -> SQRT_TWO_PI
    double C_LIMIT -> C_LIMIT
    double S_LIMIT -> S_LIMIT
    double INV_GAMMA1P_M1_A0 -> INV_GAMMA1P_M1_A0
    double INV_GAMMA1P_M1_A1 -> INV_GAMMA1P_M1_A1
    double INV_GAMMA1P_M1_B1 -> INV_GAMMA1P_M1_B1
    double INV_GAMMA1P_M1_B2 -> INV_GAMMA1P_M1_B2
    double INV_GAMMA1P_M1_B3 -> INV_GAMMA1P_M1_B3
    double INV_GAMMA1P_M1_B4 -> INV_GAMMA1P_M1_B4
    double INV_GAMMA1P_M1_B5 -> INV_GAMMA1P_M1_B5
    double INV_GAMMA1P_M1_B6 -> INV_GAMMA1P_M1_B6
    double INV_GAMMA1P_M1_B7 -> INV_GAMMA1P_M1_B7
    double INV_GAMMA1P_M1_B8 -> INV_GAMMA1P_M1_B8
    double INV_GAMMA1P_M1_P0 -> INV_GAMMA1P_M1_P0
    double INV_GAMMA1P_M1_P1 -> INV_GAMMA1P_M1_P1
    double INV_GAMMA1P_M1_P2 -> INV_GAMMA1P_M1_P2
    double INV_GAMMA1P_M1_P3 -> INV_GAMMA1P_M1_P3
    double INV_GAMMA1P_M1_P4 -> INV_GAMMA1P_M1_P4
    double INV_GAMMA1P_M1_P5 -> INV_GAMMA1P_M1_P5
    double INV_GAMMA1P_M1_P6 -> INV_GAMMA1P_M1_P6
    double INV_GAMMA1P_M1_Q1 -> INV_GAMMA1P_M1_Q1
    double INV_GAMMA1P_M1_Q2 -> INV_GAMMA1P_M1_Q2
    double INV_GAMMA1P_M1_Q3 -> INV_GAMMA1P_M1_Q3
    double INV_GAMMA1P_M1_Q4 -> INV_GAMMA1P_M1_Q4
    double INV_GAMMA1P_M1_C -> INV_GAMMA1P_M1_C
    double INV_GAMMA1P_M1_C0 -> INV_GAMMA1P_M1_C0
    double INV_GAMMA1P_M1_C1 -> INV_GAMMA1P_M1_C1
    double INV_GAMMA1P_M1_C2 -> INV_GAMMA1P_M1_C2
    double INV_GAMMA1P_M1_C3 -> INV_GAMMA1P_M1_C3
    double INV_GAMMA1P_M1_C4 -> INV_GAMMA1P_M1_C4
    double INV_GAMMA1P_M1_C5 -> INV_GAMMA1P_M1_C5
    double INV_GAMMA1P_M1_C6 -> INV_GAMMA1P_M1_C6
    double INV_GAMMA1P_M1_C7 -> INV_GAMMA1P_M1_C7
    double INV_GAMMA1P_M1_C8 -> INV_GAMMA1P_M1_C8
    double INV_GAMMA1P_M1_C9 -> INV_GAMMA1P_M1_C9
    double INV_GAMMA1P_M1_C10 -> INV_GAMMA1P_M1_C10
    double INV_GAMMA1P_M1_C11 -> INV_GAMMA1P_M1_C11
    double INV_GAMMA1P_M1_C12 -> INV_GAMMA1P_M1_C12
    double INV_GAMMA1P_M1_C13 -> INV_GAMMA1P_M1_C13
    double logGamma(double) -> logGamma
    double regularizedGammaP(double,double) -> regularizedGammaP
    double regularizedGammaP(double,double,double,int) -> regularizedGammaP
    double regularizedGammaQ(double,double) -> regularizedGammaQ
    double regularizedGammaQ(double,double,double,int) -> regularizedGammaQ
    double digamma(double) -> digamma
    double trigamma(double) -> trigamma
    double lanczos(double) -> lanczos
    double invGamma1pm1(double) -> invGamma1pm1
    double logGamma1p(double) -> logGamma1p
    double gamma(double) -> gamma
org.apache.commons.math3.special.Gamma$1 -> org.apache.commons.math3.special.Gamma$1:
    double val$a -> val$a
    double getA(int,double) -> getA
    double getB(int,double) -> getB
org.apache.commons.math3.stat.Frequency -> org.apache.commons.math3.stat.Frequency:
    long serialVersionUID -> serialVersionUID
    java.util.TreeMap freqTable -> freqTable
    java.lang.String toString() -> toString
    void addValue(java.lang.Comparable) -> addValue
    void addValue(int) -> addValue
    void addValue(long) -> addValue
    void addValue(char) -> addValue
    void incrementValue(java.lang.Comparable,long) -> incrementValue
    void incrementValue(int,long) -> incrementValue
    void incrementValue(long,long) -> incrementValue
    void incrementValue(char,long) -> incrementValue
    void clear() -> clear
    java.util.Iterator valuesIterator() -> valuesIterator
    java.util.Iterator entrySetIterator() -> entrySetIterator
    long getSumFreq() -> getSumFreq
    long getCount(java.lang.Comparable) -> getCount
    long getCount(int) -> getCount
    long getCount(long) -> getCount
    long getCount(char) -> getCount
    int getUniqueCount() -> getUniqueCount
    double getPct(java.lang.Comparable) -> getPct
    double getPct(int) -> getPct
    double getPct(long) -> getPct
    double getPct(char) -> getPct
    long getCumFreq(java.lang.Comparable) -> getCumFreq
    long getCumFreq(int) -> getCumFreq
    long getCumFreq(long) -> getCumFreq
    long getCumFreq(char) -> getCumFreq
    double getCumPct(java.lang.Comparable) -> getCumPct
    double getCumPct(int) -> getCumPct
    double getCumPct(long) -> getCumPct
    double getCumPct(char) -> getCumPct
    java.util.List getMode() -> getMode
    void merge(org.apache.commons.math3.stat.Frequency) -> merge
    void merge(java.util.Collection) -> merge
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.math3.stat.Frequency$1 -> org.apache.commons.math3.stat.Frequency$1:
org.apache.commons.math3.stat.Frequency$NaturalComparator -> org.apache.commons.math3.stat.Frequency$NaturalComparator:
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.stat.StatUtils -> org.apache.commons.math3.stat.StatUtils:
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic SUM -> SUM
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic SUM_OF_SQUARES -> SUM_OF_SQUARES
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic PRODUCT -> PRODUCT
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic SUM_OF_LOGS -> SUM_OF_LOGS
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic MIN -> MIN
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic MAX -> MAX
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic MEAN -> MEAN
    org.apache.commons.math3.stat.descriptive.moment.Variance VARIANCE -> VARIANCE
    org.apache.commons.math3.stat.descriptive.rank.Percentile PERCENTILE -> PERCENTILE
    org.apache.commons.math3.stat.descriptive.moment.GeometricMean GEOMETRIC_MEAN -> GEOMETRIC_MEAN
    double sum(double[]) -> sum
    double sum(double[],int,int) -> sum
    double sumSq(double[]) -> sumSq
    double sumSq(double[],int,int) -> sumSq
    double product(double[]) -> product
    double product(double[],int,int) -> product
    double sumLog(double[]) -> sumLog
    double sumLog(double[],int,int) -> sumLog
    double mean(double[]) -> mean
    double mean(double[],int,int) -> mean
    double geometricMean(double[]) -> geometricMean
    double geometricMean(double[],int,int) -> geometricMean
    double variance(double[]) -> variance
    double variance(double[],int,int) -> variance
    double variance(double[],double,int,int) -> variance
    double variance(double[],double) -> variance
    double populationVariance(double[]) -> populationVariance
    double populationVariance(double[],int,int) -> populationVariance
    double populationVariance(double[],double,int,int) -> populationVariance
    double populationVariance(double[],double) -> populationVariance
    double max(double[]) -> max
    double max(double[],int,int) -> max
    double min(double[]) -> min
    double min(double[],int,int) -> min
    double percentile(double[],double) -> percentile
    double percentile(double[],int,int,double) -> percentile
    double sumDifference(double[],double[]) -> sumDifference
    double meanDifference(double[],double[]) -> meanDifference
    double varianceDifference(double[],double[],double) -> varianceDifference
    double[] normalize(double[]) -> normalize
    double[] mode(double[]) -> mode
    double[] mode(double[],int,int) -> mode
    double[] getMode(double[],int,int) -> getMode
org.apache.commons.math3.stat.clustering.Cluster -> org.apache.commons.math3.stat.clustering.Cluster:
    long serialVersionUID -> serialVersionUID
    java.util.List points -> points
    org.apache.commons.math3.stat.clustering.Clusterable center -> center
    void addPoint(org.apache.commons.math3.stat.clustering.Clusterable) -> addPoint
    java.util.List getPoints() -> getPoints
    org.apache.commons.math3.stat.clustering.Clusterable getCenter() -> getCenter
org.apache.commons.math3.stat.clustering.Clusterable -> org.apache.commons.math3.stat.clustering.Clusterable:
    double distanceFrom(java.lang.Object) -> distanceFrom
    java.lang.Object centroidOf(java.util.Collection) -> centroidOf
org.apache.commons.math3.stat.clustering.DBSCANClusterer -> org.apache.commons.math3.stat.clustering.DBSCANClusterer:
    double eps -> eps
    int minPts -> minPts
    double getEps() -> getEps
    int getMinPts() -> getMinPts
    java.util.List cluster(java.util.Collection) -> cluster
    org.apache.commons.math3.stat.clustering.Cluster expandCluster(org.apache.commons.math3.stat.clustering.Cluster,org.apache.commons.math3.stat.clustering.Clusterable,java.util.List,java.util.Collection,java.util.Map) -> expandCluster
    java.util.List getNeighbors(org.apache.commons.math3.stat.clustering.Clusterable,java.util.Collection) -> getNeighbors
    java.util.List merge(java.util.List,java.util.List) -> merge
org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus -> org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus:
    org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus NOISE -> NOISE
    org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus PART_OF_CLUSTER -> PART_OF_CLUSTER
    org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus[] $VALUES -> $VALUES
    org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus[] values() -> values
    org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint -> org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:
    long serialVersionUID -> serialVersionUID
    double[] point -> point
    org.apache.commons.math3.stat.clustering.EuclideanDoublePoint centroidOf(java.util.Collection) -> centroidOf
    double distanceFrom(org.apache.commons.math3.stat.clustering.EuclideanDoublePoint) -> distanceFrom
    boolean equals(java.lang.Object) -> equals
    double[] getPoint() -> getPoint
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object centroidOf(java.util.Collection) -> centroidOf
    double distanceFrom(java.lang.Object) -> distanceFrom
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint -> org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:
    long serialVersionUID -> serialVersionUID
    int[] point -> point
    int[] getPoint() -> getPoint
    double distanceFrom(org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint) -> distanceFrom
    org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint centroidOf(java.util.Collection) -> centroidOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object centroidOf(java.util.Collection) -> centroidOf
    double distanceFrom(java.lang.Object) -> distanceFrom
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer -> org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:
    java.util.Random random -> random
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy emptyStrategy -> emptyStrategy
    java.util.List cluster(java.util.Collection,int,int,int) -> cluster
    java.util.List cluster(java.util.Collection,int,int) -> cluster
    int assignPointsToClusters(java.util.List,java.util.Collection,int[]) -> assignPointsToClusters
    java.util.List chooseInitialCenters(java.util.Collection,int,java.util.Random) -> chooseInitialCenters
    org.apache.commons.math3.stat.clustering.Clusterable getPointFromLargestVarianceCluster(java.util.Collection) -> getPointFromLargestVarianceCluster
    org.apache.commons.math3.stat.clustering.Clusterable getPointFromLargestNumberCluster(java.util.Collection) -> getPointFromLargestNumberCluster
    org.apache.commons.math3.stat.clustering.Clusterable getFarthestPoint(java.util.Collection) -> getFarthestPoint
    int getNearestCluster(java.util.Collection,org.apache.commons.math3.stat.clustering.Clusterable) -> getNearestCluster
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$1 -> org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$1:
    int[] $SwitchMap$org$apache$commons$math3$stat$clustering$KMeansPlusPlusClusterer$EmptyClusterStrategy -> $SwitchMap$org$apache$commons$math3$stat$clustering$KMeansPlusPlusClusterer$EmptyClusterStrategy
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy -> org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy:
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_VARIANCE -> LARGEST_VARIANCE
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_POINTS_NUMBER -> LARGEST_POINTS_NUMBER
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy FARTHEST_POINT -> FARTHEST_POINT
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy ERROR -> ERROR
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] $VALUES -> $VALUES
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] values() -> values
    org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.stat.correlation.Covariance -> org.apache.commons.math3.stat.correlation.Covariance:
    org.apache.commons.math3.linear.RealMatrix covarianceMatrix -> covarianceMatrix
    int n -> n
    org.apache.commons.math3.linear.RealMatrix getCovarianceMatrix() -> getCovarianceMatrix
    int getN() -> getN
    org.apache.commons.math3.linear.RealMatrix computeCovarianceMatrix(org.apache.commons.math3.linear.RealMatrix,boolean) -> computeCovarianceMatrix
    org.apache.commons.math3.linear.RealMatrix computeCovarianceMatrix(org.apache.commons.math3.linear.RealMatrix) -> computeCovarianceMatrix
    org.apache.commons.math3.linear.RealMatrix computeCovarianceMatrix(double[][],boolean) -> computeCovarianceMatrix
    org.apache.commons.math3.linear.RealMatrix computeCovarianceMatrix(double[][]) -> computeCovarianceMatrix
    double covariance(double[],double[],boolean) -> covariance
    double covariance(double[],double[]) -> covariance
    void checkSufficientData(org.apache.commons.math3.linear.RealMatrix) -> checkSufficientData
org.apache.commons.math3.stat.correlation.KendallsCorrelation -> org.apache.commons.math3.stat.correlation.KendallsCorrelation:
    org.apache.commons.math3.linear.RealMatrix correlationMatrix -> correlationMatrix
    org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix() -> getCorrelationMatrix
    org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix) -> computeCorrelationMatrix
    org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(double[][]) -> computeCorrelationMatrix
    double correlation(double[],double[]) -> correlation
    long sum(long) -> sum
org.apache.commons.math3.stat.correlation.KendallsCorrelation$1 -> org.apache.commons.math3.stat.correlation.KendallsCorrelation$1:
    org.apache.commons.math3.stat.correlation.KendallsCorrelation this$0 -> this$0
    int compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.stat.correlation.PearsonsCorrelation -> org.apache.commons.math3.stat.correlation.PearsonsCorrelation:
    org.apache.commons.math3.linear.RealMatrix correlationMatrix -> correlationMatrix
    int nObs -> nObs
    org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix() -> getCorrelationMatrix
    org.apache.commons.math3.linear.RealMatrix getCorrelationStandardErrors() -> getCorrelationStandardErrors
    org.apache.commons.math3.linear.RealMatrix getCorrelationPValues() -> getCorrelationPValues
    org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix) -> computeCorrelationMatrix
    org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(double[][]) -> computeCorrelationMatrix
    double correlation(double[],double[]) -> correlation
    org.apache.commons.math3.linear.RealMatrix covarianceToCorrelation(org.apache.commons.math3.linear.RealMatrix) -> covarianceToCorrelation
    void checkSufficientData(org.apache.commons.math3.linear.RealMatrix) -> checkSufficientData
org.apache.commons.math3.stat.correlation.SpearmansCorrelation -> org.apache.commons.math3.stat.correlation.SpearmansCorrelation:
    org.apache.commons.math3.linear.RealMatrix data -> data
    org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm -> rankingAlgorithm
    org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation -> rankCorrelation
    org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix() -> getCorrelationMatrix
    org.apache.commons.math3.stat.correlation.PearsonsCorrelation getRankCorrelation() -> getRankCorrelation
    org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix) -> computeCorrelationMatrix
    org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(double[][]) -> computeCorrelationMatrix
    double correlation(double[],double[]) -> correlation
    org.apache.commons.math3.linear.RealMatrix rankTransform(org.apache.commons.math3.linear.RealMatrix) -> rankTransform
    java.util.List getNaNPositions(double[]) -> getNaNPositions
    double[] removeValues(double[],java.util.Set) -> removeValues
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance -> org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:
    double meanX -> meanX
    double meanY -> meanY
    double n -> n
    double covarianceNumerator -> covarianceNumerator
    boolean biasCorrected -> biasCorrected
    void increment(double,double) -> increment
    void append(org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance) -> append
    double getN() -> getN
    double getResult() -> getResult
org.apache.commons.math3.stat.correlation.StorelessCovariance -> org.apache.commons.math3.stat.correlation.StorelessCovariance:
    org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix -> covMatrix
    int dimension -> dimension
    void initializeMatrix(boolean) -> initializeMatrix
    int indexOf(int,int) -> indexOf
    org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int) -> getElement
    void setElement(int,int,org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance) -> setElement
    double getCovariance(int,int) -> getCovariance
    void increment(double[]) -> increment
    void append(org.apache.commons.math3.stat.correlation.StorelessCovariance) -> append
    org.apache.commons.math3.linear.RealMatrix getCovarianceMatrix() -> getCovarianceMatrix
    double[][] getData() -> getData
    int getN() -> getN
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic -> org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:
    double evaluate(double[]) -> evaluate
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    void clear() -> clear
    double getResult() -> getResult
    void increment(double) -> increment
    void incrementAll(double[]) -> incrementAll
    void incrementAll(double[],int,int) -> incrementAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic -> org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:
    double[] storedData -> storedData
    void setData(double[]) -> setData
    double[] getData() -> getData
    double[] getDataRef() -> getDataRef
    void setData(double[],int,int) -> setData
    double evaluate() -> evaluate
    double evaluate(double[]) -> evaluate
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
    boolean test(double[],int,int) -> test
    boolean test(double[],int,int,boolean) -> test
    boolean test(double[],double[],int,int) -> test
    boolean test(double[],double[],int,int,boolean) -> test
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics -> org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.SummaryStatistics statisticsPrototype -> statisticsPrototype
    org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics -> statistics
    double getMax() -> getMax
    double getMean() -> getMean
    double getMin() -> getMin
    long getN() -> getN
    double getStandardDeviation() -> getStandardDeviation
    double getSum() -> getSum
    double getVariance() -> getVariance
    double getSumOfLogs() -> getSumOfLogs
    double getGeometricMean() -> getGeometricMean
    double getSumsq() -> getSumsq
    double getSecondMoment() -> getSecondMoment
    org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary() -> getSummary
    org.apache.commons.math3.stat.descriptive.SummaryStatistics createContributingStatistics() -> createContributingStatistics
    org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues aggregate(java.util.Collection) -> aggregate
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics -> org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.SummaryStatistics aggregateStatistics -> aggregateStatistics
    void addValue(double) -> addValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics -> org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:
    int INFINITE_WINDOW -> INFINITE_WINDOW
    long serialVersionUID -> serialVersionUID
    java.lang.String SET_QUANTILE_METHOD_NAME -> SET_QUANTILE_METHOD_NAME
    int windowSize -> windowSize
    org.apache.commons.math3.util.ResizableDoubleArray eDA -> eDA
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic meanImpl -> meanImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic geometricMeanImpl -> geometricMeanImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic kurtosisImpl -> kurtosisImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic maxImpl -> maxImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic minImpl -> minImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic percentileImpl -> percentileImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic skewnessImpl -> skewnessImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic varianceImpl -> varianceImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic sumsqImpl -> sumsqImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic sumImpl -> sumImpl
    void addValue(double) -> addValue
    void removeMostRecentValue() -> removeMostRecentValue
    double replaceMostRecentValue(double) -> replaceMostRecentValue
    double getMean() -> getMean
    double getGeometricMean() -> getGeometricMean
    double getVariance() -> getVariance
    double getPopulationVariance() -> getPopulationVariance
    double getStandardDeviation() -> getStandardDeviation
    double getSkewness() -> getSkewness
    double getKurtosis() -> getKurtosis
    double getMax() -> getMax
    double getMin() -> getMin
    long getN() -> getN
    double getSum() -> getSum
    double getSumsq() -> getSumsq
    void clear() -> clear
    int getWindowSize() -> getWindowSize
    void setWindowSize(int) -> setWindowSize
    double[] getValues() -> getValues
    double[] getSortedValues() -> getSortedValues
    double getElement(int) -> getElement
    double getPercentile(double) -> getPercentile
    java.lang.String toString() -> toString
    double apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> apply
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getMeanImpl() -> getMeanImpl
    void setMeanImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setMeanImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getGeometricMeanImpl() -> getGeometricMeanImpl
    void setGeometricMeanImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setGeometricMeanImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getKurtosisImpl() -> getKurtosisImpl
    void setKurtosisImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setKurtosisImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getMaxImpl() -> getMaxImpl
    void setMaxImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setMaxImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getMinImpl() -> getMinImpl
    void setMinImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setMinImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getPercentileImpl() -> getPercentileImpl
    void setPercentileImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setPercentileImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getSkewnessImpl() -> getSkewnessImpl
    void setSkewnessImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setSkewnessImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getVarianceImpl() -> getVarianceImpl
    void setVarianceImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setVarianceImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getSumsqImpl() -> getSumsqImpl
    void setSumsqImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setSumsqImpl
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic getSumImpl() -> getSumImpl
    void setSumImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> setSumImpl
    org.apache.commons.math3.stat.descriptive.DescriptiveStatistics copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.DescriptiveStatistics,org.apache.commons.math3.stat.descriptive.DescriptiveStatistics) -> copy
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics -> org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:
    long serialVersionUID -> serialVersionUID
    int k -> k
    long n -> n
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl -> sumImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl -> sumSqImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl -> minImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl -> maxImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl -> sumLogImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl -> geoMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl -> meanImpl
    org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl -> covarianceImpl
    void addValue(double[]) -> addValue
    int getDimension() -> getDimension
    long getN() -> getN
    double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> getResults
    double[] getSum() -> getSum
    double[] getSumSq() -> getSumSq
    double[] getSumLog() -> getSumLog
    double[] getMean() -> getMean
    double[] getStandardDeviation() -> getStandardDeviation
    org.apache.commons.math3.linear.RealMatrix getCovariance() -> getCovariance
    double[] getMax() -> getMax
    double[] getMin() -> getMin
    double[] getGeometricMean() -> getGeometricMean
    java.lang.String toString() -> toString
    void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String) -> append
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl() -> getSumImpl
    void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setSumImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl() -> getSumsqImpl
    void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setSumsqImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl() -> getMinImpl
    void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setMinImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl() -> getMaxImpl
    void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setMaxImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl() -> getSumLogImpl
    void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setSumLogImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl() -> getGeoMeanImpl
    void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setGeoMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl() -> getMeanImpl
    void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setMeanImpl
    void checkEmpty() -> checkEmpty
    void checkDimension(int) -> checkDimension
org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary -> org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:
    int getDimension() -> getDimension
    double[] getMean() -> getMean
    org.apache.commons.math3.linear.RealMatrix getCovariance() -> getCovariance
    double[] getStandardDeviation() -> getStandardDeviation
    double[] getMax() -> getMax
    double[] getMin() -> getMin
    long getN() -> getN
    double[] getGeometricMean() -> getGeometricMean
    double[] getSum() -> getSum
    double[] getSumSq() -> getSumSq
    double[] getSumLog() -> getSumLog
org.apache.commons.math3.stat.descriptive.StatisticalSummary -> org.apache.commons.math3.stat.descriptive.StatisticalSummary:
    double getMean() -> getMean
    double getVariance() -> getVariance
    double getStandardDeviation() -> getStandardDeviation
    double getMax() -> getMax
    double getMin() -> getMin
    long getN() -> getN
    double getSum() -> getSum
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues -> org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:
    long serialVersionUID -> serialVersionUID
    double mean -> mean
    double variance -> variance
    long n -> n
    double max -> max
    double min -> min
    double sum -> sum
    double getMax() -> getMax
    double getMean() -> getMean
    double getMin() -> getMin
    long getN() -> getN
    double getSum() -> getSum
    double getStandardDeviation() -> getStandardDeviation
    double getVariance() -> getVariance
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic -> org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:
    void increment(double) -> increment
    void incrementAll(double[]) -> incrementAll
    void incrementAll(double[],int,int) -> incrementAll
    double getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.SummaryStatistics -> org.apache.commons.math3.stat.descriptive.SummaryStatistics:
    long serialVersionUID -> serialVersionUID
    long n -> n
    org.apache.commons.math3.stat.descriptive.moment.SecondMoment secondMoment -> secondMoment
    org.apache.commons.math3.stat.descriptive.summary.Sum sum -> sum
    org.apache.commons.math3.stat.descriptive.summary.SumOfSquares sumsq -> sumsq
    org.apache.commons.math3.stat.descriptive.rank.Min min -> min
    org.apache.commons.math3.stat.descriptive.rank.Max max -> max
    org.apache.commons.math3.stat.descriptive.summary.SumOfLogs sumLog -> sumLog
    org.apache.commons.math3.stat.descriptive.moment.GeometricMean geoMean -> geoMean
    org.apache.commons.math3.stat.descriptive.moment.Mean mean -> mean
    org.apache.commons.math3.stat.descriptive.moment.Variance variance -> variance
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic sumImpl -> sumImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic sumsqImpl -> sumsqImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic minImpl -> minImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic maxImpl -> maxImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic sumLogImpl -> sumLogImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic geoMeanImpl -> geoMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic meanImpl -> meanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic varianceImpl -> varianceImpl
    org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary() -> getSummary
    void addValue(double) -> addValue
    long getN() -> getN
    double getSum() -> getSum
    double getSumsq() -> getSumsq
    double getMean() -> getMean
    double getStandardDeviation() -> getStandardDeviation
    double getVariance() -> getVariance
    double getPopulationVariance() -> getPopulationVariance
    double getMax() -> getMax
    double getMin() -> getMin
    double getGeometricMean() -> getGeometricMean
    double getSumOfLogs() -> getSumOfLogs
    double getSecondMoment() -> getSecondMoment
    java.lang.String toString() -> toString
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumImpl() -> getSumImpl
    void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setSumImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumsqImpl() -> getSumsqImpl
    void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setSumsqImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMinImpl() -> getMinImpl
    void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setMinImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMaxImpl() -> getMaxImpl
    void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setMaxImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumLogImpl() -> getSumLogImpl
    void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setSumLogImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getGeoMeanImpl() -> getGeoMeanImpl
    void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setGeoMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMeanImpl() -> getMeanImpl
    void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getVarianceImpl() -> getVarianceImpl
    void setVarianceImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setVarianceImpl
    void checkEmpty() -> checkEmpty
    org.apache.commons.math3.stat.descriptive.SummaryStatistics copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.SummaryStatistics,org.apache.commons.math3.stat.descriptive.SummaryStatistics) -> copy
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics -> org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:
    long serialVersionUID -> serialVersionUID
    void addValue(double) -> addValue
    double apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) -> apply
    void clear() -> clear
    double getElement(int) -> getElement
    long getN() -> getN
    double getStandardDeviation() -> getStandardDeviation
    double[] getValues() -> getValues
    int getWindowSize() -> getWindowSize
    void setWindowSize(int) -> setWindowSize
    java.lang.String toString() -> toString
    org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics,org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics) -> copy
    org.apache.commons.math3.stat.descriptive.DescriptiveStatistics copy() -> copy
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics -> org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:
    long serialVersionUID -> serialVersionUID
    void addValue(double[]) -> addValue
    int getDimension() -> getDimension
    long getN() -> getN
    double[] getSum() -> getSum
    double[] getSumSq() -> getSumSq
    double[] getSumLog() -> getSumLog
    double[] getMean() -> getMean
    double[] getStandardDeviation() -> getStandardDeviation
    org.apache.commons.math3.linear.RealMatrix getCovariance() -> getCovariance
    double[] getMax() -> getMax
    double[] getMin() -> getMin
    double[] getGeometricMean() -> getGeometricMean
    java.lang.String toString() -> toString
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl() -> getSumImpl
    void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setSumImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl() -> getSumsqImpl
    void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setSumsqImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl() -> getMinImpl
    void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setMinImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl() -> getMaxImpl
    void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setMaxImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl() -> getSumLogImpl
    void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setSumLogImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl() -> getGeoMeanImpl
    void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setGeoMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl() -> getMeanImpl
    void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) -> setMeanImpl
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics -> org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary() -> getSummary
    void addValue(double) -> addValue
    long getN() -> getN
    double getSum() -> getSum
    double getSumsq() -> getSumsq
    double getMean() -> getMean
    double getStandardDeviation() -> getStandardDeviation
    double getVariance() -> getVariance
    double getPopulationVariance() -> getPopulationVariance
    double getMax() -> getMax
    double getMin() -> getMin
    double getGeometricMean() -> getGeometricMean
    java.lang.String toString() -> toString
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumImpl() -> getSumImpl
    void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setSumImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumsqImpl() -> getSumsqImpl
    void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setSumsqImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMinImpl() -> getMinImpl
    void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setMinImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMaxImpl() -> getMaxImpl
    void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setMaxImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumLogImpl() -> getSumLogImpl
    void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setSumLogImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getGeoMeanImpl() -> getGeoMeanImpl
    void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setGeoMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMeanImpl() -> getMeanImpl
    void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setMeanImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getVarianceImpl() -> getVarianceImpl
    void setVarianceImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setVarianceImpl
    org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics,org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics) -> copy
    org.apache.commons.math3.stat.descriptive.SummaryStatistics copy() -> copy
org.apache.commons.math3.stat.descriptive.UnivariateStatistic -> org.apache.commons.math3.stat.descriptive.UnivariateStatistic:
    double evaluate(double[]) -> evaluate
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.WeightedEvaluation -> org.apache.commons.math3.stat.descriptive.WeightedEvaluation:
    double evaluate(double[],double[]) -> evaluate
    double evaluate(double[],double[],int,int) -> evaluate
org.apache.commons.math3.stat.descriptive.moment.FirstMoment -> org.apache.commons.math3.stat.descriptive.moment.FirstMoment:
    long serialVersionUID -> serialVersionUID
    long n -> n
    double m1 -> m1
    double dev -> dev
    double nDev -> nDev
    void increment(double) -> increment
    void clear() -> clear
    double getResult() -> getResult
    long getN() -> getN
    org.apache.commons.math3.stat.descriptive.moment.FirstMoment copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.FirstMoment,org.apache.commons.math3.stat.descriptive.moment.FirstMoment) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.FourthMoment -> org.apache.commons.math3.stat.descriptive.moment.FourthMoment:
    long serialVersionUID -> serialVersionUID
    double m4 -> m4
    void increment(double) -> increment
    double getResult() -> getResult
    void clear() -> clear
    org.apache.commons.math3.stat.descriptive.moment.FourthMoment copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.FourthMoment,org.apache.commons.math3.stat.descriptive.moment.FourthMoment) -> copy
    org.apache.commons.math3.stat.descriptive.moment.ThirdMoment copy() -> copy
    org.apache.commons.math3.stat.descriptive.moment.SecondMoment copy() -> copy
    org.apache.commons.math3.stat.descriptive.moment.FirstMoment copy() -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.GeometricMean -> org.apache.commons.math3.stat.descriptive.moment.GeometricMean:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic sumOfLogs -> sumOfLogs
    org.apache.commons.math3.stat.descriptive.moment.GeometricMean copy() -> copy
    void increment(double) -> increment
    double getResult() -> getResult
    void clear() -> clear
    double evaluate(double[],int,int) -> evaluate
    long getN() -> getN
    void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) -> setSumLogImpl
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumLogImpl() -> getSumLogImpl
    void copy(org.apache.commons.math3.stat.descriptive.moment.GeometricMean,org.apache.commons.math3.stat.descriptive.moment.GeometricMean) -> copy
    void checkEmpty() -> checkEmpty
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.Kurtosis -> org.apache.commons.math3.stat.descriptive.moment.Kurtosis:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.moment.FourthMoment moment -> moment
    boolean incMoment -> incMoment
    void increment(double) -> increment
    double getResult() -> getResult
    void clear() -> clear
    long getN() -> getN
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.moment.Kurtosis copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.Kurtosis,org.apache.commons.math3.stat.descriptive.moment.Kurtosis) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.Mean -> org.apache.commons.math3.stat.descriptive.moment.Mean:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.moment.FirstMoment moment -> moment
    boolean incMoment -> incMoment
    void increment(double) -> increment
    void clear() -> clear
    double getResult() -> getResult
    long getN() -> getN
    double evaluate(double[],int,int) -> evaluate
    double evaluate(double[],double[],int,int) -> evaluate
    double evaluate(double[],double[]) -> evaluate
    org.apache.commons.math3.stat.descriptive.moment.Mean copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.Mean,org.apache.commons.math3.stat.descriptive.moment.Mean) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.SecondMoment -> org.apache.commons.math3.stat.descriptive.moment.SecondMoment:
    long serialVersionUID -> serialVersionUID
    double m2 -> m2
    void increment(double) -> increment
    void clear() -> clear
    double getResult() -> getResult
    org.apache.commons.math3.stat.descriptive.moment.SecondMoment copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.SecondMoment,org.apache.commons.math3.stat.descriptive.moment.SecondMoment) -> copy
    org.apache.commons.math3.stat.descriptive.moment.FirstMoment copy() -> copy
    long getN() -> getN
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.SemiVariance -> org.apache.commons.math3.stat.descriptive.moment.SemiVariance:
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction UPSIDE_VARIANCE -> UPSIDE_VARIANCE
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction DOWNSIDE_VARIANCE -> DOWNSIDE_VARIANCE
    long serialVersionUID -> serialVersionUID
    boolean biasCorrected -> biasCorrected
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction varianceDirection -> varianceDirection
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.SemiVariance,org.apache.commons.math3.stat.descriptive.moment.SemiVariance) -> copy
    double evaluate(double[],int,int) -> evaluate
    double evaluate(double[],org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction) -> evaluate
    double evaluate(double[],double) -> evaluate
    double evaluate(double[],double,org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction) -> evaluate
    double evaluate(double[],double,org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction,boolean,int,int) -> evaluate
    boolean isBiasCorrected() -> isBiasCorrected
    void setBiasCorrected(boolean) -> setBiasCorrected
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction getVarianceDirection() -> getVarianceDirection
    void setVarianceDirection(org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction) -> setVarianceDirection
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction -> org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction:
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction UPSIDE -> UPSIDE
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction DOWNSIDE -> DOWNSIDE
    boolean direction -> direction
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction[] $VALUES -> $VALUES
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction[] values() -> values
    org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction valueOf(java.lang.String) -> valueOf
    boolean getDirection() -> getDirection
org.apache.commons.math3.stat.descriptive.moment.Skewness -> org.apache.commons.math3.stat.descriptive.moment.Skewness:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment -> moment
    boolean incMoment -> incMoment
    void increment(double) -> increment
    double getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.moment.Skewness copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.Skewness,org.apache.commons.math3.stat.descriptive.moment.Skewness) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation -> org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.moment.Variance variance -> variance
    void increment(double) -> increment
    long getN() -> getN
    double getResult() -> getResult
    void clear() -> clear
    double evaluate(double[]) -> evaluate
    double evaluate(double[],int,int) -> evaluate
    double evaluate(double[],double,int,int) -> evaluate
    double evaluate(double[],double) -> evaluate
    boolean isBiasCorrected() -> isBiasCorrected
    void setBiasCorrected(boolean) -> setBiasCorrected
    org.apache.commons.math3.stat.descriptive.moment.StandardDeviation copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.StandardDeviation,org.apache.commons.math3.stat.descriptive.moment.StandardDeviation) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment -> org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:
    long serialVersionUID -> serialVersionUID
    double m3 -> m3
    double nDevSq -> nDevSq
    void increment(double) -> increment
    double getResult() -> getResult
    void clear() -> clear
    org.apache.commons.math3.stat.descriptive.moment.ThirdMoment copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.ThirdMoment,org.apache.commons.math3.stat.descriptive.moment.ThirdMoment) -> copy
    org.apache.commons.math3.stat.descriptive.moment.SecondMoment copy() -> copy
    org.apache.commons.math3.stat.descriptive.moment.FirstMoment copy() -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.Variance -> org.apache.commons.math3.stat.descriptive.moment.Variance:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.moment.SecondMoment moment -> moment
    boolean incMoment -> incMoment
    boolean isBiasCorrected -> isBiasCorrected
    void increment(double) -> increment
    double getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    double evaluate(double[]) -> evaluate
    double evaluate(double[],int,int) -> evaluate
    double evaluate(double[],double[],int,int) -> evaluate
    double evaluate(double[],double[]) -> evaluate
    double evaluate(double[],double,int,int) -> evaluate
    double evaluate(double[],double) -> evaluate
    double evaluate(double[],double[],double,int,int) -> evaluate
    double evaluate(double[],double[],double) -> evaluate
    boolean isBiasCorrected() -> isBiasCorrected
    void setBiasCorrected(boolean) -> setBiasCorrected
    org.apache.commons.math3.stat.descriptive.moment.Variance copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.moment.Variance,org.apache.commons.math3.stat.descriptive.moment.Variance) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance -> org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:
    long serialVersionUID -> serialVersionUID
    double[] sums -> sums
    double[] productsSums -> productsSums
    boolean isBiasCorrected -> isBiasCorrected
    long n -> n
    void increment(double[]) -> increment
    org.apache.commons.math3.linear.RealMatrix getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.math3.stat.descriptive.moment.VectorialMean -> org.apache.commons.math3.stat.descriptive.moment.VectorialMean:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.stat.descriptive.moment.Mean[] means -> means
    void increment(double[]) -> increment
    double[] getResult() -> getResult
    long getN() -> getN
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.math3.stat.descriptive.rank.Max -> org.apache.commons.math3.stat.descriptive.rank.Max:
    long serialVersionUID -> serialVersionUID
    long n -> n
    double value -> value
    void increment(double) -> increment
    void clear() -> clear
    double getResult() -> getResult
    long getN() -> getN
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.rank.Max copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.rank.Max,org.apache.commons.math3.stat.descriptive.rank.Max) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.rank.Median -> org.apache.commons.math3.stat.descriptive.rank.Median:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.stat.descriptive.rank.Min -> org.apache.commons.math3.stat.descriptive.rank.Min:
    long serialVersionUID -> serialVersionUID
    long n -> n
    double value -> value
    void increment(double) -> increment
    void clear() -> clear
    double getResult() -> getResult
    long getN() -> getN
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.rank.Min copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.rank.Min,org.apache.commons.math3.stat.descriptive.rank.Min) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.rank.Percentile -> org.apache.commons.math3.stat.descriptive.rank.Percentile:
    long serialVersionUID -> serialVersionUID
    int MIN_SELECT_SIZE -> MIN_SELECT_SIZE
    int MAX_CACHED_LEVELS -> MAX_CACHED_LEVELS
    double quantile -> quantile
    int[] cachedPivots -> cachedPivots
    void setData(double[]) -> setData
    void setData(double[],int,int) -> setData
    double evaluate(double) -> evaluate
    double evaluate(double[],double) -> evaluate
    double evaluate(double[],int,int) -> evaluate
    double evaluate(double[],int,int,double) -> evaluate
    double select(double[],int[],int) -> select
    int medianOf3(double[],int,int) -> medianOf3
    int partition(double[],int,int,int) -> partition
    void insertionSort(double[],int,int) -> insertionSort
    double getQuantile() -> getQuantile
    void setQuantile(double) -> setQuantile
    org.apache.commons.math3.stat.descriptive.rank.Percentile copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.rank.Percentile,org.apache.commons.math3.stat.descriptive.rank.Percentile) -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.summary.Product -> org.apache.commons.math3.stat.descriptive.summary.Product:
    long serialVersionUID -> serialVersionUID
    long n -> n
    double value -> value
    void increment(double) -> increment
    double getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    double evaluate(double[],int,int) -> evaluate
    double evaluate(double[],double[],int,int) -> evaluate
    double evaluate(double[],double[]) -> evaluate
    org.apache.commons.math3.stat.descriptive.summary.Product copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.summary.Product,org.apache.commons.math3.stat.descriptive.summary.Product) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.summary.Sum -> org.apache.commons.math3.stat.descriptive.summary.Sum:
    long serialVersionUID -> serialVersionUID
    long n -> n
    double value -> value
    void increment(double) -> increment
    double getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    double evaluate(double[],int,int) -> evaluate
    double evaluate(double[],double[],int,int) -> evaluate
    double evaluate(double[],double[]) -> evaluate
    org.apache.commons.math3.stat.descriptive.summary.Sum copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.summary.Sum,org.apache.commons.math3.stat.descriptive.summary.Sum) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs -> org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:
    long serialVersionUID -> serialVersionUID
    int n -> n
    double value -> value
    void increment(double) -> increment
    double getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.summary.SumOfLogs copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.summary.SumOfLogs,org.apache.commons.math3.stat.descriptive.summary.SumOfLogs) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares -> org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:
    long serialVersionUID -> serialVersionUID
    long n -> n
    double value -> value
    void increment(double) -> increment
    double getResult() -> getResult
    long getN() -> getN
    void clear() -> clear
    double evaluate(double[],int,int) -> evaluate
    org.apache.commons.math3.stat.descriptive.summary.SumOfSquares copy() -> copy
    void copy(org.apache.commons.math3.stat.descriptive.summary.SumOfSquares,org.apache.commons.math3.stat.descriptive.summary.SumOfSquares) -> copy
    org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() -> copy
    org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() -> copy
org.apache.commons.math3.stat.inference.AlternativeHypothesis -> org.apache.commons.math3.stat.inference.AlternativeHypothesis:
    org.apache.commons.math3.stat.inference.AlternativeHypothesis TWO_SIDED -> TWO_SIDED
    org.apache.commons.math3.stat.inference.AlternativeHypothesis GREATER_THAN -> GREATER_THAN
    org.apache.commons.math3.stat.inference.AlternativeHypothesis LESS_THAN -> LESS_THAN
    org.apache.commons.math3.stat.inference.AlternativeHypothesis[] $VALUES -> $VALUES
    org.apache.commons.math3.stat.inference.AlternativeHypothesis[] values() -> values
    org.apache.commons.math3.stat.inference.AlternativeHypothesis valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.stat.inference.BinomialTest -> org.apache.commons.math3.stat.inference.BinomialTest:
    boolean binomialTest(int,int,double,org.apache.commons.math3.stat.inference.AlternativeHypothesis,double) -> binomialTest
    double binomialTest(int,int,double,org.apache.commons.math3.stat.inference.AlternativeHypothesis) -> binomialTest
org.apache.commons.math3.stat.inference.BinomialTest$1 -> org.apache.commons.math3.stat.inference.BinomialTest$1:
    int[] $SwitchMap$org$apache$commons$math3$stat$inference$AlternativeHypothesis -> $SwitchMap$org$apache$commons$math3$stat$inference$AlternativeHypothesis
org.apache.commons.math3.stat.inference.ChiSquareTest -> org.apache.commons.math3.stat.inference.ChiSquareTest:
    double chiSquare(double[],long[]) -> chiSquare
    double chiSquareTest(double[],long[]) -> chiSquareTest
    boolean chiSquareTest(double[],long[],double) -> chiSquareTest
    double chiSquare(long[][]) -> chiSquare
    double chiSquareTest(long[][]) -> chiSquareTest
    boolean chiSquareTest(long[][],double) -> chiSquareTest
    double chiSquareDataSetsComparison(long[],long[]) -> chiSquareDataSetsComparison
    double chiSquareTestDataSetsComparison(long[],long[]) -> chiSquareTestDataSetsComparison
    boolean chiSquareTestDataSetsComparison(long[],long[],double) -> chiSquareTestDataSetsComparison
    void checkArray(long[][]) -> checkArray
org.apache.commons.math3.stat.inference.GTest -> org.apache.commons.math3.stat.inference.GTest:
    double g(double[],long[]) -> g
    double gTest(double[],long[]) -> gTest
    double gTestIntrinsic(double[],long[]) -> gTestIntrinsic
    boolean gTest(double[],long[],double) -> gTest
    double entropy(long[][]) -> entropy
    double entropy(long[]) -> entropy
    double gDataSetsComparison(long[],long[]) -> gDataSetsComparison
    double rootLogLikelihoodRatio(long,long,long,long) -> rootLogLikelihoodRatio
    double gTestDataSetsComparison(long[],long[]) -> gTestDataSetsComparison
    boolean gTestDataSetsComparison(long[],long[],double) -> gTestDataSetsComparison
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest -> org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:
    int MAXIMUM_PARTIAL_SUM_COUNT -> MAXIMUM_PARTIAL_SUM_COUNT
    double KS_SUM_CAUCHY_CRITERION -> KS_SUM_CAUCHY_CRITERION
    int SMALL_SAMPLE_PRODUCT -> SMALL_SAMPLE_PRODUCT
    int LARGE_SAMPLE_PRODUCT -> LARGE_SAMPLE_PRODUCT
    int MONTE_CARLO_ITERATIONS -> MONTE_CARLO_ITERATIONS
    org.apache.commons.math3.random.RandomGenerator rng -> rng
    double kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[],boolean) -> kolmogorovSmirnovTest
    double kolmogorovSmirnovStatistic(org.apache.commons.math3.distribution.RealDistribution,double[]) -> kolmogorovSmirnovStatistic
    double kolmogorovSmirnovTest(double[],double[],boolean) -> kolmogorovSmirnovTest
    double kolmogorovSmirnovTest(double[],double[]) -> kolmogorovSmirnovTest
    double kolmogorovSmirnovStatistic(double[],double[]) -> kolmogorovSmirnovStatistic
    double kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[]) -> kolmogorovSmirnovTest
    boolean kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[],double) -> kolmogorovSmirnovTest
    double cdf(double,int) -> cdf
    double cdfExact(double,int) -> cdfExact
    double cdf(double,int,boolean) -> cdf
    double exactK(double,int) -> exactK
    double roundedK(double,int) -> roundedK
    org.apache.commons.math3.linear.FieldMatrix createH(double,int) -> createH
    void checkArray(double[]) -> checkArray
    double ksSum(double,double,int) -> ksSum
    double exactP(double,int,int,boolean) -> exactP
    double approximateP(double,int,int) -> approximateP
    double monteCarloP(double,int,int,boolean,int) -> monteCarloP
    void copyPartition(double[],double[],int[],int,int) -> copyPartition
org.apache.commons.math3.stat.inference.MannWhitneyUTest -> org.apache.commons.math3.stat.inference.MannWhitneyUTest:
    org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking -> naturalRanking
    void ensureDataConformance(double[],double[]) -> ensureDataConformance
    double[] concatenateSamples(double[],double[]) -> concatenateSamples
    double mannWhitneyU(double[],double[]) -> mannWhitneyU
    double calculateAsymptoticPValue(double,int,int) -> calculateAsymptoticPValue
    double mannWhitneyUTest(double[],double[]) -> mannWhitneyUTest
org.apache.commons.math3.stat.inference.OneWayAnova -> org.apache.commons.math3.stat.inference.OneWayAnova:
    double anovaFValue(java.util.Collection) -> anovaFValue
    double anovaPValue(java.util.Collection) -> anovaPValue
    double anovaPValue(java.util.Collection,boolean) -> anovaPValue
    org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection) -> anovaStats
    boolean anovaTest(java.util.Collection,double) -> anovaTest
    org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection,boolean) -> anovaStats
org.apache.commons.math3.stat.inference.OneWayAnova$1 -> org.apache.commons.math3.stat.inference.OneWayAnova$1:
org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats -> org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats:
    int dfbg -> dfbg
    int dfwg -> dfwg
    double F -> F
    double access$000(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats) -> access$000
    int access$100(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats) -> access$100
    int access$200(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats) -> access$200
org.apache.commons.math3.stat.inference.TTest -> org.apache.commons.math3.stat.inference.TTest:
    double pairedT(double[],double[]) -> pairedT
    double pairedTTest(double[],double[]) -> pairedTTest
    boolean pairedTTest(double[],double[],double) -> pairedTTest
    double t(double,double[]) -> t
    double t(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> t
    double homoscedasticT(double[],double[]) -> homoscedasticT
    double t(double[],double[]) -> t
    double t(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> t
    double homoscedasticT(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> homoscedasticT
    double tTest(double,double[]) -> tTest
    boolean tTest(double,double[],double) -> tTest
    double tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> tTest
    boolean tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double) -> tTest
    double tTest(double[],double[]) -> tTest
    double homoscedasticTTest(double[],double[]) -> homoscedasticTTest
    boolean tTest(double[],double[],double) -> tTest
    boolean homoscedasticTTest(double[],double[],double) -> homoscedasticTTest
    double tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> tTest
    double homoscedasticTTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> homoscedasticTTest
    boolean tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double) -> tTest
    double df(double,double,double,double) -> df
    double t(double,double,double,double) -> t
    double t(double,double,double,double,double,double) -> t
    double homoscedasticT(double,double,double,double,double,double) -> homoscedasticT
    double tTest(double,double,double,double) -> tTest
    double tTest(double,double,double,double,double,double) -> tTest
    double homoscedasticTTest(double,double,double,double,double,double) -> homoscedasticTTest
    void checkSignificanceLevel(double) -> checkSignificanceLevel
    void checkSampleData(double[]) -> checkSampleData
    void checkSampleData(org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> checkSampleData
org.apache.commons.math3.stat.inference.TestUtils -> org.apache.commons.math3.stat.inference.TestUtils:
    org.apache.commons.math3.stat.inference.TTest T_TEST -> T_TEST
    org.apache.commons.math3.stat.inference.ChiSquareTest CHI_SQUARE_TEST -> CHI_SQUARE_TEST
    org.apache.commons.math3.stat.inference.OneWayAnova ONE_WAY_ANANOVA -> ONE_WAY_ANANOVA
    org.apache.commons.math3.stat.inference.GTest G_TEST -> G_TEST
    org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest KS_TEST -> KS_TEST
    double homoscedasticT(double[],double[]) -> homoscedasticT
    double homoscedasticT(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> homoscedasticT
    boolean homoscedasticTTest(double[],double[],double) -> homoscedasticTTest
    double homoscedasticTTest(double[],double[]) -> homoscedasticTTest
    double homoscedasticTTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> homoscedasticTTest
    double pairedT(double[],double[]) -> pairedT
    boolean pairedTTest(double[],double[],double) -> pairedTTest
    double pairedTTest(double[],double[]) -> pairedTTest
    double t(double,double[]) -> t
    double t(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> t
    double t(double[],double[]) -> t
    double t(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> t
    boolean tTest(double,double[],double) -> tTest
    double tTest(double,double[]) -> tTest
    boolean tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double) -> tTest
    double tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> tTest
    boolean tTest(double[],double[],double) -> tTest
    double tTest(double[],double[]) -> tTest
    boolean tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double) -> tTest
    double tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary) -> tTest
    double chiSquare(double[],long[]) -> chiSquare
    double chiSquare(long[][]) -> chiSquare
    boolean chiSquareTest(double[],long[],double) -> chiSquareTest
    double chiSquareTest(double[],long[]) -> chiSquareTest
    boolean chiSquareTest(long[][],double) -> chiSquareTest
    double chiSquareTest(long[][]) -> chiSquareTest
    double chiSquareDataSetsComparison(long[],long[]) -> chiSquareDataSetsComparison
    double chiSquareTestDataSetsComparison(long[],long[]) -> chiSquareTestDataSetsComparison
    boolean chiSquareTestDataSetsComparison(long[],long[],double) -> chiSquareTestDataSetsComparison
    double oneWayAnovaFValue(java.util.Collection) -> oneWayAnovaFValue
    double oneWayAnovaPValue(java.util.Collection) -> oneWayAnovaPValue
    boolean oneWayAnovaTest(java.util.Collection,double) -> oneWayAnovaTest
    double g(double[],long[]) -> g
    double gTest(double[],long[]) -> gTest
    double gTestIntrinsic(double[],long[]) -> gTestIntrinsic
    boolean gTest(double[],long[],double) -> gTest
    double gDataSetsComparison(long[],long[]) -> gDataSetsComparison
    double rootLogLikelihoodRatio(long,long,long,long) -> rootLogLikelihoodRatio
    double gTestDataSetsComparison(long[],long[]) -> gTestDataSetsComparison
    boolean gTestDataSetsComparison(long[],long[],double) -> gTestDataSetsComparison
    double kolmogorovSmirnovStatistic(org.apache.commons.math3.distribution.RealDistribution,double[]) -> kolmogorovSmirnovStatistic
    double kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[]) -> kolmogorovSmirnovTest
    double kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[],boolean) -> kolmogorovSmirnovTest
    boolean kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[],double) -> kolmogorovSmirnovTest
    double kolmogorovSmirnovStatistic(double[],double[]) -> kolmogorovSmirnovStatistic
    double kolmogorovSmirnovTest(double[],double[]) -> kolmogorovSmirnovTest
    double kolmogorovSmirnovTest(double[],double[],boolean) -> kolmogorovSmirnovTest
    double exactP(double,int,int,boolean) -> exactP
    double approximateP(double,int,int) -> approximateP
    double monteCarloP(double,int,int,boolean,int) -> monteCarloP
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest -> org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:
    org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking -> naturalRanking
    void ensureDataConformance(double[],double[]) -> ensureDataConformance
    double[] calculateDifferences(double[],double[]) -> calculateDifferences
    double[] calculateAbsoluteDifferences(double[]) -> calculateAbsoluteDifferences
    double wilcoxonSignedRank(double[],double[]) -> wilcoxonSignedRank
    double calculateExactPValue(double,int) -> calculateExactPValue
    double calculateAsymptoticPValue(double,int) -> calculateAsymptoticPValue
    double wilcoxonSignedRankTest(double[],double[],boolean) -> wilcoxonSignedRankTest
org.apache.commons.math3.stat.interval.AgrestiCoullInterval -> org.apache.commons.math3.stat.interval.AgrestiCoullInterval:
    org.apache.commons.math3.stat.interval.ConfidenceInterval createInterval(int,int,double) -> createInterval
org.apache.commons.math3.stat.interval.BinomialConfidenceInterval -> org.apache.commons.math3.stat.interval.BinomialConfidenceInterval:
    org.apache.commons.math3.stat.interval.ConfidenceInterval createInterval(int,int,double) -> createInterval
org.apache.commons.math3.stat.interval.ClopperPearsonInterval -> org.apache.commons.math3.stat.interval.ClopperPearsonInterval:
    org.apache.commons.math3.stat.interval.ConfidenceInterval createInterval(int,int,double) -> createInterval
org.apache.commons.math3.stat.interval.ConfidenceInterval -> org.apache.commons.math3.stat.interval.ConfidenceInterval:
    double lowerBound -> lowerBound
    double upperBound -> upperBound
    double confidenceLevel -> confidenceLevel
    double getLowerBound() -> getLowerBound
    double getUpperBound() -> getUpperBound
    double getConfidenceLevel() -> getConfidenceLevel
    java.lang.String toString() -> toString
    void checkParameters(double,double,double) -> checkParameters
org.apache.commons.math3.stat.interval.IntervalUtils -> org.apache.commons.math3.stat.interval.IntervalUtils:
    org.apache.commons.math3.stat.interval.BinomialConfidenceInterval AGRESTI_COULL -> AGRESTI_COULL
    org.apache.commons.math3.stat.interval.BinomialConfidenceInterval CLOPPER_PEARSON -> CLOPPER_PEARSON
    org.apache.commons.math3.stat.interval.BinomialConfidenceInterval NORMAL_APPROXIMATION -> NORMAL_APPROXIMATION
    org.apache.commons.math3.stat.interval.BinomialConfidenceInterval WILSON_SCORE -> WILSON_SCORE
    org.apache.commons.math3.stat.interval.ConfidenceInterval getAgrestiCoullInterval(int,int,double) -> getAgrestiCoullInterval
    org.apache.commons.math3.stat.interval.ConfidenceInterval getClopperPearsonInterval(int,int,double) -> getClopperPearsonInterval
    org.apache.commons.math3.stat.interval.ConfidenceInterval getNormalApproximationInterval(int,int,double) -> getNormalApproximationInterval
    org.apache.commons.math3.stat.interval.ConfidenceInterval getWilsonScoreInterval(int,int,double) -> getWilsonScoreInterval
    void checkParameters(int,int,double) -> checkParameters
org.apache.commons.math3.stat.interval.NormalApproximationInterval -> org.apache.commons.math3.stat.interval.NormalApproximationInterval:
    org.apache.commons.math3.stat.interval.ConfidenceInterval createInterval(int,int,double) -> createInterval
org.apache.commons.math3.stat.interval.WilsonScoreInterval -> org.apache.commons.math3.stat.interval.WilsonScoreInterval:
    org.apache.commons.math3.stat.interval.ConfidenceInterval createInterval(int,int,double) -> createInterval
org.apache.commons.math3.stat.ranking.NaNStrategy -> org.apache.commons.math3.stat.ranking.NaNStrategy:
    org.apache.commons.math3.stat.ranking.NaNStrategy MINIMAL -> MINIMAL
    org.apache.commons.math3.stat.ranking.NaNStrategy MAXIMAL -> MAXIMAL
    org.apache.commons.math3.stat.ranking.NaNStrategy REMOVED -> REMOVED
    org.apache.commons.math3.stat.ranking.NaNStrategy FIXED -> FIXED
    org.apache.commons.math3.stat.ranking.NaNStrategy FAILED -> FAILED
    org.apache.commons.math3.stat.ranking.NaNStrategy[] $VALUES -> $VALUES
    org.apache.commons.math3.stat.ranking.NaNStrategy[] values() -> values
    org.apache.commons.math3.stat.ranking.NaNStrategy valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.stat.ranking.NaturalRanking -> org.apache.commons.math3.stat.ranking.NaturalRanking:
    org.apache.commons.math3.stat.ranking.NaNStrategy DEFAULT_NAN_STRATEGY -> DEFAULT_NAN_STRATEGY
    org.apache.commons.math3.stat.ranking.TiesStrategy DEFAULT_TIES_STRATEGY -> DEFAULT_TIES_STRATEGY
    org.apache.commons.math3.stat.ranking.NaNStrategy nanStrategy -> nanStrategy
    org.apache.commons.math3.stat.ranking.TiesStrategy tiesStrategy -> tiesStrategy
    org.apache.commons.math3.random.RandomDataGenerator randomData -> randomData
    org.apache.commons.math3.stat.ranking.NaNStrategy getNanStrategy() -> getNanStrategy
    org.apache.commons.math3.stat.ranking.TiesStrategy getTiesStrategy() -> getTiesStrategy
    double[] rank(double[]) -> rank
    org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[] removeNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[]) -> removeNaNs
    void recodeNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[],double) -> recodeNaNs
    boolean containsNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[]) -> containsNaNs
    void resolveTie(double[],java.util.List) -> resolveTie
    void fill(double[],java.util.List,double) -> fill
    void restoreNaNs(double[],java.util.List) -> restoreNaNs
    java.util.List getNanPositions(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[]) -> getNanPositions
org.apache.commons.math3.stat.ranking.NaturalRanking$1 -> org.apache.commons.math3.stat.ranking.NaturalRanking$1:
    int[] $SwitchMap$org$apache$commons$math3$stat$ranking$NaNStrategy -> $SwitchMap$org$apache$commons$math3$stat$ranking$NaNStrategy
    int[] $SwitchMap$org$apache$commons$math3$stat$ranking$TiesStrategy -> $SwitchMap$org$apache$commons$math3$stat$ranking$TiesStrategy
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair -> org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair:
    double value -> value
    int position -> position
    int compareTo(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair) -> compareTo
    double getValue() -> getValue
    int getPosition() -> getPosition
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.stat.ranking.RankingAlgorithm -> org.apache.commons.math3.stat.ranking.RankingAlgorithm:
    double[] rank(double[]) -> rank
org.apache.commons.math3.stat.ranking.TiesStrategy -> org.apache.commons.math3.stat.ranking.TiesStrategy:
    org.apache.commons.math3.stat.ranking.TiesStrategy SEQUENTIAL -> SEQUENTIAL
    org.apache.commons.math3.stat.ranking.TiesStrategy MINIMUM -> MINIMUM
    org.apache.commons.math3.stat.ranking.TiesStrategy MAXIMUM -> MAXIMUM
    org.apache.commons.math3.stat.ranking.TiesStrategy AVERAGE -> AVERAGE
    org.apache.commons.math3.stat.ranking.TiesStrategy RANDOM -> RANDOM
    org.apache.commons.math3.stat.ranking.TiesStrategy[] $VALUES -> $VALUES
    org.apache.commons.math3.stat.ranking.TiesStrategy[] values() -> values
    org.apache.commons.math3.stat.ranking.TiesStrategy valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression -> org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:
    org.apache.commons.math3.linear.RealMatrix xMatrix -> xMatrix
    org.apache.commons.math3.linear.RealVector yVector -> yVector
    boolean noIntercept -> noIntercept
    org.apache.commons.math3.linear.RealMatrix getX() -> getX
    org.apache.commons.math3.linear.RealVector getY() -> getY
    boolean isNoIntercept() -> isNoIntercept
    void setNoIntercept(boolean) -> setNoIntercept
    void newSampleData(double[],int,int) -> newSampleData
    void newYSampleData(double[]) -> newYSampleData
    void newXSampleData(double[][]) -> newXSampleData
    void validateSampleData(double[][],double[]) -> validateSampleData
    void validateCovarianceData(double[][],double[][]) -> validateCovarianceData
    double[] estimateRegressionParameters() -> estimateRegressionParameters
    double[] estimateResiduals() -> estimateResiduals
    double[][] estimateRegressionParametersVariance() -> estimateRegressionParametersVariance
    double[] estimateRegressionParametersStandardErrors() -> estimateRegressionParametersStandardErrors
    double estimateRegressandVariance() -> estimateRegressandVariance
    double estimateErrorVariance() -> estimateErrorVariance
    double estimateRegressionStandardError() -> estimateRegressionStandardError
    org.apache.commons.math3.linear.RealVector calculateBeta() -> calculateBeta
    org.apache.commons.math3.linear.RealMatrix calculateBetaVariance() -> calculateBetaVariance
    double calculateYVariance() -> calculateYVariance
    double calculateErrorVariance() -> calculateErrorVariance
    org.apache.commons.math3.linear.RealVector calculateResiduals() -> calculateResiduals
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression -> org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:
    org.apache.commons.math3.linear.RealMatrix Omega -> Omega
    org.apache.commons.math3.linear.RealMatrix OmegaInverse -> OmegaInverse
    void newSampleData(double[],double[][],double[][]) -> newSampleData
    void newCovarianceData(double[][]) -> newCovarianceData
    org.apache.commons.math3.linear.RealMatrix getOmegaInverse() -> getOmegaInverse
    org.apache.commons.math3.linear.RealVector calculateBeta() -> calculateBeta
    org.apache.commons.math3.linear.RealMatrix calculateBetaVariance() -> calculateBetaVariance
    double calculateErrorVariance() -> calculateErrorVariance
org.apache.commons.math3.stat.regression.MillerUpdatingRegression -> org.apache.commons.math3.stat.regression.MillerUpdatingRegression:
    int nvars -> nvars
    double[] d -> d
    double[] rhs -> rhs
    double[] r -> r
    double[] tol -> tol
    double[] rss -> rss
    int[] vorder -> vorder
    double[] work_tolset -> work_tolset
    long nobs -> nobs
    double sserr -> sserr
    boolean rss_set -> rss_set
    boolean tol_set -> tol_set
    boolean[] lindep -> lindep
    double[] x_sing -> x_sing
    double[] work_sing -> work_sing
    double sumy -> sumy
    double sumsqy -> sumsqy
    boolean hasIntercept -> hasIntercept
    double epsilon -> epsilon
    boolean hasIntercept() -> hasIntercept
    long getN() -> getN
    void addObservation(double[],double) -> addObservation
    void addObservations(double[][],double[]) -> addObservations
    void include(double[],double,double) -> include
    double smartAdd(double,double) -> smartAdd
    void clear() -> clear
    void tolset() -> tolset
    double[] regcf(int) -> regcf
    void singcheck() -> singcheck
    void ss() -> ss
    double[] cov(int) -> cov
    void inverse(double[],int) -> inverse
    double[] getPartialCorrelations(int) -> getPartialCorrelations
    void vmove(int,int) -> vmove
    int reorderRegressors(int[],int) -> reorderRegressors
    double getDiagonalOfHatMatrix(double[]) -> getDiagonalOfHatMatrix
    int[] getOrderOfRegressors() -> getOrderOfRegressors
    org.apache.commons.math3.stat.regression.RegressionResults regress() -> regress
    org.apache.commons.math3.stat.regression.RegressionResults regress(int) -> regress
    org.apache.commons.math3.stat.regression.RegressionResults regress(int[]) -> regress
org.apache.commons.math3.stat.regression.ModelSpecificationException -> org.apache.commons.math3.stat.regression.ModelSpecificationException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.math3.stat.regression.MultipleLinearRegression -> org.apache.commons.math3.stat.regression.MultipleLinearRegression:
    double[] estimateRegressionParameters() -> estimateRegressionParameters
    double[][] estimateRegressionParametersVariance() -> estimateRegressionParametersVariance
    double[] estimateResiduals() -> estimateResiduals
    double estimateRegressandVariance() -> estimateRegressandVariance
    double[] estimateRegressionParametersStandardErrors() -> estimateRegressionParametersStandardErrors
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression -> org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:
    org.apache.commons.math3.linear.QRDecomposition qr -> qr
    double threshold -> threshold
    void newSampleData(double[],double[][]) -> newSampleData
    void newSampleData(double[],int,int) -> newSampleData
    org.apache.commons.math3.linear.RealMatrix calculateHat() -> calculateHat
    double calculateTotalSumOfSquares() -> calculateTotalSumOfSquares
    double calculateResidualSumOfSquares() -> calculateResidualSumOfSquares
    double calculateRSquared() -> calculateRSquared
    double calculateAdjustedRSquared() -> calculateAdjustedRSquared
    void newXSampleData(double[][]) -> newXSampleData
    org.apache.commons.math3.linear.RealVector calculateBeta() -> calculateBeta
    org.apache.commons.math3.linear.RealMatrix calculateBetaVariance() -> calculateBetaVariance
org.apache.commons.math3.stat.regression.RegressionResults -> org.apache.commons.math3.stat.regression.RegressionResults:
    int SSE_IDX -> SSE_IDX
    int SST_IDX -> SST_IDX
    int RSQ_IDX -> RSQ_IDX
    int MSE_IDX -> MSE_IDX
    int ADJRSQ_IDX -> ADJRSQ_IDX
    long serialVersionUID -> serialVersionUID
    double[] parameters -> parameters
    double[][] varCovData -> varCovData
    boolean isSymmetricVCD -> isSymmetricVCD
    int rank -> rank
    long nobs -> nobs
    boolean containsConstant -> containsConstant
    double[] globalFitInfo -> globalFitInfo
    double getParameterEstimate(int) -> getParameterEstimate
    double[] getParameterEstimates() -> getParameterEstimates
    double getStdErrorOfEstimate(int) -> getStdErrorOfEstimate
    double[] getStdErrorOfEstimates() -> getStdErrorOfEstimates
    double getCovarianceOfParameters(int,int) -> getCovarianceOfParameters
    int getNumberOfParameters() -> getNumberOfParameters
    long getN() -> getN
    double getTotalSumSquares() -> getTotalSumSquares
    double getRegressionSumSquares() -> getRegressionSumSquares
    double getErrorSumSquares() -> getErrorSumSquares
    double getMeanSquareError() -> getMeanSquareError
    double getRSquared() -> getRSquared
    double getAdjustedRSquared() -> getAdjustedRSquared
    boolean hasIntercept() -> hasIntercept
    double getVcvElement(int,int) -> getVcvElement
org.apache.commons.math3.stat.regression.SimpleRegression -> org.apache.commons.math3.stat.regression.SimpleRegression:
    long serialVersionUID -> serialVersionUID
    double sumX -> sumX
    double sumXX -> sumXX
    double sumY -> sumY
    double sumYY -> sumYY
    double sumXY -> sumXY
    long n -> n
    double xbar -> xbar
    double ybar -> ybar
    boolean hasIntercept -> hasIntercept
    void addData(double,double) -> addData
    void append(org.apache.commons.math3.stat.regression.SimpleRegression) -> append
    void removeData(double,double) -> removeData
    void addData(double[][]) -> addData
    void addObservation(double[],double) -> addObservation
    void addObservations(double[][],double[]) -> addObservations
    void removeData(double[][]) -> removeData
    void clear() -> clear
    long getN() -> getN
    double predict(double) -> predict
    double getIntercept() -> getIntercept
    boolean hasIntercept() -> hasIntercept
    double getSlope() -> getSlope
    double getSumSquaredErrors() -> getSumSquaredErrors
    double getTotalSumSquares() -> getTotalSumSquares
    double getXSumSquares() -> getXSumSquares
    double getSumOfCrossProducts() -> getSumOfCrossProducts
    double getRegressionSumSquares() -> getRegressionSumSquares
    double getMeanSquareError() -> getMeanSquareError
    double getR() -> getR
    double getRSquare() -> getRSquare
    double getInterceptStdErr() -> getInterceptStdErr
    double getSlopeStdErr() -> getSlopeStdErr
    double getSlopeConfidenceInterval() -> getSlopeConfidenceInterval
    double getSlopeConfidenceInterval(double) -> getSlopeConfidenceInterval
    double getSignificance() -> getSignificance
    double getIntercept(double) -> getIntercept
    double getRegressionSumSquares(double) -> getRegressionSumSquares
    org.apache.commons.math3.stat.regression.RegressionResults regress() -> regress
    org.apache.commons.math3.stat.regression.RegressionResults regress(int[]) -> regress
org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression -> org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:
    boolean hasIntercept() -> hasIntercept
    long getN() -> getN
    void addObservation(double[],double) -> addObservation
    void addObservations(double[][],double[]) -> addObservations
    void clear() -> clear
    org.apache.commons.math3.stat.regression.RegressionResults regress() -> regress
    org.apache.commons.math3.stat.regression.RegressionResults regress(int[]) -> regress
org.apache.commons.math3.transform.DctNormalization -> org.apache.commons.math3.transform.DctNormalization:
    org.apache.commons.math3.transform.DctNormalization STANDARD_DCT_I -> STANDARD_DCT_I
    org.apache.commons.math3.transform.DctNormalization ORTHOGONAL_DCT_I -> ORTHOGONAL_DCT_I
    org.apache.commons.math3.transform.DctNormalization[] $VALUES -> $VALUES
    org.apache.commons.math3.transform.DctNormalization[] values() -> values
    org.apache.commons.math3.transform.DctNormalization valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.transform.DftNormalization -> org.apache.commons.math3.transform.DftNormalization:
    org.apache.commons.math3.transform.DftNormalization STANDARD -> STANDARD
    org.apache.commons.math3.transform.DftNormalization UNITARY -> UNITARY
    org.apache.commons.math3.transform.DftNormalization[] $VALUES -> $VALUES
    org.apache.commons.math3.transform.DftNormalization[] values() -> values
    org.apache.commons.math3.transform.DftNormalization valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.transform.DstNormalization -> org.apache.commons.math3.transform.DstNormalization:
    org.apache.commons.math3.transform.DstNormalization STANDARD_DST_I -> STANDARD_DST_I
    org.apache.commons.math3.transform.DstNormalization ORTHOGONAL_DST_I -> ORTHOGONAL_DST_I
    org.apache.commons.math3.transform.DstNormalization[] $VALUES -> $VALUES
    org.apache.commons.math3.transform.DstNormalization[] values() -> values
    org.apache.commons.math3.transform.DstNormalization valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.transform.FastCosineTransformer -> org.apache.commons.math3.transform.FastCosineTransformer:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.transform.DctNormalization normalization -> normalization
    double[] transform(double[],org.apache.commons.math3.transform.TransformType) -> transform
    double[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType) -> transform
    double[] fct(double[]) -> fct
org.apache.commons.math3.transform.FastFourierTransformer -> org.apache.commons.math3.transform.FastFourierTransformer:
    long serialVersionUID -> serialVersionUID
    double[] W_SUB_N_R -> W_SUB_N_R
    double[] W_SUB_N_I -> W_SUB_N_I
    org.apache.commons.math3.transform.DftNormalization normalization -> normalization
    boolean $assertionsDisabled -> $assertionsDisabled
    void bitReversalShuffle2(double[],double[]) -> bitReversalShuffle2
    void normalizeTransformedData(double[][],org.apache.commons.math3.transform.DftNormalization,org.apache.commons.math3.transform.TransformType) -> normalizeTransformedData
    void transformInPlace(double[][],org.apache.commons.math3.transform.DftNormalization,org.apache.commons.math3.transform.TransformType) -> transformInPlace
    org.apache.commons.math3.complex.Complex[] transform(double[],org.apache.commons.math3.transform.TransformType) -> transform
    org.apache.commons.math3.complex.Complex[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType) -> transform
    org.apache.commons.math3.complex.Complex[] transform(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.transform.TransformType) -> transform
    java.lang.Object mdfft(java.lang.Object,org.apache.commons.math3.transform.TransformType) -> mdfft
    void mdfft(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix,org.apache.commons.math3.transform.TransformType,int,int[]) -> mdfft
org.apache.commons.math3.transform.FastFourierTransformer$1 -> org.apache.commons.math3.transform.FastFourierTransformer$1:
    int[] $SwitchMap$org$apache$commons$math3$transform$DftNormalization -> $SwitchMap$org$apache$commons$math3$transform$DftNormalization
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix -> org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix:
    int[] dimensionSize -> dimensionSize
    java.lang.Object multiDimensionalComplexArray -> multiDimensionalComplexArray
    org.apache.commons.math3.complex.Complex get(int[]) -> get
    org.apache.commons.math3.complex.Complex set(org.apache.commons.math3.complex.Complex,int[]) -> set
    int[] getDimensionSizes() -> getDimensionSizes
    java.lang.Object getArray() -> getArray
    java.lang.Object clone() -> clone
    void clone(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix) -> clone
org.apache.commons.math3.transform.FastHadamardTransformer -> org.apache.commons.math3.transform.FastHadamardTransformer:
    long serialVersionUID -> serialVersionUID
    double[] transform(double[],org.apache.commons.math3.transform.TransformType) -> transform
    double[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType) -> transform
    int[] transform(int[]) -> transform
    double[] fht(double[]) -> fht
    int[] fht(int[]) -> fht
org.apache.commons.math3.transform.FastSineTransformer -> org.apache.commons.math3.transform.FastSineTransformer:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.transform.DstNormalization normalization -> normalization
    double[] transform(double[],org.apache.commons.math3.transform.TransformType) -> transform
    double[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType) -> transform
    double[] fst(double[]) -> fst
org.apache.commons.math3.transform.RealTransformer -> org.apache.commons.math3.transform.RealTransformer:
    double[] transform(double[],org.apache.commons.math3.transform.TransformType) -> transform
    double[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType) -> transform
org.apache.commons.math3.transform.TransformType -> org.apache.commons.math3.transform.TransformType:
    org.apache.commons.math3.transform.TransformType FORWARD -> FORWARD
    org.apache.commons.math3.transform.TransformType INVERSE -> INVERSE
    org.apache.commons.math3.transform.TransformType[] $VALUES -> $VALUES
    org.apache.commons.math3.transform.TransformType[] values() -> values
    org.apache.commons.math3.transform.TransformType valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.transform.TransformUtils -> org.apache.commons.math3.transform.TransformUtils:
    int[] POWERS_OF_TWO -> POWERS_OF_TWO
    double[] scaleArray(double[],double) -> scaleArray
    org.apache.commons.math3.complex.Complex[] scaleArray(org.apache.commons.math3.complex.Complex[],double) -> scaleArray
    double[][] createRealImaginaryArray(org.apache.commons.math3.complex.Complex[]) -> createRealImaginaryArray
    org.apache.commons.math3.complex.Complex[] createComplexArray(double[][]) -> createComplexArray
    int exactLog2(int) -> exactLog2
org.apache.commons.math3.util.ArithmeticUtils -> org.apache.commons.math3.util.ArithmeticUtils:
    int addAndCheck(int,int) -> addAndCheck
    long addAndCheck(long,long) -> addAndCheck
    long binomialCoefficient(int,int) -> binomialCoefficient
    double binomialCoefficientDouble(int,int) -> binomialCoefficientDouble
    double binomialCoefficientLog(int,int) -> binomialCoefficientLog
    long factorial(int) -> factorial
    double factorialDouble(int) -> factorialDouble
    double factorialLog(int) -> factorialLog
    int gcd(int,int) -> gcd
    int gcdPositive(int,int) -> gcdPositive
    long gcd(long,long) -> gcd
    int lcm(int,int) -> lcm
    long lcm(long,long) -> lcm
    int mulAndCheck(int,int) -> mulAndCheck
    long mulAndCheck(long,long) -> mulAndCheck
    int subAndCheck(int,int) -> subAndCheck
    long subAndCheck(long,long) -> subAndCheck
    int pow(int,int) -> pow
    int pow(int,long) -> pow
    long pow(long,int) -> pow
    long pow(long,long) -> pow
    java.math.BigInteger pow(java.math.BigInteger,int) -> pow
    java.math.BigInteger pow(java.math.BigInteger,long) -> pow
    java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger) -> pow
    long stirlingS2(int,int) -> stirlingS2
    long addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable) -> addAndCheck
    boolean isPowerOfTwo(long) -> isPowerOfTwo
org.apache.commons.math3.util.BigReal -> org.apache.commons.math3.util.BigReal:
    org.apache.commons.math3.util.BigReal ZERO -> ZERO
    org.apache.commons.math3.util.BigReal ONE -> ONE
    long serialVersionUID -> serialVersionUID
    java.math.BigDecimal d -> d
    java.math.RoundingMode roundingMode -> roundingMode
    int scale -> scale
    java.math.RoundingMode getRoundingMode() -> getRoundingMode
    void setRoundingMode(java.math.RoundingMode) -> setRoundingMode
    int getScale() -> getScale
    void setScale(int) -> setScale
    org.apache.commons.math3.util.BigReal add(org.apache.commons.math3.util.BigReal) -> add
    org.apache.commons.math3.util.BigReal subtract(org.apache.commons.math3.util.BigReal) -> subtract
    org.apache.commons.math3.util.BigReal negate() -> negate
    org.apache.commons.math3.util.BigReal divide(org.apache.commons.math3.util.BigReal) -> divide
    org.apache.commons.math3.util.BigReal reciprocal() -> reciprocal
    org.apache.commons.math3.util.BigReal multiply(org.apache.commons.math3.util.BigReal) -> multiply
    org.apache.commons.math3.util.BigReal multiply(int) -> multiply
    int compareTo(org.apache.commons.math3.util.BigReal) -> compareTo
    double doubleValue() -> doubleValue
    java.math.BigDecimal bigDecimalValue() -> bigDecimalValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.commons.math3.Field getField() -> getField
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.util.BigRealField -> org.apache.commons.math3.util.BigRealField:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.util.BigRealField getInstance() -> getInstance
    org.apache.commons.math3.util.BigReal getOne() -> getOne
    org.apache.commons.math3.util.BigReal getZero() -> getZero
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    java.lang.Object readResolve() -> readResolve
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.util.BigRealField$1 -> org.apache.commons.math3.util.BigRealField$1:
org.apache.commons.math3.util.BigRealField$LazyHolder -> org.apache.commons.math3.util.BigRealField$LazyHolder:
    org.apache.commons.math3.util.BigRealField INSTANCE -> INSTANCE
    org.apache.commons.math3.util.BigRealField access$000() -> access$000
org.apache.commons.math3.util.Combinations -> org.apache.commons.math3.util.Combinations:
    int n -> n
    int k -> k
    org.apache.commons.math3.util.Combinations$IterationOrder iterationOrder -> iterationOrder
    int getN() -> getN
    int getK() -> getK
    java.util.Iterator iterator() -> iterator
    java.util.Comparator comparator() -> comparator
org.apache.commons.math3.util.Combinations$1 -> org.apache.commons.math3.util.Combinations$1:
    int[] $SwitchMap$org$apache$commons$math3$util$Combinations$IterationOrder -> $SwitchMap$org$apache$commons$math3$util$Combinations$IterationOrder
org.apache.commons.math3.util.Combinations$IterationOrder -> org.apache.commons.math3.util.Combinations$IterationOrder:
    org.apache.commons.math3.util.Combinations$IterationOrder LEXICOGRAPHIC -> LEXICOGRAPHIC
    org.apache.commons.math3.util.Combinations$IterationOrder[] $VALUES -> $VALUES
    org.apache.commons.math3.util.Combinations$IterationOrder[] values() -> values
    org.apache.commons.math3.util.Combinations$IterationOrder valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.util.Combinations$LexicographicComparator -> org.apache.commons.math3.util.Combinations$LexicographicComparator:
    long serialVersionUID -> serialVersionUID
    int n -> n
    int k -> k
    int compare(int[],int[]) -> compare
    long lexNorm(int[]) -> lexNorm
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.util.Combinations$LexicographicIterator -> org.apache.commons.math3.util.Combinations$LexicographicIterator:
    int k -> k
    int[] c -> c
    boolean more -> more
    int j -> j
    boolean hasNext() -> hasNext
    int[] next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.util.Combinations$SingletonIterator -> org.apache.commons.math3.util.Combinations$SingletonIterator:
    int[] singleton -> singleton
    boolean more -> more
    boolean hasNext() -> hasNext
    int[] next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.util.CombinatoricsUtils -> org.apache.commons.math3.util.CombinatoricsUtils:
    long[] FACTORIALS -> FACTORIALS
    java.util.concurrent.atomic.AtomicReference STIRLING_S2 -> STIRLING_S2
    long binomialCoefficient(int,int) -> binomialCoefficient
    double binomialCoefficientDouble(int,int) -> binomialCoefficientDouble
    double binomialCoefficientLog(int,int) -> binomialCoefficientLog
    long factorial(int) -> factorial
    double factorialDouble(int) -> factorialDouble
    double factorialLog(int) -> factorialLog
    long stirlingS2(int,int) -> stirlingS2
    java.util.Iterator combinationsIterator(int,int) -> combinationsIterator
    void checkBinomial(int,int) -> checkBinomial
org.apache.commons.math3.util.CompositeFormat -> org.apache.commons.math3.util.CompositeFormat:
    java.text.NumberFormat getDefaultNumberFormat() -> getDefaultNumberFormat
    java.text.NumberFormat getDefaultNumberFormat(java.util.Locale) -> getDefaultNumberFormat
    void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition) -> parseAndIgnoreWhitespace
    char parseNextCharacter(java.lang.String,java.text.ParsePosition) -> parseNextCharacter
    java.lang.Number parseNumber(java.lang.String,double,java.text.ParsePosition) -> parseNumber
    java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition) -> parseNumber
    boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition) -> parseFixedstring
    java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) -> formatDouble
org.apache.commons.math3.util.ContinuedFraction -> org.apache.commons.math3.util.ContinuedFraction:
    double DEFAULT_EPSILON -> DEFAULT_EPSILON
    double getA(int,double) -> getA
    double getB(int,double) -> getB
    double evaluate(double) -> evaluate
    double evaluate(double,double) -> evaluate
    double evaluate(double,int) -> evaluate
    double evaluate(double,double,int) -> evaluate
org.apache.commons.math3.util.Decimal64 -> org.apache.commons.math3.util.Decimal64:
    org.apache.commons.math3.util.Decimal64 ZERO -> ZERO
    org.apache.commons.math3.util.Decimal64 ONE -> ONE
    org.apache.commons.math3.util.Decimal64 NEGATIVE_INFINITY -> NEGATIVE_INFINITY
    org.apache.commons.math3.util.Decimal64 POSITIVE_INFINITY -> POSITIVE_INFINITY
    org.apache.commons.math3.util.Decimal64 NAN -> NAN
    long serialVersionUID -> serialVersionUID
    double value -> value
    org.apache.commons.math3.Field getField() -> getField
    org.apache.commons.math3.util.Decimal64 add(org.apache.commons.math3.util.Decimal64) -> add
    org.apache.commons.math3.util.Decimal64 subtract(org.apache.commons.math3.util.Decimal64) -> subtract
    org.apache.commons.math3.util.Decimal64 negate() -> negate
    org.apache.commons.math3.util.Decimal64 multiply(org.apache.commons.math3.util.Decimal64) -> multiply
    org.apache.commons.math3.util.Decimal64 multiply(int) -> multiply
    org.apache.commons.math3.util.Decimal64 divide(org.apache.commons.math3.util.Decimal64) -> divide
    org.apache.commons.math3.util.Decimal64 reciprocal() -> reciprocal
    byte byteValue() -> byteValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    int compareTo(org.apache.commons.math3.util.Decimal64) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isInfinite() -> isInfinite
    boolean isNaN() -> isNaN
    double getReal() -> getReal
    org.apache.commons.math3.util.Decimal64 add(double) -> add
    org.apache.commons.math3.util.Decimal64 subtract(double) -> subtract
    org.apache.commons.math3.util.Decimal64 multiply(double) -> multiply
    org.apache.commons.math3.util.Decimal64 divide(double) -> divide
    org.apache.commons.math3.util.Decimal64 remainder(double) -> remainder
    org.apache.commons.math3.util.Decimal64 remainder(org.apache.commons.math3.util.Decimal64) -> remainder
    org.apache.commons.math3.util.Decimal64 abs() -> abs
    org.apache.commons.math3.util.Decimal64 ceil() -> ceil
    org.apache.commons.math3.util.Decimal64 floor() -> floor
    org.apache.commons.math3.util.Decimal64 rint() -> rint
    long round() -> round
    org.apache.commons.math3.util.Decimal64 signum() -> signum
    org.apache.commons.math3.util.Decimal64 copySign(org.apache.commons.math3.util.Decimal64) -> copySign
    org.apache.commons.math3.util.Decimal64 copySign(double) -> copySign
    org.apache.commons.math3.util.Decimal64 scalb(int) -> scalb
    org.apache.commons.math3.util.Decimal64 hypot(org.apache.commons.math3.util.Decimal64) -> hypot
    org.apache.commons.math3.util.Decimal64 sqrt() -> sqrt
    org.apache.commons.math3.util.Decimal64 cbrt() -> cbrt
    org.apache.commons.math3.util.Decimal64 rootN(int) -> rootN
    org.apache.commons.math3.util.Decimal64 pow(double) -> pow
    org.apache.commons.math3.util.Decimal64 pow(int) -> pow
    org.apache.commons.math3.util.Decimal64 pow(org.apache.commons.math3.util.Decimal64) -> pow
    org.apache.commons.math3.util.Decimal64 exp() -> exp
    org.apache.commons.math3.util.Decimal64 expm1() -> expm1
    org.apache.commons.math3.util.Decimal64 log() -> log
    org.apache.commons.math3.util.Decimal64 log1p() -> log1p
    org.apache.commons.math3.util.Decimal64 log10() -> log10
    org.apache.commons.math3.util.Decimal64 cos() -> cos
    org.apache.commons.math3.util.Decimal64 sin() -> sin
    org.apache.commons.math3.util.Decimal64 tan() -> tan
    org.apache.commons.math3.util.Decimal64 acos() -> acos
    org.apache.commons.math3.util.Decimal64 asin() -> asin
    org.apache.commons.math3.util.Decimal64 atan() -> atan
    org.apache.commons.math3.util.Decimal64 atan2(org.apache.commons.math3.util.Decimal64) -> atan2
    org.apache.commons.math3.util.Decimal64 cosh() -> cosh
    org.apache.commons.math3.util.Decimal64 sinh() -> sinh
    org.apache.commons.math3.util.Decimal64 tanh() -> tanh
    org.apache.commons.math3.util.Decimal64 acosh() -> acosh
    org.apache.commons.math3.util.Decimal64 asinh() -> asinh
    org.apache.commons.math3.util.Decimal64 atanh() -> atanh
    org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64[],org.apache.commons.math3.util.Decimal64[]) -> linearCombination
    org.apache.commons.math3.util.Decimal64 linearCombination(double[],org.apache.commons.math3.util.Decimal64[]) -> linearCombination
    org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64) -> linearCombination
    org.apache.commons.math3.util.Decimal64 linearCombination(double,org.apache.commons.math3.util.Decimal64,double,org.apache.commons.math3.util.Decimal64) -> linearCombination
    org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64) -> linearCombination
    org.apache.commons.math3.util.Decimal64 linearCombination(double,org.apache.commons.math3.util.Decimal64,double,org.apache.commons.math3.util.Decimal64,double,org.apache.commons.math3.util.Decimal64) -> linearCombination
    org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64) -> linearCombination
    org.apache.commons.math3.util.Decimal64 linearCombination(double,org.apache.commons.math3.util.Decimal64,double,org.apache.commons.math3.util.Decimal64,double,org.apache.commons.math3.util.Decimal64,double,org.apache.commons.math3.util.Decimal64) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> linearCombination
    java.lang.Object linearCombination(double[],java.lang.Object[]) -> linearCombination
    java.lang.Object linearCombination(java.lang.Object[],java.lang.Object[]) -> linearCombination
    java.lang.Object atanh() -> atanh
    java.lang.Object asinh() -> asinh
    java.lang.Object acosh() -> acosh
    java.lang.Object tanh() -> tanh
    java.lang.Object sinh() -> sinh
    java.lang.Object cosh() -> cosh
    java.lang.Object atan2(java.lang.Object) -> atan2
    java.lang.Object atan() -> atan
    java.lang.Object asin() -> asin
    java.lang.Object acos() -> acos
    java.lang.Object tan() -> tan
    java.lang.Object sin() -> sin
    java.lang.Object cos() -> cos
    java.lang.Object log1p() -> log1p
    java.lang.Object log() -> log
    java.lang.Object expm1() -> expm1
    java.lang.Object exp() -> exp
    java.lang.Object pow(java.lang.Object) -> pow
    java.lang.Object pow(int) -> pow
    java.lang.Object pow(double) -> pow
    java.lang.Object rootN(int) -> rootN
    java.lang.Object cbrt() -> cbrt
    java.lang.Object sqrt() -> sqrt
    java.lang.Object reciprocal() -> reciprocal
    java.lang.Object hypot(java.lang.Object) -> hypot
    java.lang.Object scalb(int) -> scalb
    java.lang.Object copySign(double) -> copySign
    java.lang.Object copySign(java.lang.Object) -> copySign
    java.lang.Object signum() -> signum
    java.lang.Object rint() -> rint
    java.lang.Object floor() -> floor
    java.lang.Object ceil() -> ceil
    java.lang.Object abs() -> abs
    java.lang.Object remainder(java.lang.Object) -> remainder
    java.lang.Object remainder(double) -> remainder
    java.lang.Object divide(double) -> divide
    java.lang.Object multiply(double) -> multiply
    java.lang.Object subtract(double) -> subtract
    java.lang.Object add(double) -> add
    java.lang.Object divide(java.lang.Object) -> divide
    java.lang.Object multiply(java.lang.Object) -> multiply
    java.lang.Object multiply(int) -> multiply
    java.lang.Object negate() -> negate
    java.lang.Object subtract(java.lang.Object) -> subtract
    java.lang.Object add(java.lang.Object) -> add
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.math3.util.Decimal64Field -> org.apache.commons.math3.util.Decimal64Field:
    org.apache.commons.math3.util.Decimal64Field INSTANCE -> INSTANCE
    org.apache.commons.math3.util.Decimal64Field getInstance() -> getInstance
    org.apache.commons.math3.util.Decimal64 getZero() -> getZero
    org.apache.commons.math3.util.Decimal64 getOne() -> getOne
    java.lang.Class getRuntimeClass() -> getRuntimeClass
    java.lang.Object getOne() -> getOne
    java.lang.Object getZero() -> getZero
org.apache.commons.math3.util.DefaultTransformer -> org.apache.commons.math3.util.DefaultTransformer:
    long serialVersionUID -> serialVersionUID
    double transform(java.lang.Object) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.math3.util.DoubleArray -> org.apache.commons.math3.util.DoubleArray:
    int getNumElements() -> getNumElements
    double getElement(int) -> getElement
    void setElement(int,double) -> setElement
    void addElement(double) -> addElement
    void addElements(double[]) -> addElements
    double addElementRolling(double) -> addElementRolling
    double[] getElements() -> getElements
    void clear() -> clear
org.apache.commons.math3.util.FastMath -> org.apache.commons.math3.util.FastMath:
    double PI -> PI
    double E -> E
    int EXP_INT_TABLE_MAX_INDEX -> EXP_INT_TABLE_MAX_INDEX
    int EXP_INT_TABLE_LEN -> EXP_INT_TABLE_LEN
    int LN_MANT_LEN -> LN_MANT_LEN
    int EXP_FRAC_TABLE_LEN -> EXP_FRAC_TABLE_LEN
    double LOG_MAX_VALUE -> LOG_MAX_VALUE
    boolean RECOMPUTE_TABLES_AT_RUNTIME -> RECOMPUTE_TABLES_AT_RUNTIME
    double LN_2_A -> LN_2_A
    double LN_2_B -> LN_2_B
    double[][] LN_QUICK_COEF -> LN_QUICK_COEF
    double[][] LN_HI_PREC_COEF -> LN_HI_PREC_COEF
    int SINE_TABLE_LEN -> SINE_TABLE_LEN
    double[] SINE_TABLE_A -> SINE_TABLE_A
    double[] SINE_TABLE_B -> SINE_TABLE_B
    double[] COSINE_TABLE_A -> COSINE_TABLE_A
    double[] COSINE_TABLE_B -> COSINE_TABLE_B
    double[] TANGENT_TABLE_A -> TANGENT_TABLE_A
    double[] TANGENT_TABLE_B -> TANGENT_TABLE_B
    long[] RECIP_2PI -> RECIP_2PI
    long[] PI_O_4_BITS -> PI_O_4_BITS
    double[] EIGHTHS -> EIGHTHS
    double[] CBRTTWO -> CBRTTWO
    long HEX_40000000 -> HEX_40000000
    long MASK_30BITS -> MASK_30BITS
    int MASK_NON_SIGN_INT -> MASK_NON_SIGN_INT
    long MASK_NON_SIGN_LONG -> MASK_NON_SIGN_LONG
    double TWO_POWER_52 -> TWO_POWER_52
    double TWO_POWER_53 -> TWO_POWER_53
    double F_1_3 -> F_1_3
    double F_1_5 -> F_1_5
    double F_1_7 -> F_1_7
    double F_1_9 -> F_1_9
    double F_1_11 -> F_1_11
    double F_1_13 -> F_1_13
    double F_1_15 -> F_1_15
    double F_1_17 -> F_1_17
    double F_3_4 -> F_3_4
    double F_15_16 -> F_15_16
    double F_13_14 -> F_13_14
    double F_11_12 -> F_11_12
    double F_9_10 -> F_9_10
    double F_7_8 -> F_7_8
    double F_5_6 -> F_5_6
    double F_1_2 -> F_1_2
    double F_1_4 -> F_1_4
    double doubleHighPart(double) -> doubleHighPart
    double sqrt(double) -> sqrt
    double cosh(double) -> cosh
    double sinh(double) -> sinh
    double tanh(double) -> tanh
    double acosh(double) -> acosh
    double asinh(double) -> asinh
    double atanh(double) -> atanh
    double signum(double) -> signum
    float signum(float) -> signum
    double nextUp(double) -> nextUp
    float nextUp(float) -> nextUp
    double random() -> random
    double exp(double) -> exp
    double exp(double,double,double[]) -> exp
    double expm1(double) -> expm1
    double expm1(double,double[]) -> expm1
    double log(double) -> log
    double log(double,double[]) -> log
    double log1p(double) -> log1p
    double log10(double) -> log10
    double log(double,double) -> log
    double pow(double,double) -> pow
    double pow(double,int) -> pow
    double polySine(double) -> polySine
    double polyCosine(double) -> polyCosine
    double sinQ(double,double) -> sinQ
    double cosQ(double,double) -> cosQ
    double tanQ(double,double,boolean) -> tanQ
    void reducePayneHanek(double,double[]) -> reducePayneHanek
    double sin(double) -> sin
    double cos(double) -> cos
    double tan(double) -> tan
    double atan(double) -> atan
    double atan(double,double,boolean) -> atan
    double atan2(double,double) -> atan2
    double asin(double) -> asin
    double acos(double) -> acos
    double cbrt(double) -> cbrt
    double toRadians(double) -> toRadians
    double toDegrees(double) -> toDegrees
    int abs(int) -> abs
    long abs(long) -> abs
    float abs(float) -> abs
    double abs(double) -> abs
    double ulp(double) -> ulp
    float ulp(float) -> ulp
    double scalb(double,int) -> scalb
    float scalb(float,int) -> scalb
    double nextAfter(double,double) -> nextAfter
    float nextAfter(float,double) -> nextAfter
    double floor(double) -> floor
    double ceil(double) -> ceil
    double rint(double) -> rint
    long round(double) -> round
    int round(float) -> round
    int min(int,int) -> min
    long min(long,long) -> min
    float min(float,float) -> min
    double min(double,double) -> min
    int max(int,int) -> max
    long max(long,long) -> max
    float max(float,float) -> max
    double max(double,double) -> max
    double hypot(double,double) -> hypot
    double IEEEremainder(double,double) -> IEEEremainder
    double copySign(double,double) -> copySign
    float copySign(float,float) -> copySign
    int getExponent(double) -> getExponent
    int getExponent(float) -> getExponent
    void main(java.lang.String[]) -> main
org.apache.commons.math3.util.FastMath$CodyWaite -> org.apache.commons.math3.util.FastMath$CodyWaite:
    int finalK -> finalK
    double finalRemA -> finalRemA
    double finalRemB -> finalRemB
    int getK() -> getK
    double getRemA() -> getRemA
    double getRemB() -> getRemB
org.apache.commons.math3.util.FastMath$ExpFracTable -> org.apache.commons.math3.util.FastMath$ExpFracTable:
    double[] EXP_FRAC_TABLE_A -> EXP_FRAC_TABLE_A
    double[] EXP_FRAC_TABLE_B -> EXP_FRAC_TABLE_B
    double[] access$200() -> access$200
    double[] access$300() -> access$300
org.apache.commons.math3.util.FastMath$ExpIntTable -> org.apache.commons.math3.util.FastMath$ExpIntTable:
    double[] EXP_INT_TABLE_A -> EXP_INT_TABLE_A
    double[] EXP_INT_TABLE_B -> EXP_INT_TABLE_B
    double[] access$000() -> access$000
    double[] access$100() -> access$100
org.apache.commons.math3.util.FastMath$lnMant -> org.apache.commons.math3.util.FastMath$lnMant:
    double[][] LN_MANT -> LN_MANT
    double[][] access$400() -> access$400
org.apache.commons.math3.util.FastMathCalc -> org.apache.commons.math3.util.FastMathCalc:
    long HEX_40000000 -> HEX_40000000
    double[] FACT -> FACT
    double[][] LN_SPLIT_COEF -> LN_SPLIT_COEF
    java.lang.String TABLE_START_DECL -> TABLE_START_DECL
    java.lang.String TABLE_END_DECL -> TABLE_END_DECL
    void buildSinCosTables(double[],double[],double[],double[],int,double[],double[]) -> buildSinCosTables
    double slowCos(double,double[]) -> slowCos
    double slowSin(double,double[]) -> slowSin
    double slowexp(double,double[]) -> slowexp
    void split(double,double[]) -> split
    void resplit(double[]) -> resplit
    void splitMult(double[],double[],double[]) -> splitMult
    void splitAdd(double[],double[],double[]) -> splitAdd
    void splitReciprocal(double[],double[]) -> splitReciprocal
    void quadMult(double[],double[],double[]) -> quadMult
    double expint(int,double[]) -> expint
    double[] slowLog(double) -> slowLog
    void printarray(java.io.PrintStream,java.lang.String,int,double[][]) -> printarray
    void printarray(java.io.PrintStream,java.lang.String,int,double[]) -> printarray
    java.lang.String format(double) -> format
    void checkLen(int,int) -> checkLen
org.apache.commons.math3.util.FastMathLiteralArrays -> org.apache.commons.math3.util.FastMathLiteralArrays:
    double[] EXP_INT_A -> EXP_INT_A
    double[] EXP_INT_B -> EXP_INT_B
    double[] EXP_FRAC_A -> EXP_FRAC_A
    double[] EXP_FRAC_B -> EXP_FRAC_B
    double[][] LN_MANT -> LN_MANT
    double[] loadExpIntA() -> loadExpIntA
    double[] loadExpIntB() -> loadExpIntB
    double[] loadExpFracA() -> loadExpFracA
    double[] loadExpFracB() -> loadExpFracB
    double[][] loadLnMant() -> loadLnMant
org.apache.commons.math3.util.Incrementor -> org.apache.commons.math3.util.Incrementor:
    int maximalCount -> maximalCount
    int count -> count
    org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback maxCountCallback -> maxCountCallback
    void setMaximalCount(int) -> setMaximalCount
    int getMaximalCount() -> getMaximalCount
    int getCount() -> getCount
    boolean canIncrement() -> canIncrement
    void incrementCount(int) -> incrementCount
    void incrementCount() -> incrementCount
    void resetCount() -> resetCount
org.apache.commons.math3.util.Incrementor$1 -> org.apache.commons.math3.util.Incrementor$1:
    void trigger(int) -> trigger
org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback -> org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback:
    void trigger(int) -> trigger
org.apache.commons.math3.util.IterationEvent -> org.apache.commons.math3.util.IterationEvent:
    long serialVersionUID -> serialVersionUID
    int iterations -> iterations
    int getIterations() -> getIterations
org.apache.commons.math3.util.IterationListener -> org.apache.commons.math3.util.IterationListener:
    void initializationPerformed(org.apache.commons.math3.util.IterationEvent) -> initializationPerformed
    void iterationPerformed(org.apache.commons.math3.util.IterationEvent) -> iterationPerformed
    void iterationStarted(org.apache.commons.math3.util.IterationEvent) -> iterationStarted
    void terminationPerformed(org.apache.commons.math3.util.IterationEvent) -> terminationPerformed
org.apache.commons.math3.util.IterationManager -> org.apache.commons.math3.util.IterationManager:
    org.apache.commons.math3.util.Incrementor iterations -> iterations
    java.util.Collection listeners -> listeners
    void addIterationListener(org.apache.commons.math3.util.IterationListener) -> addIterationListener
    void fireInitializationEvent(org.apache.commons.math3.util.IterationEvent) -> fireInitializationEvent
    void fireIterationPerformedEvent(org.apache.commons.math3.util.IterationEvent) -> fireIterationPerformedEvent
    void fireIterationStartedEvent(org.apache.commons.math3.util.IterationEvent) -> fireIterationStartedEvent
    void fireTerminationEvent(org.apache.commons.math3.util.IterationEvent) -> fireTerminationEvent
    int getIterations() -> getIterations
    int getMaxIterations() -> getMaxIterations
    void incrementIterationCount() -> incrementIterationCount
    void removeIterationListener(org.apache.commons.math3.util.IterationListener) -> removeIterationListener
    void resetIterationCount() -> resetIterationCount
org.apache.commons.math3.util.MathArrays -> org.apache.commons.math3.util.MathArrays:
    int SPLIT_FACTOR -> SPLIT_FACTOR
    double[] scale(double,double[]) -> scale
    void scaleInPlace(double,double[]) -> scaleInPlace
    double[] ebeAdd(double[],double[]) -> ebeAdd
    double[] ebeSubtract(double[],double[]) -> ebeSubtract
    double[] ebeMultiply(double[],double[]) -> ebeMultiply
    double[] ebeDivide(double[],double[]) -> ebeDivide
    double distance1(double[],double[]) -> distance1
    int distance1(int[],int[]) -> distance1
    double distance(double[],double[]) -> distance
    double distance(int[],int[]) -> distance
    double distanceInf(double[],double[]) -> distanceInf
    int distanceInf(int[],int[]) -> distanceInf
    boolean isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) -> isMonotonic
    boolean isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) -> isMonotonic
    boolean checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) -> checkOrder
    void checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) -> checkOrder
    void checkOrder(double[]) -> checkOrder
    void checkRectangular(long[][]) -> checkRectangular
    void checkPositive(double[]) -> checkPositive
    void checkNonNegative(long[]) -> checkNonNegative
    void checkNonNegative(long[][]) -> checkNonNegative
    double safeNorm(double[]) -> safeNorm
    void sortInPlace(double[],double[][]) -> sortInPlace
    void sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][]) -> sortInPlace
    int[] copyOf(int[]) -> copyOf
    double[] copyOf(double[]) -> copyOf
    int[] copyOf(int[],int) -> copyOf
    double[] copyOf(double[],int) -> copyOf
    double linearCombination(double[],double[]) -> linearCombination
    double linearCombination(double,double,double,double) -> linearCombination
    double linearCombination(double,double,double,double,double,double) -> linearCombination
    double linearCombination(double,double,double,double,double,double,double,double) -> linearCombination
    boolean equals(float[],float[]) -> equals
    boolean equalsIncludingNaN(float[],float[]) -> equalsIncludingNaN
    boolean equals(double[],double[]) -> equals
    boolean equalsIncludingNaN(double[],double[]) -> equalsIncludingNaN
    double[] normalizeArray(double[],double) -> normalizeArray
    java.lang.Object[] buildArray(org.apache.commons.math3.Field,int) -> buildArray
    java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int) -> buildArray
    double[] convolve(double[],double[]) -> convolve
    void shuffle(int[],int,org.apache.commons.math3.util.MathArrays$Position) -> shuffle
    void shuffle(int[],int,org.apache.commons.math3.util.MathArrays$Position,org.apache.commons.math3.random.RandomGenerator) -> shuffle
    void shuffle(int[],org.apache.commons.math3.random.RandomGenerator) -> shuffle
    void shuffle(int[]) -> shuffle
    int[] natural(int) -> natural
    boolean verifyValues(double[],int,int) -> verifyValues
    boolean verifyValues(double[],int,int,boolean) -> verifyValues
    boolean verifyValues(double[],double[],int,int) -> verifyValues
    boolean verifyValues(double[],double[],int,int,boolean) -> verifyValues
org.apache.commons.math3.util.MathArrays$1 -> org.apache.commons.math3.util.MathArrays$1:
    int compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.util.MathArrays$2 -> org.apache.commons.math3.util.MathArrays$2:
    int compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.math3.util.MathArrays$3 -> org.apache.commons.math3.util.MathArrays$3:
    int[] $SwitchMap$org$apache$commons$math3$util$MathArrays$OrderDirection -> $SwitchMap$org$apache$commons$math3$util$MathArrays$OrderDirection
    int[] $SwitchMap$org$apache$commons$math3$util$MathArrays$Position -> $SwitchMap$org$apache$commons$math3$util$MathArrays$Position
org.apache.commons.math3.util.MathArrays$Function -> org.apache.commons.math3.util.MathArrays$Function:
    double evaluate(double[]) -> evaluate
    double evaluate(double[],int,int) -> evaluate
org.apache.commons.math3.util.MathArrays$OrderDirection -> org.apache.commons.math3.util.MathArrays$OrderDirection:
    org.apache.commons.math3.util.MathArrays$OrderDirection INCREASING -> INCREASING
    org.apache.commons.math3.util.MathArrays$OrderDirection DECREASING -> DECREASING
    org.apache.commons.math3.util.MathArrays$OrderDirection[] $VALUES -> $VALUES
    org.apache.commons.math3.util.MathArrays$OrderDirection[] values() -> values
    org.apache.commons.math3.util.MathArrays$OrderDirection valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.util.MathArrays$Position -> org.apache.commons.math3.util.MathArrays$Position:
    org.apache.commons.math3.util.MathArrays$Position HEAD -> HEAD
    org.apache.commons.math3.util.MathArrays$Position TAIL -> TAIL
    org.apache.commons.math3.util.MathArrays$Position[] $VALUES -> $VALUES
    org.apache.commons.math3.util.MathArrays$Position[] values() -> values
    org.apache.commons.math3.util.MathArrays$Position valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.util.MathUtils -> org.apache.commons.math3.util.MathUtils:
    double TWO_PI -> TWO_PI
    int hash(double) -> hash
    boolean equals(double,double) -> equals
    int hash(double[]) -> hash
    double normalizeAngle(double,double) -> normalizeAngle
    double reduce(double,double,double) -> reduce
    byte copySign(byte,byte) -> copySign
    short copySign(short,short) -> copySign
    int copySign(int,int) -> copySign
    long copySign(long,long) -> copySign
    void checkFinite(double) -> checkFinite
    void checkFinite(double[]) -> checkFinite
    void checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) -> checkNotNull
    void checkNotNull(java.lang.Object) -> checkNotNull
org.apache.commons.math3.util.MultidimensionalCounter -> org.apache.commons.math3.util.MultidimensionalCounter:
    int dimension -> dimension
    int[] uniCounterOffset -> uniCounterOffset
    int[] size -> size
    int totalSize -> totalSize
    int last -> last
    org.apache.commons.math3.util.MultidimensionalCounter$Iterator iterator() -> iterator
    int getDimension() -> getDimension
    int[] getCounts(int) -> getCounts
    int getCount(int[]) -> getCount
    int getSize() -> getSize
    int[] getSizes() -> getSizes
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    int access$000(org.apache.commons.math3.util.MultidimensionalCounter) -> access$000
    int access$100(org.apache.commons.math3.util.MultidimensionalCounter) -> access$100
    int access$200(org.apache.commons.math3.util.MultidimensionalCounter) -> access$200
    int[] access$300(org.apache.commons.math3.util.MultidimensionalCounter) -> access$300
org.apache.commons.math3.util.MultidimensionalCounter$Iterator -> org.apache.commons.math3.util.MultidimensionalCounter$Iterator:
    int[] counter -> counter
    int count -> count
    int maxCount -> maxCount
    org.apache.commons.math3.util.MultidimensionalCounter this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Integer next() -> next
    int getCount() -> getCount
    int[] getCounts() -> getCounts
    int getCount(int) -> getCount
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.commons.math3.util.NumberTransformer -> org.apache.commons.math3.util.NumberTransformer:
    double transform(java.lang.Object) -> transform
org.apache.commons.math3.util.OpenIntToDoubleHashMap -> org.apache.commons.math3.util.OpenIntToDoubleHashMap:
    byte FREE -> FREE
    byte FULL -> FULL
    byte REMOVED -> REMOVED
    long serialVersionUID -> serialVersionUID
    float LOAD_FACTOR -> LOAD_FACTOR
    int DEFAULT_EXPECTED_SIZE -> DEFAULT_EXPECTED_SIZE
    int RESIZE_MULTIPLIER -> RESIZE_MULTIPLIER
    int PERTURB_SHIFT -> PERTURB_SHIFT
    int[] keys -> keys
    double[] values -> values
    byte[] states -> states
    double missingEntries -> missingEntries
    int size -> size
    int mask -> mask
    int count -> count
    int computeCapacity(int) -> computeCapacity
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    double get(int) -> get
    boolean containsKey(int) -> containsKey
    org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iterator() -> iterator
    int perturb(int) -> perturb
    int findInsertionIndex(int) -> findInsertionIndex
    int findInsertionIndex(int[],byte[],int,int) -> findInsertionIndex
    int probe(int,int) -> probe
    int changeIndexSign(int) -> changeIndexSign
    int size() -> size
    double remove(int) -> remove
    boolean containsKey(int,int) -> containsKey
    double doRemove(int) -> doRemove
    double put(int,double) -> put
    void growTable() -> growTable
    boolean shouldGrowTable() -> shouldGrowTable
    int hashOf(int) -> hashOf
    void readObject(java.io.ObjectInputStream) -> readObject
    int access$100(org.apache.commons.math3.util.OpenIntToDoubleHashMap) -> access$100
    int[] access$200(org.apache.commons.math3.util.OpenIntToDoubleHashMap) -> access$200
    double[] access$300(org.apache.commons.math3.util.OpenIntToDoubleHashMap) -> access$300
    byte[] access$400(org.apache.commons.math3.util.OpenIntToDoubleHashMap) -> access$400
org.apache.commons.math3.util.OpenIntToDoubleHashMap$1 -> org.apache.commons.math3.util.OpenIntToDoubleHashMap$1:
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator -> org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:
    int referenceCount -> referenceCount
    int current -> current
    int next -> next
    org.apache.commons.math3.util.OpenIntToDoubleHashMap this$0 -> this$0
    boolean hasNext() -> hasNext
    int key() -> key
    double value() -> value
    void advance() -> advance
org.apache.commons.math3.util.OpenIntToFieldHashMap -> org.apache.commons.math3.util.OpenIntToFieldHashMap:
    byte FREE -> FREE
    byte FULL -> FULL
    byte REMOVED -> REMOVED
    long serialVersionUID -> serialVersionUID
    float LOAD_FACTOR -> LOAD_FACTOR
    int DEFAULT_EXPECTED_SIZE -> DEFAULT_EXPECTED_SIZE
    int RESIZE_MULTIPLIER -> RESIZE_MULTIPLIER
    int PERTURB_SHIFT -> PERTURB_SHIFT
    org.apache.commons.math3.Field field -> field
    int[] keys -> keys
    org.apache.commons.math3.FieldElement[] values -> values
    byte[] states -> states
    org.apache.commons.math3.FieldElement missingEntries -> missingEntries
    int size -> size
    int mask -> mask
    int count -> count
    int computeCapacity(int) -> computeCapacity
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    org.apache.commons.math3.FieldElement get(int) -> get
    boolean containsKey(int) -> containsKey
    org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator iterator() -> iterator
    int perturb(int) -> perturb
    int findInsertionIndex(int) -> findInsertionIndex
    int findInsertionIndex(int[],byte[],int,int) -> findInsertionIndex
    int probe(int,int) -> probe
    int changeIndexSign(int) -> changeIndexSign
    int size() -> size
    org.apache.commons.math3.FieldElement remove(int) -> remove
    boolean containsKey(int,int) -> containsKey
    org.apache.commons.math3.FieldElement doRemove(int) -> doRemove
    org.apache.commons.math3.FieldElement put(int,org.apache.commons.math3.FieldElement) -> put
    void growTable() -> growTable
    boolean shouldGrowTable() -> shouldGrowTable
    int hashOf(int) -> hashOf
    void readObject(java.io.ObjectInputStream) -> readObject
    org.apache.commons.math3.FieldElement[] buildArray(int) -> buildArray
    int access$100(org.apache.commons.math3.util.OpenIntToFieldHashMap) -> access$100
    int[] access$200(org.apache.commons.math3.util.OpenIntToFieldHashMap) -> access$200
    org.apache.commons.math3.FieldElement[] access$300(org.apache.commons.math3.util.OpenIntToFieldHashMap) -> access$300
    byte[] access$400(org.apache.commons.math3.util.OpenIntToFieldHashMap) -> access$400
org.apache.commons.math3.util.OpenIntToFieldHashMap$1 -> org.apache.commons.math3.util.OpenIntToFieldHashMap$1:
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator -> org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator:
    int referenceCount -> referenceCount
    int current -> current
    int next -> next
    org.apache.commons.math3.util.OpenIntToFieldHashMap this$0 -> this$0
    boolean hasNext() -> hasNext
    int key() -> key
    org.apache.commons.math3.FieldElement value() -> value
    void advance() -> advance
org.apache.commons.math3.util.Pair -> org.apache.commons.math3.util.Pair:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getSecond() -> getSecond
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.apache.commons.math3.util.Pair create(java.lang.Object,java.lang.Object) -> create
org.apache.commons.math3.util.Precision -> org.apache.commons.math3.util.Precision:
    double EPSILON -> EPSILON
    double SAFE_MIN -> SAFE_MIN
    long EXPONENT_OFFSET -> EXPONENT_OFFSET
    long SGN_MASK -> SGN_MASK
    int SGN_MASK_FLOAT -> SGN_MASK_FLOAT
    double POSITIVE_ZERO -> POSITIVE_ZERO
    int compareTo(double,double,double) -> compareTo
    int compareTo(double,double,int) -> compareTo
    boolean equals(float,float) -> equals
    boolean equalsIncludingNaN(float,float) -> equalsIncludingNaN
    boolean equals(float,float,float) -> equals
    boolean equalsIncludingNaN(float,float,float) -> equalsIncludingNaN
    boolean equals(float,float,int) -> equals
    boolean equalsIncludingNaN(float,float,int) -> equalsIncludingNaN
    boolean equals(double,double) -> equals
    boolean equalsIncludingNaN(double,double) -> equalsIncludingNaN
    boolean equals(double,double,double) -> equals
    boolean equalsWithRelativeTolerance(double,double,double) -> equalsWithRelativeTolerance
    boolean equalsIncludingNaN(double,double,double) -> equalsIncludingNaN
    boolean equals(double,double,int) -> equals
    boolean equalsIncludingNaN(double,double,int) -> equalsIncludingNaN
    double round(double,int) -> round
    double round(double,int,int) -> round
    float round(float,int) -> round
    float round(float,int,int) -> round
    double roundUnscaled(double,double,int) -> roundUnscaled
    double representableDelta(double,double) -> representableDelta
org.apache.commons.math3.util.ResizableDoubleArray -> org.apache.commons.math3.util.ResizableDoubleArray:
    int ADDITIVE_MODE -> ADDITIVE_MODE
    int MULTIPLICATIVE_MODE -> MULTIPLICATIVE_MODE
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    double DEFAULT_EXPANSION_FACTOR -> DEFAULT_EXPANSION_FACTOR
    double DEFAULT_CONTRACTION_DELTA -> DEFAULT_CONTRACTION_DELTA
    double contractionCriterion -> contractionCriterion
    double expansionFactor -> expansionFactor
    org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode expansionMode -> expansionMode
    double[] internalArray -> internalArray
    int numElements -> numElements
    int startIndex -> startIndex
    void addElement(double) -> addElement
    void addElements(double[]) -> addElements
    double addElementRolling(double) -> addElementRolling
    double substituteMostRecentElement(double) -> substituteMostRecentElement
    void checkContractExpand(float,float) -> checkContractExpand
    void checkContractExpand(double,double) -> checkContractExpand
    void clear() -> clear
    void contract() -> contract
    void discardFrontElements(int) -> discardFrontElements
    void discardMostRecentElements(int) -> discardMostRecentElements
    void discardExtremeElements(int,boolean) -> discardExtremeElements
    void expand() -> expand
    void expandTo(int) -> expandTo
    float getContractionCriteria() -> getContractionCriteria
    double getContractionCriterion() -> getContractionCriterion
    double getElement(int) -> getElement
    double[] getElements() -> getElements
    float getExpansionFactor() -> getExpansionFactor
    int getExpansionMode() -> getExpansionMode
    int getInternalLength() -> getInternalLength
    int getCapacity() -> getCapacity
    int getNumElements() -> getNumElements
    double[] getInternalValues() -> getInternalValues
    double[] getArrayRef() -> getArrayRef
    int getStartIndex() -> getStartIndex
    void setContractionCriteria(float) -> setContractionCriteria
    double compute(org.apache.commons.math3.util.MathArrays$Function) -> compute
    void setElement(int,double) -> setElement
    void setExpansionFactor(float) -> setExpansionFactor
    void setExpansionMode(int) -> setExpansionMode
    void setExpansionMode(org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode) -> setExpansionMode
    void setInitialCapacity(int) -> setInitialCapacity
    void setNumElements(int) -> setNumElements
    boolean shouldContract() -> shouldContract
    int start() -> start
    void copy(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray) -> copy
    org.apache.commons.math3.util.ResizableDoubleArray copy() -> copy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.math3.util.ResizableDoubleArray$1 -> org.apache.commons.math3.util.ResizableDoubleArray$1:
    int[] $SwitchMap$org$apache$commons$math3$util$ResizableDoubleArray$ExpansionMode -> $SwitchMap$org$apache$commons$math3$util$ResizableDoubleArray$ExpansionMode
org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode -> org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode:
    org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode MULTIPLICATIVE -> MULTIPLICATIVE
    org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode ADDITIVE -> ADDITIVE
    org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode[] $VALUES -> $VALUES
    org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode[] values() -> values
    org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode valueOf(java.lang.String) -> valueOf
org.apache.commons.math3.util.TransformerMap -> org.apache.commons.math3.util.TransformerMap:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.math3.util.NumberTransformer defaultTransformer -> defaultTransformer
    java.util.Map map -> map
    boolean containsClass(java.lang.Class) -> containsClass
    boolean containsTransformer(org.apache.commons.math3.util.NumberTransformer) -> containsTransformer
    org.apache.commons.math3.util.NumberTransformer getTransformer(java.lang.Class) -> getTransformer
    org.apache.commons.math3.util.NumberTransformer putTransformer(java.lang.Class,org.apache.commons.math3.util.NumberTransformer) -> putTransformer
    org.apache.commons.math3.util.NumberTransformer removeTransformer(java.lang.Class) -> removeTransformer
    void clear() -> clear
    java.util.Set classes() -> classes
    java.util.Collection transformers() -> transformers
    double transform(java.lang.Object) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codegist.common.codec.Base64 -> org.codegist.common.codec.Base64:
    char[] CA -> CA
    int[] IA -> IA
    char[] encodeToChar(byte[]) -> encodeToChar
    char[] encodeToChar(byte[],boolean) -> encodeToChar
    byte[] decode(char[]) -> decode
    byte[] decodeFast(char[]) -> decodeFast
    byte[] encodeToByte(byte[]) -> encodeToByte
    byte[] encodeToByte(byte[],boolean) -> encodeToByte
    byte[] decode(byte[]) -> decode
    byte[] decodeFast(byte[]) -> decodeFast
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.String encodeToString(byte[],boolean) -> encodeToString
    byte[] decode(java.lang.String) -> decode
    byte[] decodeFast(java.lang.String) -> decodeFast
org.codegist.common.codec.Hex -> org.codegist.common.codec.Hex:
    char[] DIGITS -> DIGITS
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    char[] encode(byte[]) -> encode
org.codegist.common.collect.Arrays -> org.codegist.common.collect.Arrays:
    java.lang.Object[] merge(java.lang.Class,java.lang.Object[][]) -> merge
    java.lang.String join(java.lang.String,java.lang.Object[]) -> join
    java.lang.Object[] arrify(java.util.Collection,java.lang.Class) -> arrify
org.codegist.common.collect.Collections -> org.codegist.common.collect.Collections:
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    java.lang.String join(java.lang.String,java.util.Collection) -> join
    java.util.Set asSet(java.lang.Object[]) -> asSet
    boolean containsOnlyNulls(java.util.Collection) -> containsOnlyNulls
org.codegist.common.collect.Collections$1 -> org.codegist.common.collect.Collections$1:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.codegist.common.collect.Maps -> org.codegist.common.collect.Maps:
    java.util.Map filter(java.util.Map,java.lang.Object[]) -> filter
    boolean putIfAbsent(java.util.Map,java.lang.Object,java.lang.Object) -> putIfAbsent
    java.util.Map merge(java.util.Map[]) -> merge
org.codegist.common.io.EmptyInputStream -> org.codegist.common.io.EmptyInputStream:
    java.io.InputStream INSTANCE -> INSTANCE
    int read() -> read
org.codegist.common.io.Files -> org.codegist.common.io.Files:
    byte[] toByteArray(java.io.File) -> toByteArray
    java.lang.String toString(java.io.File) -> toString
org.codegist.common.io.IOs -> org.codegist.common.io.IOs:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.lang.String toString(java.io.InputStream) -> toString
    java.lang.String toString(java.io.InputStream,boolean) -> toString
    java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    java.lang.String toString(java.io.InputStream,java.nio.charset.Charset) -> toString
    java.lang.String toString(java.io.InputStream,java.lang.String,boolean) -> toString
    java.lang.String toString(java.io.InputStream,java.nio.charset.Charset,boolean) -> toString
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    byte[] toByteArray(java.io.InputStream,boolean) -> toByteArray
    java.lang.String toString(java.io.Reader) -> toString
    java.lang.String toString(java.io.Reader,boolean) -> toString
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void copy(java.io.Reader,java.io.Writer) -> copy
    void copy(java.io.InputStream,java.io.OutputStream,boolean) -> copy
    void copy(java.io.Reader,java.io.Writer,boolean) -> copy
    void close(java.io.InputStream) -> close
    void close(java.io.Reader) -> close
    void close(java.io.Closeable) -> close
org.codegist.common.io.InputStreamWrapper -> org.codegist.common.io.InputStreamWrapper:
    java.io.InputStream delegate -> delegate
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.codegist.common.io.Sockets -> org.codegist.common.io.Sockets:
    int getFreePort() -> getFreePort
org.codegist.common.io.StringBuilderWriter -> org.codegist.common.io.StringBuilderWriter:
    java.lang.StringBuilder builder -> builder
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(java.lang.String) -> write
    void write(char[],int,int) -> write
    java.lang.StringBuilder getBuilder() -> getBuilder
    java.lang.String toString() -> toString
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.codegist.common.lang.Disposable -> org.codegist.common.lang.Disposable:
    void dispose() -> dispose
org.codegist.common.lang.Disposables -> org.codegist.common.lang.Disposables:
    void dispose(java.lang.Object) -> dispose
    void dispose(java.lang.Object[]) -> dispose
org.codegist.common.lang.EqualsBuilder -> org.codegist.common.lang.EqualsBuilder:
    boolean equals -> equals
    org.codegist.common.lang.EqualsBuilder appendSuper(boolean) -> appendSuper
    org.codegist.common.lang.EqualsBuilder append(int,int) -> append
    org.codegist.common.lang.EqualsBuilder append(short,short) -> append
    org.codegist.common.lang.EqualsBuilder append(char,char) -> append
    org.codegist.common.lang.EqualsBuilder append(byte,byte) -> append
    org.codegist.common.lang.EqualsBuilder append(double,double) -> append
    org.codegist.common.lang.EqualsBuilder append(float,float) -> append
    org.codegist.common.lang.EqualsBuilder append(boolean,boolean) -> append
    org.codegist.common.lang.EqualsBuilder append(long,long) -> append
    org.codegist.common.lang.EqualsBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.codegist.common.lang.EqualsBuilder append(long[],long[]) -> append
    org.codegist.common.lang.EqualsBuilder append(int[],int[]) -> append
    org.codegist.common.lang.EqualsBuilder append(short[],short[]) -> append
    org.codegist.common.lang.EqualsBuilder append(char[],char[]) -> append
    org.codegist.common.lang.EqualsBuilder append(byte[],byte[]) -> append
    org.codegist.common.lang.EqualsBuilder append(double[],double[]) -> append
    org.codegist.common.lang.EqualsBuilder append(float[],float[]) -> append
    org.codegist.common.lang.EqualsBuilder append(boolean[],boolean[]) -> append
    org.codegist.common.lang.EqualsBuilder append(java.lang.Object,java.lang.Object) -> append
    boolean equals() -> equals
org.codegist.common.lang.HashCodeBuilder -> org.codegist.common.lang.HashCodeBuilder:
    int constant -> constant
    int hashcode -> hashcode
    org.codegist.common.lang.HashCodeBuilder append(int) -> append
    org.codegist.common.lang.HashCodeBuilder append(short) -> append
    org.codegist.common.lang.HashCodeBuilder append(char) -> append
    org.codegist.common.lang.HashCodeBuilder append(byte) -> append
    org.codegist.common.lang.HashCodeBuilder append(double) -> append
    org.codegist.common.lang.HashCodeBuilder append(float) -> append
    org.codegist.common.lang.HashCodeBuilder append(long) -> append
    org.codegist.common.lang.HashCodeBuilder append(boolean) -> append
    org.codegist.common.lang.HashCodeBuilder append(java.lang.Object[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(long[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(int[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(short[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(char[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(byte[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(double[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(float[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(boolean[]) -> append
    org.codegist.common.lang.HashCodeBuilder append(java.lang.Object) -> append
    org.codegist.common.lang.HashCodeBuilder appendNull() -> appendNull
    int hashCode() -> hashCode
    org.codegist.common.lang.HashCodeBuilder appendSuper(int) -> appendSuper
org.codegist.common.lang.Numbers -> org.codegist.common.lang.Numbers:
    int parse(java.lang.String,int) -> parse
    long parse(java.lang.String,long) -> parse
    double parse(java.lang.String,double) -> parse
    float parse(java.lang.String,float) -> parse
    byte parse(java.lang.String,byte) -> parse
    short parse(java.lang.String,short) -> parse
org.codegist.common.lang.Objects -> org.codegist.common.lang.Objects:
    java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    java.util.Collection asCollection(java.lang.Object) -> asCollection
    java.util.Iterator iterate(java.lang.Object) -> iterate
org.codegist.common.lang.Objects$1 -> org.codegist.common.lang.Objects$1:
org.codegist.common.lang.Objects$ArrayIterator -> org.codegist.common.lang.Objects$ArrayIterator:
    java.lang.Object array -> array
    int length -> length
    int index -> index
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.codegist.common.lang.Objects$SingletonIterator -> org.codegist.common.lang.Objects$SingletonIterator:
    java.util.concurrent.atomic.AtomicReference ref -> ref
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.codegist.common.lang.Randoms -> org.codegist.common.lang.Randoms:
    char[] ALPHANUM -> ALPHANUM
    java.security.SecureRandom RDM -> RDM
    java.lang.String randomAlphaNumeric(int) -> randomAlphaNumeric
org.codegist.common.lang.State -> org.codegist.common.lang.State:
    void isTrue(boolean,java.lang.String,java.lang.Object[]) -> isTrue
    void notNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> notNull
    void notBlank(java.lang.String,java.lang.String,java.lang.Object[]) -> notBlank
org.codegist.common.lang.Strings -> org.codegist.common.lang.Strings:
    boolean isBlank(java.lang.String) -> isBlank
    boolean isEmpty(java.lang.String) -> isEmpty
    boolean isNotBlank(java.lang.String) -> isNotBlank
    boolean isNotEmpty(java.lang.String) -> isNotEmpty
    java.lang.String defaultIfBlank(java.lang.String,java.lang.String) -> defaultIfBlank
    java.lang.String defaultIfEmpty(java.lang.String,java.lang.String) -> defaultIfEmpty
    java.lang.String substringRight(java.lang.String,int) -> substringRight
org.codegist.common.lang.ToStringBuilder -> org.codegist.common.lang.ToStringBuilder:
    boolean first -> first
    boolean done -> done
    java.lang.StringBuilder sb -> sb
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,short) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,int) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,long) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,float) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,double) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,boolean) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,byte) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,char) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,short[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,int[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,long[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,float[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,double[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,boolean[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,byte[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,char[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,java.lang.Object[]) -> append
    org.codegist.common.lang.ToStringBuilder append(java.lang.String,java.lang.Object) -> append
    void appendComa() -> appendComa
    java.lang.String toString() -> toString
org.codegist.common.lang.Validate -> org.codegist.common.lang.Validate:
    void isFalse(boolean,java.lang.String,java.lang.Object[]) -> isFalse
    void isTrue(boolean,java.lang.String,java.lang.Object[]) -> isTrue
    void notNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> notNull
    void notBlank(java.lang.String,java.lang.String,java.lang.Object[]) -> notBlank
org.codegist.common.log.AbstractLogger -> org.codegist.common.log.AbstractLogger:
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    void logError(java.lang.Object,java.lang.Throwable) -> logError
    void logError(java.lang.Object) -> logError
    void error(java.lang.Throwable) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Object) -> error
    void logWarn(java.lang.Object,java.lang.Throwable) -> logWarn
    void logWarn(java.lang.Object) -> logWarn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Throwable) -> warn
    void logInfo(java.lang.Object,java.lang.Throwable) -> logInfo
    void logInfo(java.lang.Object) -> logInfo
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Object) -> info
    void info(java.lang.Throwable) -> info
    void logDebug(java.lang.Object,java.lang.Throwable) -> logDebug
    void logDebug(java.lang.Object) -> logDebug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Throwable) -> debug
    void logTrace(java.lang.Object,java.lang.Throwable) -> logTrace
    void logTrace(java.lang.Object) -> logTrace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Throwable) -> trace
org.codegist.common.log.ApacheCommonsLogger -> org.codegist.common.log.ApacheCommonsLogger:
    org.apache.commons.logging.Log logger -> logger
    void logError(java.lang.Object,java.lang.Throwable) -> logError
    void logError(java.lang.Object) -> logError
    void logWarn(java.lang.Object,java.lang.Throwable) -> logWarn
    void logWarn(java.lang.Object) -> logWarn
    void logInfo(java.lang.Object,java.lang.Throwable) -> logInfo
    void logInfo(java.lang.Object) -> logInfo
    void logDebug(java.lang.Object,java.lang.Throwable) -> logDebug
    void logDebug(java.lang.Object) -> logDebug
    void logTrace(java.lang.Object,java.lang.Throwable) -> logTrace
    void logTrace(java.lang.Object) -> logTrace
    boolean isErrorOn() -> isErrorOn
    boolean isWarnOn() -> isWarnOn
    boolean isInfoOn() -> isInfoOn
    boolean isDebugOn() -> isDebugOn
    boolean isTraceOn() -> isTraceOn
org.codegist.common.log.JdkLogger -> org.codegist.common.log.JdkLogger:
    java.util.logging.Logger logger -> logger
    void logError(java.lang.Object,java.lang.Throwable) -> logError
    void logError(java.lang.Object) -> logError
    void logWarn(java.lang.Object,java.lang.Throwable) -> logWarn
    void logWarn(java.lang.Object) -> logWarn
    void logInfo(java.lang.Object,java.lang.Throwable) -> logInfo
    void logInfo(java.lang.Object) -> logInfo
    void logDebug(java.lang.Object,java.lang.Throwable) -> logDebug
    void logDebug(java.lang.Object) -> logDebug
    void logTrace(java.lang.Object,java.lang.Throwable) -> logTrace
    void logTrace(java.lang.Object) -> logTrace
    boolean isErrorOn() -> isErrorOn
    boolean isWarnOn() -> isWarnOn
    boolean isInfoOn() -> isInfoOn
    boolean isDebugOn() -> isDebugOn
    boolean isTraceOn() -> isTraceOn
org.codegist.common.log.Log4jLogger -> org.codegist.common.log.Log4jLogger:
    org.apache.log4j.Logger logger -> logger
    void logError(java.lang.Object,java.lang.Throwable) -> logError
    void logError(java.lang.Object) -> logError
    void logWarn(java.lang.Object,java.lang.Throwable) -> logWarn
    void logWarn(java.lang.Object) -> logWarn
    void logInfo(java.lang.Object,java.lang.Throwable) -> logInfo
    void logInfo(java.lang.Object) -> logInfo
    void logDebug(java.lang.Object,java.lang.Throwable) -> logDebug
    void logDebug(java.lang.Object) -> logDebug
    void logTrace(java.lang.Object,java.lang.Throwable) -> logTrace
    void logTrace(java.lang.Object) -> logTrace
    boolean isErrorOn() -> isErrorOn
    boolean isWarnOn() -> isWarnOn
    boolean isInfoOn() -> isInfoOn
    boolean isDebugOn() -> isDebugOn
    boolean isTraceOn() -> isTraceOn
org.codegist.common.log.LogCatLogger -> org.codegist.common.log.LogCatLogger:
    java.lang.String LOGGER_TAG -> LOGGER_TAG
    java.lang.String TAG -> TAG
    java.lang.String name -> name
    java.lang.String msg(java.lang.Object) -> msg
    void logError(java.lang.Object,java.lang.Throwable) -> logError
    void logError(java.lang.Object) -> logError
    void logWarn(java.lang.Object,java.lang.Throwable) -> logWarn
    void logWarn(java.lang.Object) -> logWarn
    void logInfo(java.lang.Object,java.lang.Throwable) -> logInfo
    void logInfo(java.lang.Object) -> logInfo
    void logDebug(java.lang.Object,java.lang.Throwable) -> logDebug
    void logDebug(java.lang.Object) -> logDebug
    void logTrace(java.lang.Object,java.lang.Throwable) -> logTrace
    void logTrace(java.lang.Object) -> logTrace
    boolean isErrorOn() -> isErrorOn
    boolean isWarnOn() -> isWarnOn
    boolean isInfoOn() -> isInfoOn
    boolean isDebugOn() -> isDebugOn
    boolean isTraceOn() -> isTraceOn
org.codegist.common.log.Logger -> org.codegist.common.log.Logger:
    org.codegist.common.log.LoggerFactory FACTORY -> FACTORY
    org.codegist.common.log.Logger getLogger(java.lang.String) -> getLogger
    org.codegist.common.log.Logger getLogger(java.lang.Class) -> getLogger
    boolean isErrorOn() -> isErrorOn
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Object) -> error
    void error(java.lang.Throwable) -> error
    boolean isWarnOn() -> isWarnOn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Throwable) -> warn
    boolean isInfoOn() -> isInfoOn
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Object) -> info
    void info(java.lang.Throwable) -> info
    boolean isDebugOn() -> isDebugOn
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Throwable) -> debug
    boolean isTraceOn() -> isTraceOn
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Throwable) -> trace
org.codegist.common.log.LoggerFactory -> org.codegist.common.log.LoggerFactory:
    java.util.Map flyweight -> flyweight
    java.lang.Class loggerCls -> loggerCls
    org.codegist.common.log.Logger getLogger(java.lang.Class) -> getLogger
    org.codegist.common.log.Logger getLogger(java.lang.String) -> getLogger
org.codegist.common.log.LoggerProvider -> org.codegist.common.log.LoggerProvider:
    java.lang.String LOGGER_CLASS_PROP -> LOGGER_CLASS_PROP
    org.codegist.common.log.LoggerFactory DEFAULT_FACTORY -> DEFAULT_FACTORY
    java.util.Map LOGGER_FACTORIES -> LOGGER_FACTORIES
    org.codegist.common.log.LoggerFactory getAvailableLoggerFactory() -> getAvailableLoggerFactory
    org.codegist.common.log.LoggerFactory getAvailableLoggerFactory(java.lang.ClassLoader) -> getAvailableLoggerFactory
org.codegist.common.log.LoggerProvider$1 -> org.codegist.common.log.LoggerProvider$1:
org.codegist.common.log.LoggingOutputStream -> org.codegist.common.log.LoggingOutputStream:
    java.io.StringWriter sw -> sw
    java.io.OutputStream delegate -> delegate
    org.codegist.common.log.Logger logger -> logger
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void finalize() -> finalize
org.codegist.common.log.NoOpLogger -> org.codegist.common.log.NoOpLogger:
    boolean isErrorOn() -> isErrorOn
    void error(java.lang.Throwable) -> error
    void warn(java.lang.Throwable) -> warn
    void info(java.lang.Throwable) -> info
    void debug(java.lang.Throwable) -> debug
    void trace(java.lang.Throwable) -> trace
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Object) -> error
    boolean isWarnOn() -> isWarnOn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Object) -> warn
    boolean isInfoOn() -> isInfoOn
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Object) -> info
    boolean isDebugOn() -> isDebugOn
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Object) -> debug
    boolean isTraceOn() -> isTraceOn
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Object) -> trace
org.codegist.common.log.Slf4jLogger -> org.codegist.common.log.Slf4jLogger:
    org.slf4j.Logger logger -> logger
    void logError(java.lang.Object,java.lang.Throwable) -> logError
    void logError(java.lang.Object) -> logError
    void logWarn(java.lang.Object,java.lang.Throwable) -> logWarn
    void logWarn(java.lang.Object) -> logWarn
    void logInfo(java.lang.Object,java.lang.Throwable) -> logInfo
    void logInfo(java.lang.Object) -> logInfo
    void logDebug(java.lang.Object,java.lang.Throwable) -> logDebug
    void logDebug(java.lang.Object) -> logDebug
    void logTrace(java.lang.Object,java.lang.Throwable) -> logTrace
    void logTrace(java.lang.Object) -> logTrace
    boolean isErrorOn() -> isErrorOn
    boolean isWarnOn() -> isWarnOn
    boolean isInfoOn() -> isInfoOn
    boolean isDebugOn() -> isDebugOn
    boolean isTraceOn() -> isTraceOn
org.codegist.common.log.StdOutLogger -> org.codegist.common.log.StdOutLogger:
    java.lang.String FORMAT -> FORMAT
    java.lang.String name -> name
    java.io.PrintWriter out -> out
    void log(java.lang.String,java.lang.Object,java.lang.Throwable) -> log
    void logError(java.lang.Object,java.lang.Throwable) -> logError
    void logError(java.lang.Object) -> logError
    void logWarn(java.lang.Object,java.lang.Throwable) -> logWarn
    void logWarn(java.lang.Object) -> logWarn
    void logInfo(java.lang.Object,java.lang.Throwable) -> logInfo
    void logInfo(java.lang.Object) -> logInfo
    void logDebug(java.lang.Object,java.lang.Throwable) -> logDebug
    void logDebug(java.lang.Object) -> logDebug
    void logTrace(java.lang.Object,java.lang.Throwable) -> logTrace
    void logTrace(java.lang.Object) -> logTrace
    boolean isErrorOn() -> isErrorOn
    boolean isWarnOn() -> isWarnOn
    boolean isInfoOn() -> isInfoOn
    boolean isDebugOn() -> isDebugOn
    boolean isTraceOn() -> isTraceOn
org.codegist.common.net.Urls -> org.codegist.common.net.Urls:
    java.util.regex.Pattern EQUAL -> EQUAL
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.util.Map parseQueryString(java.net.URI) -> parseQueryString
    java.util.Map parseQueryString(java.lang.String) -> parseQueryString
    java.util.Map parseQueryString(java.net.URI,java.nio.charset.Charset) -> parseQueryString
    java.util.Map parseQueryString(java.lang.String,java.nio.charset.Charset) -> parseQueryString
    java.lang.String getQueryString(java.lang.String) -> getQueryString
    java.lang.String decode(java.lang.String,java.nio.charset.Charset) -> decode
    boolean hasQueryString(java.lang.String) -> hasQueryString
    java.lang.String normalizeSlashes(java.lang.String) -> normalizeSlashes
org.codegist.common.reflect.CglibProxyFactory -> org.codegist.common.reflect.CglibProxyFactory:
    java.lang.Object createProxy(java.lang.ClassLoader,org.codegist.common.reflect.InvocationHandler,java.lang.Class[],java.lang.Object) -> createProxy
    java.lang.Object createProxy(java.lang.ClassLoader,org.codegist.common.reflect.InvocationHandler,java.lang.Class[]) -> createProxy
org.codegist.common.reflect.CglibProxyFactory$1 -> org.codegist.common.reflect.CglibProxyFactory$1:
org.codegist.common.reflect.CglibProxyFactory$DelegatorHandler -> org.codegist.common.reflect.CglibProxyFactory$DelegatorHandler:
    java.lang.Object target -> target
    org.codegist.common.reflect.InvocationHandler delegate -> delegate
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.codegist.common.reflect.Classes -> org.codegist.common.reflect.Classes:
    boolean isClassKnown(java.lang.String,java.lang.ClassLoader) -> isClassKnown
org.codegist.common.reflect.InvocationHandler -> org.codegist.common.reflect.InvocationHandler:
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.codegist.common.reflect.JdkProxyFactory -> org.codegist.common.reflect.JdkProxyFactory:
    java.lang.Object createProxy(java.lang.ClassLoader,org.codegist.common.reflect.InvocationHandler,java.lang.Class[],java.lang.Object) -> createProxy
    java.lang.Object createProxy(java.lang.ClassLoader,org.codegist.common.reflect.InvocationHandler,java.lang.Class[]) -> createProxy
org.codegist.common.reflect.JdkProxyFactory$1 -> org.codegist.common.reflect.JdkProxyFactory$1:
org.codegist.common.reflect.JdkProxyFactory$DelegatorHandler -> org.codegist.common.reflect.JdkProxyFactory$DelegatorHandler:
    java.lang.Object target -> target
    org.codegist.common.reflect.InvocationHandler delegate -> delegate
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.codegist.common.reflect.Methods -> org.codegist.common.reflect.Methods:
    boolean isEquals(java.lang.reflect.Method) -> isEquals
    boolean isHashCode(java.lang.reflect.Method) -> isHashCode
    boolean isToString(java.lang.reflect.Method) -> isToString
org.codegist.common.reflect.ObjectMethodsAwareInvocationHandler -> org.codegist.common.reflect.ObjectMethodsAwareInvocationHandler:
    java.lang.Object doInvoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> doInvoke
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.codegist.common.reflect.ParameterizedTypeImpl -> org.codegist.common.reflect.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> actualTypeArguments
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.reflect.Type getRawType() -> getRawType
org.codegist.common.reflect.ProxyFactory -> org.codegist.common.reflect.ProxyFactory:
    java.lang.Object createProxy(java.lang.ClassLoader,org.codegist.common.reflect.InvocationHandler,java.lang.Class[]) -> createProxy
    java.lang.Object createProxy(java.lang.ClassLoader,org.codegist.common.reflect.InvocationHandler,java.lang.Class[],java.lang.Object) -> createProxy
org.codegist.common.reflect.Types -> org.codegist.common.reflect.Types:
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
    java.lang.Class getComponentClass(java.lang.Class,java.lang.reflect.Type) -> getComponentClass
    java.lang.reflect.Type getComponentType(java.lang.Class,java.lang.reflect.Type) -> getComponentType
    java.util.Set getActors(java.lang.reflect.Type) -> getActors
    void fillClasses(java.lang.reflect.Type,java.util.Set) -> fillClasses
    java.lang.reflect.ParameterizedType newType(java.lang.Class,java.lang.reflect.Type[]) -> newType
    java.lang.reflect.ParameterizedType newType(java.lang.Class,java.lang.reflect.Type[],java.lang.reflect.Type) -> newType
org.codegist.crest.CRest -> org.codegist.crest.CRest:
    java.lang.Object build(java.lang.Class) -> build
    org.codegist.crest.CRest getInstance() -> getInstance
    org.codegist.crest.CRest getInstance(java.lang.String) -> getInstance
    org.codegist.crest.CRest getInstance(java.util.Map) -> getInstance
    org.codegist.crest.CRest getOAuthInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getOAuthInstance
    org.codegist.crest.CRest getOAuthInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getOAuthInstance
    org.codegist.crest.CRest getBasicAuthInstance(java.lang.String,java.lang.String) -> getBasicAuthInstance
    org.codegist.crest.CRestBuilder endpoint(java.lang.String) -> endpoint
    org.codegist.crest.CRestBuilder property(java.lang.String,java.lang.Object) -> property
    org.codegist.crest.CRestBuilder placeholder(java.lang.String,java.lang.String) -> placeholder
    org.codegist.crest.CRestBuilder placeholders(java.util.Map) -> placeholders
    org.codegist.crest.CRestBuilder oauth(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> oauth
    org.codegist.crest.CRestBuilder oauth(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> oauth
    org.codegist.crest.CRestBuilder basicAuth(java.lang.String,java.lang.String) -> basicAuth
org.codegist.crest.CRestBuilder -> org.codegist.crest.CRestBuilder:
    java.util.Map crestProperties -> crestProperties
    org.codegist.crest.io.RequestBuilderFactory requestBuilderFactory -> requestBuilderFactory
    java.util.Map placeholders -> placeholders
    java.util.Map httpEntityParamExtrators -> httpEntityParamExtrators
    java.util.Set plainTextMimes -> plainTextMimes
    java.util.Set xmlMimes -> xmlMimes
    java.util.Set jsonMimes -> jsonMimes
    java.util.Map xmlDeserializerConfig -> xmlDeserializerConfig
    java.util.Map jsonDeserializerConfig -> jsonDeserializerConfig
    org.codegist.crest.util.ComponentRegistry$Builder annotationHandlerBuilder -> annotationHandlerBuilder
    org.codegist.crest.util.ComponentRegistry$Builder mimeDeserializerBuilder -> mimeDeserializerBuilder
    org.codegist.crest.util.ComponentRegistry$Builder classDeserializerBuilder -> classDeserializerBuilder
    org.codegist.crest.util.ComponentRegistry$Builder classSerializerBuilder -> classSerializerBuilder
    java.lang.Class proxyFactoryClass -> proxyFactoryClass
    java.lang.Class xmlDeserializer -> xmlDeserializer
    java.lang.Class jsonDeserializer -> jsonDeserializer
    java.lang.Class httpChannelFactoryClass -> httpChannelFactoryClass
    org.codegist.crest.io.http.HttpChannelFactory httpChannelFactory -> httpChannelFactory
    org.codegist.common.reflect.ProxyFactory proxyFactory -> proxyFactory
    java.lang.String auth -> auth
    java.lang.String username -> username
    java.lang.String password -> password
    org.codegist.crest.security.oauth.OAuthToken consumerOAuthToken -> consumerOAuthToken
    org.codegist.crest.security.oauth.OAuthToken accessOAuthToken -> accessOAuthToken
    java.lang.String accessTokenRefreshUrl -> accessTokenRefreshUrl
    org.codegist.crest.CRest build() -> build
    void putIfAbsentAndNotNull(java.util.Map,java.lang.Object,java.lang.Object) -> putIfAbsentAndNotNull
    java.lang.Object getInstance(java.lang.Object,java.lang.Class,org.codegist.crest.CRestConfig) -> getInstance
    org.codegist.crest.io.RequestExecutor buildRequestExecutor(org.codegist.crest.io.http.HttpChannelFactory,org.codegist.crest.security.Authorization,org.codegist.crest.serializer.ResponseDeserializer,org.codegist.crest.serializer.ResponseDeserializer) -> buildRequestExecutor
    org.codegist.crest.util.ComponentRegistry buildDeserializerRegistry(org.codegist.crest.CRestConfig) -> buildDeserializerRegistry
    org.codegist.crest.security.Authorization buildAuthorization(org.codegist.crest.io.http.HttpChannelFactory) -> buildAuthorization
    org.codegist.crest.security.Authorization buildBasicAuthorization() -> buildBasicAuthorization
    org.codegist.crest.security.Authorization buildOAuthorization(org.codegist.crest.io.http.HttpChannelFactory) -> buildOAuthorization
    org.codegist.crest.security.oauth.OAuthApi buildOAuthApi(org.codegist.crest.io.http.HttpChannelFactory) -> buildOAuthApi
    org.codegist.crest.CRestBuilder setProxyFactory(java.lang.Class) -> setProxyFactory
    org.codegist.crest.CRestBuilder setProxyFactory(org.codegist.common.reflect.ProxyFactory) -> setProxyFactory
    org.codegist.crest.CRestBuilder setHttpChannelFactory(java.lang.Class) -> setHttpChannelFactory
    org.codegist.crest.CRestBuilder setHttpChannelFactory(org.codegist.crest.io.http.HttpChannelFactory) -> setHttpChannelFactory
    org.codegist.crest.CRestBuilder setConcurrencyLevel(int) -> setConcurrencyLevel
    org.codegist.crest.CRestBuilder dateFormat(java.lang.String) -> dateFormat
    org.codegist.crest.CRestBuilder booleanFormat(java.lang.String,java.lang.String) -> booleanFormat
    org.codegist.crest.CRestBuilder addProperties(java.util.Map) -> addProperties
    org.codegist.crest.CRestBuilder property(java.lang.String,java.lang.Object) -> property
    org.codegist.crest.CRestBuilder setProperties(java.util.Map) -> setProperties
    org.codegist.crest.CRestBuilder endpoint(java.lang.String) -> endpoint
    org.codegist.crest.CRestBuilder addPlaceholders(java.util.Map) -> addPlaceholders
    org.codegist.crest.CRestBuilder placeholder(java.lang.String,java.lang.String) -> placeholder
    org.codegist.crest.CRestBuilder setPlaceholders(java.util.Map) -> setPlaceholders
    org.codegist.crest.CRestBuilder bindAnnotationHandler(java.lang.Class,java.lang.Class) -> bindAnnotationHandler
    org.codegist.crest.CRestBuilder bindAnnotationHandler(java.lang.Class,java.lang.Class,java.util.Map) -> bindAnnotationHandler
    org.codegist.crest.CRestBuilder bindDeserializer(java.lang.Class,java.lang.String[]) -> bindDeserializer
    org.codegist.crest.CRestBuilder bindDeserializer(java.lang.Class,java.lang.String[],java.util.Map) -> bindDeserializer
    org.codegist.crest.CRestBuilder bindDeserializer(java.lang.Class,java.lang.Class[]) -> bindDeserializer
    org.codegist.crest.CRestBuilder bindDeserializer(java.lang.Class,java.lang.Class[],java.util.Map) -> bindDeserializer
    org.codegist.crest.CRestBuilder bindSerializer(java.lang.Class,java.lang.Class[]) -> bindSerializer
    org.codegist.crest.CRestBuilder bindSerializer(java.lang.Class,java.lang.Class[],java.util.Map) -> bindSerializer
    org.codegist.crest.CRestBuilder oauth(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> oauth
    org.codegist.crest.CRestBuilder oauth(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> oauth
    org.codegist.crest.CRestBuilder basicAuth(java.lang.String,java.lang.String) -> basicAuth
    org.codegist.crest.CRestBuilder extractsEntityAuthParamsWith(java.lang.String,org.codegist.crest.io.http.EntityParamExtractor) -> extractsEntityAuthParamsWith
    org.codegist.crest.CRestBuilder bindJsonDeserializerWith(java.lang.String[]) -> bindJsonDeserializerWith
    org.codegist.crest.CRestBuilder bindXmlDeserializerWith(java.lang.String[]) -> bindXmlDeserializerWith
    org.codegist.crest.CRestBuilder bindPlainTextDeserializerWith(java.lang.String[]) -> bindPlainTextDeserializerWith
    org.codegist.crest.CRestBuilder deserializeXmlWith(java.lang.Class) -> deserializeXmlWith
    org.codegist.crest.CRestBuilder deserializeXmlWith(java.lang.Class,java.util.Map) -> deserializeXmlWith
    org.codegist.crest.CRestBuilder deserializeJsonWith(java.lang.Class) -> deserializeJsonWith
    org.codegist.crest.CRestBuilder deserializeJsonWith(java.lang.Class,java.util.Map) -> deserializeJsonWith
org.codegist.crest.CRestConfig -> org.codegist.crest.CRestConfig:
    java.lang.String CREST_CONCURRENCY_LEVEL -> CREST_CONCURRENCY_LEVEL
    java.lang.String CREST_DATE_FORMAT -> CREST_DATE_FORMAT
    java.lang.String CREST_BOOLEAN_TRUE -> CREST_BOOLEAN_TRUE
    java.lang.String CREST_BOOLEAN_FALSE -> CREST_BOOLEAN_FALSE
    java.lang.String CREST_MAX_ATTEMPTS -> CREST_MAX_ATTEMPTS
    org.codegist.crest.CRestConfig merge(java.util.Map) -> merge
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    int getMaxAttempts() -> getMaxAttempts
    java.lang.String getDateFormat() -> getDateFormat
    java.lang.String getBooleanTrue() -> getBooleanTrue
    java.lang.String getBooleanFalse() -> getBooleanFalse
    int getConcurrencyLevel() -> getConcurrencyLevel
org.codegist.crest.CRestException -> org.codegist.crest.CRestException:
    java.lang.RuntimeException handle(java.lang.Throwable) -> handle
    java.lang.RuntimeException handle(org.codegist.crest.CRestException) -> handle
    java.lang.RuntimeException handle(org.codegist.crest.io.RequestException) -> handle
    java.lang.RuntimeException handle(java.lang.IllegalArgumentException) -> handle
    java.lang.RuntimeException handle(java.lang.IllegalStateException) -> handle
    java.lang.RuntimeException handle(java.lang.reflect.InvocationTargetException) -> handle
org.codegist.crest.DefaultCRest -> org.codegist.crest.DefaultCRest:
    org.codegist.common.reflect.ProxyFactory proxyFactory -> proxyFactory
    org.codegist.crest.io.RequestExecutor requestExecutor -> requestExecutor
    org.codegist.crest.io.RequestBuilderFactory requestBuilderFactory -> requestBuilderFactory
    org.codegist.crest.config.InterfaceConfigFactory configFactory -> configFactory
    java.lang.Object build(java.lang.Class) -> build
    org.codegist.crest.io.RequestBuilderFactory access$000(org.codegist.crest.DefaultCRest) -> access$000
    org.codegist.crest.io.RequestExecutor access$100(org.codegist.crest.DefaultCRest) -> access$100
org.codegist.crest.DefaultCRest$CRestInvocationHandler -> org.codegist.crest.DefaultCRest$CRestInvocationHandler:
    org.codegist.crest.config.InterfaceConfig interfaceConfig -> interfaceConfig
    org.codegist.crest.DefaultCRest this$0 -> this$0
    java.lang.Object doInvoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> doInvoke
org.codegist.crest.DefaultCRestConfig -> org.codegist.crest.DefaultCRestConfig:
    java.util.Map config -> config
    org.codegist.crest.CRestConfig merge(java.util.Map) -> merge
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    int getMaxAttempts() -> getMaxAttempts
    java.lang.String getDateFormat() -> getDateFormat
    java.lang.String getBooleanTrue() -> getBooleanTrue
    java.lang.String getBooleanFalse() -> getBooleanFalse
    int getConcurrencyLevel() -> getConcurrencyLevel
org.codegist.crest.annotate.CRestComponent -> org.codegist.crest.annotate.CRestComponent:
org.codegist.crest.annotate.ConnectionTimeout -> org.codegist.crest.annotate.ConnectionTimeout:
    int value() -> value
org.codegist.crest.annotate.Consumes -> org.codegist.crest.annotate.Consumes:
    java.lang.String[] value() -> value
org.codegist.crest.annotate.CookieParam -> org.codegist.crest.annotate.CookieParam:
    java.lang.String value() -> value
    java.lang.String defaultValue() -> defaultValue
org.codegist.crest.annotate.CookieParams -> org.codegist.crest.annotate.CookieParams:
    org.codegist.crest.annotate.CookieParam[] value() -> value
org.codegist.crest.annotate.DELETE -> org.codegist.crest.annotate.DELETE:
org.codegist.crest.annotate.Deserializer -> org.codegist.crest.annotate.Deserializer:
    java.lang.Class value() -> value
org.codegist.crest.annotate.Encoded -> org.codegist.crest.annotate.Encoded:
org.codegist.crest.annotate.Encoding -> org.codegist.crest.annotate.Encoding:
    java.lang.String value() -> value
org.codegist.crest.annotate.EndPoint -> org.codegist.crest.annotate.EndPoint:
    java.lang.String value() -> value
org.codegist.crest.annotate.EntityWriter -> org.codegist.crest.annotate.EntityWriter:
    java.lang.Class value() -> value
org.codegist.crest.annotate.ErrorHandler -> org.codegist.crest.annotate.ErrorHandler:
    java.lang.Class value() -> value
org.codegist.crest.annotate.FormParam -> org.codegist.crest.annotate.FormParam:
    java.lang.String value() -> value
    java.lang.String defaultValue() -> defaultValue
org.codegist.crest.annotate.FormParams -> org.codegist.crest.annotate.FormParams:
    org.codegist.crest.annotate.FormParam[] value() -> value
org.codegist.crest.annotate.GET -> org.codegist.crest.annotate.GET:
org.codegist.crest.annotate.HEAD -> org.codegist.crest.annotate.HEAD:
org.codegist.crest.annotate.HeaderParam -> org.codegist.crest.annotate.HeaderParam:
    java.lang.String value() -> value
    java.lang.String defaultValue() -> defaultValue
org.codegist.crest.annotate.HeaderParams -> org.codegist.crest.annotate.HeaderParams:
    org.codegist.crest.annotate.HeaderParam[] value() -> value
org.codegist.crest.annotate.ListSeparator -> org.codegist.crest.annotate.ListSeparator:
    java.lang.String value() -> value
org.codegist.crest.annotate.MatrixParam -> org.codegist.crest.annotate.MatrixParam:
    java.lang.String value() -> value
    java.lang.String defaultValue() -> defaultValue
org.codegist.crest.annotate.MatrixParams -> org.codegist.crest.annotate.MatrixParams:
    org.codegist.crest.annotate.MatrixParam[] value() -> value
org.codegist.crest.annotate.MultiPartParam -> org.codegist.crest.annotate.MultiPartParam:
    java.lang.String value() -> value
    java.lang.String defaultValue() -> defaultValue
    java.lang.String contentType() -> contentType
    java.lang.String fileName() -> fileName
org.codegist.crest.annotate.MultiPartParams -> org.codegist.crest.annotate.MultiPartParams:
    org.codegist.crest.annotate.MultiPartParam[] value() -> value
org.codegist.crest.annotate.OPTIONS -> org.codegist.crest.annotate.OPTIONS:
org.codegist.crest.annotate.POST -> org.codegist.crest.annotate.POST:
org.codegist.crest.annotate.PUT -> org.codegist.crest.annotate.PUT:
org.codegist.crest.annotate.Path -> org.codegist.crest.annotate.Path:
    java.lang.String value() -> value
org.codegist.crest.annotate.PathParam -> org.codegist.crest.annotate.PathParam:
    java.lang.String value() -> value
    java.lang.String defaultValue() -> defaultValue
org.codegist.crest.annotate.PathParams -> org.codegist.crest.annotate.PathParams:
    org.codegist.crest.annotate.PathParam[] value() -> value
org.codegist.crest.annotate.Produces -> org.codegist.crest.annotate.Produces:
    java.lang.String value() -> value
org.codegist.crest.annotate.QueryParam -> org.codegist.crest.annotate.QueryParam:
    java.lang.String value() -> value
    java.lang.String defaultValue() -> defaultValue
org.codegist.crest.annotate.QueryParams -> org.codegist.crest.annotate.QueryParams:
    org.codegist.crest.annotate.QueryParam[] value() -> value
org.codegist.crest.annotate.RequestInterceptor -> org.codegist.crest.annotate.RequestInterceptor:
    java.lang.Class value() -> value
org.codegist.crest.annotate.ResponseHandler -> org.codegist.crest.annotate.ResponseHandler:
    java.lang.Class value() -> value
org.codegist.crest.annotate.RetryHandler -> org.codegist.crest.annotate.RetryHandler:
    java.lang.Class value() -> value
org.codegist.crest.annotate.Serializer -> org.codegist.crest.annotate.Serializer:
    java.lang.Class value() -> value
org.codegist.crest.annotate.SocketTimeout -> org.codegist.crest.annotate.SocketTimeout:
    int value() -> value
org.codegist.crest.config.AnnotationDrivenInterfaceConfigFactory -> org.codegist.crest.config.AnnotationDrivenInterfaceConfigFactory:
    org.codegist.crest.config.InterfaceConfigBuilderFactory icbf -> icbf
    org.codegist.crest.util.ComponentRegistry handlersRegistry -> handlersRegistry
    org.codegist.crest.config.InterfaceConfig newConfig(java.lang.Class) -> newConfig
org.codegist.crest.config.ConfigBuilder -> org.codegist.crest.config.ConfigBuilder:
    org.codegist.crest.CRestConfig crestConfig -> crestConfig
    org.codegist.crest.CRestConfig getCRestConfig() -> getCRestConfig
    java.lang.Object override(java.lang.String,java.lang.Object) -> override
    java.lang.Object instantiate(java.lang.Class) -> instantiate
org.codegist.crest.config.DefaultInterfaceConfig -> org.codegist.crest.config.DefaultInterfaceConfig:
    java.lang.Class interfaze -> interfaze
    java.util.Map cache -> cache
    java.lang.Class getInterface() -> getInterface
    org.codegist.crest.config.MethodConfig getMethodConfig(java.lang.reflect.Method) -> getMethodConfig
org.codegist.crest.config.DefaultInterfaceConfigBuilder -> org.codegist.crest.config.DefaultInterfaceConfigBuilder:
    java.lang.Class interfaze -> interfaze
    java.util.Map methodBuilders -> methodBuilders
    org.codegist.crest.config.InterfaceConfig build() -> build
    org.codegist.crest.config.MethodConfigBuilder startMethodConfig(java.lang.reflect.Method) -> startMethodConfig
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsCharset(java.nio.charset.Charset) -> setMethodsCharset
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsSocketTimeout(int) -> setMethodsSocketTimeout
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsConnectionTimeout(int) -> setMethodsConnectionTimeout
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsRequestInterceptor(java.lang.Class) -> setMethodsRequestInterceptor
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsResponseHandler(java.lang.Class) -> setMethodsResponseHandler
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsErrorHandler(java.lang.Class) -> setMethodsErrorHandler
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsRetryHandler(java.lang.Class) -> setMethodsRetryHandler
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsEntityWriter(java.lang.Class) -> setMethodsEntityWriter
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsConsumes(java.lang.String[]) -> setMethodsConsumes
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsDeserializer(java.lang.Class) -> setMethodsDeserializer
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsProduces(java.lang.String) -> setMethodsProduces
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsType(org.codegist.crest.config.MethodType) -> setMethodsType
    org.codegist.crest.config.InterfaceConfigBuilder appendMethodsPath(java.lang.String) -> appendMethodsPath
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsEndPoint(java.lang.String) -> setMethodsEndPoint
    org.codegist.crest.config.ParamConfigBuilder startMethodsExtraParamConfig() -> startMethodsExtraParamConfig
    org.codegist.crest.config.InterfaceConfigBuilder setParamsSerializer(java.lang.Class) -> setParamsSerializer
    org.codegist.crest.config.InterfaceConfigBuilder setParamsEncoded(boolean) -> setParamsEncoded
    org.codegist.crest.config.InterfaceConfigBuilder setParamsListSeparator(java.lang.String) -> setParamsListSeparator
    java.lang.String toString() -> toString
org.codegist.crest.config.DefaultInterfaceConfigBuilder$CompositeParamConfigBuilder -> org.codegist.crest.config.DefaultInterfaceConfigBuilder$CompositeParamConfigBuilder:
    org.codegist.crest.config.ParamConfigBuilder[] builders -> builders
    org.codegist.crest.config.ParamConfig build() -> build
    org.codegist.crest.config.ParamConfigBuilder setName(java.lang.String) -> setName
    org.codegist.crest.config.ParamConfigBuilder setDefaultValue(java.lang.String) -> setDefaultValue
    org.codegist.crest.config.ParamConfigBuilder setType(org.codegist.crest.config.ParamType) -> setType
    org.codegist.crest.config.ParamConfigBuilder setListSeparator(java.lang.String) -> setListSeparator
    org.codegist.crest.config.ParamConfigBuilder setEncoded(boolean) -> setEncoded
    org.codegist.crest.config.ParamConfigBuilder setMetaDatas(java.util.Map) -> setMetaDatas
    org.codegist.crest.config.ParamConfigBuilder setSerializer(java.lang.Class) -> setSerializer
    org.codegist.crest.config.ParamConfigBuilder forCookie() -> forCookie
    org.codegist.crest.config.ParamConfigBuilder forQuery() -> forQuery
    org.codegist.crest.config.ParamConfigBuilder forPath() -> forPath
    org.codegist.crest.config.ParamConfigBuilder forForm() -> forForm
    org.codegist.crest.config.ParamConfigBuilder forHeader() -> forHeader
    org.codegist.crest.config.ParamConfigBuilder forMatrix() -> forMatrix
    org.codegist.crest.config.ParamConfigBuilder forMultiPart() -> forMultiPart
org.codegist.crest.config.DefaultInterfaceConfigBuilderFactory -> org.codegist.crest.config.DefaultInterfaceConfigBuilderFactory:
    org.codegist.crest.util.ComponentRegistry mimeDeserializerRegistry -> mimeDeserializerRegistry
    org.codegist.crest.util.ComponentRegistry classSerializerRegistry -> classSerializerRegistry
    org.codegist.crest.CRestConfig crestConfig -> crestConfig
    org.codegist.crest.config.InterfaceConfigBuilder newInstance(java.lang.Class) -> newInstance
org.codegist.crest.config.DefaultMethodConfig -> org.codegist.crest.config.DefaultMethodConfig:
    java.nio.charset.Charset charset -> charset
    java.lang.reflect.Method method -> method
    org.codegist.crest.config.PathTemplate path -> path
    java.lang.String produces -> produces
    java.lang.String[] consumes -> consumes
    org.codegist.crest.config.MethodType type -> type
    int socketTimeout -> socketTimeout
    int connectionTimeout -> connectionTimeout
    org.codegist.crest.entity.EntityWriter entityWriter -> entityWriter
    org.codegist.crest.interceptor.RequestInterceptor requestInterceptor -> requestInterceptor
    org.codegist.crest.handler.ResponseHandler responseHandler -> responseHandler
    org.codegist.crest.handler.ErrorHandler errorHandler -> errorHandler
    org.codegist.crest.handler.RetryHandler retryHandler -> retryHandler
    org.codegist.crest.serializer.Deserializer[] deserializers -> deserializers
    org.codegist.crest.config.ParamConfig[] extraParams -> extraParams
    org.codegist.crest.config.ParamConfig[] methodParamConfigs -> methodParamConfigs
    java.nio.charset.Charset getCharset() -> getCharset
    org.codegist.crest.config.PathTemplate getPathTemplate() -> getPathTemplate
    org.codegist.crest.handler.ResponseHandler getResponseHandler() -> getResponseHandler
    java.lang.String getProduces() -> getProduces
    java.lang.String[] getConsumes() -> getConsumes
    java.lang.reflect.Method getMethod() -> getMethod
    org.codegist.crest.config.MethodType getType() -> getType
    int getSocketTimeout() -> getSocketTimeout
    int getConnectionTimeout() -> getConnectionTimeout
    org.codegist.crest.entity.EntityWriter getEntityWriter() -> getEntityWriter
    org.codegist.crest.interceptor.RequestInterceptor getRequestInterceptor() -> getRequestInterceptor
    org.codegist.crest.handler.ErrorHandler getErrorHandler() -> getErrorHandler
    org.codegist.crest.handler.RetryHandler getRetryHandler() -> getRetryHandler
    org.codegist.crest.serializer.Deserializer[] getDeserializers() -> getDeserializers
    org.codegist.crest.config.ParamConfig getParamConfig(int) -> getParamConfig
    int getParamCount() -> getParamCount
    org.codegist.crest.config.ParamConfig[] getExtraParams() -> getExtraParams
org.codegist.crest.config.DefaultMethodConfigBuilder -> org.codegist.crest.config.DefaultMethodConfigBuilder:
    java.lang.String ENDPOINT_MSG -> ENDPOINT_MSG
    org.codegist.crest.config.InterfaceConfigBuilder parent -> parent
    java.lang.reflect.Method method -> method
    java.util.List extraParamBuilders -> extraParamBuilders
    java.util.List methodParamConfigBuilders -> methodParamConfigBuilders
    org.codegist.crest.util.ComponentRegistry mimeDeserializerRegistry -> mimeDeserializerRegistry
    org.codegist.crest.util.ComponentRegistry classSerializerRegistry -> classSerializerRegistry
    org.codegist.crest.config.ParamConfig[] extraParams -> extraParams
    java.lang.String endPoint -> endPoint
    java.lang.String produces -> produces
    java.nio.charset.Charset charset -> charset
    org.codegist.crest.config.MethodType meth -> meth
    java.lang.Integer socketTimeout -> socketTimeout
    java.lang.Integer connectionTimeout -> connectionTimeout
    java.lang.Class requestInterceptor -> requestInterceptor
    java.lang.Class responseHandler -> responseHandler
    java.lang.Class errorHandler -> errorHandler
    java.lang.Class retryHandler -> retryHandler
    java.lang.Class entityWriter -> entityWriter
    java.util.List deserializers -> deserializers
    java.util.List pathSegments -> pathSegments
    java.util.List consumes -> consumes
    org.codegist.crest.config.MethodConfig build() -> build
    void validate() -> validate
    org.codegist.crest.serializer.Deserializer[] getDeserializers() -> getDeserializers
    org.codegist.crest.entity.EntityWriter getEntityWriter(org.codegist.crest.config.ParamConfig[]) -> getEntityWriter
    java.lang.String buildPath() -> buildPath
    org.codegist.crest.config.ParamConfig[] buildParams(java.util.List) -> buildParams
    org.codegist.crest.config.ParamConfigBuilder startParamConfig(int) -> startParamConfig
    org.codegist.crest.config.ParamConfigBuilder startExtraParamConfig() -> startExtraParamConfig
    org.codegist.crest.config.MethodConfigBuilder setConsumes(java.lang.String[]) -> setConsumes
    org.codegist.crest.config.MethodConfigBuilder setCharset(java.nio.charset.Charset) -> setCharset
    org.codegist.crest.config.MethodConfigBuilder setProduces(java.lang.String) -> setProduces
    org.codegist.crest.config.MethodConfigBuilder appendPath(java.lang.String) -> appendPath
    org.codegist.crest.config.MethodConfigBuilder setEndPoint(java.lang.String) -> setEndPoint
    org.codegist.crest.config.MethodConfigBuilder setType(org.codegist.crest.config.MethodType) -> setType
    org.codegist.crest.config.MethodConfigBuilder setSocketTimeout(int) -> setSocketTimeout
    org.codegist.crest.config.MethodConfigBuilder setConnectionTimeout(int) -> setConnectionTimeout
    org.codegist.crest.config.MethodConfigBuilder setDeserializer(java.lang.Class) -> setDeserializer
    org.codegist.crest.config.MethodConfigBuilder setRequestInterceptor(java.lang.Class) -> setRequestInterceptor
    org.codegist.crest.config.MethodConfigBuilder setResponseHandler(java.lang.Class) -> setResponseHandler
    org.codegist.crest.config.MethodConfigBuilder setErrorHandler(java.lang.Class) -> setErrorHandler
    org.codegist.crest.config.MethodConfigBuilder setRetryHandler(java.lang.Class) -> setRetryHandler
    org.codegist.crest.config.MethodConfigBuilder setEntityWriter(java.lang.Class) -> setEntityWriter
    org.codegist.crest.config.MethodConfigBuilder setParamsSerializer(java.lang.Class) -> setParamsSerializer
    org.codegist.crest.config.MethodConfigBuilder setParamsEncoded(boolean) -> setParamsEncoded
    org.codegist.crest.config.MethodConfigBuilder setParamsListSeparator(java.lang.String) -> setParamsListSeparator
    java.lang.String toString() -> toString
org.codegist.crest.config.DefaultParamConfig -> org.codegist.crest.config.DefaultParamConfig:
    java.lang.reflect.Type genericType -> genericType
    java.lang.Class clazz -> clazz
    java.lang.String name -> name
    java.lang.String defaultValue -> defaultValue
    org.codegist.crest.config.ParamType paramType -> paramType
    java.util.Map metadatas -> metadatas
    org.codegist.crest.serializer.Serializer serializer -> serializer
    boolean encoded -> encoded
    org.codegist.crest.param.ParamProcessor paramProcessor -> paramProcessor
    java.lang.reflect.Type getValueGenericType() -> getValueGenericType
    java.lang.Class getValueClass() -> getValueClass
    java.lang.String getName() -> getName
    java.lang.String getDefaultValue() -> getDefaultValue
    org.codegist.crest.config.ParamType getType() -> getType
    java.util.Map getMetaDatas() -> getMetaDatas
    org.codegist.crest.serializer.Serializer getSerializer() -> getSerializer
    boolean isEncoded() -> isEncoded
    org.codegist.crest.param.ParamProcessor getParamProcessor() -> getParamProcessor
org.codegist.crest.config.DefaultParamConfigBuilder -> org.codegist.crest.config.DefaultParamConfigBuilder:
    org.codegist.crest.config.MethodConfigBuilder parent -> parent
    java.lang.Class clazz -> clazz
    java.lang.reflect.Type genericType -> genericType
    org.codegist.crest.util.ComponentRegistry classSerializerRegistry -> classSerializerRegistry
    java.lang.Class paramProcessor -> paramProcessor
    java.util.Map metas -> metas
    java.lang.String name -> name
    java.lang.String defaultValue -> defaultValue
    org.codegist.crest.config.ParamType type -> type
    java.lang.String listSeparator -> listSeparator
    java.lang.Class serializer -> serializer
    java.lang.Boolean encoded -> encoded
    org.codegist.crest.config.ParamConfig build() -> build
    void validate() -> validate
    org.codegist.crest.config.ParamConfigBuilder setName(java.lang.String) -> setName
    org.codegist.crest.config.ParamConfigBuilder setDefaultValue(java.lang.String) -> setDefaultValue
    org.codegist.crest.config.ParamConfigBuilder setType(org.codegist.crest.config.ParamType) -> setType
    org.codegist.crest.config.ParamConfigBuilder setListSeparator(java.lang.String) -> setListSeparator
    org.codegist.crest.config.ParamConfigBuilder setEncoded(boolean) -> setEncoded
    org.codegist.crest.config.ParamConfigBuilder setMetaDatas(java.util.Map) -> setMetaDatas
    org.codegist.crest.config.ParamConfigBuilder setSerializer(java.lang.Class) -> setSerializer
    org.codegist.crest.config.ParamConfigBuilder forCookie() -> forCookie
    org.codegist.crest.config.ParamConfigBuilder forQuery() -> forQuery
    org.codegist.crest.config.ParamConfigBuilder forPath() -> forPath
    org.codegist.crest.config.ParamConfigBuilder forForm() -> forForm
    org.codegist.crest.config.ParamConfigBuilder forHeader() -> forHeader
    org.codegist.crest.config.ParamConfigBuilder forMatrix() -> forMatrix
    org.codegist.crest.config.ParamConfigBuilder forMultiPart() -> forMultiPart
    java.lang.String toString() -> toString
org.codegist.crest.config.DefaultParamConfigBuilderFactory -> org.codegist.crest.config.DefaultParamConfigBuilderFactory:
    org.codegist.crest.util.ComponentRegistry classSerializerRegistry -> classSerializerRegistry
    org.codegist.crest.CRestConfig crestConfig -> crestConfig
    org.codegist.crest.config.ParamConfigBuilder newInstance(java.lang.Class,java.lang.reflect.Type) -> newInstance
org.codegist.crest.config.InterfaceConfig -> org.codegist.crest.config.InterfaceConfig:
    java.lang.Class getInterface() -> getInterface
    org.codegist.crest.config.MethodConfig getMethodConfig(java.lang.reflect.Method) -> getMethodConfig
org.codegist.crest.config.InterfaceConfigBuilder -> org.codegist.crest.config.InterfaceConfigBuilder:
    org.codegist.crest.config.InterfaceConfig build() -> build
    org.codegist.crest.config.MethodConfigBuilder startMethodConfig(java.lang.reflect.Method) -> startMethodConfig
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsCharset(java.nio.charset.Charset) -> setMethodsCharset
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsSocketTimeout(int) -> setMethodsSocketTimeout
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsConnectionTimeout(int) -> setMethodsConnectionTimeout
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsRequestInterceptor(java.lang.Class) -> setMethodsRequestInterceptor
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsResponseHandler(java.lang.Class) -> setMethodsResponseHandler
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsErrorHandler(java.lang.Class) -> setMethodsErrorHandler
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsRetryHandler(java.lang.Class) -> setMethodsRetryHandler
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsEntityWriter(java.lang.Class) -> setMethodsEntityWriter
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsDeserializer(java.lang.Class) -> setMethodsDeserializer
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsConsumes(java.lang.String[]) -> setMethodsConsumes
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsProduces(java.lang.String) -> setMethodsProduces
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsType(org.codegist.crest.config.MethodType) -> setMethodsType
    org.codegist.crest.config.InterfaceConfigBuilder appendMethodsPath(java.lang.String) -> appendMethodsPath
    org.codegist.crest.config.InterfaceConfigBuilder setMethodsEndPoint(java.lang.String) -> setMethodsEndPoint
    org.codegist.crest.config.ParamConfigBuilder startMethodsExtraParamConfig() -> startMethodsExtraParamConfig
    org.codegist.crest.config.InterfaceConfigBuilder setParamsSerializer(java.lang.Class) -> setParamsSerializer
    org.codegist.crest.config.InterfaceConfigBuilder setParamsEncoded(boolean) -> setParamsEncoded
    org.codegist.crest.config.InterfaceConfigBuilder setParamsListSeparator(java.lang.String) -> setParamsListSeparator
org.codegist.crest.config.InterfaceConfigBuilderFactory -> org.codegist.crest.config.InterfaceConfigBuilderFactory:
    org.codegist.crest.config.InterfaceConfigBuilder newInstance(java.lang.Class) -> newInstance
org.codegist.crest.config.InterfaceConfigFactory -> org.codegist.crest.config.InterfaceConfigFactory:
    org.codegist.crest.config.InterfaceConfig newConfig(java.lang.Class) -> newConfig
org.codegist.crest.config.MethodConfig -> org.codegist.crest.config.MethodConfig:
    java.lang.String METHOD_CONFIG_DEFAULT_ENDPOINT -> METHOD_CONFIG_DEFAULT_ENDPOINT
    java.lang.String METHOD_CONFIG_DEFAULT_CHARSET -> METHOD_CONFIG_DEFAULT_CHARSET
    java.lang.String METHOD_CONFIG_DEFAULT_SO_TIMEOUT -> METHOD_CONFIG_DEFAULT_SO_TIMEOUT
    java.lang.String METHOD_CONFIG_DEFAULT_CO_TIMEOUT -> METHOD_CONFIG_DEFAULT_CO_TIMEOUT
    java.lang.String METHOD_CONFIG_DEFAULT_PATH -> METHOD_CONFIG_DEFAULT_PATH
    java.lang.String METHOD_CONFIG_DEFAULT_TYPE -> METHOD_CONFIG_DEFAULT_TYPE
    java.lang.String METHOD_CONFIG_DEFAULT_PRODUCES -> METHOD_CONFIG_DEFAULT_PRODUCES
    java.lang.String METHOD_CONFIG_DEFAULT_CONSUMES -> METHOD_CONFIG_DEFAULT_CONSUMES
    java.lang.String METHOD_CONFIG_DEFAULT_EXTRA_PARAMS -> METHOD_CONFIG_DEFAULT_EXTRA_PARAMS
    java.lang.String METHOD_CONFIG_DEFAULT_RESPONSE_HANDLER -> METHOD_CONFIG_DEFAULT_RESPONSE_HANDLER
    java.lang.String METHOD_CONFIG_DEFAULT_ERROR_HANDLER -> METHOD_CONFIG_DEFAULT_ERROR_HANDLER
    java.lang.String METHOD_CONFIG_DEFAULT_REQUEST_INTERCEPTOR -> METHOD_CONFIG_DEFAULT_REQUEST_INTERCEPTOR
    java.lang.String METHOD_CONFIG_DEFAULT_RETRY_HANDLER -> METHOD_CONFIG_DEFAULT_RETRY_HANDLER
    java.lang.String METHOD_CONFIG_DEFAULT_DESERIALIZERS -> METHOD_CONFIG_DEFAULT_DESERIALIZERS
    java.lang.String METHOD_CONFIG_DEFAULT_ENTITY_WRITER -> METHOD_CONFIG_DEFAULT_ENTITY_WRITER
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.reflect.Method getMethod() -> getMethod
    org.codegist.crest.handler.ResponseHandler getResponseHandler() -> getResponseHandler
    org.codegist.crest.handler.ErrorHandler getErrorHandler() -> getErrorHandler
    org.codegist.crest.interceptor.RequestInterceptor getRequestInterceptor() -> getRequestInterceptor
    java.lang.String getProduces() -> getProduces
    java.lang.String[] getConsumes() -> getConsumes
    int getSocketTimeout() -> getSocketTimeout
    int getConnectionTimeout() -> getConnectionTimeout
    org.codegist.crest.handler.RetryHandler getRetryHandler() -> getRetryHandler
    org.codegist.crest.serializer.Deserializer[] getDeserializers() -> getDeserializers
    org.codegist.crest.config.PathTemplate getPathTemplate() -> getPathTemplate
    org.codegist.crest.config.MethodType getType() -> getType
    org.codegist.crest.entity.EntityWriter getEntityWriter() -> getEntityWriter
    org.codegist.crest.config.ParamConfig[] getExtraParams() -> getExtraParams
    org.codegist.crest.config.ParamConfig getParamConfig(int) -> getParamConfig
    int getParamCount() -> getParamCount
org.codegist.crest.config.MethodConfigBuilder -> org.codegist.crest.config.MethodConfigBuilder:
    org.codegist.crest.config.MethodConfig build() -> build
    org.codegist.crest.config.MethodConfigBuilder setCharset(java.nio.charset.Charset) -> setCharset
    org.codegist.crest.config.MethodConfigBuilder setConsumes(java.lang.String[]) -> setConsumes
    org.codegist.crest.config.MethodConfigBuilder setDeserializer(java.lang.Class) -> setDeserializer
    org.codegist.crest.config.MethodConfigBuilder setProduces(java.lang.String) -> setProduces
    org.codegist.crest.config.ParamConfigBuilder startParamConfig(int) -> startParamConfig
    org.codegist.crest.config.ParamConfigBuilder startExtraParamConfig() -> startExtraParamConfig
    org.codegist.crest.config.MethodConfigBuilder appendPath(java.lang.String) -> appendPath
    org.codegist.crest.config.MethodConfigBuilder setEndPoint(java.lang.String) -> setEndPoint
    org.codegist.crest.config.MethodConfigBuilder setType(org.codegist.crest.config.MethodType) -> setType
    org.codegist.crest.config.MethodConfigBuilder setSocketTimeout(int) -> setSocketTimeout
    org.codegist.crest.config.MethodConfigBuilder setConnectionTimeout(int) -> setConnectionTimeout
    org.codegist.crest.config.MethodConfigBuilder setRequestInterceptor(java.lang.Class) -> setRequestInterceptor
    org.codegist.crest.config.MethodConfigBuilder setResponseHandler(java.lang.Class) -> setResponseHandler
    org.codegist.crest.config.MethodConfigBuilder setErrorHandler(java.lang.Class) -> setErrorHandler
    org.codegist.crest.config.MethodConfigBuilder setRetryHandler(java.lang.Class) -> setRetryHandler
    org.codegist.crest.config.MethodConfigBuilder setEntityWriter(java.lang.Class) -> setEntityWriter
    org.codegist.crest.config.MethodConfigBuilder setParamsSerializer(java.lang.Class) -> setParamsSerializer
    org.codegist.crest.config.MethodConfigBuilder setParamsEncoded(boolean) -> setParamsEncoded
    org.codegist.crest.config.MethodConfigBuilder setParamsListSeparator(java.lang.String) -> setParamsListSeparator
org.codegist.crest.config.MethodType -> org.codegist.crest.config.MethodType:
    org.codegist.crest.config.MethodType GET -> GET
    org.codegist.crest.config.MethodType POST -> POST
    org.codegist.crest.config.MethodType PUT -> PUT
    org.codegist.crest.config.MethodType DELETE -> DELETE
    org.codegist.crest.config.MethodType OPTIONS -> OPTIONS
    org.codegist.crest.config.MethodType HEAD -> HEAD
    boolean hasEntity -> hasEntity
    org.codegist.crest.config.MethodType[] $VALUES -> $VALUES
    org.codegist.crest.config.MethodType[] values() -> values
    org.codegist.crest.config.MethodType valueOf(java.lang.String) -> valueOf
    org.codegist.crest.config.MethodType getDefault() -> getDefault
    boolean hasEntity() -> hasEntity
org.codegist.crest.config.ParamConfig -> org.codegist.crest.config.ParamConfig:
    java.lang.String PARAM_CONFIG_DEFAULT_TYPE -> PARAM_CONFIG_DEFAULT_TYPE
    java.lang.String PARAM_CONFIG_DEFAULT_LIST_SEPARATOR -> PARAM_CONFIG_DEFAULT_LIST_SEPARATOR
    java.lang.String PARAM_CONFIG_DEFAULT_METAS -> PARAM_CONFIG_DEFAULT_METAS
    java.lang.String PARAM_CONFIG_DEFAULT_VALUE -> PARAM_CONFIG_DEFAULT_VALUE
    java.lang.String PARAM_CONFIG_DEFAULT_SERIALIZER -> PARAM_CONFIG_DEFAULT_SERIALIZER
    java.lang.String PARAM_CONFIG_DEFAULT_ENCODED -> PARAM_CONFIG_DEFAULT_ENCODED
    java.lang.String PARAM_CONFIG_DEFAULT_NAME -> PARAM_CONFIG_DEFAULT_NAME
    java.lang.String PARAM_CONFIG_DEFAULT_PROCESSOR -> PARAM_CONFIG_DEFAULT_PROCESSOR
    java.lang.String getName() -> getName
    java.lang.reflect.Type getValueGenericType() -> getValueGenericType
    java.lang.Class getValueClass() -> getValueClass
    java.lang.String getDefaultValue() -> getDefaultValue
    org.codegist.crest.config.ParamType getType() -> getType
    java.util.Map getMetaDatas() -> getMetaDatas
    org.codegist.crest.serializer.Serializer getSerializer() -> getSerializer
    boolean isEncoded() -> isEncoded
    org.codegist.crest.param.ParamProcessor getParamProcessor() -> getParamProcessor
org.codegist.crest.config.ParamConfigBuilder -> org.codegist.crest.config.ParamConfigBuilder:
    org.codegist.crest.config.ParamConfig build() -> build
    org.codegist.crest.config.ParamConfigBuilder setName(java.lang.String) -> setName
    org.codegist.crest.config.ParamConfigBuilder setDefaultValue(java.lang.String) -> setDefaultValue
    org.codegist.crest.config.ParamConfigBuilder setListSeparator(java.lang.String) -> setListSeparator
    org.codegist.crest.config.ParamConfigBuilder setEncoded(boolean) -> setEncoded
    org.codegist.crest.config.ParamConfigBuilder setMetaDatas(java.util.Map) -> setMetaDatas
    org.codegist.crest.config.ParamConfigBuilder setSerializer(java.lang.Class) -> setSerializer
    org.codegist.crest.config.ParamConfigBuilder setType(org.codegist.crest.config.ParamType) -> setType
    org.codegist.crest.config.ParamConfigBuilder forCookie() -> forCookie
    org.codegist.crest.config.ParamConfigBuilder forQuery() -> forQuery
    org.codegist.crest.config.ParamConfigBuilder forPath() -> forPath
    org.codegist.crest.config.ParamConfigBuilder forForm() -> forForm
    org.codegist.crest.config.ParamConfigBuilder forMultiPart() -> forMultiPart
    org.codegist.crest.config.ParamConfigBuilder forHeader() -> forHeader
    org.codegist.crest.config.ParamConfigBuilder forMatrix() -> forMatrix
org.codegist.crest.config.ParamConfigBuilderFactory -> org.codegist.crest.config.ParamConfigBuilderFactory:
    org.codegist.crest.config.ParamConfigBuilder newInstance(java.lang.Class,java.lang.reflect.Type) -> newInstance
org.codegist.crest.config.ParamType -> org.codegist.crest.config.ParamType:
    org.codegist.crest.config.ParamType QUERY -> QUERY
    org.codegist.crest.config.ParamType PATH -> PATH
    org.codegist.crest.config.ParamType FORM -> FORM
    org.codegist.crest.config.ParamType HEADER -> HEADER
    org.codegist.crest.config.ParamType COOKIE -> COOKIE
    org.codegist.crest.config.ParamType MATRIX -> MATRIX
    org.codegist.crest.config.ParamType[] $VALUES -> $VALUES
    org.codegist.crest.config.ParamType[] values() -> values
    org.codegist.crest.config.ParamType valueOf(java.lang.String) -> valueOf
    org.codegist.crest.config.ParamType getDefault() -> getDefault
org.codegist.crest.config.PathBuilder -> org.codegist.crest.config.PathBuilder:
    org.codegist.crest.config.PathBuilder merge(java.lang.String,java.lang.String,boolean) -> merge
    java.lang.String build() -> build
org.codegist.crest.config.PathTemplate -> org.codegist.crest.config.PathTemplate:
    org.codegist.crest.config.PathBuilder getBuilder(java.nio.charset.Charset) -> getBuilder
org.codegist.crest.config.RegexPathTemplate -> org.codegist.crest.config.RegexPathTemplate:
    java.util.regex.Pattern TEMPLATE_NAME_PATTERN -> TEMPLATE_NAME_PATTERN
    java.util.regex.Pattern DEFAULT_VALIDATION_PATTERN -> DEFAULT_VALIDATION_PATTERN
    java.lang.String urlTemplate -> urlTemplate
    java.util.Map templates -> templates
    org.codegist.crest.config.PathBuilder getBuilder(java.nio.charset.Charset) -> getBuilder
    org.codegist.crest.config.RegexPathTemplate create(java.lang.String) -> create
    java.util.Map access$100(org.codegist.crest.config.RegexPathTemplate) -> access$100
    java.lang.String access$200(org.codegist.crest.config.RegexPathTemplate) -> access$200
org.codegist.crest.config.RegexPathTemplate$1 -> org.codegist.crest.config.RegexPathTemplate$1:
org.codegist.crest.config.RegexPathTemplate$CurlyBraceTokenizer -> org.codegist.crest.config.RegexPathTemplate$CurlyBraceTokenizer:
    java.util.List tokens -> tokens
    int tokenIdx -> tokenIdx
    boolean insideBraces(java.lang.String) -> insideBraces
    java.lang.String stripBraces(java.lang.String) -> stripBraces
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
org.codegist.crest.config.RegexPathTemplate$DefaultPathBuilder -> org.codegist.crest.config.RegexPathTemplate$DefaultPathBuilder:
    java.util.Map remainingTemplates -> remainingTemplates
    java.lang.StringBuilder url -> url
    java.nio.charset.Charset charset -> charset
    org.codegist.crest.config.RegexPathTemplate this$0 -> this$0
    org.codegist.crest.config.PathBuilder merge(java.lang.String,java.lang.String,boolean) -> merge
    java.lang.String encode(java.lang.String,boolean) -> encode
    java.lang.String build() -> build
org.codegist.crest.config.RegexPathTemplate$PathTemplate -> org.codegist.crest.config.RegexPathTemplate$PathTemplate:
    java.lang.String name -> name
    java.util.regex.Pattern validator -> validator
    void validate(java.lang.String) -> validate
org.codegist.crest.config.annotate.AnnotationHandler -> org.codegist.crest.config.annotate.AnnotationHandler:
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.CRestAnnotations -> org.codegist.crest.config.annotate.CRestAnnotations:
    java.util.Map getMapping() -> getMapping
org.codegist.crest.config.annotate.ConnectionTimeoutAnnotationHandler -> org.codegist.crest.config.annotate.ConnectionTimeoutAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.ConnectionTimeout,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.ConnectionTimeout,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.ConsumesAnnotationHandler -> org.codegist.crest.config.annotate.ConsumesAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.Consumes,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.Consumes,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.CookieParamAnnotationHandler -> org.codegist.crest.config.annotate.CookieParamAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.CookieParam,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.CookieParam,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.CookieParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.CookieParamsAnnotationHandler -> org.codegist.crest.config.annotate.CookieParamsAnnotationHandler:
    org.codegist.crest.config.annotate.CookieParamAnnotationHandler handler -> handler
    void handleInterfaceAnnotation(org.codegist.crest.annotate.CookieParams,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.CookieParams,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.DELETEAnnotationHandler -> org.codegist.crest.config.annotate.DELETEAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.DELETE,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.DELETE,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.DeserializerAnnotationHandler -> org.codegist.crest.config.annotate.DeserializerAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.Deserializer,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.Deserializer,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.EncodedAnnotationHandler -> org.codegist.crest.config.annotate.EncodedAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.Encoded,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.Encoded,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.Encoded,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.EncodingAnnotationHandler -> org.codegist.crest.config.annotate.EncodingAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.Encoding,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.Encoding,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.EndPointAnnotationHandler -> org.codegist.crest.config.annotate.EndPointAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.EndPoint,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.EndPoint,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.EntityWriterAnnotationHandler -> org.codegist.crest.config.annotate.EntityWriterAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.EntityWriter,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.EntityWriter,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.ErrorHandlerAnnotationHandler -> org.codegist.crest.config.annotate.ErrorHandlerAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.ErrorHandler,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.ErrorHandler,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.FormParamAnnotationHandler -> org.codegist.crest.config.annotate.FormParamAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.FormParam,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.FormParam,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.FormParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.FormParamsAnnotationHandler -> org.codegist.crest.config.annotate.FormParamsAnnotationHandler:
    org.codegist.crest.config.annotate.FormParamAnnotationHandler handler -> handler
    void handleInterfaceAnnotation(org.codegist.crest.annotate.FormParams,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.FormParams,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.GETAnnotationHandler -> org.codegist.crest.config.annotate.GETAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.GET,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.GET,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.HEADAnnotationHandler -> org.codegist.crest.config.annotate.HEADAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.HEAD,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.HEAD,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.HeaderParamAnnotationHandler -> org.codegist.crest.config.annotate.HeaderParamAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.HeaderParam,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.HeaderParam,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.HeaderParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.HeaderParamsAnnotationHandler -> org.codegist.crest.config.annotate.HeaderParamsAnnotationHandler:
    org.codegist.crest.config.annotate.HeaderParamAnnotationHandler handler -> handler
    void handleInterfaceAnnotation(org.codegist.crest.annotate.HeaderParams,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.HeaderParams,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.ListSeparatorAnnotationHandler -> org.codegist.crest.config.annotate.ListSeparatorAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.ListSeparator,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.ListSeparator,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.ListSeparator,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.MatrixParamAnnotationHandler -> org.codegist.crest.config.annotate.MatrixParamAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.MatrixParam,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.MatrixParam,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.MatrixParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.MatrixParamsAnnotationHandler -> org.codegist.crest.config.annotate.MatrixParamsAnnotationHandler:
    org.codegist.crest.config.annotate.MatrixParamAnnotationHandler handler -> handler
    void handleInterfaceAnnotation(org.codegist.crest.annotate.MatrixParams,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.MatrixParams,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.MultiPartParamAnnotationHandler -> org.codegist.crest.config.annotate.MultiPartParamAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.MultiPartParam,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.MultiPartParam,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.MultiPartParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.MultiPartParamsAnnotationHandler -> org.codegist.crest.config.annotate.MultiPartParamsAnnotationHandler:
    org.codegist.crest.config.annotate.MultiPartParamAnnotationHandler handler -> handler
    void handleInterfaceAnnotation(org.codegist.crest.annotate.MultiPartParams,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.MultiPartParams,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.NoOpAnnotationHandler -> org.codegist.crest.config.annotate.NoOpAnnotationHandler:
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.OPTIONSAnnotationHandler -> org.codegist.crest.config.annotate.OPTIONSAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.OPTIONS,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.OPTIONS,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.POSTAnnotationHandler -> org.codegist.crest.config.annotate.POSTAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.POST,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.POST,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.PUTAnnotationHandler -> org.codegist.crest.config.annotate.PUTAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.PUT,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.PUT,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.ParamAnnotationHandler -> org.codegist.crest.config.annotate.ParamAnnotationHandler:
    java.lang.String nullIfUnset(java.lang.String) -> nullIfUnset
org.codegist.crest.config.annotate.PathAnnotationHandler -> org.codegist.crest.config.annotate.PathAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.Path,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.Path,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.PathParamAnnotationHandler -> org.codegist.crest.config.annotate.PathParamAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.PathParam,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.PathParam,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.PathParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.PathParamsAnnotationHandler -> org.codegist.crest.config.annotate.PathParamsAnnotationHandler:
    org.codegist.crest.config.annotate.PathParamAnnotationHandler handler -> handler
    void handleInterfaceAnnotation(org.codegist.crest.annotate.PathParams,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.PathParams,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.ProducesAnnotationHandler -> org.codegist.crest.config.annotate.ProducesAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.Produces,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.Produces,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.QueryParamAnnotationHandler -> org.codegist.crest.config.annotate.QueryParamAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.QueryParam,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.QueryParam,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.QueryParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.QueryParamsAnnotationHandler -> org.codegist.crest.config.annotate.QueryParamsAnnotationHandler:
    org.codegist.crest.config.annotate.QueryParamAnnotationHandler handler -> handler
    void handleInterfaceAnnotation(org.codegist.crest.annotate.QueryParams,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.QueryParams,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.RequestInterceptorAnnotationHandler -> org.codegist.crest.config.annotate.RequestInterceptorAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.RequestInterceptor,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.RequestInterceptor,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.ResponseHandlerAnnotationHandler -> org.codegist.crest.config.annotate.ResponseHandlerAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.ResponseHandler,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.ResponseHandler,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.RetryHandlerAnnotationHandler -> org.codegist.crest.config.annotate.RetryHandlerAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.RetryHandler,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.RetryHandler,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.SerializerAnnotationHandler -> org.codegist.crest.config.annotate.SerializerAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.Serializer,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.Serializer,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(org.codegist.crest.annotate.Serializer,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.SocketTimeoutAnnotationHandler -> org.codegist.crest.config.annotate.SocketTimeoutAnnotationHandler:
    void handleInterfaceAnnotation(org.codegist.crest.annotate.SocketTimeout,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(org.codegist.crest.annotate.SocketTimeout,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.StringBasedAnnotationHandler -> org.codegist.crest.config.annotate.StringBasedAnnotationHandler:
    java.util.Map placeholders -> placeholders
    java.lang.String[] ph(java.lang.String[]) -> ph
    java.lang.String ph(java.lang.String) -> ph
org.codegist.crest.config.annotate.jaxrs.ConsumesAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.ConsumesAnnotationHandler:
    void handleInterfaceAnnotation(javax.ws.rs.Consumes,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(javax.ws.rs.Consumes,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.jaxrs.CookieParamAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.CookieParamAnnotationHandler:
    void handleParameterAnnotation(javax.ws.rs.CookieParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.jaxrs.DELETEAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.DELETEAnnotationHandler:
    void handleMethodAnnotation(javax.ws.rs.DELETE,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
org.codegist.crest.config.annotate.jaxrs.DefaultValueAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.DefaultValueAnnotationHandler:
    void handleParameterAnnotation(javax.ws.rs.DefaultValue,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.jaxrs.EncodedAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.EncodedAnnotationHandler:
    void handleInterfaceAnnotation(javax.ws.rs.Encoded,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(javax.ws.rs.Encoded,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleParameterAnnotation(javax.ws.rs.Encoded,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.jaxrs.FormParamAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.FormParamAnnotationHandler:
    void handleParameterAnnotation(javax.ws.rs.FormParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.jaxrs.GETAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.GETAnnotationHandler:
    void handleMethodAnnotation(javax.ws.rs.GET,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
org.codegist.crest.config.annotate.jaxrs.HEADAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.HEADAnnotationHandler:
    void handleMethodAnnotation(javax.ws.rs.HEAD,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
org.codegist.crest.config.annotate.jaxrs.HeaderParamAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.HeaderParamAnnotationHandler:
    void handleParameterAnnotation(javax.ws.rs.HeaderParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.jaxrs.JaxRsAnnotations -> org.codegist.crest.config.annotate.jaxrs.JaxRsAnnotations:
    boolean isJaxRsAware() -> isJaxRsAware
    java.util.Map getMapping() -> getMapping
org.codegist.crest.config.annotate.jaxrs.MatrixParamAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.MatrixParamAnnotationHandler:
    void handleParameterAnnotation(javax.ws.rs.MatrixParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.jaxrs.OPTIONSAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.OPTIONSAnnotationHandler:
    void handleMethodAnnotation(javax.ws.rs.OPTIONS,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
org.codegist.crest.config.annotate.jaxrs.POSTAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.POSTAnnotationHandler:
    void handleMethodAnnotation(javax.ws.rs.POST,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
org.codegist.crest.config.annotate.jaxrs.PUTAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.PUTAnnotationHandler:
    void handleMethodAnnotation(javax.ws.rs.PUT,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
org.codegist.crest.config.annotate.jaxrs.PathAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.PathAnnotationHandler:
    void handleInterfaceAnnotation(javax.ws.rs.Path,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(javax.ws.rs.Path,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.jaxrs.PathParamAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.PathParamAnnotationHandler:
    void handleParameterAnnotation(javax.ws.rs.PathParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.config.annotate.jaxrs.ProducesAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.ProducesAnnotationHandler:
    void handleInterfaceAnnotation(javax.ws.rs.Produces,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
    void handleMethodAnnotation(javax.ws.rs.Produces,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleMethodAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.MethodConfigBuilder) -> handleMethodAnnotation
    void handleInterfaceAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.InterfaceConfigBuilder) -> handleInterfaceAnnotation
org.codegist.crest.config.annotate.jaxrs.QueryParamAnnotationHandler -> org.codegist.crest.config.annotate.jaxrs.QueryParamAnnotationHandler:
    void handleParameterAnnotation(javax.ws.rs.QueryParam,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
    void handleParameterAnnotation(java.lang.annotation.Annotation,org.codegist.crest.config.ParamConfigBuilder) -> handleParameterAnnotation
org.codegist.crest.entity.EntityWriter -> org.codegist.crest.entity.EntityWriter:
    void writeTo(org.codegist.crest.io.Request,java.io.OutputStream) -> writeTo
    java.lang.String getContentType(org.codegist.crest.io.Request) -> getContentType
    int getContentLength(org.codegist.crest.io.Request) -> getContentLength
org.codegist.crest.entity.UrlEncodedFormEntityWriter -> org.codegist.crest.entity.UrlEncodedFormEntityWriter:
    java.lang.String getContentType(org.codegist.crest.io.Request) -> getContentType
    int getContentLength(org.codegist.crest.io.Request) -> getContentLength
    void writeTo(org.codegist.crest.io.Request,java.io.OutputStream) -> writeTo
org.codegist.crest.entity.multipart.MultiPart -> org.codegist.crest.entity.multipart.MultiPart:
    org.codegist.crest.config.ParamConfig config -> config
    java.lang.Object value -> value
    java.lang.String boundary -> boundary
    org.codegist.crest.config.ParamConfig getParamConfig() -> getParamConfig
    java.lang.Object getValue() -> getValue
    java.lang.String getBoundary() -> getBoundary
org.codegist.crest.entity.multipart.MultiPartBinarySerializer -> org.codegist.crest.entity.multipart.MultiPartBinarySerializer:
    org.codegist.crest.entity.multipart.MultiPartBinarySerializer INSTANCE -> INSTANCE
    java.util.Map BINARY_SERIALIZERS -> BINARY_SERIALIZERS
    void serialize(org.codegist.crest.entity.multipart.MultiPart,java.nio.charset.Charset,java.io.OutputStream) -> serialize
    org.codegist.crest.serializer.Serializer getSerializer(java.lang.Class) -> getSerializer
    void serialize(org.codegist.crest.entity.multipart.MultiPart,java.nio.charset.Charset,java.io.OutputStream,org.codegist.crest.serializer.Serializer) -> serialize
    boolean isBinary(java.lang.Class) -> isBinary
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.entity.multipart.MultiPartEntityWriter -> org.codegist.crest.entity.multipart.MultiPartEntityWriter:
    java.lang.String MULTIPART -> MULTIPART
    java.lang.String BOUNDARY -> BOUNDARY
    java.lang.String FULL_BOUNDARY -> FULL_BOUNDARY
    java.lang.String LRLN -> LRLN
    org.codegist.crest.serializer.Serializer binarySerializer -> binarySerializer
    org.codegist.crest.serializer.Serializer textSerializer -> textSerializer
    java.lang.String getContentType(org.codegist.crest.io.Request) -> getContentType
    int getContentLength(org.codegist.crest.io.Request) -> getContentLength
    void writeTo(org.codegist.crest.io.Request,java.io.OutputStream) -> writeTo
org.codegist.crest.entity.multipart.MultiPartFileSerializer -> org.codegist.crest.entity.multipart.MultiPartFileSerializer:
    org.codegist.crest.entity.multipart.MultiPartFileSerializer INSTANCE -> INSTANCE
    java.lang.String getFileName(org.codegist.crest.entity.multipart.MultiPart) -> getFileName
org.codegist.crest.entity.multipart.MultiPartInputStreamSerializer -> org.codegist.crest.entity.multipart.MultiPartInputStreamSerializer:
    org.codegist.crest.entity.multipart.MultiPartInputStreamSerializer INSTANCE -> INSTANCE
    java.lang.String getFileName(org.codegist.crest.entity.multipart.MultiPart) -> getFileName
org.codegist.crest.entity.multipart.MultiPartOctetStreamSerializer -> org.codegist.crest.entity.multipart.MultiPartOctetStreamSerializer:
    java.lang.String LRLN -> LRLN
    java.lang.String getFileName(org.codegist.crest.entity.multipart.MultiPart) -> getFileName
    java.lang.String getContentType(org.codegist.crest.entity.multipart.MultiPart) -> getContentType
    void serialize(org.codegist.crest.entity.multipart.MultiPart,java.nio.charset.Charset,java.io.OutputStream) -> serialize
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.entity.multipart.MultiPartTextSerializer -> org.codegist.crest.entity.multipart.MultiPartTextSerializer:
    java.lang.String LRLN -> LRLN
    org.codegist.crest.entity.multipart.MultiPartTextSerializer INSTANCE -> INSTANCE
    void serialize(org.codegist.crest.entity.multipart.MultiPart,java.nio.charset.Charset,java.io.OutputStream) -> serialize
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.handler.DefaultResponseHandler -> org.codegist.crest.handler.DefaultResponseHandler:
    java.lang.Object handle(org.codegist.crest.io.Response) -> handle
org.codegist.crest.handler.ErrorDelegatorHandler -> org.codegist.crest.handler.ErrorDelegatorHandler:
    java.lang.Object handle(org.codegist.crest.io.Request,java.lang.Exception) -> handle
org.codegist.crest.handler.ErrorHandler -> org.codegist.crest.handler.ErrorHandler:
    java.lang.Object handle(org.codegist.crest.io.Request,java.lang.Exception) -> handle
org.codegist.crest.handler.MaxAttemptRetryHandler -> org.codegist.crest.handler.MaxAttemptRetryHandler:
    int max -> max
    org.codegist.common.log.Logger LOG -> LOG
    boolean retry(org.codegist.crest.io.RequestException,int) -> retry
org.codegist.crest.handler.ResponseHandler -> org.codegist.crest.handler.ResponseHandler:
    java.lang.Object handle(org.codegist.crest.io.Response) -> handle
org.codegist.crest.handler.RetryHandler -> org.codegist.crest.handler.RetryHandler:
    boolean retry(org.codegist.crest.io.RequestException,int) -> retry
org.codegist.crest.interceptor.AbstractRequestInterceptor -> org.codegist.crest.interceptor.AbstractRequestInterceptor:
    org.codegist.crest.config.ParamConfigBuilderFactory paramConfigBuilderFactory -> paramConfigBuilderFactory
    org.codegist.crest.config.ParamConfigBuilder newParamConfig(java.lang.Class) -> newParamConfig
    org.codegist.crest.config.ParamConfigBuilder newParamConfig(java.lang.Class,java.lang.reflect.Type) -> newParamConfig
org.codegist.crest.interceptor.NoOpRequestInterceptor -> org.codegist.crest.interceptor.NoOpRequestInterceptor:
    void beforeFire(org.codegist.crest.io.RequestBuilder,org.codegist.crest.config.MethodConfig,java.lang.Object[]) -> beforeFire
org.codegist.crest.interceptor.RequestInterceptor -> org.codegist.crest.interceptor.RequestInterceptor:
    void beforeFire(org.codegist.crest.io.RequestBuilder,org.codegist.crest.config.MethodConfig,java.lang.Object[]) -> beforeFire
org.codegist.crest.io.Request -> org.codegist.crest.io.Request:
    java.util.List getParams(org.codegist.crest.config.ParamType) -> getParams
    java.util.Iterator getEncodedParamsIterator(org.codegist.crest.config.ParamType) -> getEncodedParamsIterator
    org.codegist.crest.config.MethodConfig getMethodConfig() -> getMethodConfig
org.codegist.crest.io.RequestBuilder -> org.codegist.crest.io.RequestBuilder:
    org.codegist.crest.io.Request build(org.codegist.crest.config.MethodConfig) -> build
    org.codegist.crest.io.RequestBuilder addParams(org.codegist.crest.config.ParamConfig[]) -> addParams
    org.codegist.crest.io.RequestBuilder addParam(org.codegist.crest.config.ParamConfig) -> addParam
    org.codegist.crest.io.RequestBuilder addParam(org.codegist.crest.config.ParamConfig,java.lang.Object) -> addParam
    org.codegist.crest.io.RequestBuilder addParam(org.codegist.crest.config.ParamConfig,java.util.Collection) -> addParam
org.codegist.crest.io.RequestBuilderFactory -> org.codegist.crest.io.RequestBuilderFactory:
    org.codegist.crest.io.RequestBuilder create() -> create
org.codegist.crest.io.RequestException -> org.codegist.crest.io.RequestException:
    org.codegist.crest.io.Response response -> response
    boolean hasResponse() -> hasResponse
    org.codegist.crest.io.Response getResponse() -> getResponse
    void dispose() -> dispose
    void finalize() -> finalize
org.codegist.crest.io.RequestExecutor -> org.codegist.crest.io.RequestExecutor:
    org.codegist.crest.io.Response execute(org.codegist.crest.io.Request) -> execute
org.codegist.crest.io.Response -> org.codegist.crest.io.Response:
    org.codegist.crest.io.Request getRequest() -> getRequest
    int getStatusCode() -> getStatusCode
    java.lang.String getContentType() -> getContentType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.reflect.Type getExpectedGenericType() -> getExpectedGenericType
    java.lang.Class getExpectedType() -> getExpectedType
    java.lang.Object deserialize() -> deserialize
    java.lang.Object to(java.lang.Class) -> to
    java.lang.Object to(java.lang.Class,java.lang.reflect.Type) -> to
    java.io.InputStream asStream() -> asStream
org.codegist.crest.io.RetryingRequestExecutor -> org.codegist.crest.io.RetryingRequestExecutor:
    org.codegist.crest.io.RequestExecutor delegate -> delegate
    org.codegist.crest.io.Response execute(org.codegist.crest.io.Request) -> execute
org.codegist.crest.io.http.AuthorizationHttpChannel -> org.codegist.crest.io.http.AuthorizationHttpChannel:
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    org.codegist.crest.security.Authorization authorization -> authorization
    java.util.Map entityParamExtrators -> entityParamExtrators
    org.codegist.crest.io.http.HttpChannel delegate -> delegate
    java.util.List parameters -> parameters
    java.lang.String url -> url
    java.nio.charset.Charset charset -> charset
    org.codegist.crest.config.MethodType methodType -> methodType
    java.lang.String contentType -> contentType
    java.lang.String fullContentType -> fullContentType
    org.codegist.crest.io.http.HttpEntityWriter httpEntityWriter -> httpEntityWriter
    org.codegist.crest.io.http.HttpChannel$Response send() -> send
    void authenticate() -> authenticate
    void setContentType(java.lang.String) -> setContentType
    void writeEntityWith(org.codegist.crest.io.http.HttpEntityWriter) -> writeEntityWith
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setAccept(java.lang.String) -> setAccept
    void setSocketTimeout(int) -> setSocketTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    boolean hasEntityParamExtrator() -> hasEntityParamExtrator
org.codegist.crest.io.http.AuthorizationHttpChannel$1 -> org.codegist.crest.io.http.AuthorizationHttpChannel$1:
org.codegist.crest.io.http.AuthorizationHttpChannel$RewritableHttpEntityWriter -> org.codegist.crest.io.http.AuthorizationHttpChannel$RewritableHttpEntityWriter:
    org.codegist.crest.io.http.HttpEntityWriter delegate -> delegate
    java.lang.Integer contentLength -> contentLength
    byte[] entityContent -> entityContent
    void writeEntityTo(java.io.OutputStream) -> writeEntityTo
    int getContentLength() -> getContentLength
org.codegist.crest.io.http.AuthorizationHttpChannelFactory -> org.codegist.crest.io.http.AuthorizationHttpChannelFactory:
    org.codegist.crest.io.http.HttpChannelFactory delegate -> delegate
    org.codegist.crest.security.Authorization authorization -> authorization
    java.util.Map entityParamExtrators -> entityParamExtrators
    org.codegist.crest.io.http.HttpChannel open(org.codegist.crest.config.MethodType,java.lang.String,java.nio.charset.Charset) -> open
org.codegist.crest.io.http.DelegatingResponse -> org.codegist.crest.io.http.DelegatingResponse:
    org.codegist.crest.io.Response delegate -> delegate
    org.codegist.crest.io.Request getRequest() -> getRequest
    int getStatusCode() -> getStatusCode
    java.lang.String getContentType() -> getContentType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.reflect.Type getExpectedGenericType() -> getExpectedGenericType
    java.lang.Class getExpectedType() -> getExpectedType
    java.lang.Object deserialize() -> deserialize
    java.lang.Object to(java.lang.Class) -> to
    java.lang.Object to(java.lang.Class,java.lang.reflect.Type) -> to
    java.io.InputStream asStream() -> asStream
    void dispose() -> dispose
org.codegist.crest.io.http.EntityParamExtractor -> org.codegist.crest.io.http.EntityParamExtractor:
    java.util.List extract(java.lang.String,java.nio.charset.Charset,java.io.InputStream) -> extract
org.codegist.crest.io.http.HttpChannel -> org.codegist.crest.io.http.HttpChannel:
    void setSocketTimeout(int) -> setSocketTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setContentType(java.lang.String) -> setContentType
    void setAccept(java.lang.String) -> setAccept
    void writeEntityWith(org.codegist.crest.io.http.HttpEntityWriter) -> writeEntityWith
    org.codegist.crest.io.http.HttpChannel$Response send() -> send
org.codegist.crest.io.http.HttpChannel$Response -> org.codegist.crest.io.http.HttpChannel$Response:
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    java.io.InputStream getEntity() -> getEntity
    java.lang.String getContentType() -> getContentType
    java.lang.String getContentEncoding() -> getContentEncoding
org.codegist.crest.io.http.HttpChannelFactory -> org.codegist.crest.io.http.HttpChannelFactory:
    org.codegist.crest.io.http.HttpChannel open(org.codegist.crest.config.MethodType,java.lang.String,java.nio.charset.Charset) -> open
org.codegist.crest.io.http.HttpChannelResponseHttpResource -> org.codegist.crest.io.http.HttpChannelResponseHttpResource:
    org.codegist.common.log.Logger RESPONSE_LOGGER -> RESPONSE_LOGGER
    org.codegist.crest.io.http.HttpChannel$Response response -> response
    java.io.InputStream inputStream -> inputStream
    java.lang.String contentEncoding -> contentEncoding
    java.nio.charset.Charset charset -> charset
    java.lang.String contentType -> contentType
    java.lang.String getContentType() -> getContentType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getContentEncoding() -> getContentEncoding
    java.io.InputStream getEntity() -> getEntity
    java.lang.String getStatusMessage() -> getStatusMessage
    int getStatusCode() -> getStatusCode
    void close() -> close
    java.io.InputStream getEntity(org.codegist.crest.io.http.HttpChannel$Response,java.nio.charset.Charset) -> getEntity
org.codegist.crest.io.http.HttpChannelResponseHttpResource$1 -> org.codegist.crest.io.http.HttpChannelResponseHttpResource$1:
org.codegist.crest.io.http.HttpChannelResponseHttpResource$ContentType -> org.codegist.crest.io.http.HttpChannelResponseHttpResource$ContentType:
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    java.util.regex.Pattern EQUAL -> EQUAL
    java.lang.String DEFAULT_MIME_TYPE -> DEFAULT_MIME_TYPE
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String mimeType -> mimeType
    java.nio.charset.Charset charset -> charset
    java.lang.String access$100(org.codegist.crest.io.http.HttpChannelResponseHttpResource$ContentType) -> access$100
    java.nio.charset.Charset access$200(org.codegist.crest.io.http.HttpChannelResponseHttpResource$ContentType) -> access$200
org.codegist.crest.io.http.HttpClientFactory -> org.codegist.crest.io.http.HttpClientFactory:
    java.lang.String HTTP_CLIENT -> HTTP_CLIENT
    int HTTP_PORT -> HTTP_PORT
    int HTTPS_PORT -> HTTPS_PORT
    org.apache.http.client.HttpClient create(org.codegist.crest.CRestConfig,java.lang.Class) -> create
org.codegist.crest.io.http.HttpClientHttpChannel -> org.codegist.crest.io.http.HttpClientHttpChannel:
    org.codegist.common.log.Logger LOGGER -> LOGGER
    org.apache.http.client.HttpClient client -> client
    org.apache.http.client.methods.HttpUriRequest request -> request
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setSocketTimeout(int) -> setSocketTimeout
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setContentType(java.lang.String) -> setContentType
    void setAccept(java.lang.String) -> setAccept
    void writeEntityWith(org.codegist.crest.io.http.HttpEntityWriter) -> writeEntityWith
    org.codegist.crest.io.http.HttpChannel$Response send() -> send
    org.codegist.common.log.Logger access$200() -> access$200
org.codegist.crest.io.http.HttpClientHttpChannel$1 -> org.codegist.crest.io.http.HttpClientHttpChannel$1:
org.codegist.crest.io.http.HttpClientHttpChannel$HttpClientResponse -> org.codegist.crest.io.http.HttpClientHttpChannel$HttpClientResponse:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.HttpResponse response -> response
    java.io.InputStream getEntity() -> getEntity
    java.lang.String getContentType() -> getContentType
    java.lang.String getContentEncoding() -> getContentEncoding
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    void close() -> close
org.codegist.crest.io.http.HttpClientHttpChannel$HttpEntityWriterHttpEntity -> org.codegist.crest.io.http.HttpClientHttpChannel$HttpEntityWriterHttpEntity:
    org.codegist.crest.io.http.HttpEntityWriter writer -> writer
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.codegist.crest.io.http.HttpClientHttpChannelFactory -> org.codegist.crest.io.http.HttpClientHttpChannelFactory:
    java.lang.String HTTP_CLIENT_PROP -> HTTP_CLIENT_PROP
    org.apache.http.client.HttpClient client -> client
    org.codegist.crest.io.http.HttpChannel open(org.codegist.crest.config.MethodType,java.lang.String,java.nio.charset.Charset) -> open
    void dispose() -> dispose
    void finalize() -> finalize
org.codegist.crest.io.http.HttpClientHttpChannelFactory$1 -> org.codegist.crest.io.http.HttpClientHttpChannelFactory$1:
    int[] $SwitchMap$org$codegist$crest$config$MethodType -> $SwitchMap$org$codegist$crest$config$MethodType
org.codegist.crest.io.http.HttpConstants -> org.codegist.crest.io.http.HttpConstants:
    int HTTP_CONTINUE -> HTTP_CONTINUE
    int HTTP_SWITCHING_PROTOCOLS -> HTTP_SWITCHING_PROTOCOLS
    int HTTP_PROCESSING -> HTTP_PROCESSING
    int HTTP_OK -> HTTP_OK
    int HTTP_CREATED -> HTTP_CREATED
    int HTTP_ACCEPTED -> HTTP_ACCEPTED
    int HTTP_NON_AUTHORITATIVE_INFORMATION -> HTTP_NON_AUTHORITATIVE_INFORMATION
    int HTTP_NO_CONTENT -> HTTP_NO_CONTENT
    int HTTP_RESET_CONTENT -> HTTP_RESET_CONTENT
    int HTTP_PARTIAL_CONTENT -> HTTP_PARTIAL_CONTENT
    int HTTP_MULTI_STATUS -> HTTP_MULTI_STATUS
    int HTTP_MULTIPLE_CHOICES -> HTTP_MULTIPLE_CHOICES
    int HTTP_MOVED_PERMANENTLY -> HTTP_MOVED_PERMANENTLY
    int HTTP_MOVED_TEMPORARILY -> HTTP_MOVED_TEMPORARILY
    int HTTP_SEE_OTHER -> HTTP_SEE_OTHER
    int HTTP_NOT_MODIFIED -> HTTP_NOT_MODIFIED
    int HTTP_USE_PROXY -> HTTP_USE_PROXY
    int HTTP_TEMPORARY_REDIRECT -> HTTP_TEMPORARY_REDIRECT
    int HTTP_BAD_REQUEST -> HTTP_BAD_REQUEST
    int HTTP_UNAUTHORIZED -> HTTP_UNAUTHORIZED
    int HTTP_PAYMENT_REQUIRED -> HTTP_PAYMENT_REQUIRED
    int HTTP_FORBIDDEN -> HTTP_FORBIDDEN
    int HTTP_NOT_FOUND -> HTTP_NOT_FOUND
    int HTTP_METHOD_NOT_ALLOWED -> HTTP_METHOD_NOT_ALLOWED
    int HTTP_NOT_ACCEPTABLE -> HTTP_NOT_ACCEPTABLE
    int HTTP_PROXY_AUTHENTICATION_REQUIRED -> HTTP_PROXY_AUTHENTICATION_REQUIRED
    int HTTP_REQUEST_TIMEOUT -> HTTP_REQUEST_TIMEOUT
    int HTTP_CONFLICT -> HTTP_CONFLICT
    int HTTP_GONE -> HTTP_GONE
    int HTTP_LENGTH_REQUIRED -> HTTP_LENGTH_REQUIRED
    int HTTP_PRECONDITION_FAILED -> HTTP_PRECONDITION_FAILED
    int HTTP_REQUEST_TOO_LONG -> HTTP_REQUEST_TOO_LONG
    int HTTP_REQUEST_URI_TOO_LONG -> HTTP_REQUEST_URI_TOO_LONG
    int HTTP_UNSUPPORTED_MEDIA_TYPE -> HTTP_UNSUPPORTED_MEDIA_TYPE
    int HTTP_REQUESTED_RANGE_NOT_SATISFIABLE -> HTTP_REQUESTED_RANGE_NOT_SATISFIABLE
    int HTTP_EXPECTATION_FAILED -> HTTP_EXPECTATION_FAILED
    int HTTP_IM_A_TEA_POT_ENTITY -> HTTP_IM_A_TEA_POT_ENTITY
    int HTTP_INSUFFICIENT_SPACE_ON_RESOURCE -> HTTP_INSUFFICIENT_SPACE_ON_RESOURCE
    int HTTP_METHOD_FAILURE -> HTTP_METHOD_FAILURE
    int HTTP_UNPROCESSABLE_ENTITY -> HTTP_UNPROCESSABLE_ENTITY
    int HTTP_LOCKED -> HTTP_LOCKED
    int HTTP_FAILED_DEPENDENCY -> HTTP_FAILED_DEPENDENCY
    int HTTP_INTERNAL_SERVER_ERROR -> HTTP_INTERNAL_SERVER_ERROR
    int HTTP_NOT_IMPLEMENTED -> HTTP_NOT_IMPLEMENTED
    int HTTP_BAD_GATEWAY -> HTTP_BAD_GATEWAY
    int HTTP_SERVICE_UNAVAILABLE -> HTTP_SERVICE_UNAVAILABLE
    int HTTP_GATEWAY_TIMEOUT -> HTTP_GATEWAY_TIMEOUT
    int HTTP_HTTP_VERSION_NOT_SUPPORTED -> HTTP_HTTP_VERSION_NOT_SUPPORTED
    int HTTP_INSUFFICIENT_STORAGE -> HTTP_INSUFFICIENT_STORAGE
org.codegist.crest.io.http.HttpEntityWriter -> org.codegist.crest.io.http.HttpEntityWriter:
    void writeEntityTo(java.io.OutputStream) -> writeEntityTo
    int getContentLength() -> getContentLength
org.codegist.crest.io.http.HttpRequest -> org.codegist.crest.io.http.HttpRequest:
    org.codegist.crest.config.MethodConfig methodConfig -> methodConfig
    java.util.List headerParams -> headerParams
    java.util.List matrixParams -> matrixParams
    java.util.List queryParams -> queryParams
    java.util.List pathParams -> pathParams
    java.util.List cookieParams -> cookieParams
    java.util.List formParams -> formParams
    org.codegist.crest.config.MethodConfig getMethodConfig() -> getMethodConfig
    java.util.List getParams(org.codegist.crest.config.ParamType) -> getParams
    java.util.Iterator getEncodedParamsIterator(org.codegist.crest.config.ParamType) -> getEncodedParamsIterator
    java.lang.String toString() -> toString
org.codegist.crest.io.http.HttpRequest$1 -> org.codegist.crest.io.http.HttpRequest$1:
    int[] $SwitchMap$org$codegist$crest$config$ParamType -> $SwitchMap$org$codegist$crest$config$ParamType
org.codegist.crest.io.http.HttpRequestBuilderFactory -> org.codegist.crest.io.http.HttpRequestBuilderFactory:
    org.codegist.crest.io.RequestBuilder create() -> create
org.codegist.crest.io.http.HttpRequestBuilderFactory$1 -> org.codegist.crest.io.http.HttpRequestBuilderFactory$1:
    int[] $SwitchMap$org$codegist$crest$config$ParamType -> $SwitchMap$org$codegist$crest$config$ParamType
org.codegist.crest.io.http.HttpRequestBuilderFactory$Builder -> org.codegist.crest.io.http.HttpRequestBuilderFactory$Builder:
    java.util.List headerParams -> headerParams
    java.util.List matrixParams -> matrixParams
    java.util.List queryParams -> queryParams
    java.util.List pathParams -> pathParams
    java.util.List cookieParams -> cookieParams
    java.util.List formParams -> formParams
    org.codegist.crest.io.http.HttpRequest build(org.codegist.crest.config.MethodConfig) -> build
    org.codegist.crest.io.http.HttpRequestBuilderFactory$Builder addParams(org.codegist.crest.config.ParamConfig[]) -> addParams
    org.codegist.crest.io.http.HttpRequestBuilderFactory$Builder addParam(org.codegist.crest.config.ParamConfig) -> addParam
    org.codegist.crest.io.http.HttpRequestBuilderFactory$Builder addParam(org.codegist.crest.config.ParamConfig,java.lang.Object) -> addParam
    org.codegist.crest.io.http.HttpRequestBuilderFactory$Builder addParam(org.codegist.crest.config.ParamConfig,java.util.Collection) -> addParam
    org.codegist.crest.io.RequestBuilder addParam(org.codegist.crest.config.ParamConfig,java.util.Collection) -> addParam
    org.codegist.crest.io.RequestBuilder addParam(org.codegist.crest.config.ParamConfig,java.lang.Object) -> addParam
    org.codegist.crest.io.RequestBuilder addParam(org.codegist.crest.config.ParamConfig) -> addParam
    org.codegist.crest.io.RequestBuilder addParams(org.codegist.crest.config.ParamConfig[]) -> addParams
    org.codegist.crest.io.Request build(org.codegist.crest.config.MethodConfig) -> build
org.codegist.crest.io.http.HttpRequestExecutor -> org.codegist.crest.io.http.HttpRequestExecutor:
    org.codegist.common.log.Logger LOGGER -> LOGGER
    org.codegist.crest.io.http.HttpChannelFactory channelFactory -> channelFactory
    org.codegist.crest.serializer.ResponseDeserializer baseResponseDeserializer -> baseResponseDeserializer
    org.codegist.crest.serializer.ResponseDeserializer customTypeResponseDeserializer -> customTypeResponseDeserializer
    org.codegist.crest.io.Response execute(org.codegist.crest.io.Request) -> execute
    org.codegist.crest.io.http.HttpResponse doExecute(org.codegist.crest.io.Request) -> doExecute
    void dispose() -> dispose
    void finalize() -> finalize
org.codegist.crest.io.http.HttpRequests -> org.codegist.crest.io.http.HttpRequests:
    java.lang.String toUrl(org.codegist.crest.io.Request) -> toUrl
org.codegist.crest.io.http.HttpResource -> org.codegist.crest.io.http.HttpResource:
    java.io.InputStream getEntity() -> getEntity
    java.lang.String getContentType() -> getContentType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.String getStatusMessage() -> getStatusMessage
    int getStatusCode() -> getStatusCode
org.codegist.crest.io.http.HttpResourceInputStream -> org.codegist.crest.io.http.HttpResourceInputStream:
    org.codegist.common.log.Logger LOGGER -> LOGGER
    org.codegist.crest.io.http.HttpResource resource -> resource
    java.util.concurrent.atomic.AtomicBoolean closed -> closed
    void close() -> close
    void finalize() -> finalize
org.codegist.crest.io.http.HttpResponse -> org.codegist.crest.io.http.HttpResponse:
    org.codegist.crest.serializer.ResponseDeserializer baseResponseDeserializer -> baseResponseDeserializer
    org.codegist.crest.serializer.ResponseDeserializer customTypeResponseDeserializer -> customTypeResponseDeserializer
    org.codegist.crest.io.Request request -> request
    java.io.InputStream inputStream -> inputStream
    org.codegist.crest.io.http.HttpResource resource -> resource
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    java.lang.String getContentType() -> getContentType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.reflect.Type getExpectedGenericType() -> getExpectedGenericType
    java.lang.Class getExpectedType() -> getExpectedType
    org.codegist.crest.io.Request getRequest() -> getRequest
    java.io.InputStream asStream() -> asStream
    java.lang.Object deserialize() -> deserialize
    java.lang.Object to(java.lang.Class) -> to
    java.lang.Object to(java.lang.Class,java.lang.reflect.Type) -> to
    void dispose() -> dispose
org.codegist.crest.io.http.HttpResponse$1 -> org.codegist.crest.io.http.HttpResponse$1:
org.codegist.crest.io.http.HttpResponse$ExpectedTypeOverriderResponse -> org.codegist.crest.io.http.HttpResponse$ExpectedTypeOverriderResponse:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type getExpectedGenericType() -> getExpectedGenericType
    java.lang.Class getExpectedType() -> getExpectedType
org.codegist.crest.io.http.HttpURLConnectionHttpChannel -> org.codegist.crest.io.http.HttpURLConnectionHttpChannel:
    org.codegist.common.log.Logger LOG -> LOG
    java.net.HttpURLConnection con -> con
    org.codegist.crest.config.MethodType methodType -> methodType
    org.codegist.crest.io.http.HttpEntityWriter httpEntityWriter -> httpEntityWriter
    void setSocketTimeout(int) -> setSocketTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setContentType(java.lang.String) -> setContentType
    void setAccept(java.lang.String) -> setAccept
    void writeEntityWith(org.codegist.crest.io.http.HttpEntityWriter) -> writeEntityWith
    org.codegist.crest.io.http.HttpChannel$Response send() -> send
    org.codegist.common.log.Logger access$100() -> access$100
org.codegist.crest.io.http.HttpURLConnectionHttpChannel$1 -> org.codegist.crest.io.http.HttpURLConnectionHttpChannel$1:
org.codegist.crest.io.http.HttpURLConnectionHttpChannel$HttpURLResponse -> org.codegist.crest.io.http.HttpURLConnectionHttpChannel$HttpURLResponse:
    java.net.HttpURLConnection con -> con
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    java.io.InputStream getEntity() -> getEntity
    java.lang.String getContentType() -> getContentType
    java.lang.String getContentEncoding() -> getContentEncoding
    void close() -> close
org.codegist.crest.io.http.HttpURLConnectionHttpChannelFactory -> org.codegist.crest.io.http.HttpURLConnectionHttpChannelFactory:
    org.codegist.crest.io.http.HttpChannel open(org.codegist.crest.config.MethodType,java.lang.String,java.nio.charset.Charset) -> open
org.codegist.crest.io.http.RequestEntityWriter -> org.codegist.crest.io.http.RequestEntityWriter:
    org.codegist.common.log.Logger LOGGER -> LOGGER
    org.codegist.crest.io.Request request -> request
    void writeEntityTo(java.io.OutputStream) -> writeEntityTo
    int getContentLength() -> getContentLength
org.codegist.crest.io.http.UrlEncodedFormEntityParamExtractor -> org.codegist.crest.io.http.UrlEncodedFormEntityParamExtractor:
    java.util.List extract(java.lang.String,java.nio.charset.Charset,java.io.InputStream) -> extract
org.codegist.crest.param.CollectionMergingCookieParamProcessor -> org.codegist.crest.param.CollectionMergingCookieParamProcessor:
    java.util.List process(org.codegist.crest.param.Param,java.nio.charset.Charset,boolean) -> process
org.codegist.crest.param.CollectionMergingParamProcessor -> org.codegist.crest.param.CollectionMergingParamProcessor:
    java.lang.String listSeparator -> listSeparator
    java.util.List process(org.codegist.crest.param.Param,java.nio.charset.Charset,boolean) -> process
org.codegist.crest.param.DefaultCookieParamProcessor -> org.codegist.crest.param.DefaultCookieParamProcessor:
    org.codegist.crest.param.ParamProcessor INSTANCE -> INSTANCE
    java.util.List process(org.codegist.crest.param.Param,java.nio.charset.Charset,boolean) -> process
org.codegist.crest.param.DefaultParam -> org.codegist.crest.param.DefaultParam:
    java.util.Collection value -> value
    org.codegist.crest.config.ParamConfig config -> config
    java.util.Collection getValue() -> getValue
    org.codegist.crest.config.ParamConfig getParamConfig() -> getParamConfig
    java.lang.String toString() -> toString
org.codegist.crest.param.DefaultParamProcessor -> org.codegist.crest.param.DefaultParamProcessor:
    org.codegist.crest.param.ParamProcessor INSTANCE -> INSTANCE
    java.util.List process(org.codegist.crest.param.Param,java.nio.charset.Charset,boolean) -> process
org.codegist.crest.param.EncodedPair -> org.codegist.crest.param.EncodedPair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.codegist.crest.param.Param -> org.codegist.crest.param.Param:
    java.util.Collection getValue() -> getValue
    org.codegist.crest.config.ParamConfig getParamConfig() -> getParamConfig
org.codegist.crest.param.ParamProcessor -> org.codegist.crest.param.ParamProcessor:
    java.util.List process(org.codegist.crest.param.Param,java.nio.charset.Charset,boolean) -> process
org.codegist.crest.param.ParamProcessors -> org.codegist.crest.param.ParamProcessors:
    org.codegist.crest.param.ParamProcessor newInstance(org.codegist.crest.config.ParamType,java.lang.String) -> newInstance
    java.util.Iterator iterate(java.util.List,java.nio.charset.Charset) -> iterate
    java.util.Iterator iterate(java.util.List,java.nio.charset.Charset,boolean) -> iterate
org.codegist.crest.param.ParamProcessors$1 -> org.codegist.crest.param.ParamProcessors$1:
    int[] $SwitchMap$org$codegist$crest$config$ParamType -> $SwitchMap$org$codegist$crest$config$ParamType
org.codegist.crest.param.ParamProcessors$ProcessIterator -> org.codegist.crest.param.ParamProcessors$ProcessIterator:
    java.util.Iterator params -> params
    java.nio.charset.Charset charset -> charset
    boolean encodeIfNeeded -> encodeIfNeeded
    java.util.Iterator current -> current
    boolean hasNext() -> hasNext
    org.codegist.crest.param.EncodedPair next() -> next
    void doNext() -> doNext
    void remove() -> remove
    java.lang.Object next() -> next
org.codegist.crest.param.SimpleEncodedPair -> org.codegist.crest.param.SimpleEncodedPair:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
org.codegist.crest.security.Authorization -> org.codegist.crest.security.Authorization:
    org.codegist.crest.security.AuthorizationToken authorize(org.codegist.crest.config.MethodType,java.lang.String,org.codegist.crest.param.EncodedPair[]) -> authorize
    void refresh() -> refresh
org.codegist.crest.security.AuthorizationToken -> org.codegist.crest.security.AuthorizationToken:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.codegist.crest.security.basic.BasicAuthorization -> org.codegist.crest.security.basic.BasicAuthorization:
    java.nio.charset.Charset UTF8 -> UTF8
    org.codegist.crest.security.AuthorizationToken token -> token
    org.codegist.crest.security.AuthorizationToken authorize(org.codegist.crest.config.MethodType,java.lang.String,org.codegist.crest.param.EncodedPair[]) -> authorize
    void refresh() -> refresh
org.codegist.crest.security.handler.RefreshAuthorizationRetryHandler -> org.codegist.crest.security.handler.RefreshAuthorizationRetryHandler:
    java.lang.String UNAUTHORIZED_STATUS_CODE_PROP -> UNAUTHORIZED_STATUS_CODE_PROP
    org.codegist.common.log.Logger LOGGER -> LOGGER
    org.codegist.crest.security.Authorization authorization -> authorization
    int max -> max
    int unauthorizedStatusCode -> unauthorizedStatusCode
    boolean retry(org.codegist.crest.io.RequestException,int) -> retry
org.codegist.crest.security.oauth.OAuthApi -> org.codegist.crest.security.oauth.OAuthApi:
    org.codegist.crest.security.oauth.OAuthToken getRequestToken() -> getRequestToken
    org.codegist.crest.security.oauth.OAuthToken getAccessToken(org.codegist.crest.security.oauth.OAuthToken,java.lang.String) -> getAccessToken
    org.codegist.crest.security.oauth.OAuthToken refreshAccessToken(org.codegist.crest.security.oauth.OAuthToken) -> refreshAccessToken
org.codegist.crest.security.oauth.OAuthToken -> org.codegist.crest.security.oauth.OAuthToken:
    java.lang.String token -> token
    java.lang.String secret -> secret
    java.util.Map attributes -> attributes
    java.lang.String getToken() -> getToken
    java.lang.String getSecret() -> getSecret
    org.codegist.crest.param.EncodedPair getAttribute(java.lang.String) -> getAttribute
    java.util.Map getAttributes() -> getAttributes
    java.lang.String toString() -> toString
org.codegist.crest.security.oauth.OAuthenticator -> org.codegist.crest.security.oauth.OAuthenticator:
    java.util.List oauth(org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.config.MethodType,java.lang.String,org.codegist.crest.param.EncodedPair[]) -> oauth
org.codegist.crest.security.oauth.OAuthorization -> org.codegist.crest.security.oauth.OAuthorization:
    org.codegist.crest.security.oauth.OAuthenticator oauth -> oauth
    org.codegist.crest.security.oauth.OAuthApi oauthApi -> oauthApi
    org.codegist.crest.security.oauth.OAuthToken accessOAuthToken -> accessOAuthToken
    org.codegist.crest.security.AuthorizationToken authorize(org.codegist.crest.config.MethodType,java.lang.String,org.codegist.crest.param.EncodedPair[]) -> authorize
    void refresh() -> refresh
org.codegist.crest.security.oauth.v1.DefaultVariantProvider -> org.codegist.crest.security.oauth.v1.DefaultVariantProvider:
    org.codegist.crest.security.oauth.v1.DefaultVariantProvider INSTANCE -> INSTANCE
    java.util.Random rdm -> rdm
    long SECONDS -> SECONDS
    java.lang.String timestamp() -> timestamp
    java.lang.String nonce() -> nonce
org.codegist.crest.security.oauth.v1.FormOAuthInterface -> org.codegist.crest.security.oauth.v1.FormOAuthInterface:
    org.codegist.crest.security.oauth.OAuthToken getAccessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getAccessToken
    org.codegist.crest.security.oauth.OAuthToken getRequestToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getRequestToken
    org.codegist.crest.security.oauth.OAuthToken refreshAccessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> refreshAccessToken
org.codegist.crest.security.oauth.v1.OAuthApiV1 -> org.codegist.crest.security.oauth.v1.OAuthApiV1:
    org.codegist.crest.param.EncodedPair CALLBACK -> CALLBACK
    org.codegist.crest.config.MethodType methodType -> methodType
    java.lang.String requestTokenPath -> requestTokenPath
    java.lang.String accessTokenPath -> accessTokenPath
    java.lang.String refreshAccessTokenPath -> refreshAccessTokenPath
    org.codegist.crest.security.oauth.OAuthToken consumerToken -> consumerToken
    org.codegist.crest.security.oauth.v1.OAuthInterface oauthInterface -> oauthInterface
    org.codegist.crest.security.oauth.v1.VariantProvider variantProvider -> variantProvider
    org.codegist.crest.security.oauth.OAuthToken getRequestToken() -> getRequestToken
    org.codegist.crest.security.oauth.OAuthToken getAccessToken(org.codegist.crest.security.oauth.OAuthToken,java.lang.String) -> getAccessToken
    org.codegist.crest.security.oauth.OAuthToken refreshAccessToken(org.codegist.crest.security.oauth.OAuthToken) -> refreshAccessToken
    java.util.Map asMap(java.util.List) -> asMap
org.codegist.crest.security.oauth.v1.OAuthApiV1Builder -> org.codegist.crest.security.oauth.v1.OAuthApiV1Builder:
    org.codegist.crest.CRestBuilder crestBuilder -> crestBuilder
    org.codegist.crest.security.oauth.OAuthToken consumerToken -> consumerToken
    java.lang.String oauthEndPoint -> oauthEndPoint
    org.codegist.crest.security.oauth.v1.VariantProvider variantProvider -> variantProvider
    org.codegist.crest.io.http.HttpChannelFactory channelFactory -> channelFactory
    org.codegist.crest.config.MethodType methodType -> methodType
    java.lang.Class oauthInterfaceCls -> oauthInterfaceCls
    java.lang.String requestTokenPath -> requestTokenPath
    java.lang.String accessTokenPath -> accessTokenPath
    java.lang.String refreshAccessTokenPath -> refreshAccessTokenPath
    org.codegist.crest.security.oauth.v1.OAuthApiV1 build() -> build
    org.codegist.crest.security.oauth.v1.OAuthApiV1Builder getRequestTokenFrom(java.lang.String) -> getRequestTokenFrom
    org.codegist.crest.security.oauth.v1.OAuthApiV1Builder getAccessTokenFrom(java.lang.String) -> getAccessTokenFrom
    org.codegist.crest.security.oauth.v1.OAuthApiV1Builder refreshAccessTokenFrom(java.lang.String) -> refreshAccessTokenFrom
    org.codegist.crest.security.oauth.v1.OAuthApiV1Builder useGet() -> useGet
    org.codegist.crest.security.oauth.v1.OAuthApiV1Builder using(org.codegist.crest.io.http.HttpChannelFactory) -> using
    org.codegist.crest.security.oauth.v1.OAuthApiV1Builder using(org.codegist.crest.security.oauth.v1.VariantProvider) -> using
org.codegist.crest.security.oauth.v1.OAuthInterface -> org.codegist.crest.security.oauth.v1.OAuthInterface:
    org.codegist.crest.security.oauth.OAuthToken getAccessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getAccessToken
    org.codegist.crest.security.oauth.OAuthToken getRequestToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getRequestToken
    org.codegist.crest.security.oauth.OAuthToken refreshAccessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> refreshAccessToken
org.codegist.crest.security.oauth.v1.OAuthTokenDeserializer -> org.codegist.crest.security.oauth.v1.OAuthTokenDeserializer:
    org.codegist.crest.security.oauth.OAuthToken deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.security.oauth.v1.OAuthenticatorV1 -> org.codegist.crest.security.oauth.v1.OAuthenticatorV1:
    org.codegist.crest.security.oauth.v1.VariantProvider variantProvider -> variantProvider
    org.codegist.crest.security.oauth.OAuthToken consumerOAuthToken -> consumerOAuthToken
    java.util.List oauth(org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.config.MethodType,java.lang.String,org.codegist.crest.param.EncodedPair[]) -> oauth
org.codegist.crest.security.oauth.v1.OAuthsV1 -> org.codegist.crest.security.oauth.v1.OAuthsV1:
    org.codegist.crest.param.EncodedPair[] EMPTY_HTTP_PAIRS -> EMPTY_HTTP_PAIRS
    java.nio.charset.Charset ENC -> ENC
    org.codegist.common.log.Logger LOGGER -> LOGGER
    org.codegist.crest.security.oauth.OAuthToken IGNORE_POISON -> IGNORE_POISON
    java.lang.String SIGN_METH -> SIGN_METH
    java.lang.String SIGN_METH_4_J -> SIGN_METH_4_J
    int AFTER_PROTOCOL_INDEX -> AFTER_PROTOCOL_INDEX
    java.lang.String constructRequestURL(java.lang.String) -> constructRequestURL
    java.util.List oauth(org.codegist.crest.security.oauth.v1.VariantProvider,org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.config.MethodType,java.lang.String,org.codegist.crest.param.EncodedPair[],org.codegist.crest.param.EncodedPair[]) -> oauth
    java.util.List oauth(org.codegist.crest.security.oauth.v1.VariantProvider,org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.config.MethodType,java.lang.String,org.codegist.crest.param.EncodedPair[],org.codegist.crest.param.EncodedPair[]) -> oauth
    java.lang.String sign(org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.config.MethodType,java.lang.String,java.util.List) -> sign
    java.util.List oauthParamsFor(org.codegist.crest.security.oauth.v1.VariantProvider,org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.security.oauth.OAuthToken,org.codegist.crest.param.EncodedPair[]) -> oauthParamsFor
    org.codegist.crest.param.EncodedPair pair(java.lang.String,java.lang.String) -> pair
org.codegist.crest.security.oauth.v1.QueryOAuthInterface -> org.codegist.crest.security.oauth.v1.QueryOAuthInterface:
    org.codegist.crest.security.oauth.OAuthToken getAccessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getAccessToken
    org.codegist.crest.security.oauth.OAuthToken getRequestToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getRequestToken
    org.codegist.crest.security.oauth.OAuthToken refreshAccessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> refreshAccessToken
org.codegist.crest.security.oauth.v1.VariantProvider -> org.codegist.crest.security.oauth.v1.VariantProvider:
    java.lang.String timestamp() -> timestamp
    java.lang.String nonce() -> nonce
org.codegist.crest.serializer.DateDeserializer -> org.codegist.crest.serializer.DateDeserializer:
    java.text.DateFormat formatter -> formatter
    java.util.Date deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.DateSerializer -> org.codegist.crest.serializer.DateSerializer:
    java.text.DateFormat formatter -> formatter
    java.lang.String serialize(java.util.Date,java.nio.charset.Charset) -> serialize
    java.lang.String serialize(java.lang.Object,java.nio.charset.Charset) -> serialize
org.codegist.crest.serializer.Deserializer -> org.codegist.crest.serializer.Deserializer:
    java.lang.Object deserialize(java.lang.Class,java.lang.reflect.Type,java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.FileSerializer -> org.codegist.crest.serializer.FileSerializer:
    void serialize(java.io.File,java.nio.charset.Charset,java.io.OutputStream) -> serialize
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.serializer.InputStreamDeserializer -> org.codegist.crest.serializer.InputStreamDeserializer:
    java.io.InputStream deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.InputStreamSerializer -> org.codegist.crest.serializer.InputStreamSerializer:
    void serialize(java.io.InputStream,java.nio.charset.Charset,java.io.OutputStream) -> serialize
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.serializer.ReaderDeserializer -> org.codegist.crest.serializer.ReaderDeserializer:
    java.io.Reader deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.ReaderSerializer -> org.codegist.crest.serializer.ReaderSerializer:
    void serialize(java.io.Reader,java.nio.charset.Charset,java.io.OutputStream) -> serialize
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.serializer.ResponseDeserializer -> org.codegist.crest.serializer.ResponseDeserializer:
    java.lang.Object deserialize(org.codegist.crest.io.Response) -> deserialize
org.codegist.crest.serializer.ResponseDeserializerByClass -> org.codegist.crest.serializer.ResponseDeserializerByClass:
    java.lang.String CLASS_NOT_FOUND_ERROR -> CLASS_NOT_FOUND_ERROR
    org.codegist.common.log.Logger LOG -> LOG
    org.codegist.crest.util.ComponentRegistry classDeserializerRegistry -> classDeserializerRegistry
    java.lang.Object deserialize(org.codegist.crest.io.Response) -> deserialize
org.codegist.crest.serializer.ResponseDeserializerByDeserializers -> org.codegist.crest.serializer.ResponseDeserializerByDeserializers:
    org.codegist.common.log.Logger LOG -> LOG
    java.lang.String NO_DESERIALIZERS_ERROR -> NO_DESERIALIZERS_ERROR
    java.lang.Object deserialize(org.codegist.crest.io.Response) -> deserialize
org.codegist.crest.serializer.ResponseDeserializerByMimeType -> org.codegist.crest.serializer.ResponseDeserializerByMimeType:
    java.lang.String MIME_TYPE_NOT_FOUND_ERROR -> MIME_TYPE_NOT_FOUND_ERROR
    org.codegist.common.log.Logger LOG -> LOG
    org.codegist.crest.util.ComponentRegistry mimeDeserializerRegistry -> mimeDeserializerRegistry
    java.lang.Object deserialize(org.codegist.crest.io.Response) -> deserialize
org.codegist.crest.serializer.ResponseDeserializerComposite -> org.codegist.crest.serializer.ResponseDeserializerComposite:
    org.codegist.common.log.Logger LOG -> LOG
    org.codegist.crest.serializer.ResponseDeserializer[] delegates -> delegates
    java.lang.Object deserialize(org.codegist.crest.io.Response) -> deserialize
org.codegist.crest.serializer.Serializer -> org.codegist.crest.serializer.Serializer:
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.serializer.StringDeserializer -> org.codegist.crest.serializer.StringDeserializer:
    java.lang.String deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.StringSerializer -> org.codegist.crest.serializer.StringSerializer:
    java.lang.String serialize(java.lang.Object,java.nio.charset.Charset) -> serialize
    void serialize(java.lang.Object,java.nio.charset.Charset,java.io.OutputStream) -> serialize
org.codegist.crest.serializer.ToStringSerializer -> org.codegist.crest.serializer.ToStringSerializer:
    java.lang.String serialize(java.lang.Object,java.nio.charset.Charset) -> serialize
org.codegist.crest.serializer.TypeDeserializer -> org.codegist.crest.serializer.TypeDeserializer:
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
    java.lang.Object deserialize(java.lang.Class,java.lang.reflect.Type,java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.jackson.JacksonDeserializer -> org.codegist.crest.serializer.jackson.JacksonDeserializer:
    java.lang.String PREFIX -> PREFIX
    java.lang.String OBJECT_MAPPER_PROP -> OBJECT_MAPPER_PROP
    java.lang.String JACKSON_DESERIALIZER_CONFIG_PROP -> JACKSON_DESERIALIZER_CONFIG_PROP
    org.codehaus.jackson.map.ObjectMapper jackson -> jackson
    java.lang.Object deserialize(java.lang.Class,java.lang.reflect.Type,java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.jackson.JacksonFactory -> org.codegist.crest.serializer.jackson.JacksonFactory:
    java.lang.String JACKSON_OBJECT_MAPPER -> JACKSON_OBJECT_MAPPER
    java.lang.String JACKSON_DESERIALIZER_CONFIG -> JACKSON_DESERIALIZER_CONFIG
    java.lang.String JACKSON_SERIALIZER_CONFIG -> JACKSON_SERIALIZER_CONFIG
    java.util.Map DEFAULT_SERIALIZER_CONFIG -> DEFAULT_SERIALIZER_CONFIG
    java.util.Map DEFAULT_DESERIALIZER_CONFIG -> DEFAULT_DESERIALIZER_CONFIG
    org.codehaus.jackson.map.ObjectMapper createObjectMapper(org.codegist.crest.CRestConfig,java.lang.Class) -> createObjectMapper
org.codegist.crest.serializer.jaxb.Classes -> org.codegist.crest.serializer.jaxb.Classes:
    java.util.Set getClasses() -> getClasses
org.codegist.crest.serializer.jaxb.Jaxb -> org.codegist.crest.serializer.jaxb.Jaxb:
    java.lang.Object unmarshal(java.lang.Class,java.lang.reflect.Type,java.io.Reader) -> unmarshal
    void marshal(java.lang.Object,java.io.OutputStream,java.nio.charset.Charset) -> marshal
org.codegist.crest.serializer.jaxb.JaxbDeserializer -> org.codegist.crest.serializer.jaxb.JaxbDeserializer:
    java.lang.String PREFIX -> PREFIX
    java.lang.String POOL_RETRIEVAL_MAX_WAIT_PROP -> POOL_RETRIEVAL_MAX_WAIT_PROP
    java.lang.String JAXB_PROP -> JAXB_PROP
    java.lang.String MODEL_PACKAGE_PROP -> MODEL_PACKAGE_PROP
    java.lang.String MODEL_FACTORY_CLASS_PROP -> MODEL_FACTORY_CLASS_PROP
    org.codegist.crest.serializer.jaxb.Jaxb jaxb -> jaxb
    java.lang.Object deserialize(java.lang.Class,java.lang.reflect.Type,java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.jaxb.JaxbFactory -> org.codegist.crest.serializer.jaxb.JaxbFactory:
    java.lang.Long DEFAULT_MAX_WAIT -> DEFAULT_MAX_WAIT
    java.lang.String POOL_RETRIEVAL_MAX_WAIT -> POOL_RETRIEVAL_MAX_WAIT
    java.lang.String JAXB -> JAXB
    java.lang.String MODEL_PACKAGE -> MODEL_PACKAGE
    java.lang.String MODEL_FACTORY_CLASS -> MODEL_FACTORY_CLASS
    org.codegist.crest.serializer.jaxb.Jaxb create(org.codegist.crest.CRestConfig,java.lang.Class) -> create
    org.codegist.crest.serializer.jaxb.Jaxb create(org.codegist.crest.CRestConfig,java.lang.Class,java.lang.String) -> create
    org.codegist.crest.serializer.jaxb.Jaxb create(org.codegist.crest.CRestConfig,java.lang.Class,java.lang.Class[]) -> create
    org.codegist.crest.serializer.jaxb.Jaxb create(org.codegist.crest.CRestConfig,java.lang.Class,javax.xml.bind.JAXBContext) -> create
org.codegist.crest.serializer.jaxb.PooledJaxb -> org.codegist.crest.serializer.jaxb.PooledJaxb:
    java.util.concurrent.BlockingQueue pool -> pool
    long maxWait -> maxWait
    void marshal(java.lang.Object,java.io.OutputStream,java.nio.charset.Charset) -> marshal
    java.lang.Object unmarshal(java.lang.Class,java.lang.reflect.Type,java.io.Reader) -> unmarshal
    void lend(org.codegist.crest.serializer.jaxb.Jaxb) -> lend
    org.codegist.crest.serializer.jaxb.Jaxb borrow() -> borrow
org.codegist.crest.serializer.jaxb.SimpleJaxb -> org.codegist.crest.serializer.jaxb.SimpleJaxb:
    javax.xml.bind.Marshaller marshaller -> marshaller
    javax.xml.bind.Unmarshaller unmarshaller -> unmarshaller
    void marshal(java.lang.Object,java.io.OutputStream,java.nio.charset.Charset) -> marshal
    java.lang.Object unmarshal(java.lang.Class,java.lang.reflect.Type,java.io.Reader) -> unmarshal
org.codegist.crest.serializer.jaxb.TypeCachingJaxb -> org.codegist.crest.serializer.jaxb.TypeCachingJaxb:
    org.codegist.crest.CRestConfig crestConfig -> crestConfig
    java.util.concurrent.ConcurrentMap cache -> cache
    java.lang.Class source -> source
    void marshal(java.lang.Object,java.io.OutputStream,java.nio.charset.Charset) -> marshal
    java.lang.Object unmarshal(java.lang.Class,java.lang.reflect.Type,java.io.Reader) -> unmarshal
    org.codegist.crest.serializer.jaxb.Jaxb get(java.util.Set) -> get
org.codegist.crest.serializer.primitive.BooleanPrimitiveDeserializer -> org.codegist.crest.serializer.primitive.BooleanPrimitiveDeserializer:
    java.lang.Boolean deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.BooleanSerializer -> org.codegist.crest.serializer.primitive.BooleanSerializer:
    java.lang.String trueString -> trueString
    java.lang.String falseString -> falseString
    java.lang.String serialize(java.lang.Boolean,java.nio.charset.Charset) -> serialize
    java.lang.String serialize(java.lang.Object,java.nio.charset.Charset) -> serialize
org.codegist.crest.serializer.primitive.BooleanWrapperDeserializer -> org.codegist.crest.serializer.primitive.BooleanWrapperDeserializer:
    java.lang.String trueString -> trueString
    java.lang.Boolean deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.ByteArrayDeserializer -> org.codegist.crest.serializer.primitive.ByteArrayDeserializer:
    byte[] deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.primitive.BytePrimitiveDeserializer -> org.codegist.crest.serializer.primitive.BytePrimitiveDeserializer:
    java.lang.Byte deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.ByteWrapperDeserializer -> org.codegist.crest.serializer.primitive.ByteWrapperDeserializer:
    java.lang.Byte deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.CharacterPrimitiveDeserializer -> org.codegist.crest.serializer.primitive.CharacterPrimitiveDeserializer:
    java.lang.Character deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.CharacterWrapperDeserializer -> org.codegist.crest.serializer.primitive.CharacterWrapperDeserializer:
    java.lang.Character deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.DoublePrimitiveDeserializer -> org.codegist.crest.serializer.primitive.DoublePrimitiveDeserializer:
    java.lang.Double deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.DoubleWrapperDeserializer -> org.codegist.crest.serializer.primitive.DoubleWrapperDeserializer:
    java.lang.Double deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.FloatPrimitiveDeserializer -> org.codegist.crest.serializer.primitive.FloatPrimitiveDeserializer:
    java.lang.Float deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.FloatWrapperDeserializer -> org.codegist.crest.serializer.primitive.FloatWrapperDeserializer:
    java.lang.Float deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.IntegerPrimitiveDeserializer -> org.codegist.crest.serializer.primitive.IntegerPrimitiveDeserializer:
    java.lang.Integer deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.IntegerWrapperDeserializer -> org.codegist.crest.serializer.primitive.IntegerWrapperDeserializer:
    java.lang.Integer deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.LongPrimitiveDeserializer -> org.codegist.crest.serializer.primitive.LongPrimitiveDeserializer:
    java.lang.Long deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.LongWrapperDeserializer -> org.codegist.crest.serializer.primitive.LongWrapperDeserializer:
    java.lang.Long deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.PrimitiveDeserializer -> org.codegist.crest.serializer.primitive.PrimitiveDeserializer:
    java.lang.Object deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.primitive.ShortPrimitiveDeserializer -> org.codegist.crest.serializer.primitive.ShortPrimitiveDeserializer:
    java.lang.Short deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.ShortWrapperDeserializer -> org.codegist.crest.serializer.primitive.ShortWrapperDeserializer:
    java.lang.Short deserialize(java.lang.String) -> deserialize
    java.lang.Object deserialize(java.lang.String) -> deserialize
org.codegist.crest.serializer.primitive.VoidDeserializer -> org.codegist.crest.serializer.primitive.VoidDeserializer:
    java.lang.Object deserialize(java.lang.Class,java.lang.reflect.Type,java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.simplexml.BooleanMatcher -> org.codegist.crest.serializer.simplexml.BooleanMatcher:
    java.lang.String trueVal -> trueVal
    java.lang.String falseVal -> falseVal
    java.lang.Boolean read(java.lang.String) -> read
    java.lang.String write(java.lang.Boolean) -> write
    java.lang.String write(java.lang.Object) -> write
    java.lang.Object read(java.lang.String) -> read
org.codegist.crest.serializer.simplexml.DateMatcher -> org.codegist.crest.serializer.simplexml.DateMatcher:
    java.text.DateFormat df -> df
    java.util.Date read(java.lang.String) -> read
    java.lang.String write(java.util.Date) -> write
    java.lang.String write(java.lang.Object) -> write
    java.lang.Object read(java.lang.String) -> read
org.codegist.crest.serializer.simplexml.MatcherRegistry -> org.codegist.crest.serializer.simplexml.MatcherRegistry:
    java.util.Map transformerMap -> transformerMap
    org.simpleframework.xml.transform.Transform match(java.lang.Class) -> match
org.codegist.crest.serializer.simplexml.SimpleXmlDeserializer -> org.codegist.crest.serializer.simplexml.SimpleXmlDeserializer:
    java.lang.String PREFIX -> PREFIX
    boolean DEFAULT_STRICT -> DEFAULT_STRICT
    java.lang.String STRICT_PROP -> STRICT_PROP
    java.lang.String SERIALIZER_PROP -> SERIALIZER_PROP
    boolean strict -> strict
    org.simpleframework.xml.Serializer serializer -> serializer
    java.lang.Object deserialize(java.lang.Class,java.lang.reflect.Type,java.io.InputStream,java.nio.charset.Charset) -> deserialize
org.codegist.crest.serializer.simplexml.SimpleXmlFactory -> org.codegist.crest.serializer.simplexml.SimpleXmlFactory:
    java.lang.String SERIALIZER -> SERIALIZER
    org.simpleframework.xml.Serializer createSerializer(org.codegist.crest.CRestConfig,java.lang.Class) -> createSerializer
org.codegist.crest.util.ComponentFactory -> org.codegist.crest.util.ComponentFactory:
    java.lang.Object instantiate(java.lang.Class,org.codegist.crest.CRestConfig) -> instantiate
    java.lang.reflect.Constructor accessible(java.lang.reflect.Constructor) -> accessible
org.codegist.crest.util.ComponentFactory$1 -> org.codegist.crest.util.ComponentFactory$1:
org.codegist.crest.util.ComponentFactory$MakeAccessible -> org.codegist.crest.util.ComponentFactory$MakeAccessible:
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.reflect.Constructor run() -> run
    java.lang.Object run() -> run
org.codegist.crest.util.ComponentRegistry -> org.codegist.crest.util.ComponentRegistry:
    java.util.Map mapping -> mapping
    java.util.Map cache -> cache
    org.codegist.crest.util.ComponentRegistry$ItemDescriptor defaultIfNotFoundDescriptor -> defaultIfNotFoundDescriptor
    org.codegist.crest.CRestConfig crestConfig -> crestConfig
    java.lang.Object defaultIfNotFound -> defaultIfNotFound
    boolean contains(java.lang.Object) -> contains
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object buildAndCache(java.lang.Object,org.codegist.crest.CRestConfig) -> buildAndCache
org.codegist.crest.util.ComponentRegistry$Builder -> org.codegist.crest.util.ComponentRegistry$Builder:
    java.util.Map mapping -> mapping
    org.codegist.crest.util.ComponentRegistry$ItemDescriptor defaultIfNotFoundDescriptor -> defaultIfNotFoundDescriptor
    org.codegist.crest.util.ComponentRegistry build(org.codegist.crest.CRestConfig) -> build
    org.codegist.crest.util.ComponentRegistry$Builder register(java.lang.Class,java.lang.Object[]) -> register
    org.codegist.crest.util.ComponentRegistry$Builder register(java.lang.Class,java.lang.Object[],java.util.Map) -> register
    org.codegist.crest.util.ComponentRegistry$Builder register(java.util.Map) -> register
    org.codegist.crest.util.ComponentRegistry$Builder defaultAs(java.lang.Class) -> defaultAs
    org.codegist.crest.util.ComponentRegistry$Builder defaultAs(java.lang.Class,java.util.Map) -> defaultAs
org.codegist.crest.util.ComponentRegistry$ItemDescriptor -> org.codegist.crest.util.ComponentRegistry$ItemDescriptor:
    java.lang.Class clazz -> clazz
    java.util.Map config -> config
    java.util.concurrent.atomic.AtomicReference instanceRef -> instanceRef
    java.lang.Object instanciate(org.codegist.crest.CRestConfig) -> instanciate
org.codegist.crest.util.MultiParts -> org.codegist.crest.util.MultiParts:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String FILENAME -> FILENAME
    java.lang.String MULTIPART_FLAG -> MULTIPART_FLAG
    java.lang.String getContentType(org.codegist.crest.config.ParamConfig) -> getContentType
    java.lang.String getFileName(org.codegist.crest.config.ParamConfig) -> getFileName
    java.lang.String getContentType(org.codegist.crest.param.Param) -> getContentType
    java.lang.String getFileName(org.codegist.crest.param.Param) -> getFileName
    boolean hasMultiPart(org.codegist.crest.config.ParamConfig[]) -> hasMultiPart
    boolean hasMultiPart(java.util.Map) -> hasMultiPart
    boolean hasMultiPart(org.codegist.crest.param.Param) -> hasMultiPart
    void putMetaDatas(java.util.Map,java.lang.String,java.lang.String) -> putMetaDatas
    java.util.Map toMetaDatas(java.lang.String,java.lang.String) -> toMetaDatas
    void asMultipart(java.util.Map) -> asMultipart
org.codegist.crest.util.Pairs -> org.codegist.crest.util.Pairs:
    java.util.regex.Pattern AMP -> AMP
    java.util.regex.Pattern EQUAL -> EQUAL
    java.util.Comparator PAIR_NAME_VALUE_COMPARATOR -> PAIR_NAME_VALUE_COMPARATOR
    org.codegist.crest.param.EncodedPair toPreEncodedPair(java.lang.String,java.lang.String) -> toPreEncodedPair
    org.codegist.crest.param.EncodedPair toPair(java.lang.String,java.lang.String,java.nio.charset.Charset) -> toPair
    org.codegist.crest.param.EncodedPair toPair(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean) -> toPair
    java.util.List fromUrlEncoded(java.lang.String) -> fromUrlEncoded
    java.util.List sortByNameAndValues(java.util.List) -> sortByNameAndValues
    java.lang.String join(java.util.List,char) -> join
    java.lang.String join(java.util.List,char,char) -> join
    java.lang.String join(java.util.List,char,char,boolean,boolean) -> join
    java.lang.String join(java.util.Iterator,char) -> join
    java.lang.String join(java.util.Iterator,char,char) -> join
    java.lang.String join(java.util.Iterator,char,char,boolean,boolean) -> join
    void join(java.io.Writer,java.util.List,char) -> join
    void join(java.io.Writer,java.util.List,char,char) -> join
    void join(java.io.Writer,java.util.List,char,char,boolean,boolean) -> join
    void join(java.io.Writer,java.util.Iterator,char) -> join
    void join(java.io.Writer,java.util.Iterator,char,char) -> join
    void join(java.io.Writer,java.util.Iterator,char,char,boolean,boolean) -> join
org.codegist.crest.util.Pairs$1 -> org.codegist.crest.util.Pairs$1:
    int compare(org.codegist.crest.param.EncodedPair,org.codegist.crest.param.EncodedPair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.codegist.crest.util.Placeholders -> org.codegist.crest.util.Placeholders:
    java.util.regex.Pattern ESCAPED_OPEN_CURLY_BRACKET -> ESCAPED_OPEN_CURLY_BRACKET
    java.util.regex.Pattern ESCAPED_CLOSE_CURLY_BRACKET -> ESCAPED_CLOSE_CURLY_BRACKET
    java.util.Map compile(java.util.Map) -> compile
    java.lang.String merge(java.util.Map,java.lang.String) -> merge
org.codegist.crest.util.Requests -> org.codegist.crest.util.Requests:
    org.codegist.crest.io.Request from(org.codegist.crest.io.RequestBuilderFactory,org.codegist.crest.config.MethodConfig,java.lang.Object[]) -> from
org.codegist.crest.util.Serializers -> org.codegist.crest.util.Serializers:
    java.lang.String serialize(org.codegist.crest.serializer.Serializer,java.lang.Object,java.nio.charset.Charset) -> serialize
org.codehaus.jackson.Base64Variant -> org.codehaus.jackson.Base64Variant:
    char PADDING_CHAR_NONE -> PADDING_CHAR_NONE
    int BASE64_VALUE_INVALID -> BASE64_VALUE_INVALID
    int BASE64_VALUE_PADDING -> BASE64_VALUE_PADDING
    int[] _asciiToBase64 -> _asciiToBase64
    char[] _base64ToAsciiC -> _base64ToAsciiC
    byte[] _base64ToAsciiB -> _base64ToAsciiB
    java.lang.String _name -> _name
    boolean _usesPadding -> _usesPadding
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    java.lang.String getName() -> getName
    boolean usesPadding() -> usesPadding
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    char getPaddingChar() -> getPaddingChar
    byte getPaddingByte() -> getPaddingByte
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int decodeBase64Char(int) -> decodeBase64Char
    int decodeBase64Byte(byte) -> decodeBase64Byte
    char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],boolean) -> encode
    java.lang.String toString() -> toString
org.codehaus.jackson.Base64Variants -> org.codehaus.jackson.Base64Variants:
    java.lang.String STD_BASE64_ALPHABET -> STD_BASE64_ALPHABET
    org.codehaus.jackson.Base64Variant MIME -> MIME
    org.codehaus.jackson.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    org.codehaus.jackson.Base64Variant PEM -> PEM
    org.codehaus.jackson.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    org.codehaus.jackson.Base64Variant getDefaultVariant() -> getDefaultVariant
org.codehaus.jackson.FormatSchema -> org.codehaus.jackson.FormatSchema:
    java.lang.String getSchemaType() -> getSchemaType
org.codehaus.jackson.JsonEncoding -> org.codehaus.jackson.JsonEncoding:
    org.codehaus.jackson.JsonEncoding UTF8 -> UTF8
    org.codehaus.jackson.JsonEncoding UTF16_BE -> UTF16_BE
    org.codehaus.jackson.JsonEncoding UTF16_LE -> UTF16_LE
    org.codehaus.jackson.JsonEncoding UTF32_BE -> UTF32_BE
    org.codehaus.jackson.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String _javaName -> _javaName
    boolean _bigEndian -> _bigEndian
    org.codehaus.jackson.JsonEncoding[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonEncoding[] values() -> values
    org.codehaus.jackson.JsonEncoding valueOf(java.lang.String) -> valueOf
    java.lang.String getJavaName() -> getJavaName
    boolean isBigEndian() -> isBigEndian
org.codehaus.jackson.JsonFactory -> org.codehaus.jackson.JsonFactory:
    java.lang.String FORMAT_NAME_JSON -> FORMAT_NAME_JSON
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _rootByteSymbols -> _rootByteSymbols
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.io.InputDecorator _inputDecorator -> _inputDecorator
    org.codehaus.jackson.io.OutputDecorator _outputDecorator -> _outputDecorator
    java.lang.String getFormatName() -> getFormatName
    org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor) -> hasFormat
    org.codehaus.jackson.format.MatchStrength hasJSONFormat(org.codehaus.jackson.format.InputAccessor) -> hasJSONFormat
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void enableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> enableParserFeature
    void disableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> disableParserFeature
    void setParserFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setParserFeature
    boolean isParserFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isParserFeatureEnabled
    org.codehaus.jackson.io.InputDecorator getInputDecorator() -> getInputDecorator
    org.codehaus.jackson.JsonFactory setInputDecorator(org.codehaus.jackson.io.InputDecorator) -> setInputDecorator
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void enableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableGeneratorFeature
    void disableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableGeneratorFeature
    void setGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setGeneratorFeature
    boolean isGeneratorFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isGeneratorFeatureEnabled
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    org.codehaus.jackson.JsonFactory setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.OutputDecorator getOutputDecorator() -> getOutputDecorator
    org.codehaus.jackson.JsonFactory setOutputDecorator(org.codehaus.jackson.io.OutputDecorator) -> setOutputDecorator
    org.codehaus.jackson.JsonFactory setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser createJsonParser(java.io.File) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[]) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.Reader,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext) -> _createJsonGenerator
    org.codehaus.jackson.JsonGenerator _createUTF8JsonGenerator(java.io.OutputStream,org.codehaus.jackson.io.IOContext) -> _createUTF8JsonGenerator
    java.io.Writer _createWriter(java.io.OutputStream,org.codehaus.jackson.JsonEncoding,org.codehaus.jackson.io.IOContext) -> _createWriter
    org.codehaus.jackson.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    org.codehaus.jackson.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    java.io.InputStream _optimizedStreamFromURL(java.net.URL) -> _optimizedStreamFromURL
org.codehaus.jackson.JsonGenerationException -> org.codehaus.jackson.JsonGenerationException:
    long serialVersionUID -> serialVersionUID
org.codehaus.jackson.JsonGenerator -> org.codehaus.jackson.JsonGenerator:
    org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    org.codehaus.jackson.JsonGenerator configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void enableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableFeature
    void setFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> setPrettyPrinter
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    void writeNullField(java.lang.String) -> writeNullField
    void writeNumberField(java.lang.String,int) -> writeNumberField
    void writeNumberField(java.lang.String,long) -> writeNumberField
    void writeNumberField(java.lang.String,double) -> writeNumberField
    void writeNumberField(java.lang.String,float) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
org.codehaus.jackson.JsonGenerator$Feature -> org.codehaus.jackson.JsonGenerator$Feature:
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    org.codehaus.jackson.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    org.codehaus.jackson.JsonGenerator$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonGenerator$Feature[] values() -> values
    org.codehaus.jackson.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.JsonLocation -> org.codehaus.jackson.JsonLocation:
    long serialVersionUID -> serialVersionUID
    org.codehaus.jackson.JsonLocation NA -> NA
    long _totalBytes -> _totalBytes
    long _totalChars -> _totalChars
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.Object _sourceRef -> _sourceRef
    java.lang.Object getSourceRef() -> getSourceRef
    int getLineNr() -> getLineNr
    int getColumnNr() -> getColumnNr
    long getCharOffset() -> getCharOffset
    long getByteOffset() -> getByteOffset
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonNode -> org.codehaus.jackson.JsonNode:
    java.util.List NO_NODES -> NO_NODES
    java.util.List NO_STRINGS -> NO_STRINGS
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isPojo() -> isPojo
    boolean isNumber() -> isNumber
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isInt() -> isInt
    boolean isLong() -> isLong
    boolean isDouble() -> isDouble
    boolean isBigDecimal() -> isBigDecimal
    boolean isBigInteger() -> isBigInteger
    boolean isTextual() -> isTextual
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isBinary() -> isBinary
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue() -> getBinaryValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    java.lang.String getValueAsText() -> getValueAsText
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    boolean has(java.lang.String) -> has
    boolean has(int) -> has
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String) -> findValues
    java.util.List findValuesAsText(java.lang.String) -> findValuesAsText
    org.codehaus.jackson.JsonNode findPath(java.lang.String) -> findPath
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String) -> findParents
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator getElements() -> getElements
    java.util.Iterator getFieldNames() -> getFieldNames
    java.util.Iterator getFields() -> getFields
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode getPath(java.lang.String) -> getPath
    org.codehaus.jackson.JsonNode path(int) -> path
    org.codehaus.jackson.JsonNode getPath(int) -> getPath
    org.codehaus.jackson.JsonNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonParser traverse() -> traverse
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonParseException -> org.codehaus.jackson.JsonParseException:
    long serialVersionUID -> serialVersionUID
org.codehaus.jackson.JsonParser -> org.codehaus.jackson.JsonParser:
    int MIN_BYTE_I -> MIN_BYTE_I
    int MAX_BYTE_I -> MAX_BYTE_I
    int MIN_SHORT_I -> MIN_SHORT_I
    int MAX_SHORT_I -> MAX_SHORT_I
    int _features -> _features
    org.codehaus.jackson.JsonToken _currToken -> _currToken
    org.codehaus.jackson.JsonToken _lastClearedToken -> _lastClearedToken
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    org.codehaus.jackson.JsonParser configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void setFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setFeature
    void enableFeature(org.codehaus.jackson.JsonParser$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonParser$Feature) -> disableFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    boolean nextFieldName(org.codehaus.jackson.SerializableString) -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    org.codehaus.jackson.JsonToken getLastClearedToken() -> getLastClearedToken
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    java.lang.Object readValueAs(org.codehaus.jackson.type.TypeReference) -> readValueAs
    java.util.Iterator readValuesAs(java.lang.Class) -> readValuesAs
    java.util.Iterator readValuesAs(org.codehaus.jackson.type.TypeReference) -> readValuesAs
    org.codehaus.jackson.JsonNode readValueAsTree() -> readValueAsTree
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String) -> _constructError
org.codehaus.jackson.JsonParser$1 -> org.codehaus.jackson.JsonParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.JsonParser$Feature -> org.codehaus.jackson.JsonParser$Feature:
    org.codehaus.jackson.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    org.codehaus.jackson.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    org.codehaus.jackson.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    org.codehaus.jackson.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    org.codehaus.jackson.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonParser$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.JsonParser$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$Feature[] values() -> values
    org.codehaus.jackson.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
org.codehaus.jackson.JsonParser$NumberType -> org.codehaus.jackson.JsonParser$NumberType:
    org.codehaus.jackson.JsonParser$NumberType INT -> INT
    org.codehaus.jackson.JsonParser$NumberType LONG -> LONG
    org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    org.codehaus.jackson.JsonParser$NumberType FLOAT -> FLOAT
    org.codehaus.jackson.JsonParser$NumberType DOUBLE -> DOUBLE
    org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    org.codehaus.jackson.JsonParser$NumberType[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$NumberType[] values() -> values
    org.codehaus.jackson.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.JsonProcessingException -> org.codehaus.jackson.JsonProcessingException:
    long serialVersionUID -> serialVersionUID
    org.codehaus.jackson.JsonLocation mLocation -> mLocation
    org.codehaus.jackson.JsonLocation getLocation() -> getLocation
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.codehaus.jackson.JsonStreamContext -> org.codehaus.jackson.JsonStreamContext:
    int TYPE_ROOT -> TYPE_ROOT
    int TYPE_ARRAY -> TYPE_ARRAY
    int TYPE_OBJECT -> TYPE_OBJECT
    int _type -> _type
    int _index -> _index
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    java.lang.String getTypeDesc() -> getTypeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
    java.lang.String getCurrentName() -> getCurrentName
org.codehaus.jackson.JsonToken -> org.codehaus.jackson.JsonToken:
    org.codehaus.jackson.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    org.codehaus.jackson.JsonToken START_OBJECT -> START_OBJECT
    org.codehaus.jackson.JsonToken END_OBJECT -> END_OBJECT
    org.codehaus.jackson.JsonToken START_ARRAY -> START_ARRAY
    org.codehaus.jackson.JsonToken END_ARRAY -> END_ARRAY
    org.codehaus.jackson.JsonToken FIELD_NAME -> FIELD_NAME
    org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    org.codehaus.jackson.JsonToken VALUE_STRING -> VALUE_STRING
    org.codehaus.jackson.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    org.codehaus.jackson.JsonToken VALUE_TRUE -> VALUE_TRUE
    org.codehaus.jackson.JsonToken VALUE_FALSE -> VALUE_FALSE
    org.codehaus.jackson.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> _serialized
    char[] _serializedChars -> _serializedChars
    byte[] _serializedBytes -> _serializedBytes
    org.codehaus.jackson.JsonToken[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonToken[] values() -> values
    org.codehaus.jackson.JsonToken valueOf(java.lang.String) -> valueOf
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    byte[] asByteArray() -> asByteArray
    boolean isNumeric() -> isNumeric
    boolean isScalarValue() -> isScalarValue
org.codehaus.jackson.ObjectCodec -> org.codehaus.jackson.ObjectCodec:
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
org.codehaus.jackson.PrettyPrinter -> org.codehaus.jackson.PrettyPrinter:
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
org.codehaus.jackson.SerializableString -> org.codehaus.jackson.SerializableString:
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
org.codehaus.jackson.Version -> org.codehaus.jackson.Version:
    org.codehaus.jackson.Version UNKNOWN_VERSION -> UNKNOWN_VERSION
    int _majorVersion -> _majorVersion
    int _minorVersion -> _minorVersion
    int _patchLevel -> _patchLevel
    java.lang.String _snapshotInfo -> _snapshotInfo
    org.codehaus.jackson.Version unknownVersion() -> unknownVersion
    boolean isUknownVersion() -> isUknownVersion
    boolean isSnapshot() -> isSnapshot
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
    int getPatchLevel() -> getPatchLevel
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.codehaus.jackson.Version) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.Versioned -> org.codehaus.jackson.Versioned:
    org.codehaus.jackson.Version version() -> version
org.codehaus.jackson.annotate.JacksonAnnotation -> org.codehaus.jackson.annotate.JacksonAnnotation:
org.codehaus.jackson.annotate.JsonAnyGetter -> org.codehaus.jackson.annotate.JsonAnyGetter:
org.codehaus.jackson.annotate.JsonAnySetter -> org.codehaus.jackson.annotate.JsonAnySetter:
org.codehaus.jackson.annotate.JsonAutoDetect -> org.codehaus.jackson.annotate.JsonAutoDetect:
    org.codehaus.jackson.annotate.JsonMethod[] value() -> value
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
org.codehaus.jackson.annotate.JsonAutoDetect$1 -> org.codehaus.jackson.annotate.JsonAutoDetect$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility -> $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility
org.codehaus.jackson.annotate.JsonAutoDetect$Visibility -> org.codehaus.jackson.annotate.JsonAutoDetect$Visibility:
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility ANY -> ANY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NON_PRIVATE -> NON_PRIVATE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> PROTECTED_AND_PUBLIC
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PUBLIC_ONLY -> PUBLIC_ONLY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE -> NONE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] values() -> values
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    boolean isVisible(java.lang.reflect.Member) -> isVisible
org.codehaus.jackson.annotate.JsonBackReference -> org.codehaus.jackson.annotate.JsonBackReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonCreator -> org.codehaus.jackson.annotate.JsonCreator:
org.codehaus.jackson.annotate.JsonGetter -> org.codehaus.jackson.annotate.JsonGetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonIgnore -> org.codehaus.jackson.annotate.JsonIgnore:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonIgnoreProperties -> org.codehaus.jackson.annotate.JsonIgnoreProperties:
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
org.codehaus.jackson.annotate.JsonIgnoreType -> org.codehaus.jackson.annotate.JsonIgnoreType:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonManagedReference -> org.codehaus.jackson.annotate.JsonManagedReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonMethod -> org.codehaus.jackson.annotate.JsonMethod:
    org.codehaus.jackson.annotate.JsonMethod GETTER -> GETTER
    org.codehaus.jackson.annotate.JsonMethod SETTER -> SETTER
    org.codehaus.jackson.annotate.JsonMethod CREATOR -> CREATOR
    org.codehaus.jackson.annotate.JsonMethod FIELD -> FIELD
    org.codehaus.jackson.annotate.JsonMethod IS_GETTER -> IS_GETTER
    org.codehaus.jackson.annotate.JsonMethod NONE -> NONE
    org.codehaus.jackson.annotate.JsonMethod ALL -> ALL
    org.codehaus.jackson.annotate.JsonMethod[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonMethod[] values() -> values
    org.codehaus.jackson.annotate.JsonMethod valueOf(java.lang.String) -> valueOf
    boolean creatorEnabled() -> creatorEnabled
    boolean getterEnabled() -> getterEnabled
    boolean isGetterEnabled() -> isGetterEnabled
    boolean setterEnabled() -> setterEnabled
    boolean fieldEnabled() -> fieldEnabled
org.codehaus.jackson.annotate.JsonProperty -> org.codehaus.jackson.annotate.JsonProperty:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonPropertyOrder -> org.codehaus.jackson.annotate.JsonPropertyOrder:
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
org.codehaus.jackson.annotate.JsonRawValue -> org.codehaus.jackson.annotate.JsonRawValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonSetter -> org.codehaus.jackson.annotate.JsonSetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonSubTypes -> org.codehaus.jackson.annotate.JsonSubTypes:
    org.codehaus.jackson.annotate.JsonSubTypes$Type[] value() -> value
org.codehaus.jackson.annotate.JsonSubTypes$Type -> org.codehaus.jackson.annotate.JsonSubTypes$Type:
    java.lang.Class value() -> value
    java.lang.String name() -> name
org.codehaus.jackson.annotate.JsonTypeInfo -> org.codehaus.jackson.annotate.JsonTypeInfo:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id use() -> use
    org.codehaus.jackson.annotate.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
org.codehaus.jackson.annotate.JsonTypeInfo$As -> org.codehaus.jackson.annotate.JsonTypeInfo$As:
    org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY -> PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_OBJECT -> WRAPPER_OBJECT
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY -> WRAPPER_ARRAY
    org.codehaus.jackson.annotate.JsonTypeInfo$As EXTERNAL_PROPERTY -> EXTERNAL_PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.annotate.JsonTypeInfo$Id -> org.codehaus.jackson.annotate.JsonTypeInfo$Id:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE -> NONE
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS -> CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS -> MINIMAL_CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME -> NAME
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM -> CUSTOM
    java.lang.String _defaultPropertyName -> _defaultPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
org.codehaus.jackson.annotate.JsonTypeInfo$None -> org.codehaus.jackson.annotate.JsonTypeInfo$None:
org.codehaus.jackson.annotate.JsonTypeName -> org.codehaus.jackson.annotate.JsonTypeName:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonUnwrapped -> org.codehaus.jackson.annotate.JsonUnwrapped:
    boolean enabled() -> enabled
org.codehaus.jackson.annotate.JsonValue -> org.codehaus.jackson.annotate.JsonValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonWriteNullProperties -> org.codehaus.jackson.annotate.JsonWriteNullProperties:
    boolean value() -> value
org.codehaus.jackson.format.DataFormatDetector -> org.codehaus.jackson.format.DataFormatDetector:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    org.codehaus.jackson.JsonFactory[] _detectors -> _detectors
    org.codehaus.jackson.format.MatchStrength _optimalMatch -> _optimalMatch
    org.codehaus.jackson.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    org.codehaus.jackson.format.DataFormatDetector withOptimalMatch(org.codehaus.jackson.format.MatchStrength) -> withOptimalMatch
    org.codehaus.jackson.format.DataFormatDetector withMinimalMatch(org.codehaus.jackson.format.MatchStrength) -> withMinimalMatch
    org.codehaus.jackson.format.DataFormatDetector withMaxInputLookahead(int) -> withMaxInputLookahead
    org.codehaus.jackson.format.DataFormatMatcher findFormat(java.io.InputStream) -> findFormat
    org.codehaus.jackson.format.DataFormatMatcher findFormat(byte[]) -> findFormat
    org.codehaus.jackson.format.DataFormatMatcher _findFormat(org.codehaus.jackson.format.InputAccessor$Std) -> _findFormat
org.codehaus.jackson.format.DataFormatMatcher -> org.codehaus.jackson.format.DataFormatMatcher:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedLength -> _bufferedLength
    org.codehaus.jackson.JsonFactory _match -> _match
    org.codehaus.jackson.format.MatchStrength _matchStrength -> _matchStrength
    boolean hasMatch() -> hasMatch
    org.codehaus.jackson.format.MatchStrength getMatchStrength() -> getMatchStrength
    org.codehaus.jackson.JsonFactory getMatch() -> getMatch
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    org.codehaus.jackson.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
org.codehaus.jackson.format.InputAccessor -> org.codehaus.jackson.format.InputAccessor:
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
org.codehaus.jackson.format.InputAccessor$Std -> org.codehaus.jackson.format.InputAccessor$Std:
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _bufferedAmount -> _bufferedAmount
    int _ptr -> _ptr
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
    org.codehaus.jackson.format.DataFormatMatcher createMatcher(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.format.MatchStrength) -> createMatcher
org.codehaus.jackson.format.MatchStrength -> org.codehaus.jackson.format.MatchStrength:
    org.codehaus.jackson.format.MatchStrength NO_MATCH -> NO_MATCH
    org.codehaus.jackson.format.MatchStrength INCONCLUSIVE -> INCONCLUSIVE
    org.codehaus.jackson.format.MatchStrength WEAK_MATCH -> WEAK_MATCH
    org.codehaus.jackson.format.MatchStrength SOLID_MATCH -> SOLID_MATCH
    org.codehaus.jackson.format.MatchStrength FULL_MATCH -> FULL_MATCH
    org.codehaus.jackson.format.MatchStrength[] $VALUES -> $VALUES
    org.codehaus.jackson.format.MatchStrength[] values() -> values
    org.codehaus.jackson.format.MatchStrength valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.impl.ByteSourceBootstrapper -> org.codehaus.jackson.impl.ByteSourceBootstrapper:
    byte UTF8_BOM_1 -> UTF8_BOM_1
    byte UTF8_BOM_2 -> UTF8_BOM_2
    byte UTF8_BOM_3 -> UTF8_BOM_3
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _inputBuffer -> _inputBuffer
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    boolean _bufferRecyclable -> _bufferRecyclable
    int _inputProcessed -> _inputProcessed
    boolean _bigEndian -> _bigEndian
    int _bytesPerChar -> _bytesPerChar
    org.codehaus.jackson.JsonEncoding detectEncoding() -> detectEncoding
    java.io.Reader constructReader() -> constructReader
    org.codehaus.jackson.JsonParser constructParser(int,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> constructParser
    org.codehaus.jackson.format.MatchStrength hasJSONFormat(org.codehaus.jackson.format.InputAccessor) -> hasJSONFormat
    org.codehaus.jackson.format.MatchStrength tryMatch(org.codehaus.jackson.format.InputAccessor,java.lang.String,org.codehaus.jackson.format.MatchStrength) -> tryMatch
    int skipSpace(org.codehaus.jackson.format.InputAccessor) -> skipSpace
    int skipSpace(org.codehaus.jackson.format.InputAccessor,byte) -> skipSpace
    boolean handleBOM(int) -> handleBOM
    boolean checkUTF32(int) -> checkUTF32
    boolean checkUTF16(int) -> checkUTF16
    void reportWeirdUCS4(java.lang.String) -> reportWeirdUCS4
    boolean ensureLoaded(int) -> ensureLoaded
org.codehaus.jackson.impl.ByteSourceBootstrapper$1 -> org.codehaus.jackson.impl.ByteSourceBootstrapper$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonEncoding -> $SwitchMap$org$codehaus$jackson$JsonEncoding
org.codehaus.jackson.impl.DefaultPrettyPrinter -> org.codehaus.jackson.impl.DefaultPrettyPrinter:
org.codehaus.jackson.impl.Indenter -> org.codehaus.jackson.impl.Indenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.impl.JsonGeneratorBase -> org.codehaus.jackson.impl.JsonGeneratorBase:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> getOutputContext
    void writeStartArray() -> writeStartArray
    void _writeStartArray() -> _writeStartArray
    void writeEndArray() -> writeEndArray
    void _writeEndArray() -> _writeEndArray
    void writeStartObject() -> writeStartObject
    void _writeStartObject() -> _writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeEndObject() -> _writeEndObject
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _reportError(java.lang.String) -> _reportError
    void _cantHappen() -> _cantHappen
    void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
    void _throwInternal() -> _throwInternal
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
org.codehaus.jackson.impl.JsonGeneratorBase$1 -> org.codehaus.jackson.impl.JsonGeneratorBase$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.JsonNumericParserBase -> org.codehaus.jackson.impl.JsonNumericParserBase:
org.codehaus.jackson.impl.JsonParserBase -> org.codehaus.jackson.impl.JsonParserBase:
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    org.codehaus.jackson.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    int NR_UNKNOWN -> NR_UNKNOWN
    int NR_INT -> NR_INT
    int NR_LONG -> NR_LONG
    int NR_BIGINT -> NR_BIGINT
    int NR_DOUBLE -> NR_DOUBLE
    int NR_BIGDECIMAL -> NR_BIGDECIMAL
    java.math.BigDecimal BD_MIN_LONG -> BD_MIN_LONG
    java.math.BigDecimal BD_MAX_LONG -> BD_MAX_LONG
    java.math.BigDecimal BD_MIN_INT -> BD_MIN_INT
    java.math.BigDecimal BD_MAX_INT -> BD_MAX_INT
    long MIN_INT_L -> MIN_INT_L
    long MAX_INT_L -> MAX_INT_L
    double MIN_LONG_D -> MIN_LONG_D
    double MAX_LONG_D -> MAX_LONG_D
    double MIN_INT_D -> MIN_INT_D
    double MAX_INT_D -> MAX_INT_D
    int INT_0 -> INT_0
    int INT_1 -> INT_1
    int INT_2 -> INT_2
    int INT_3 -> INT_3
    int INT_4 -> INT_4
    int INT_5 -> INT_5
    int INT_6 -> INT_6
    int INT_7 -> INT_7
    int INT_8 -> INT_8
    int INT_9 -> INT_9
    int INT_MINUS -> INT_MINUS
    int INT_PLUS -> INT_PLUS
    int INT_DECIMAL_POINT -> INT_DECIMAL_POINT
    int INT_e -> INT_e
    int INT_E -> INT_E
    char CHAR_NULL -> CHAR_NULL
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    org.codehaus.jackson.Version version() -> version
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.impl.JsonReadContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean hasTextCharacters() -> hasTextCharacters
    long getTokenCharacterOffset() -> getTokenCharacterOffset
    int getTokenLineNr() -> getTokenLineNr
    int getTokenColumnNr() -> getTokenColumnNr
    void loadMoreGuaranteed() -> loadMoreGuaranteed
    boolean loadMore() -> loadMore
    void _finishString() -> _finishString
    void _closeInput() -> _closeInput
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _releaseBuffers() -> _releaseBuffers
    void _handleEOF() -> _handleEOF
    void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    org.codehaus.jackson.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    org.codehaus.jackson.JsonToken reset(boolean,int,int,int) -> reset
    org.codehaus.jackson.JsonToken resetInt(boolean,int) -> resetInt
    org.codehaus.jackson.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    org.codehaus.jackson.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    void _parseNumericValue(int) -> _parseNumericValue
    void _parseSlowFloatValue(int) -> _parseSlowFloatValue
    void _parseSlowIntValue(int,char[],int,int) -> _parseSlowIntValue
    void convertNumberToInt() -> convertNumberToInt
    void convertNumberToLong() -> convertNumberToLong
    void convertNumberToBigInteger() -> convertNumberToBigInteger
    void convertNumberToDouble() -> convertNumberToDouble
    void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    void reportOverflowInt() -> reportOverflowInt
    void reportOverflowLong() -> reportOverflowLong
    char _decodeEscaped() -> _decodeEscaped
    int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,int,int) -> _decodeBase64Escape
    int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,char,int) -> _decodeBase64Escape
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int) -> reportInvalidBase64Char
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
org.codehaus.jackson.impl.JsonParserMinimalBase -> org.codehaus.jackson.impl.JsonParserMinimalBase:
    int INT_TAB -> INT_TAB
    int INT_LF -> INT_LF
    int INT_CR -> INT_CR
    int INT_SPACE -> INT_SPACE
    int INT_LBRACKET -> INT_LBRACKET
    int INT_RBRACKET -> INT_RBRACKET
    int INT_LCURLY -> INT_LCURLY
    int INT_RCURLY -> INT_RCURLY
    int INT_QUOTE -> INT_QUOTE
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_SLASH -> INT_SLASH
    int INT_COLON -> INT_COLON
    int INT_COMMA -> INT_COMMA
    int INT_ASTERISK -> INT_ASTERISK
    int INT_APOSTROPHE -> INT_APOSTROPHE
    int INT_b -> INT_b
    int INT_f -> INT_f
    int INT_n -> INT_n
    int INT_r -> INT_r
    int INT_t -> INT_t
    int INT_u -> INT_u
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    boolean hasTextCharacters() -> hasTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble(double) -> getValueAsDouble
    void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    void _reportInvalidEOF() -> _reportInvalidEOF
    void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    void _throwInvalidSpace(int) -> _throwInvalidSpace
    void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    java.lang.String _getCharDesc(int) -> _getCharDesc
    void _reportError(java.lang.String) -> _reportError
    void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    void _throwInternal() -> _throwInternal
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
org.codehaus.jackson.impl.JsonParserMinimalBase$1 -> org.codehaus.jackson.impl.JsonParserMinimalBase$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.JsonReadContext -> org.codehaus.jackson.impl.JsonReadContext:
    org.codehaus.jackson.impl.JsonReadContext _parent -> _parent
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonReadContext _child -> _child
    void reset(int,int,int) -> reset
    org.codehaus.jackson.impl.JsonReadContext createRootContext(int,int) -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.impl.JsonReadContext getParent() -> getParent
    org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    boolean expectComma() -> expectComma
    void setCurrentName(java.lang.String) -> setCurrentName
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.JsonWriteContext -> org.codehaus.jackson.impl.JsonWriteContext:
    int STATUS_OK_AS_IS -> STATUS_OK_AS_IS
    int STATUS_OK_AFTER_COMMA -> STATUS_OK_AFTER_COMMA
    int STATUS_OK_AFTER_COLON -> STATUS_OK_AFTER_COLON
    int STATUS_OK_AFTER_SPACE -> STATUS_OK_AFTER_SPACE
    int STATUS_EXPECT_VALUE -> STATUS_EXPECT_VALUE
    int STATUS_EXPECT_NAME -> STATUS_EXPECT_NAME
    org.codehaus.jackson.impl.JsonWriteContext _parent -> _parent
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonWriteContext _child -> _child
    org.codehaus.jackson.impl.JsonWriteContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonWriteContext reset(int) -> reset
    org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    org.codehaus.jackson.impl.JsonWriteContext getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> writeFieldName
    int writeValue() -> writeValue
    void appendDesc(java.lang.StringBuilder) -> appendDesc
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.ReaderBasedParser -> org.codehaus.jackson.impl.ReaderBasedParser:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _symbols -> _symbols
    boolean _tokenIncomplete -> _tokenIncomplete
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String _getText2(org.codehaus.jackson.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken _nextAfterName() -> _nextAfterName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    void close() -> close
    org.codehaus.jackson.JsonToken parseNumberText(int) -> parseNumberText
    org.codehaus.jackson.JsonToken parseNumberText2(boolean) -> parseNumberText2
    char _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    org.codehaus.jackson.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    java.lang.String _parseFieldName(int) -> _parseFieldName
    java.lang.String _parseFieldName2(int,int,int) -> _parseFieldName2
    java.lang.String _handleUnusualFieldName(int) -> _handleUnusualFieldName
    java.lang.String _parseApostropheFieldName() -> _parseApostropheFieldName
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    org.codehaus.jackson.JsonToken _handleApostropheValue() -> _handleApostropheValue
    java.lang.String _parseUnusualFieldName2(int,int,int[]) -> _parseUnusualFieldName2
    void _finishString() -> _finishString
    void _finishString2() -> _finishString2
    void _skipString() -> _skipString
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    void _skipCppComment() -> _skipCppComment
    char _decodeEscaped() -> _decodeEscaped
    void _matchToken(java.lang.String,int) -> _matchToken
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
org.codehaus.jackson.impl.ReaderBasedParser$1 -> org.codehaus.jackson.impl.ReaderBasedParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.ReaderBasedParserBase -> org.codehaus.jackson.impl.ReaderBasedParserBase:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    boolean _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
org.codehaus.jackson.impl.StreamBasedParserBase -> org.codehaus.jackson.impl.StreamBasedParserBase:
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
org.codehaus.jackson.impl.Utf8Generator -> org.codehaus.jackson.impl.Utf8Generator:
    byte BYTE_u -> BYTE_u
    byte BYTE_0 -> BYTE_0
    byte BYTE_LBRACKET -> BYTE_LBRACKET
    byte BYTE_RBRACKET -> BYTE_RBRACKET
    byte BYTE_LCURLY -> BYTE_LCURLY
    byte BYTE_RCURLY -> BYTE_RCURLY
    byte BYTE_BACKSLASH -> BYTE_BACKSLASH
    byte BYTE_SPACE -> BYTE_SPACE
    byte BYTE_COMMA -> BYTE_COMMA
    byte BYTE_COLON -> BYTE_COLON
    byte BYTE_QUOTE -> BYTE_QUOTE
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int MAX_BYTES_TO_BUFFER -> MAX_BYTES_TO_BUFFER
    byte[] HEX_CHARS -> HEX_CHARS
    byte[] NULL_BYTES -> NULL_BYTES
    byte[] TRUE_BYTES -> TRUE_BYTES
    byte[] FALSE_BYTES -> FALSE_BYTES
    int[] sOutputEscapes -> sOutputEscapes
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    java.io.OutputStream _outputStream -> _outputStream
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    byte[] _outputBuffer -> _outputBuffer
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    int _outputMaxContiguous -> _outputMaxContiguous
    char[] _charBuffer -> _charBuffer
    int _charBufferLength -> _charBufferLength
    byte[] _entityBuffer -> _entityBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String) -> _writeFieldName
    void _writeFieldName(org.codehaus.jackson.SerializableString) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeLongString(char[],int,int) -> _writeLongString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void _writeSegmentedRaw(char[],int,int) -> _writeSegmentedRaw
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeBytes(byte[]) -> _writeBytes
    void _writeBytes(byte[],int,int) -> _writeBytes
    void _writeStringSegments(java.lang.String) -> _writeStringSegments
    void _writeStringSegments(char[],int,int) -> _writeStringSegments
    void _writeStringSegment(char[],int,int) -> _writeStringSegment
    void _writeStringSegment2(char[],int,int) -> _writeStringSegment2
    void _writeStringSegmentASCII2(char[],int,int) -> _writeStringSegmentASCII2
    void _writeCustomStringSegment2(char[],int,int) -> _writeCustomStringSegment2
    int _writeCustomEscape(byte[],int,org.codehaus.jackson.SerializableString,int) -> _writeCustomEscape
    int _handleLongCustomEscape(byte[],int,int,byte[],int) -> _handleLongCustomEscape
    void _writeUTF8Segments(byte[],int,int) -> _writeUTF8Segments
    void _writeUTF8Segment(byte[],int,int) -> _writeUTF8Segment
    void _writeUTF8Segment2(byte[],int,int) -> _writeUTF8Segment2
    void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> _writeBinary
    int _outputRawMultiByteChar(int,char[],int,int) -> _outputRawMultiByteChar
    void _outputSurrogates(int,int) -> _outputSurrogates
    int _outputMultiByteChar(int,int) -> _outputMultiByteChar
    int _decodeSurrogate(int,int) -> _decodeSurrogate
    void _writeNull() -> _writeNull
    int _writeGenericEscape(int,int) -> _writeGenericEscape
    void _flushBuffer() -> _flushBuffer
org.codehaus.jackson.impl.Utf8StreamParser -> org.codehaus.jackson.impl.Utf8StreamParser:
    byte BYTE_LF -> BYTE_LF
    int[] sInputCodesUtf8 -> sInputCodesUtf8
    int[] sInputCodesLatin1 -> sInputCodesLatin1
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> _quad1
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String _getText2(org.codehaus.jackson.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    org.codehaus.jackson.JsonToken _nextAfterName() -> _nextAfterName
    void close() -> close
    boolean nextFieldName(org.codehaus.jackson.SerializableString) -> nextFieldName
    void _isNextTokenNameYes() -> _isNextTokenNameYes
    void _isNextTokenNameNo(int) -> _isNextTokenNameNo
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    org.codehaus.jackson.JsonToken parseNumberText(int) -> parseNumberText
    org.codehaus.jackson.JsonToken _parserNumber2(char[],int,boolean,int) -> _parserNumber2
    int _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    org.codehaus.jackson.JsonToken _parseFloatText(char[],int,int,boolean,int) -> _parseFloatText
    org.codehaus.jackson.sym.Name _parseFieldName(int) -> _parseFieldName
    org.codehaus.jackson.sym.Name parseMediumFieldName(int,int[]) -> parseMediumFieldName
    org.codehaus.jackson.sym.Name parseLongFieldName(int) -> parseLongFieldName
    org.codehaus.jackson.sym.Name slowParseFieldName() -> slowParseFieldName
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int) -> parseFieldName
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int,int) -> parseFieldName
    org.codehaus.jackson.sym.Name parseEscapedFieldName(int[],int,int,int,int) -> parseEscapedFieldName
    org.codehaus.jackson.sym.Name _handleUnusualFieldName(int) -> _handleUnusualFieldName
    org.codehaus.jackson.sym.Name _parseApostropheFieldName() -> _parseApostropheFieldName
    org.codehaus.jackson.sym.Name findName(int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int,int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int[],int,int,int) -> findName
    org.codehaus.jackson.sym.Name addName(int[],int,int) -> addName
    void _finishString() -> _finishString
    void _finishString2(char[],int) -> _finishString2
    void _skipString() -> _skipString
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    org.codehaus.jackson.JsonToken _handleApostropheValue() -> _handleApostropheValue
    org.codehaus.jackson.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    void _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    int _skipColon() -> _skipColon
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    void _skipCppComment() -> _skipCppComment
    char _decodeEscaped() -> _decodeEscaped
    int _decodeCharForError(int) -> _decodeCharForError
    int _decodeUtf8_2(int) -> _decodeUtf8_2
    int _decodeUtf8_3(int) -> _decodeUtf8_3
    int _decodeUtf8_3fast(int) -> _decodeUtf8_3fast
    int _decodeUtf8_4(int) -> _decodeUtf8_4
    void _skipUtf8_2(int) -> _skipUtf8_2
    void _skipUtf8_3(int) -> _skipUtf8_3
    void _skipUtf8_4(int) -> _skipUtf8_4
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int nextByte() -> nextByte
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int) -> _reportInvalidOther
    void _reportInvalidOther(int,int) -> _reportInvalidOther
    int[] growArrayBy(int[],int) -> growArrayBy
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
org.codehaus.jackson.impl.Utf8StreamParser$1 -> org.codehaus.jackson.impl.Utf8StreamParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.WriterBasedGenerator -> org.codehaus.jackson.impl.WriterBasedGenerator:
    int SHORT_WRITE -> SHORT_WRITE
    char[] HEX_CHARS -> HEX_CHARS
    int[] sOutputEscapes -> sOutputEscapes
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    java.io.Writer _writer -> _writer
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.SerializableString _currentEscape -> _currentEscape
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    void _writeFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawLong(java.lang.String) -> writeRawLong
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeString(java.lang.String) -> _writeString
    void _writeString2(int) -> _writeString2
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeSegment(int) -> _writeSegment
    void _writeString(char[],int,int) -> _writeString
    void _writeStringASCII(int,int) -> _writeStringASCII
    void _writeSegmentASCII(int,int) -> _writeSegmentASCII
    void _writeStringASCII(char[],int,int,int) -> _writeStringASCII
    void _writeStringCustom(int) -> _writeStringCustom
    void _writeSegmentCustom(int) -> _writeSegmentCustom
    void _writeStringCustom(char[],int,int) -> _writeStringCustom
    void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> _writeBinary
    void _writeNull() -> _writeNull
    void _prependOrWriteCharacterEscape(char,int) -> _prependOrWriteCharacterEscape
    int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> _prependOrWriteCharacterEscape
    void _appendCharacterEscape(char,int) -> _appendCharacterEscape
    char[] _allocateEntityBuffer() -> _allocateEntityBuffer
    void _flushBuffer() -> _flushBuffer
org.codehaus.jackson.io.BaseReader -> org.codehaus.jackson.io.BaseReader:
    int LAST_VALID_UNICODE_CHAR -> LAST_VALID_UNICODE_CHAR
    char NULL_CHAR -> NULL_CHAR
    char NULL_BYTE -> NULL_BYTE
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _length -> _length
    char[] _tmpBuf -> _tmpBuf
    void close() -> close
    int read() -> read
    void freeBuffers() -> freeBuffers
    void reportBounds(char[],int,int) -> reportBounds
    void reportStrangeStream() -> reportStrangeStream
org.codehaus.jackson.io.CharacterEscapes -> org.codehaus.jackson.io.CharacterEscapes:
    int ESCAPE_NONE -> ESCAPE_NONE
    int ESCAPE_STANDARD -> ESCAPE_STANDARD
    int ESCAPE_CUSTOM -> ESCAPE_CUSTOM
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    org.codehaus.jackson.SerializableString getEscapeSequence(int) -> getEscapeSequence
    int[] standardAsciiEscapesForJSON() -> standardAsciiEscapesForJSON
org.codehaus.jackson.io.IOContext -> org.codehaus.jackson.io.IOContext:
    java.lang.Object _sourceRef -> _sourceRef
    org.codehaus.jackson.JsonEncoding _encoding -> _encoding
    boolean _managedResource -> _managedResource
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    void setEncoding(org.codehaus.jackson.JsonEncoding) -> setEncoding
    java.lang.Object getSourceReference() -> getSourceReference
    org.codehaus.jackson.JsonEncoding getEncoding() -> getEncoding
    boolean isResourceManaged() -> isResourceManaged
    org.codehaus.jackson.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    byte[] allocReadIOBuffer() -> allocReadIOBuffer
    byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    char[] allocTokenBuffer() -> allocTokenBuffer
    char[] allocConcatBuffer() -> allocConcatBuffer
    char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
org.codehaus.jackson.io.InputDecorator -> org.codehaus.jackson.io.InputDecorator:
    java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,byte[],int,int) -> decorate
    java.io.Reader decorate(org.codehaus.jackson.io.IOContext,java.io.Reader) -> decorate
org.codehaus.jackson.io.JsonStringEncoder -> org.codehaus.jackson.io.JsonStringEncoder:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_U -> INT_U
    int INT_0 -> INT_0
    java.lang.ThreadLocal _threadEncoder -> _threadEncoder
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    char[] _quoteBuffer -> _quoteBuffer
    org.codehaus.jackson.io.JsonStringEncoder getInstance() -> getInstance
    char[] quoteAsString(java.lang.String) -> quoteAsString
    byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    int _appendSingleEscape(int,char[]) -> _appendSingleEscape
    int _appendByteEscape(int,int,org.codehaus.jackson.util.ByteArrayBuilder,int) -> _appendByteEscape
    int _convertSurrogate(int,int) -> _convertSurrogate
    void _throwIllegalSurrogate(int) -> _throwIllegalSurrogate
org.codehaus.jackson.io.MergedStream -> org.codehaus.jackson.io.MergedStream:
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _end -> _end
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void freeMergedBuffer() -> freeMergedBuffer
org.codehaus.jackson.io.NumberInput -> org.codehaus.jackson.io.NumberInput:
    java.lang.String NASTY_SMALL_DOUBLE -> NASTY_SMALL_DOUBLE
    long L_BILLION -> L_BILLION
    java.lang.String MIN_LONG_STR_NO_SIGN -> MIN_LONG_STR_NO_SIGN
    java.lang.String MAX_LONG_STR -> MAX_LONG_STR
    int parseInt(char[],int,int) -> parseInt
    int parseInt(java.lang.String) -> parseInt
    long parseLong(char[],int,int) -> parseLong
    long parseLong(java.lang.String) -> parseLong
    boolean inLongRange(char[],int,int,boolean) -> inLongRange
    boolean inLongRange(java.lang.String,boolean) -> inLongRange
    int parseAsInt(java.lang.String,int) -> parseAsInt
    long parseAsLong(java.lang.String,long) -> parseAsLong
    double parseAsDouble(java.lang.String,double) -> parseAsDouble
    double parseDouble(java.lang.String) -> parseDouble
org.codehaus.jackson.io.NumberOutput -> org.codehaus.jackson.io.NumberOutput:
    char NULL_CHAR -> NULL_CHAR
    int MILLION -> MILLION
    int BILLION -> BILLION
    long TEN_BILLION_L -> TEN_BILLION_L
    long THOUSAND_L -> THOUSAND_L
    long MIN_INT_AS_LONG -> MIN_INT_AS_LONG
    long MAX_INT_AS_LONG -> MAX_INT_AS_LONG
    java.lang.String SMALLEST_LONG -> SMALLEST_LONG
    char[] LEADING_TRIPLETS -> LEADING_TRIPLETS
    char[] FULL_TRIPLETS -> FULL_TRIPLETS
    byte[] FULL_TRIPLETS_B -> FULL_TRIPLETS_B
    java.lang.String[] sSmallIntStrs -> sSmallIntStrs
    java.lang.String[] sSmallIntStrs2 -> sSmallIntStrs2
    int outputInt(int,char[],int) -> outputInt
    int outputInt(int,byte[],int) -> outputInt
    int outputLong(long,char[],int) -> outputLong
    int outputLong(long,byte[],int) -> outputLong
    java.lang.String toString(int) -> toString
    java.lang.String toString(long) -> toString
    java.lang.String toString(double) -> toString
    int outputLeadingTriplet(int,char[],int) -> outputLeadingTriplet
    int outputLeadingTriplet(int,byte[],int) -> outputLeadingTriplet
    int outputFullTriplet(int,char[],int) -> outputFullTriplet
    int outputFullTriplet(int,byte[],int) -> outputFullTriplet
    int calcLongStrLength(long) -> calcLongStrLength
org.codehaus.jackson.io.OutputDecorator -> org.codehaus.jackson.io.OutputDecorator:
    java.io.OutputStream decorate(org.codehaus.jackson.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(org.codehaus.jackson.io.IOContext,java.io.Writer) -> decorate
org.codehaus.jackson.io.SegmentedStringWriter -> org.codehaus.jackson.io.SegmentedStringWriter:
    org.codehaus.jackson.util.TextBuffer _buffer -> _buffer
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.lang.String getAndClear() -> getAndClear
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.codehaus.jackson.io.SerializedString -> org.codehaus.jackson.io.SerializedString:
    java.lang.String _value -> _value
    byte[] _quotedUTF8Ref -> _quotedUTF8Ref
    byte[] _unquotedUTF8Ref -> _unquotedUTF8Ref
    char[] _quotedChars -> _quotedChars
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.io.UTF32Reader -> org.codehaus.jackson.io.UTF32Reader:
    boolean mBigEndian -> mBigEndian
    char mSurrogate -> mSurrogate
    int mCharCount -> mCharCount
    int mByteCount -> mByteCount
    int read(char[],int,int) -> read
    void reportUnexpectedEOF(int,int) -> reportUnexpectedEOF
    void reportInvalid(int,int,java.lang.String) -> reportInvalid
    boolean loadMore(int) -> loadMore
    int read() -> read
    void close() -> close
org.codehaus.jackson.io.UTF8Writer -> org.codehaus.jackson.io.UTF8Writer:
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.OutputStream _out -> _out
    byte[] _outBuffer -> _outBuffer
    int _outBufferEnd -> _outBufferEnd
    int _outPtr -> _outPtr
    int _surrogate -> _surrogate
    java.io.Writer append(char) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    int convertSurrogate(int) -> convertSurrogate
    void throwIllegal(int) -> throwIllegal
    java.lang.Appendable append(char) -> append
org.codehaus.jackson.map.AbstractTypeResolver -> org.codehaus.jackson.map.AbstractTypeResolver:
    org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findTypeMapping
    org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> resolveAbstractType
org.codehaus.jackson.map.AnnotationIntrospector -> org.codehaus.jackson.map.AnnotationIntrospector:
    org.codehaus.jackson.map.AnnotationIntrospector nopInstance() -> nopInstance
    org.codehaus.jackson.map.AnnotationIntrospector pair(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector) -> pair
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
org.codehaus.jackson.map.AnnotationIntrospector$Pair -> org.codehaus.jackson.map.AnnotationIntrospector$Pair:
    org.codehaus.jackson.map.AnnotationIntrospector _primary -> _primary
    org.codehaus.jackson.map.AnnotationIntrospector _secondary -> _secondary
    org.codehaus.jackson.map.AnnotationIntrospector create(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector) -> create
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type -> _type
    java.lang.String _name -> _name
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type getType() -> getType
    java.lang.String getName() -> getName
    boolean isManagedReference() -> isManagedReference
    boolean isBackReference() -> isBackReference
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> MANAGED_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> BACK_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> $VALUES
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.BeanDescription -> org.codehaus.jackson.map.BeanDescription:
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    java.util.List findProperties() -> findProperties
    java.util.Map findInjectables() -> findInjectables
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter() -> findAnyGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findGetters
    java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker) -> findSetters
    java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findDeserializableFields
    java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
org.codehaus.jackson.map.BeanProperty -> org.codehaus.jackson.map.BeanProperty:
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanProperty$Std -> org.codehaus.jackson.map.BeanProperty$Std:
    java.lang.String _name -> _name
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType) -> withType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanPropertyDefinition -> org.codehaus.jackson.map.BeanPropertyDefinition:
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    boolean couldDeserialize() -> couldDeserialize
    boolean couldSerialize() -> couldSerialize
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
org.codehaus.jackson.map.ClassIntrospector -> org.codehaus.jackson.map.ClassIntrospector:
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
org.codehaus.jackson.map.ClassIntrospector$MixInResolver -> org.codehaus.jackson.map.ClassIntrospector$MixInResolver:
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
org.codehaus.jackson.map.ContextualDeserializer -> org.codehaus.jackson.map.ContextualDeserializer:
    org.codehaus.jackson.map.JsonDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualKeyDeserializer -> org.codehaus.jackson.map.ContextualKeyDeserializer:
    org.codehaus.jackson.map.KeyDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualSerializer -> org.codehaus.jackson.map.ContextualSerializer:
    org.codehaus.jackson.map.JsonSerializer createContextual(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.DeserializationConfig -> org.codehaus.jackson.map.DeserializationConfig:
    org.codehaus.jackson.map.util.LinkedNode _problemHandlers -> _problemHandlers
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean _sortPropertiesAlphabetically -> _sortPropertiesAlphabetically
    org.codehaus.jackson.map.DeserializationConfig passSerializationFeatures(int) -> passSerializationFeatures
    org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.DeserializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.DeserializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> withNodeFactory
    org.codehaus.jackson.map.DeserializationConfig with(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> with
    org.codehaus.jackson.map.DeserializationConfig without(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> without
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    org.codehaus.jackson.map.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    void addHandler(org.codehaus.jackson.map.DeserializationProblemHandler) -> addHandler
    void clearHandlers() -> clearHandlers
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.BeanDescription introspectForCreation(org.codehaus.jackson.type.JavaType) -> introspectForCreation
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
org.codehaus.jackson.map.DeserializationConfig$Feature -> org.codehaus.jackson.map.DeserializationConfig$Feature:
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS -> AUTO_DETECT_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS -> AUTO_DETECT_CREATORS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS -> USE_GETTERS_AS_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS -> USE_BIG_DECIMAL_FOR_FLOATS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS -> USE_BIG_INTEGER_FOR_INTS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> USE_JAVA_ARRAY_FOR_JSON_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING -> READ_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES -> FAIL_ON_UNKNOWN_PROPERTIES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES -> FAIL_ON_NULL_FOR_PRIMITIVES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS -> FAIL_ON_NUMBERS_FOR_ENUMS
    org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE -> UNWRAP_ROOT_VALUE
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> ACCEPT_EMPTY_STRING_AS_NULL_OBJECT
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.DeserializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.DeserializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.DeserializationContext -> org.codehaus.jackson.map.DeserializationContext:
    org.codehaus.jackson.map.DeserializationConfig _config -> _config
    int _featureFlags -> _featureFlags
    org.codehaus.jackson.map.DeserializationConfig getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.JsonParser getParser() -> getParser
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
org.codehaus.jackson.map.DeserializationProblemHandler -> org.codehaus.jackson.map.DeserializationProblemHandler:
    boolean handleUnknownProperty(org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
org.codehaus.jackson.map.DeserializerFactory -> org.codehaus.jackson.map.DeserializerFactory:
    org.codehaus.jackson.map.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    org.codehaus.jackson.map.DeserializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.DeserializerFactory withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
org.codehaus.jackson.map.DeserializerFactory$Config -> org.codehaus.jackson.map.DeserializerFactory$Config:
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
org.codehaus.jackson.map.DeserializerProvider -> org.codehaus.jackson.map.DeserializerProvider:
    org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
    org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> hasValueDeserializerFor
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
org.codehaus.jackson.map.Deserializers -> org.codehaus.jackson.map.Deserializers:
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
org.codehaus.jackson.map.Deserializers$Base -> org.codehaus.jackson.map.Deserializers$Base:
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
org.codehaus.jackson.map.Deserializers$None -> org.codehaus.jackson.map.Deserializers$None:
org.codehaus.jackson.map.HandlerInstantiator -> org.codehaus.jackson.map.HandlerInstantiator:
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
org.codehaus.jackson.map.InjectableValues -> org.codehaus.jackson.map.InjectableValues:
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
org.codehaus.jackson.map.InjectableValues$Std -> org.codehaus.jackson.map.InjectableValues$Std:
    java.util.Map _values -> _values
    org.codehaus.jackson.map.InjectableValues$Std addValue(java.lang.String,java.lang.Object) -> addValue
    org.codehaus.jackson.map.InjectableValues$Std addValue(java.lang.Class,java.lang.Object) -> addValue
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
org.codehaus.jackson.map.JsonDeserializer -> org.codehaus.jackson.map.JsonDeserializer:
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object getNullValue() -> getNullValue
    java.lang.Object getEmptyValue() -> getEmptyValue
org.codehaus.jackson.map.JsonDeserializer$None -> org.codehaus.jackson.map.JsonDeserializer$None:
org.codehaus.jackson.map.JsonMappingException -> org.codehaus.jackson.map.JsonMappingException:
    long serialVersionUID -> serialVersionUID
    int MAX_REFS_TO_LIST -> MAX_REFS_TO_LIST
    java.util.LinkedList _path -> _path
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String) -> from
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String,java.lang.Throwable) -> from
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,org.codehaus.jackson.map.JsonMappingException$Reference) -> wrapWithPath
    java.util.List getPath() -> getPath
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(java.lang.Object,int) -> prependPath
    void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference) -> prependPath
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
    void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
org.codehaus.jackson.map.JsonMappingException$Reference -> org.codehaus.jackson.map.JsonMappingException$Reference:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _from -> _from
    java.lang.String _fieldName -> _fieldName
    int _index -> _index
    void setFrom(java.lang.Object) -> setFrom
    void setFieldName(java.lang.String) -> setFieldName
    void setIndex(int) -> setIndex
    java.lang.Object getFrom() -> getFrom
    java.lang.String getFieldName() -> getFieldName
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
org.codehaus.jackson.map.JsonSerializable -> org.codehaus.jackson.map.JsonSerializable:
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.JsonSerializableWithType -> org.codehaus.jackson.map.JsonSerializableWithType:
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.JsonSerializer -> org.codehaus.jackson.map.JsonSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.JsonSerializer$None -> org.codehaus.jackson.map.JsonSerializer$None:
org.codehaus.jackson.map.KeyDeserializer -> org.codehaus.jackson.map.KeyDeserializer:
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
org.codehaus.jackson.map.KeyDeserializer$None -> org.codehaus.jackson.map.KeyDeserializer$None:
org.codehaus.jackson.map.KeyDeserializers -> org.codehaus.jackson.map.KeyDeserializers:
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
org.codehaus.jackson.map.MapperConfig -> org.codehaus.jackson.map.MapperConfig:
    java.text.DateFormat DEFAULT_DATE_FORMAT -> DEFAULT_DATE_FORMAT
    org.codehaus.jackson.map.MapperConfig$Base _base -> _base
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    boolean _mixInAnnotationsShared -> _mixInAnnotationsShared
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    void setMixInAnnotations(java.util.Map) -> setMixInAnnotations
    void addMixInAnnotations(java.lang.Class,java.lang.Class) -> addMixInAnnotations
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    int mixInCount() -> mixInCount
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getDefaultTyper(org.codehaus.jackson.type.JavaType) -> getDefaultTyper
    org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference) -> constructType
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(java.lang.Class) -> introspectDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    void setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> setAnnotationIntrospector
    void setDateFormat(java.text.DateFormat) -> setDateFormat
org.codehaus.jackson.map.MapperConfig$Base -> org.codehaus.jackson.map.MapperConfig$Base:
    org.codehaus.jackson.map.ClassIntrospector _classIntrospector -> _classIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy _propertyNamingStrategy -> _propertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _typeResolverBuilder -> _typeResolverBuilder
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.HandlerInstantiator _handlerInstantiator -> _handlerInstantiator
    org.codehaus.jackson.map.MapperConfig$Base withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig$Base withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig$Base withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig$Base withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig$Base withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig$Base withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig$Base withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
org.codehaus.jackson.map.MapperConfig$ConfigFeature -> org.codehaus.jackson.map.MapperConfig$ConfigFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.MapperConfig$Impl -> org.codehaus.jackson.map.MapperConfig$Impl:
    int _featureFlags -> _featureFlags
    int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> enable
    void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> disable
    void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean) -> set
org.codehaus.jackson.map.MappingIterator -> org.codehaus.jackson.map.MappingIterator:
    org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.DeserializationContext _context -> _context
    org.codehaus.jackson.map.JsonDeserializer _deserializer -> _deserializer
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.MappingIterator emptyIterator() -> emptyIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    boolean hasNextValue() -> hasNextValue
    java.lang.Object nextValue() -> nextValue
org.codehaus.jackson.map.MappingJsonFactory -> org.codehaus.jackson.map.MappingJsonFactory:
    org.codehaus.jackson.map.ObjectMapper getCodec() -> getCodec
    java.lang.String getFormatName() -> getFormatName
    org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor) -> hasFormat
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
org.codehaus.jackson.map.Module -> org.codehaus.jackson.map.Module:
    java.lang.String getModuleName() -> getModuleName
    org.codehaus.jackson.Version version() -> version
    void setupModule(org.codehaus.jackson.map.Module$SetupContext) -> setupModule
org.codehaus.jackson.map.Module$SetupContext -> org.codehaus.jackson.map.Module$SetupContext:
    org.codehaus.jackson.Version getMapperVersion() -> getMapperVersion
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(org.codehaus.jackson.map.Deserializers) -> addDeserializers
    void addKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(org.codehaus.jackson.map.Serializers) -> addSerializers
    void addKeySerializers(org.codehaus.jackson.map.Serializers) -> addKeySerializers
    void addBeanDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addBeanSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(org.codehaus.jackson.map.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
org.codehaus.jackson.map.ObjectMapper -> org.codehaus.jackson.map.ObjectMapper:
    org.codehaus.jackson.type.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR -> DEFAULT_INTROSPECTOR
    org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> DEFAULT_ANNOTATION_INTROSPECTOR
    org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER -> STD_VISIBILITY_CHECKER
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.SerializationConfig _serializationConfig -> _serializationConfig
    org.codehaus.jackson.map.SerializerProvider _serializerProvider -> _serializerProvider
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.DeserializationConfig _deserializationConfig -> _deserializationConfig
    org.codehaus.jackson.map.DeserializerProvider _deserializerProvider -> _deserializerProvider
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    org.codehaus.jackson.Version version() -> version
    void registerModule(org.codehaus.jackson.map.Module) -> registerModule
    org.codehaus.jackson.map.ObjectMapper withModule(org.codehaus.jackson.map.Module) -> withModule
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    org.codehaus.jackson.map.SerializationConfig copySerializationConfig() -> copySerializationConfig
    org.codehaus.jackson.map.ObjectMapper setSerializationConfig(org.codehaus.jackson.map.SerializationConfig) -> setSerializationConfig
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig() -> copyDeserializationConfig
    org.codehaus.jackson.map.ObjectMapper setDeserializationConfig(org.codehaus.jackson.map.DeserializationConfig) -> setDeserializationConfig
    org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory) -> setSerializerFactory
    org.codehaus.jackson.map.ObjectMapper setSerializerProvider(org.codehaus.jackson.map.SerializerProvider) -> setSerializerProvider
    org.codehaus.jackson.map.SerializerProvider getSerializerProvider() -> getSerializerProvider
    org.codehaus.jackson.map.ObjectMapper setDeserializerProvider(org.codehaus.jackson.map.DeserializerProvider) -> setDeserializerProvider
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    void setVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> setVisibilityChecker
    org.codehaus.jackson.map.ObjectMapper setVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> setVisibility
    org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> setSubtypeResolver
    org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> setAnnotationIntrospector
    org.codehaus.jackson.map.ObjectMapper setPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> setPropertyNamingStrategy
    org.codehaus.jackson.map.ObjectMapper setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> setSerializationInclusion
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping() -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping) -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,org.codehaus.jackson.annotate.JsonTypeInfo$As) -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTypingAsProperty(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,java.lang.String) -> enableDefaultTypingAsProperty
    org.codehaus.jackson.map.ObjectMapper disableDefaultTyping() -> disableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> setDefaultTyping
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.map.ObjectMapper setTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> setTypeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.map.ObjectMapper setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> setNodeFactory
    void setFilters(org.codehaus.jackson.map.ser.FilterProvider) -> setFilters
    org.codehaus.jackson.JsonFactory getJsonFactory() -> getJsonFactory
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> setHandlerInstantiator
    org.codehaus.jackson.map.ObjectMapper setInjectableValues(org.codehaus.jackson.map.InjectableValues) -> setInjectableValues
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> enable
    org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> disable
    org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> enable
    org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> disable
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.InputStream) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.Reader) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.lang.String) -> readTree
    org.codehaus.jackson.JsonNode readTree(byte[]) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.File) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.net.URL) -> readTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> writeValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode,org.codehaus.jackson.map.SerializationConfig) -> writeTree
    org.codehaus.jackson.node.ObjectNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.node.ArrayNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
    org.codehaus.jackson.JsonNode valueToTree(java.lang.Object) -> valueToTree
    boolean canSerialize(java.lang.Class) -> canSerialize
    boolean canDeserialize(org.codehaus.jackson.type.JavaType) -> canDeserialize
    java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.JavaType) -> readValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    org.codehaus.jackson.map.ObjectWriter writer() -> writer
    org.codehaus.jackson.map.ObjectWriter writer(java.text.DateFormat) -> writer
    org.codehaus.jackson.map.ObjectWriter writerWithView(java.lang.Class) -> writerWithView
    org.codehaus.jackson.map.ObjectWriter writerWithType(java.lang.Class) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.JavaType) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.TypeReference) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.PrettyPrinter) -> writer
    org.codehaus.jackson.map.ObjectWriter writerWithDefaultPrettyPrinter() -> writerWithDefaultPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.map.ser.FilterProvider) -> writer
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.FormatSchema) -> writer
    org.codehaus.jackson.map.ObjectWriter typedWriter(java.lang.Class) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.JavaType) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.TypeReference) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter viewWriter(java.lang.Class) -> viewWriter
    org.codehaus.jackson.map.ObjectWriter prettyPrintingWriter(org.codehaus.jackson.PrettyPrinter) -> prettyPrintingWriter
    org.codehaus.jackson.map.ObjectWriter defaultPrettyPrintingWriter() -> defaultPrettyPrintingWriter
    org.codehaus.jackson.map.ObjectWriter filteredWriter(org.codehaus.jackson.map.ser.FilterProvider) -> filteredWriter
    org.codehaus.jackson.map.ObjectWriter schemaBasedWriter(org.codehaus.jackson.FormatSchema) -> schemaBasedWriter
    org.codehaus.jackson.map.ObjectReader reader() -> reader
    org.codehaus.jackson.map.ObjectReader readerForUpdating(java.lang.Object) -> readerForUpdating
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType) -> reader
    org.codehaus.jackson.map.ObjectReader reader(java.lang.Class) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.TypeReference) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.node.JsonNodeFactory) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.FormatSchema) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.map.InjectableValues) -> reader
    org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object) -> updatingReader
    org.codehaus.jackson.map.ObjectReader schemaBasedReader(org.codehaus.jackson.FormatSchema) -> schemaBasedReader
    java.lang.Object convertValue(java.lang.Object,java.lang.Class) -> convertValue
    java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference) -> convertValue
    java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.JavaType) -> convertValue
    java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType) -> _convert
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig) -> generateJsonSchema
    org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter() -> _defaultPrettyPrinter
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class) -> _configAndWriteValue
    void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _configAndWriteCloseable
    void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _writeCloseableValue
    java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readValue
    java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readMapAndClose
    org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) -> _initForReading
    java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer) -> _unwrapAndDeserialize
    org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _findRootDeserializer
    org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> _createDeserializationContext
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
org.codehaus.jackson.map.ObjectMapper$1 -> org.codehaus.jackson.map.ObjectMapper$1:
    org.codehaus.jackson.map.ObjectMapper val$mapper -> val$mapper
    org.codehaus.jackson.map.ObjectMapper this$0 -> this$0
    org.codehaus.jackson.Version getMapperVersion() -> getMapperVersion
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(org.codehaus.jackson.map.Deserializers) -> addDeserializers
    void addKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(org.codehaus.jackson.map.Serializers) -> addSerializers
    void addKeySerializers(org.codehaus.jackson.map.Serializers) -> addKeySerializers
    void addBeanSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addBeanDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(org.codehaus.jackson.map.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
org.codehaus.jackson.map.ObjectMapper$2 -> org.codehaus.jackson.map.ObjectMapper$2:
    int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping -> $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping
org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder -> org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder:
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping _appliesFor -> _appliesFor
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    boolean useForType(org.codehaus.jackson.type.JavaType) -> useForType
org.codehaus.jackson.map.ObjectMapper$DefaultTyping -> org.codehaus.jackson.map.ObjectMapper$DefaultTyping:
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping JAVA_LANG_OBJECT -> JAVA_LANG_OBJECT
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE -> OBJECT_AND_NON_CONCRETE
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_CONCRETE_AND_ARRAYS -> NON_CONCRETE_AND_ARRAYS
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_FINAL -> NON_FINAL
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] $VALUES -> $VALUES
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] values() -> values
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.ObjectReader -> org.codehaus.jackson.map.ObjectReader:
    org.codehaus.jackson.type.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    org.codehaus.jackson.map.DeserializationConfig _config -> _config
    boolean _unwrapRoot -> _unwrapRoot
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    org.codehaus.jackson.map.DeserializerProvider _provider -> _provider
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    java.lang.Object _valueToUpdate -> _valueToUpdate
    org.codehaus.jackson.FormatSchema _schema -> _schema
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType) -> withType
    org.codehaus.jackson.map.ObjectReader withType(java.lang.Class) -> withType
    org.codehaus.jackson.map.ObjectReader withType(java.lang.reflect.Type) -> withType
    org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.TypeReference) -> withType
    org.codehaus.jackson.map.ObjectReader withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> withNodeFactory
    org.codehaus.jackson.map.ObjectReader withValueToUpdate(java.lang.Object) -> withValueToUpdate
    org.codehaus.jackson.map.ObjectReader withSchema(org.codehaus.jackson.FormatSchema) -> withSchema
    org.codehaus.jackson.map.ObjectReader withInjectableValues(org.codehaus.jackson.map.InjectableValues) -> withInjectableValues
    java.lang.Object readValue(org.codehaus.jackson.JsonParser) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    java.lang.Object readValue(java.io.InputStream) -> readValue
    java.lang.Object readValue(java.io.Reader) -> readValue
    java.lang.Object readValue(java.lang.String) -> readValue
    java.lang.Object readValue(byte[]) -> readValue
    java.lang.Object readValue(byte[],int,int) -> readValue
    java.lang.Object readValue(java.io.File) -> readValue
    java.lang.Object readValue(java.net.URL) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode) -> readValue
    org.codehaus.jackson.JsonNode readTree(java.io.InputStream) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.Reader) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.lang.String) -> readTree
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.InputStream) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.Reader) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.lang.String) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(byte[],int,int) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.File) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.net.URL) -> readValues
    java.lang.Object _bind(org.codehaus.jackson.JsonParser) -> _bind
    java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser) -> _bindAndClose
    org.codehaus.jackson.JsonNode _bindAsTree(org.codehaus.jackson.JsonParser) -> _bindAsTree
    org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser) -> _bindAndCloseAsTree
    org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) -> _initForReading
    org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _findRootDeserializer
    org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> _createDeserializationContext
    java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer) -> _unwrapAndDeserialize
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
org.codehaus.jackson.map.ObjectWriter -> org.codehaus.jackson.map.ObjectWriter:
    org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER -> NULL_PRETTY_PRINTER
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    org.codehaus.jackson.map.SerializerProvider _provider -> _provider
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.type.JavaType _rootType -> _rootType
    org.codehaus.jackson.PrettyPrinter _prettyPrinter -> _prettyPrinter
    org.codehaus.jackson.FormatSchema _schema -> _schema
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.map.ObjectWriter withView(java.lang.Class) -> withView
    org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.JavaType) -> withType
    org.codehaus.jackson.map.ObjectWriter withType(java.lang.Class) -> withType
    org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.TypeReference) -> withType
    org.codehaus.jackson.map.ObjectWriter withPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> withPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter withDefaultPrettyPrinter() -> withDefaultPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter withFilters(org.codehaus.jackson.map.ser.FilterProvider) -> withFilters
    org.codehaus.jackson.map.ObjectWriter withSchema(org.codehaus.jackson.FormatSchema) -> withSchema
    org.codehaus.jackson.map.ObjectWriter withDateFormat(java.text.DateFormat) -> withDateFormat
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    boolean canSerialize(java.lang.Class) -> canSerialize
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _configAndWriteCloseable
    void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _writeCloseableValue
org.codehaus.jackson.map.PropertyNamingStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy:
    org.codehaus.jackson.map.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy:
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase -> org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase:
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.ResolvableDeserializer -> org.codehaus.jackson.map.ResolvableDeserializer:
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
org.codehaus.jackson.map.ResolvableSerializer -> org.codehaus.jackson.map.ResolvableSerializer:
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.RuntimeJsonMappingException -> org.codehaus.jackson.map.RuntimeJsonMappingException:
org.codehaus.jackson.map.SerializationConfig -> org.codehaus.jackson.map.SerializationConfig:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion -> _serializationInclusion
    java.lang.Class _serializationView -> _serializationView
    org.codehaus.jackson.map.ser.FilterProvider _filterProvider -> _filterProvider
    org.codehaus.jackson.map.SerializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.SerializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.SerializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider) -> withFilters
    org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class) -> withView
    org.codehaus.jackson.map.SerializationConfig withSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> withSerializationInclusion
    org.codehaus.jackson.map.SerializationConfig with(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> with
    org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> without
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion getSerializationInclusion() -> getSerializationInclusion
    void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> setSerializationInclusion
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setSerializationView(java.lang.Class) -> setSerializationView
    java.lang.String toString() -> toString
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
org.codehaus.jackson.map.SerializationConfig$Feature -> org.codehaus.jackson.map.SerializationConfig$Feature:
    org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS -> AUTO_DETECT_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS -> AUTO_DETECT_IS_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.SerializationConfig$Feature REQUIRE_SETTERS_FOR_GETTERS -> REQUIRE_SETTERS_FOR_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES -> WRITE_NULL_PROPERTIES
    org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING -> USE_STATIC_TYPING
    org.codehaus.jackson.map.SerializationConfig$Feature DEFAULT_VIEW_INCLUSION -> DEFAULT_VIEW_INCLUSION
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_ROOT_VALUE -> WRAP_ROOT_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT -> INDENT_OUTPUT
    org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY -> SORT_PROPERTIES_ALPHABETICALLY
    org.codehaus.jackson.map.SerializationConfig$Feature FAIL_ON_EMPTY_BEANS -> FAIL_ON_EMPTY_BEANS
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE -> CLOSE_CLOSEABLE
    org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE -> FLUSH_AFTER_WRITE_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS -> WRITE_DATES_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATE_KEYS_AS_TIMESTAMPS -> WRITE_DATE_KEYS_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING -> WRITE_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_INDEX -> WRITE_ENUMS_USING_INDEX
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_MAP_VALUES -> WRITE_NULL_MAP_VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_EMPTY_JSON_ARRAYS -> WRITE_EMPTY_JSON_ARRAYS
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.SerializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.SerializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.SerializerFactory -> org.codehaus.jackson.map.SerializerFactory:
    org.codehaus.jackson.map.SerializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.SerializerFactory withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig) -> createTypeSerializer
org.codehaus.jackson.map.SerializerFactory$Config -> org.codehaus.jackson.map.SerializerFactory$Config:
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.SerializerProvider -> org.codehaus.jackson.map.SerializerProvider:
    org.codehaus.jackson.type.JavaType TYPE_OBJECT -> TYPE_OBJECT
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    java.lang.Class _serializationView -> _serializationView
    void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullKeySerializer
    void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullValueSerializer
    void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setDefaultKeySerializer
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> generateJsonSchema
    boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory) -> hasSerializerFor
    org.codehaus.jackson.map.SerializationConfig getConfig() -> getConfig
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer getKeySerializer() -> getKeySerializer
    org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> getKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    void defaultSerializeValue(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> defaultSerializeValue
    void defaultSerializeField(java.lang.String,java.lang.Object,org.codehaus.jackson.JsonGenerator) -> defaultSerializeField
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeNull(org.codehaus.jackson.JsonGenerator) -> defaultSerializeNull
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
org.codehaus.jackson.map.Serializers -> org.codehaus.jackson.map.Serializers:
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
org.codehaus.jackson.map.Serializers$Base -> org.codehaus.jackson.map.Serializers$Base:
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
org.codehaus.jackson.map.Serializers$None -> org.codehaus.jackson.map.Serializers$None:
org.codehaus.jackson.map.TypeDeserializer -> org.codehaus.jackson.map.TypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
org.codehaus.jackson.map.TypeSerializer -> org.codehaus.jackson.map.TypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
org.codehaus.jackson.map.annotate.JacksonInject -> org.codehaus.jackson.map.annotate.JacksonInject:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JacksonStdImpl -> org.codehaus.jackson.map.annotate.JacksonStdImpl:
org.codehaus.jackson.map.annotate.JsonCachable -> org.codehaus.jackson.map.annotate.JsonCachable:
    boolean value() -> value
org.codehaus.jackson.map.annotate.JsonDeserialize -> org.codehaus.jackson.map.annotate.JsonDeserialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
org.codehaus.jackson.map.annotate.JsonFilter -> org.codehaus.jackson.map.annotate.JsonFilter:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonRootName -> org.codehaus.jackson.map.annotate.JsonRootName:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonSerialize -> org.codehaus.jackson.map.annotate.JsonSerialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing typing() -> typing
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion include() -> include
org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion -> org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS -> ALWAYS
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL -> NON_NULL
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_DEFAULT -> NON_DEFAULT
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_EMPTY -> NON_EMPTY
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonSerialize$Typing -> org.codehaus.jackson.map.annotate.JsonSerialize$Typing:
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing DYNAMIC -> DYNAMIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC -> STATIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonTypeIdResolver -> org.codehaus.jackson.map.annotate.JsonTypeIdResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonTypeResolver -> org.codehaus.jackson.map.annotate.JsonTypeResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonValueInstantiator -> org.codehaus.jackson.map.annotate.JsonValueInstantiator:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonView -> org.codehaus.jackson.map.annotate.JsonView:
    java.lang.Class[] value() -> value
org.codehaus.jackson.map.annotate.NoClass -> org.codehaus.jackson.map.annotate.NoClass:
org.codehaus.jackson.map.deser.AbstractDeserializer -> org.codehaus.jackson.map.deser.AbstractDeserializer:
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.AbstractDeserializer$1 -> org.codehaus.jackson.map.deser.AbstractDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.ArrayDeserializer -> org.codehaus.jackson.map.deser.ArrayDeserializer:
org.codehaus.jackson.map.deser.ArrayDeserializers -> org.codehaus.jackson.map.deser.ArrayDeserializers:
org.codehaus.jackson.map.deser.BasicDeserializerFactory -> org.codehaus.jackson.map.deser.BasicDeserializerFactory:
    java.util.HashMap _simpleDeserializers -> _simpleDeserializers
    java.util.HashMap _mapFallbacks -> _mapFallbacks
    java.util.HashMap _collectionFallbacks -> _collectionFallbacks
    java.util.HashMap _arrayDeserializers -> _arrayDeserializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findStdBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findStdBeanDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyContentTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findDeserializerFromAnnotation
    org.codehaus.jackson.map.JsonDeserializer _constructDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> _constructDeserializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> resolveType
    org.codehaus.jackson.map.util.EnumResolver constructEnumResolver(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig) -> constructEnumResolver
org.codehaus.jackson.map.deser.BeanDeserializer -> org.codehaus.jackson.map.deser.BeanDeserializer:
    org.codehaus.jackson.map.introspect.AnnotatedClass _forClass -> _forClass
    org.codehaus.jackson.type.JavaType _beanType -> _beanType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _nonStandardCreation -> _nonStandardCreation
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties -> _beanProperties
    org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables -> _injectables
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    java.util.HashSet _ignorableProps -> _ignorableProps
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    java.util.Map _backRefs -> _backRefs
    java.util.HashMap _subDeserializers -> _subDeserializers
    org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> _unwrappedPropertyHandler
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> _externalTypeIdHandler
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    boolean hasProperty(java.lang.String) -> hasProperty
    int getPropertyCount() -> getPropertyCount
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    java.util.Iterator properties() -> properties
    org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveManagedReferenceProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveUnwrappedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveUnwrappedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveInnerClassValuedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
    java.lang.Object deserializeFromObjectUsingNonDefault(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object deserializeFromString(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromString
    java.lang.Object deserializeFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromNumber
    java.lang.Object deserializeFromDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromDouble
    java.lang.Object deserializeFromBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBoolean
    java.lang.Object deserializeFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromArray
    java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handlePolymorphic
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> injectValues
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handleUnknownProperties
    org.codehaus.jackson.map.JsonDeserializer _findSubclassDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> _findSubclassDeserializer
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int,org.codehaus.jackson.map.DeserializationContext) -> wrapAndThrow
    void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext) -> wrapInstantiationProblem
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
org.codehaus.jackson.map.deser.BeanDeserializer$1 -> org.codehaus.jackson.map.deser.BeanDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.BeanDeserializerBuilder -> org.codehaus.jackson.map.deser.BeanDeserializerBuilder:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.HashMap _properties -> _properties
    java.util.List _injectables -> _injectables
    java.util.HashMap _backRefProperties -> _backRefProperties
    java.util.HashSet _ignorableProps -> _ignorableProps
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    void addOrReplaceProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty) -> addBackReferenceProperty
    void addIgnorable(java.lang.String) -> addIgnorable
    java.util.Iterator getProperties() -> getProperties
    boolean hasProperty(java.lang.String) -> hasProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty removeProperty(java.lang.String) -> removeProperty
    void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty) -> setAnySetter
    void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    void setValueInstantiator(org.codehaus.jackson.map.deser.ValueInstantiator) -> setValueInstantiator
    org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    void addInjectable(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty) -> build
org.codehaus.jackson.map.deser.BeanDeserializerFactory -> org.codehaus.jackson.map.deser.BeanDeserializerFactory:
    java.lang.Class[] INIT_CAUSE_PARAMS -> INIT_CAUSE_PARAMS
    org.codehaus.jackson.map.deser.BeanDeserializerFactory instance -> instance
    org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig -> _factoryConfig
    org.codehaus.jackson.map.DeserializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomBeanDeserializer
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _mapAbstractType2
    org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> materializeAbstractType
    org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildThrowableDeserializer
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanDeserializerBuilder
    org.codehaus.jackson.map.deser.ValueInstantiator constructDefaultValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructDefaultValueInstantiator
    void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerConstructors
    void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerFactoryMethods
    org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object) -> constructCreatorProperty
    void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addBeanProps
    void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addReferenceProperties
    void addInjectables(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addInjectables
    org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructAnySetter
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSetterlessProperty
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map) -> isIgnorableType
    org.codehaus.jackson.map.Deserializers[] access$000() -> access$000
org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl -> org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl:
    org.codehaus.jackson.map.KeyDeserializers[] NO_KEY_DESERIALIZERS -> NO_KEY_DESERIALIZERS
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> NO_ABSTRACT_TYPE_RESOLVERS
    org.codehaus.jackson.map.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> NO_VALUE_INSTANTIATORS
    org.codehaus.jackson.map.Deserializers[] _additionalDeserializers -> _additionalDeserializers
    org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers -> _additionalKeyDeserializers
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers -> _abstractTypeResolvers
    org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators -> _valueInstantiators
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
org.codehaus.jackson.map.deser.BeanDeserializerModifier -> org.codehaus.jackson.map.deser.BeanDeserializerModifier:
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer) -> modifyDeserializer
org.codehaus.jackson.map.deser.CollectionDeserializer -> org.codehaus.jackson.map.deser.CollectionDeserializer:
org.codehaus.jackson.map.deser.ContainerDeserializer -> org.codehaus.jackson.map.deser.ContainerDeserializer:
org.codehaus.jackson.map.deser.CustomDeserializerFactory -> org.codehaus.jackson.map.deser.CustomDeserializerFactory:
    java.util.HashMap _directClassMappings -> _directClassMappings
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addSpecificMapping
    void addMixInAnnotationMapping(java.lang.Class,java.lang.Class) -> addMixInAnnotationMapping
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
org.codehaus.jackson.map.deser.DateDeserializer -> org.codehaus.jackson.map.deser.DateDeserializer:
org.codehaus.jackson.map.deser.EnumDeserializer -> org.codehaus.jackson.map.deser.EnumDeserializer:
org.codehaus.jackson.map.deser.EnumResolver -> org.codehaus.jackson.map.deser.EnumResolver:
org.codehaus.jackson.map.deser.FromStringDeserializer -> org.codehaus.jackson.map.deser.FromStringDeserializer:
org.codehaus.jackson.map.deser.JsonNodeDeserializer -> org.codehaus.jackson.map.deser.JsonNodeDeserializer:
    org.codehaus.jackson.map.deser.JsonNodeDeserializer instance -> instance
    org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeObject
    org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeArray
    org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeAny
org.codehaus.jackson.map.deser.MapDeserializer -> org.codehaus.jackson.map.deser.MapDeserializer:
org.codehaus.jackson.map.deser.SettableAnyProperty -> org.codehaus.jackson.map.deser.SettableAnyProperty:
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.deser.SettableAnyProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> setValueDeserializer
    org.codehaus.jackson.map.BeanProperty getProperty() -> getProperty
    boolean hasValueDeserializer() -> hasValueDeserializer
    org.codehaus.jackson.type.JavaType getType() -> getType
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void set(java.lang.Object,java.lang.String,java.lang.Object) -> set
    void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwAsIOE
    java.lang.String getClassName() -> getClassName
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty:
    java.lang.String _propName -> _propName
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider _nullProvider -> _nullProvider
    java.lang.String _managedReferenceName -> _managedReferenceName
    int _propertyIndex -> _propertyIndex
    void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> setValueDeserializer
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    void assignIndex(int) -> assignIndex
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.String getManagedReferenceName() -> getManagedReferenceName
    boolean hasValueDeserializer() -> hasValueDeserializer
    boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    org.codehaus.jackson.map.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    int getPropertyIndex() -> getPropertyIndex
    int getProperytIndex() -> getProperytIndex
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    java.io.IOException _throwAsIOE(java.lang.Exception) -> _throwAsIOE
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty:
    org.codehaus.jackson.map.introspect.AnnotatedField _annotated -> _annotated
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _delegate -> _delegate
    java.lang.reflect.Constructor _creator -> _creator
    org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty:
    java.lang.String _referenceName -> _referenceName
    boolean _isContainer -> _isContainer
    org.codehaus.jackson.map.deser.SettableBeanProperty _managedProperty -> _managedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _backProperty -> _backProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider -> org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider:
    java.lang.Object _nullValue -> _nullValue
    boolean _isPrimitive -> _isPrimitive
    java.lang.Class _rawType -> _rawType
    java.lang.Object nullValue(org.codehaus.jackson.map.DeserializationContext) -> nullValue
org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _getter -> _getter
    org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.StdDeserializationContext -> org.codehaus.jackson.map.deser.StdDeserializationContext:
    int MAX_ERROR_STR_LEN -> MAX_ERROR_STR_LEN
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializerProvider _deserProvider -> _deserProvider
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.util.ArrayBuilders _arrayBuilders -> _arrayBuilders
    org.codehaus.jackson.map.util.ObjectBuffer _objectBuffer -> _objectBuffer
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    org.codehaus.jackson.JsonParser getParser() -> getParser
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String determineClassName(java.lang.Object) -> determineClassName
    java.lang.String _calcName(java.lang.Class) -> _calcName
    java.lang.String _valueDesc() -> _valueDesc
    java.lang.String _desc(java.lang.String) -> _desc
org.codehaus.jackson.map.deser.StdDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer:
org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer:
    org.codehaus.jackson.map.deser.StdDeserializer this$0 -> this$0
org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer:
    org.codehaus.jackson.map.deser.StdDeserializer this$0 -> this$0
org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer:
    java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.StdDeserializerProvider -> org.codehaus.jackson.map.deser.StdDeserializerProvider:
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    java.util.concurrent.ConcurrentHashMap _cachedDeserializers -> _cachedDeserializers
    java.util.HashMap _incompleteDeserializers -> _incompleteDeserializers
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.DeserializerFactory _factory -> _factory
    org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.map.deser.StdDeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> hasValueDeserializerFor
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
    org.codehaus.jackson.map.JsonDeserializer _findCachedDeserializer(org.codehaus.jackson.type.JavaType) -> _findCachedDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCacheValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCache2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCache2
    org.codehaus.jackson.map.JsonDeserializer _createDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createDeserializer
    void _resolveDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.ResolvableDeserializer) -> _resolveDeserializer
    org.codehaus.jackson.map.JsonDeserializer _handleUnknownValueDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer _handleUnknownKeyDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownKeyDeserializer
    org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer -> org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer:
    org.codehaus.jackson.map.TypeDeserializer _typeDeserializer -> _typeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _deserializer -> _deserializer
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.StdDeserializers -> org.codehaus.jackson.map.deser.StdDeserializers:
    java.util.HashMap _deserializers -> _deserializers
    java.util.HashMap constructAll() -> constructAll
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer) -> add
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class) -> add
org.codehaus.jackson.map.deser.StdKeyDeserializer -> org.codehaus.jackson.map.deser.StdKeyDeserializer:
org.codehaus.jackson.map.deser.StdKeyDeserializers -> org.codehaus.jackson.map.deser.StdKeyDeserializers:
org.codehaus.jackson.map.deser.StdScalarDeserializer -> org.codehaus.jackson.map.deser.StdScalarDeserializer:
org.codehaus.jackson.map.deser.ThrowableDeserializer -> org.codehaus.jackson.map.deser.ThrowableDeserializer:
org.codehaus.jackson.map.deser.UntypedObjectDeserializer -> org.codehaus.jackson.map.deser.UntypedObjectDeserializer:
org.codehaus.jackson.map.deser.ValueInstantiator -> org.codehaus.jackson.map.deser.ValueInstantiator:
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canInstantiate() -> canInstantiate
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
org.codehaus.jackson.map.deser.ValueInstantiators -> org.codehaus.jackson.map.deser.ValueInstantiators:
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.deser.ValueInstantiators$Base -> org.codehaus.jackson.map.deser.ValueInstantiators$Base:
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.deser.impl.BeanPropertyMap -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    int _hashMask -> _hashMask
    int _size -> _size
    void assignIndexes() -> assignIndexes
    int findSize(int) -> findSize
    int size() -> size
    java.util.Iterator allProperties() -> allProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String) -> find
    void replace(org.codehaus.jackson.map.deser.SettableBeanProperty) -> replace
    void remove(org.codehaus.jackson.map.deser.SettableBeanProperty) -> remove
    org.codehaus.jackson.map.deser.SettableBeanProperty _findWithEquals(java.lang.String,int) -> _findWithEquals
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next -> next
    java.lang.String key -> key
    org.codehaus.jackson.map.deser.SettableBeanProperty value -> value
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket -> _currentBucket
    int _nextBucketIndex -> _nextBucketIndex
    boolean hasNext() -> hasNext
    org.codehaus.jackson.map.deser.SettableBeanProperty next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.map.deser.impl.CreatorCollector -> org.codehaus.jackson.map.deser.impl.CreatorCollector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    boolean _canFixAccess -> _canFixAccess
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _stringCreator -> _stringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _intCreator -> _intCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _longCreator -> _longCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _doubleCreator -> _doubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _booleanCreator -> _booleanCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _propertyBasedArgs -> _propertyBasedArgs
    org.codehaus.jackson.map.deser.ValueInstantiator constructValueInstantiator(org.codehaus.jackson.map.DeserializationConfig) -> constructValueInstantiator
    void setDefaultConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> setDefaultConstructor
    void addStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addStringCreator
    void addIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addIntCreator
    void addLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addLongCreator
    void addDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDoubleCreator
    void addBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addBooleanCreator
    void addDelegatingCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDelegatingCreator
    void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> addPropertyCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,java.lang.String) -> verifyNonDup
org.codehaus.jackson.map.deser.impl.CreatorProperty -> org.codehaus.jackson.map.deser.impl.CreatorProperty:
    org.codehaus.jackson.map.introspect.AnnotatedParameter _annotated -> _annotated
    java.lang.Object _injectableValueId -> _injectableValueId
    org.codehaus.jackson.map.deser.impl.CreatorProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.Object findInjectableValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> findInjectableValue
    void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> inject
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler:
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    java.lang.String[] _typeIds -> _typeIds
    org.codehaus.jackson.util.TokenBuffer[] _tokens -> _tokens
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler start() -> start
    boolean handleToken(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object) -> handleToken
    java.lang.Object complete(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> complete
    void _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,int) -> _deserialize
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder:
    java.util.ArrayList _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    void addExternal(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.String) -> addExternal
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler build() -> build
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    java.lang.String _typePropertyName -> _typePropertyName
    boolean hasTypePropertyName(java.lang.String) -> hasTypePropertyName
    java.lang.String getTypePropertyName() -> getTypePropertyName
    org.codehaus.jackson.map.deser.SettableBeanProperty getProperty() -> getProperty
org.codehaus.jackson.map.deser.impl.PropertyBasedCreator -> org.codehaus.jackson.map.deser.impl.PropertyBasedCreator:
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    java.util.HashMap _properties -> _properties
    java.lang.Object[] _defaultValues -> _defaultValues
    org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertiesWithInjectables -> _propertiesWithInjectables
    java.util.Collection getCreatorProperties() -> getCreatorProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    void assignDeserializer(org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.JsonDeserializer) -> assignDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> startBuilding
    java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer) -> build
org.codehaus.jackson.map.deser.impl.PropertyValue -> org.codehaus.jackson.map.deser.impl.PropertyValue:
    org.codehaus.jackson.map.deser.impl.PropertyValue next -> next
    java.lang.Object value -> value
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Any -> org.codehaus.jackson.map.deser.impl.PropertyValue$Any:
    org.codehaus.jackson.map.deser.SettableAnyProperty _property -> _property
    java.lang.String _propertyName -> _propertyName
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Map -> org.codehaus.jackson.map.deser.impl.PropertyValue$Map:
    java.lang.Object _key -> _key
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Regular -> org.codehaus.jackson.map.deser.impl.PropertyValue$Regular:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValueBuffer -> org.codehaus.jackson.map.deser.impl.PropertyValueBuffer:
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializationContext _context -> _context
    java.lang.Object[] _creatorParameters -> _creatorParameters
    int _paramsNeeded -> _paramsNeeded
    org.codehaus.jackson.map.deser.impl.PropertyValue _buffered -> _buffered
    void inject(org.codehaus.jackson.map.deser.SettableBeanProperty[]) -> inject
    java.lang.Object[] getParameters(java.lang.Object[]) -> getParameters
    org.codehaus.jackson.map.deser.impl.PropertyValue buffered() -> buffered
    boolean assignParameter(int,java.lang.Object) -> assignParameter
    void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler -> org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler:
    java.util.ArrayList _properties -> _properties
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> processUnwrapped
org.codehaus.jackson.map.deser.impl.ValueInjector -> org.codehaus.jackson.map.deser.impl.ValueInjector:
    java.lang.Object _valueId -> _valueId
    java.lang.Object findValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> findValue
    void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> inject
org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer -> org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer:
    java.util.concurrent.atomic.AtomicBoolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer -> org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer:
    org.codehaus.jackson.type.JavaType _referencedType -> _referencedType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.concurrent.atomic.AtomicReference deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    void _reportProblem(org.codehaus.jackson.JsonParser,java.lang.String) -> _reportProblem
    void _handleDuplicateField(java.lang.String,org.codehaus.jackson.node.ObjectNode,org.codehaus.jackson.JsonNode,org.codehaus.jackson.JsonNode) -> _handleDuplicateField
    org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeObject
    org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeArray
    org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeAny
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.CalendarDeserializer -> org.codehaus.jackson.map.deser.std.CalendarDeserializer:
    java.lang.Class _calendarClass -> _calendarClass
    java.util.Calendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ClassDeserializer -> org.codehaus.jackson.map.deser.std.ClassDeserializer:
    java.lang.Class deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.CollectionDeserializer -> org.codehaus.jackson.map.deser.std.CollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ContainerDeserializerBase -> org.codehaus.jackson.map.deser.std.ContainerDeserializerBase:
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
org.codehaus.jackson.map.deser.std.DateDeserializer -> org.codehaus.jackson.map.deser.std.DateDeserializer:
    java.util.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    org.codehaus.jackson.map.JsonDeserializer deserializerForCreator(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> deserializerForCreator
    java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer:
    java.lang.Class _enumClass -> _enumClass
    java.lang.reflect.Method _factory -> _factory
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumMapDeserializer -> org.codehaus.jackson.map.deser.std.EnumMapDeserializer:
    org.codehaus.jackson.map.util.EnumResolver _enumResolver -> _enumResolver
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.EnumMap deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumMap constructMap() -> constructMap
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumSetDeserializer -> org.codehaus.jackson.map.deser.std.EnumSetDeserializer:
    java.lang.Class _enumClass -> _enumClass
    org.codehaus.jackson.map.deser.std.EnumDeserializer _enumDeserializer -> _enumDeserializer
    java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumSet constructSet() -> constructSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer:
    java.lang.Iterable all() -> all
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer:
    java.util.Currency _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer:
    java.net.InetAddress _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer:
    java.util.Locale _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer:
    java.util.regex.Pattern _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer:
    java.util.TimeZone _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer:
    java.net.URI _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer:
    java.net.URL _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer:
    java.util.UUID _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.util.UUID _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.JavaTypeDeserializer -> org.codehaus.jackson.map.deser.std.JavaTypeDeserializer:
    org.codehaus.jackson.type.JavaType deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer instance -> instance
    org.codehaus.jackson.map.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    org.codehaus.jackson.JsonNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ArrayNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.MapDeserializer -> org.codehaus.jackson.map.deser.std.MapDeserializer:
    org.codehaus.jackson.type.JavaType _mapType -> _mapType
    org.codehaus.jackson.map.KeyDeserializer _keyDeserializer -> _keyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    boolean _hasDefaultCreator -> _hasDefaultCreator
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    java.util.HashSet _ignorableProperties -> _ignorableProperties
    void setIgnorableProperties(java.lang.String[]) -> setIgnorableProperties
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Class getMapClass() -> getMapClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> _readAndBind
    java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingCreator
    void wrapAndThrow(java.lang.Throwable,java.lang.Object) -> wrapAndThrow
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer -> org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer:
    org.codehaus.jackson.type.JavaType _arrayType -> _arrayType
    boolean _untyped -> _untyped
    java.lang.Class _elementClass -> _elementClass
    org.codehaus.jackson.map.JsonDeserializer _elementDeserializer -> _elementDeserializer
    org.codehaus.jackson.map.TypeDeserializer _elementTypeDeserializer -> _elementTypeDeserializer
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.lang.Object[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object[] deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Byte[] deserializeFromBase64(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBase64
    java.lang.Object[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers:
    java.util.HashMap _allDeserializers -> _allDeserializers
    org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers instance -> instance
    java.util.HashMap getAll() -> getAll
    void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> add
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser:
    boolean[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    boolean[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser:
    byte[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    byte[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser:
    char[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser:
    double[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    double[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser:
    float[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    float[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser:
    int[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    int[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser:
    long[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    long[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser:
    short[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    short[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser:
    java.lang.String[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer:
    java.lang.Class _valueClass -> _valueClass
    java.lang.Class getValueClass() -> getValueClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonDeserializer) -> isDefaultSerializer
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    boolean _parseBooleanPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBooleanPrimitive
    java.lang.Boolean _parseBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBoolean
    java.lang.Byte _parseByte(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseByte
    java.lang.Short _parseShort(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShort
    short _parseShortPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShortPrimitive
    int _parseIntPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseIntPrimitive
    java.lang.Integer _parseInteger(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseInteger
    java.lang.Long _parseLong(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLong
    long _parseLongPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLongPrimitive
    java.lang.Float _parseFloat(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloat
    float _parseFloatPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloatPrimitive
    java.lang.Double _parseDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDouble
    double _parseDoublePrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDoublePrimitive
    java.util.Date _parseDate(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDate
    double parseDouble(java.lang.String) -> parseDouble
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findDeserializer
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    void reportUnknownProperty(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> reportUnknownProperty
org.codehaus.jackson.map.deser.std.StdDeserializer$1 -> org.codehaus.jackson.map.deser.std.StdDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer:
    java.math.BigDecimal deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer:
    java.math.BigInteger deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer:
    java.lang.Boolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Boolean deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer:
    java.lang.Byte deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer:
    java.lang.Character deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer:
    java.lang.Double deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Double deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer:
    java.lang.Float deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer:
    java.lang.Integer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Integer deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer:
    java.lang.Long deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer:
    java.lang.Number deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer:
    java.lang.Object _nullValue -> _nullValue
    java.lang.Object getNullValue() -> getNullValue
org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer:
    java.lang.Short deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer:
    java.sql.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer:
    java.lang.StackTraceElement deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer:
    java.lang.Class _keyClass -> _keyClass
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
    java.lang.Class getKeyClass() -> getKeyClass
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    int _parseInt(java.lang.String) -> _parseInt
    long _parseLong(java.lang.String) -> _parseLong
    double _parseDouble(java.lang.String) -> _parseDouble
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD:
    java.lang.Boolean _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD:
    java.lang.Byte _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD:
    java.lang.Character _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD:
    java.lang.Double _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    java.lang.Enum _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD:
    java.lang.Float _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD:
    java.lang.Integer _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD:
    java.lang.Long _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD:
    java.lang.Short _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer:
    java.lang.reflect.Constructor _ctor -> _ctor
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer:
    java.lang.reflect.Method _factoryMethod -> _factoryMethod
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializers -> org.codehaus.jackson.map.deser.std.StdKeyDeserializers:
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer) -> add
    java.util.HashMap constructAll() -> constructAll
    org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> constructEnumKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findStringBasedKeyDeserializer
org.codehaus.jackson.map.deser.std.StdScalarDeserializer -> org.codehaus.jackson.map.deser.std.StdScalarDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.StdValueInstantiator -> org.codehaus.jackson.map.deser.std.StdValueInstantiator:
    java.lang.String _valueTypeDesc -> _valueTypeDesc
    boolean _cfgEmptyStringsAsObjects -> _cfgEmptyStringsAsObjects
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator -> _defaultCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments -> _constructorArguments
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator -> _withArgsCreator
    org.codehaus.jackson.type.JavaType _delegateType -> _delegateType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator -> _fromStringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator -> _fromIntCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator -> _fromLongCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator -> _fromDoubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator -> _fromBooleanCreator
    void configureFromObjectSettings(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> configureFromObjectSettings
    void configureFromStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromStringCreator
    void configureFromIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromIntCreator
    void configureFromLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromLongCreator
    void configureFromDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    void configureFromBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    java.lang.Object _createFromStringFallbacks(java.lang.String) -> _createFromStringFallbacks
    org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable) -> wrapException
org.codehaus.jackson.map.deser.std.StringCollectionDeserializer -> org.codehaus.jackson.map.deser.std.StringCollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    boolean _isDefaultDeserializer -> _isDefaultDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.util.Collection deserializeUsingCustom(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserializeUsingCustom
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StringDeserializer -> org.codehaus.jackson.map.deser.std.StringDeserializer:
    java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ThrowableDeserializer -> org.codehaus.jackson.map.deser.std.ThrowableDeserializer:
    java.lang.String PROP_NAME_MESSAGE -> PROP_NAME_MESSAGE
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
org.codehaus.jackson.map.deser.std.TimestampDeserializer -> org.codehaus.jackson.map.deser.std.TimestampDeserializer:
    java.sql.Timestamp deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.TokenBufferDeserializer -> org.codehaus.jackson.map.deser.std.TokenBufferDeserializer:
    org.codehaus.jackson.util.TokenBuffer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer:
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object mapArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArray
    java.lang.Object mapObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapObject
    java.lang.Object[] mapArrayToArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArrayToArray
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1 -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.exc.UnrecognizedPropertyException -> org.codehaus.jackson.map.exc.UnrecognizedPropertyException:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _referringClass -> _referringClass
    java.lang.String _unrecognizedPropertyName -> _unrecognizedPropertyName
    org.codehaus.jackson.map.exc.UnrecognizedPropertyException from(org.codehaus.jackson.JsonParser,java.lang.Object,java.lang.String) -> from
    java.lang.Class getReferringClass() -> getReferringClass
    java.lang.String getUnrecognizedPropertyName() -> getUnrecognizedPropertyName
org.codehaus.jackson.map.ext.CoreXMLDeserializers -> org.codehaus.jackson.map.ext.CoreXMLDeserializers:
    javax.xml.datatype.DatatypeFactory _dataTypeFactory -> _dataTypeFactory
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer:
    javax.xml.datatype.Duration _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer:
    javax.xml.datatype.XMLGregorianCalendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer:
    javax.xml.namespace.QName _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.CoreXMLSerializers -> org.codehaus.jackson.map.ext.CoreXMLSerializers:
    java.util.HashMap _serializers -> _serializers
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer -> org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer:
    void serialize(javax.xml.datatype.XMLGregorianCalendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.DOMDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer:
    javax.xml.parsers.DocumentBuilderFactory _parserFactory -> _parserFactory
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    org.w3c.dom.Document parse(java.lang.String) -> parse
org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer:
    org.w3c.dom.Document _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer:
    org.w3c.dom.Node _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.DOMSerializer -> org.codehaus.jackson.map.ext.DOMSerializer:
    org.w3c.dom.ls.DOMImplementationLS _domImpl -> _domImpl
    void serialize(org.w3c.dom.Node,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaDeserializers -> org.codehaus.jackson.map.ext.JodaDeserializers:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.JodaDeserializers$1 -> org.codehaus.jackson.map.ext.JodaDeserializers$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer:
    org.joda.time.DateMidnight deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer:
    org.joda.time.ReadableInstant deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer:
    org.joda.time.format.DateTimeFormatter _localDateTimeFormat -> _localDateTimeFormat
    org.joda.time.DateTime parseLocal(org.codehaus.jackson.JsonParser) -> parseLocal
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer:
    org.joda.time.LocalDate deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer:
    org.joda.time.LocalDateTime deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaSerializers -> org.codehaus.jackson.map.ext.JodaSerializers:
    java.util.HashMap _serializers -> _serializers
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer:
    void serialize(org.joda.time.DateMidnight,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer:
    void serialize(org.joda.time.DateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer:
    org.joda.time.format.DateTimeFormatter _localDateTimeFormat -> _localDateTimeFormat
    org.joda.time.format.DateTimeFormatter _localDateFormat -> _localDateFormat
    java.lang.String printLocalDateTime(org.joda.time.ReadablePartial) -> printLocalDateTime
    java.lang.String printLocalDate(org.joda.time.ReadablePartial) -> printLocalDate
    java.lang.String printLocalDate(org.joda.time.ReadableInstant) -> printLocalDate
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer:
    void serialize(org.joda.time.LocalDate,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer:
    void serialize(org.joda.time.LocalDateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.OptionalHandlerFactory -> org.codehaus.jackson.map.ext.OptionalHandlerFactory:
    java.lang.String PACKAGE_PREFIX_JODA_DATETIME -> PACKAGE_PREFIX_JODA_DATETIME
    java.lang.String PACKAGE_PREFIX_JAVAX_XML -> PACKAGE_PREFIX_JAVAX_XML
    java.lang.String SERIALIZERS_FOR_JODA_DATETIME -> SERIALIZERS_FOR_JODA_DATETIME
    java.lang.String SERIALIZERS_FOR_JAVAX_XML -> SERIALIZERS_FOR_JAVAX_XML
    java.lang.String DESERIALIZERS_FOR_JODA_DATETIME -> DESERIALIZERS_FOR_JODA_DATETIME
    java.lang.String DESERIALIZERS_FOR_JAVAX_XML -> DESERIALIZERS_FOR_JAVAX_XML
    java.lang.String CLASS_NAME_DOM_NODE -> CLASS_NAME_DOM_NODE
    java.lang.String CLASS_NAME_DOM_DOCUMENT -> CLASS_NAME_DOM_DOCUMENT
    java.lang.String SERIALIZER_FOR_DOM_NODE -> SERIALIZER_FOR_DOM_NODE
    java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT -> DESERIALIZER_FOR_DOM_DOCUMENT
    java.lang.String DESERIALIZER_FOR_DOM_NODE -> DESERIALIZER_FOR_DOM_NODE
    org.codehaus.jackson.map.ext.OptionalHandlerFactory instance -> instance
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType) -> findSerializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> findDeserializer
    java.lang.Object instantiate(java.lang.String) -> instantiate
    boolean doesImplement(java.lang.Class,java.lang.String) -> doesImplement
    boolean hasInterface(java.lang.Class,java.lang.String) -> hasInterface
    boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String) -> hasSupertypeStartingWith
    boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String) -> hasInterfaceStartingWith
org.codehaus.jackson.map.introspect.Annotated -> org.codehaus.jackson.map.introspect.Annotated:
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    org.codehaus.jackson.map.introspect.Annotated withFallBackAnnotationsFrom(org.codehaus.jackson.map.introspect.Annotated) -> withFallBackAnnotationsFrom
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    boolean isPublic() -> isPublic
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
org.codehaus.jackson.map.introspect.AnnotatedClass -> org.codehaus.jackson.map.introspect.AnnotatedClass:
    org.codehaus.jackson.map.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> NO_ANNOTATION_MAPS
    java.lang.Class _class -> _class
    java.util.List _superTypes -> _superTypes
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    java.lang.Class _primaryMixIn -> _primaryMixIn
    org.codehaus.jackson.map.introspect.AnnotationMap _classAnnotations -> _classAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    java.util.List _constructors -> _constructors
    java.util.List _creatorMethods -> _creatorMethods
    org.codehaus.jackson.map.introspect.AnnotatedMethodMap _memberMethods -> _memberMethods
    java.util.List _fields -> _fields
    org.codehaus.jackson.map.introspect.AnnotatedClass withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> construct
    org.codehaus.jackson.map.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> constructWithoutSuperTypes
    java.lang.Class getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    org.codehaus.jackson.map.util.Annotations getAnnotations() -> getAnnotations
    boolean hasAnnotations() -> hasAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    java.util.List getConstructors() -> getConstructors
    java.util.List getStaticMethods() -> getStaticMethods
    java.lang.Iterable memberMethods() -> memberMethods
    int getMemberMethodCount() -> getMemberMethodCount
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    int getFieldCount() -> getFieldCount
    java.lang.Iterable fields() -> fields
    void resolveClassAnnotations() -> resolveClassAnnotations
    void resolveCreators(boolean) -> resolveCreators
    void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter) -> resolveMemberMethods
    void resolveFields() -> resolveFields
    void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter,boolean) -> resolveMemberMethods
    void resolveFields(boolean) -> resolveFields
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class) -> _addClassMixIns
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class,java.lang.Class) -> _addClassMixIns
    void _addConstructorMixIns(java.lang.Class) -> _addConstructorMixIns
    void _addFactoryMixIns(java.lang.Class) -> _addFactoryMixIns
    void _addMemberMethods(java.lang.Class,org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMemberMethods
    void _addMethodMixIns(org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMethodMixIns
    void _addFields(java.util.Map,java.lang.Class) -> _addFields
    void _addFieldMixIns(java.lang.Class,java.util.Map) -> _addFieldMixIns
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method) -> _constructMethod
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean) -> _constructConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method) -> _constructCreatorMethod
    org.codehaus.jackson.map.introspect.AnnotatedField _constructField(java.lang.reflect.Field) -> _constructField
    org.codehaus.jackson.map.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _emptyAnnotationMap() -> _emptyAnnotationMap
    org.codehaus.jackson.map.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> _emptyAnnotationMaps
    boolean _isIncludableMethod(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.MethodFilter) -> _isIncludableMethod
    boolean _isIncludableField(java.lang.reflect.Field) -> _isIncludableField
    void _addMixOvers(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean) -> _addMixOvers
    void _addMixOvers(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean) -> _addMixOvers
    void _addMixUnders(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> _addMixUnders
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedConstructor -> org.codehaus.jackson.map.introspect.AnnotatedConstructor:
    java.lang.reflect.Constructor _constructor -> _constructor
    org.codehaus.jackson.map.introspect.AnnotatedConstructor withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    int getParameterCount() -> getParameterCount
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedField -> org.codehaus.jackson.map.introspect.AnnotatedField:
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    java.lang.reflect.Field getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String getFullName() -> getFullName
    int getAnnotationCount() -> getAnnotationCount
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedMember -> org.codehaus.jackson.map.introspect.AnnotatedMember:
    org.codehaus.jackson.map.introspect.AnnotationMap _annotations -> _annotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    void fixAccess() -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
org.codehaus.jackson.map.introspect.AnnotatedMethod -> org.codehaus.jackson.map.introspect.AnnotatedMethod:
    java.lang.reflect.Method _method -> _method
    java.lang.Class[] _paramTypes -> _paramTypes
    org.codehaus.jackson.map.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method) -> withMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Method getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    int getParameterCount() -> getParameterCount
    java.lang.reflect.Type[] getParameterTypes() -> getParameterTypes
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Class[] getParameterClasses() -> getParameterClasses
    java.lang.String getFullName() -> getFullName
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedMethodMap -> org.codehaus.jackson.map.introspect.AnnotatedMethodMap:
    java.util.LinkedHashMap _methods -> _methods
    void add(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> add
    org.codehaus.jackson.map.introspect.AnnotatedMethod remove(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> remove
    org.codehaus.jackson.map.introspect.AnnotatedMethod remove(java.lang.reflect.Method) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.reflect.Method) -> find
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.introspect.AnnotatedParameter -> org.codehaus.jackson.map.introspect.AnnotatedParameter:
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _owner -> _owner
    java.lang.reflect.Type _type -> _type
    int _index -> _index
    org.codehaus.jackson.map.introspect.AnnotatedParameter withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.reflect.Type getParameterType() -> getParameterType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getOwner() -> getOwner
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedWithParams -> org.codehaus.jackson.map.introspect.AnnotatedWithParams:
    org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations -> _paramAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    void addOrOverrideParam(int,java.lang.annotation.Annotation) -> addOrOverrideParam
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    org.codehaus.jackson.map.introspect.AnnotatedParameter replaceParameterAnnotations(int,org.codehaus.jackson.map.introspect.AnnotationMap) -> replaceParameterAnnotations
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings,java.lang.reflect.TypeVariable[]) -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotationMap getParameterAnnotations(int) -> getParameterAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int) -> getParameter
    int getParameterCount() -> getParameterCount
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    org.codehaus.jackson.type.JavaType resolveParameterType(int,org.codehaus.jackson.map.type.TypeBindings) -> resolveParameterType
    int getAnnotationCount() -> getAnnotationCount
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
org.codehaus.jackson.map.introspect.AnnotationMap -> org.codehaus.jackson.map.introspect.AnnotationMap:
    java.util.HashMap _annotations -> _annotations
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    org.codehaus.jackson.map.introspect.AnnotationMap merge(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap) -> merge
    int size() -> size
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    void add(java.lang.annotation.Annotation) -> add
    java.lang.String toString() -> toString
    void _add(java.lang.annotation.Annotation) -> _add
org.codehaus.jackson.map.introspect.BasicBeanDescription -> org.codehaus.jackson.map.introspect.BasicBeanDescription:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.AnnotatedClass _classInfo -> _classInfo
    org.codehaus.jackson.map.type.TypeBindings _bindings -> _bindings
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anySetterMethod -> _anySetterMethod
    java.util.Map _injectables -> _injectables
    java.util.Set _ignoredPropertyNames -> _ignoredPropertyNames
    org.codehaus.jackson.map.introspect.AnnotatedMethod _jsonValueMethod -> _jsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anyGetterMethod -> _anyGetterMethod
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forOtherUse(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedClass) -> forOtherUse
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    java.util.List findProperties() -> findProperties
    org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    java.util.Map findInjectables() -> findInjectables
    java.util.List getConstructors() -> getConstructors
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    boolean isFactoryMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isFactoryMethod
    java.util.List findCreatorPropertyNames() -> findCreatorPropertyNames
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter() -> findAnyGetter
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.util.LinkedHashMap _findPropertyFields(java.util.Collection,boolean) -> _findPropertyFields
    java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findGetters
    java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker) -> findSetters
    java.util.LinkedHashMap findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
    java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findDeserializableFields
    java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
org.codehaus.jackson.map.introspect.BasicClassIntrospector -> org.codehaus.jackson.map.introspect.BasicClassIntrospector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription STRING_DESC -> STRING_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription BOOLEAN_DESC -> BOOLEAN_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription INT_DESC -> INT_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription LONG_DESC -> LONG_DESC
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter DEFAULT_GETTER_FILTER -> DEFAULT_GETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter DEFAULT_SETTER_FILTER -> DEFAULT_SETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter DEFAULT_SETTER_AND_GETTER_FILTER -> DEFAULT_SETTER_AND_GETTER_FILTER
    org.codehaus.jackson.map.introspect.MethodFilter MINIMAL_FILTER -> MINIMAL_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector instance -> instance
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.introspect.BasicBeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collectProperties(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver,boolean) -> collectProperties
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector constructPropertyCollector(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,boolean) -> constructPropertyCollector
    org.codehaus.jackson.map.introspect.AnnotatedClass classWithCreators(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> classWithCreators
    org.codehaus.jackson.map.introspect.BasicBeanDescription _findCachedDesc(org.codehaus.jackson.type.JavaType) -> _findCachedDesc
    org.codehaus.jackson.map.introspect.MethodFilter getSerializationMethodFilter(org.codehaus.jackson.map.SerializationConfig) -> getSerializationMethodFilter
    org.codehaus.jackson.map.introspect.MethodFilter getDeserializationMethodFilter(org.codehaus.jackson.map.DeserializationConfig) -> getDeserializationMethodFilter
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
org.codehaus.jackson.map.introspect.BasicClassIntrospector$1 -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$1:
org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector -> org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector:
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Class findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    boolean _isIgnorable(org.codehaus.jackson.map.introspect.Annotated) -> _isIgnorable
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> _findTypeResolver
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
org.codehaus.jackson.map.introspect.MemberKey -> org.codehaus.jackson.map.introspect.MemberKey:
    java.lang.Class[] NO_CLASSES -> NO_CLASSES
    java.lang.String _name -> _name
    java.lang.Class[] _argTypes -> _argTypes
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.introspect.MethodFilter -> org.codehaus.jackson.map.introspect.MethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.NopAnnotationIntrospector -> org.codehaus.jackson.map.introspect.NopAnnotationIntrospector:
    org.codehaus.jackson.map.introspect.NopAnnotationIntrospector instance -> instance
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
org.codehaus.jackson.map.introspect.POJOPropertiesCollector -> org.codehaus.jackson.map.introspect.POJOPropertiesCollector:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    boolean _forSerialization -> _forSerialization
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedClass _classDef -> _classDef
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.util.LinkedHashMap _properties -> _properties
    java.util.LinkedList _creatorProperties -> _creatorProperties
    java.util.LinkedList _anyGetters -> _anyGetters
    java.util.LinkedList _anySetters -> _anySetters
    java.util.LinkedList _jsonValueGetters -> _jsonValueGetters
    java.util.HashSet _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.LinkedHashMap _injectables -> _injectables
    org.codehaus.jackson.map.MapperConfig getConfig() -> getConfig
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassDef() -> getClassDef
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    java.util.List getProperties() -> getProperties
    java.util.Map getInjectables() -> getInjectables
    org.codehaus.jackson.map.introspect.AnnotatedMethod getJsonValueMethod() -> getJsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnyGetterMethod() -> getAnyGetterMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.Map getPropertyMap() -> getPropertyMap
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collect() -> collect
    void _sortProperties() -> _sortProperties
    void _addFields() -> _addFields
    void _addCreators() -> _addCreators
    void _addMethods() -> _addMethods
    void _addInjectables() -> _addInjectables
    void _doAddInjectable(java.lang.Object,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _doAddInjectable
    void _removeUnwantedProperties() -> _removeUnwantedProperties
    void _addIgnored(java.lang.String) -> _addIgnored
    void _renameProperties() -> _renameProperties
    void _renameUsing(org.codehaus.jackson.map.PropertyNamingStrategy) -> _renameUsing
    void reportProblem(java.lang.String) -> reportProblem
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String) -> _property
org.codehaus.jackson.map.introspect.POJOPropertyBuilder -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder:
    java.lang.String _name -> _name
    java.lang.String _internalName -> _internalName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields -> _fields
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters -> _ctorParameters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters -> _getters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters -> _setters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder withName(java.lang.String) -> withName
    int compareTo(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> compareTo
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
    boolean couldSerialize() -> couldSerialize
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    void addField(org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String,boolean,boolean) -> addField
    void addCtor(org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String,boolean,boolean) -> addCtor
    void addGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addGetter
    void addSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addSetter
    void addAll(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> addAll
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> merge
    void removeIgnored() -> removeIgnored
    void removeNonVisible() -> removeNonVisible
    void trimByVisibility() -> trimByVisibility
    void mergeAnnotations(boolean) -> mergeAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[]) -> _mergeAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _trimByVisibility
    boolean anyExplicitNames() -> anyExplicitNames
    boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyExplicitNames
    boolean anyVisible() -> anyVisible
    boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyVisible
    boolean anyIgnorals() -> anyIgnorals
    boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyIgnorals
    java.lang.String findNewName() -> findNewName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> findRenamed
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node:
    java.lang.Object value -> value
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next -> next
    java.lang.String explicitName -> explicitName
    boolean isVisible -> isVisible
    boolean isMarkedIgnored -> isMarkedIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object) -> withValue
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> withNext
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored() -> withoutIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible() -> withoutNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> append
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility() -> trimByVisibility
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node access$000(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> access$000
org.codehaus.jackson.map.introspect.VisibilityChecker -> org.codehaus.jackson.map.introspect.VisibilityChecker:
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
org.codehaus.jackson.map.introspect.VisibilityChecker$1 -> org.codehaus.jackson.map.introspect.VisibilityChecker$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonMethod -> $SwitchMap$org$codehaus$jackson$annotate$JsonMethod
org.codehaus.jackson.map.introspect.VisibilityChecker$Std -> org.codehaus.jackson.map.introspect.VisibilityChecker$Std:
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _getterMinLevel -> _getterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _isGetterMinLevel -> _isGetterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _setterMinLevel -> _setterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _creatorMinLevel -> _creatorMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _fieldMinLevel -> _fieldMinLevel
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean hasMethod(org.codehaus.jackson.annotate.JsonMethod[],org.codehaus.jackson.annotate.JsonMethod) -> hasMethod
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
org.codehaus.jackson.map.jsontype.NamedType -> org.codehaus.jackson.map.jsontype.NamedType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.String _name -> _name
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasName() -> hasName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.map.jsontype.SubtypeResolver -> org.codehaus.jackson.map.jsontype.SubtypeResolver:
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
org.codehaus.jackson.map.jsontype.TypeIdResolver -> org.codehaus.jackson.map.jsontype.TypeIdResolver:
    void init(org.codehaus.jackson.type.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
org.codehaus.jackson.map.jsontype.TypeResolverBuilder -> org.codehaus.jackson.map.jsontype.TypeResolverBuilder:
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.String _locateTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _locateTypeId
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void _writePrefix(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> _writePrefix
    void _writePrefix(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> _writePrefix
    void _writeSuffix(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> _writeSuffix
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    void registerSubtype(java.lang.Class,java.lang.String) -> registerSubtype
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String _idFrom(java.lang.Object,java.lang.Class) -> _idFrom
org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver:
    java.lang.String _basePackageName -> _basePackageName
    java.lang.String _basePackagePrefix -> _basePackagePrefix
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver -> org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver:
    java.util.LinkedHashSet _registeredSubtypes -> _registeredSubtypes
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    void _collectAndResolve(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.jsontype.NamedType,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id _idType -> _idType
    org.codehaus.jackson.annotate.JsonTypeInfo$As _includeAs -> _includeAs
    java.lang.String _typeProperty -> _typeProperty
    java.lang.Class _defaultImpl -> _defaultImpl
    org.codehaus.jackson.map.jsontype.TypeIdResolver _customIdResolver -> _customIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    java.lang.String getTypeProperty() -> getTypeProperty
    org.codehaus.jackson.map.jsontype.TypeIdResolver idResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> idResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1 -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id
org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.type.JavaType _defaultImpl -> _defaultImpl
    java.util.HashMap _deserializers -> _deserializers
    org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer -> _defaultImplDeserializer
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String baseTypeName() -> baseTypeName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String) -> _findDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findDefaultImplDeserializer(org.codehaus.jackson.map.DeserializationContext) -> _findDefaultImplDeserializer
org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase -> org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase:
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    void init(org.codehaus.jackson.type.JavaType) -> init
org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    java.util.HashMap _typeToId -> _typeToId
    java.util.HashMap _idToType -> _idToType
    org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver construct(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> construct
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String toString() -> toString
    java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
org.codehaus.jackson.map.module.SimpleAbstractTypeResolver -> org.codehaus.jackson.map.module.SimpleAbstractTypeResolver:
    java.util.HashMap _mappings -> _mappings
    org.codehaus.jackson.map.module.SimpleAbstractTypeResolver addMapping(java.lang.Class,java.lang.Class) -> addMapping
    org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findTypeMapping
    org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> resolveAbstractType
org.codehaus.jackson.map.module.SimpleDeserializers -> org.codehaus.jackson.map.module.SimpleDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    void addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addDeserializer
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
org.codehaus.jackson.map.module.SimpleKeyDeserializers -> org.codehaus.jackson.map.module.SimpleKeyDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    org.codehaus.jackson.map.module.SimpleKeyDeserializers addDeserializer(java.lang.Class,org.codehaus.jackson.map.KeyDeserializer) -> addDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
org.codehaus.jackson.map.module.SimpleModule -> org.codehaus.jackson.map.module.SimpleModule:
    java.lang.String _name -> _name
    org.codehaus.jackson.Version _version -> _version
    org.codehaus.jackson.map.module.SimpleSerializers _serializers -> _serializers
    org.codehaus.jackson.map.module.SimpleDeserializers _deserializers -> _deserializers
    org.codehaus.jackson.map.module.SimpleSerializers _keySerializers -> _keySerializers
    org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers -> _keyDeserializers
    org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes -> _abstractTypes
    org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators -> _valueInstantiators
    java.util.HashMap _mixins -> _mixins
    void setSerializers(org.codehaus.jackson.map.module.SimpleSerializers) -> setSerializers
    void setDeserializers(org.codehaus.jackson.map.module.SimpleDeserializers) -> setDeserializers
    void setKeySerializers(org.codehaus.jackson.map.module.SimpleSerializers) -> setKeySerializers
    void setKeyDeserializers(org.codehaus.jackson.map.module.SimpleKeyDeserializers) -> setKeyDeserializers
    void setAbstractTypes(org.codehaus.jackson.map.module.SimpleAbstractTypeResolver) -> setAbstractTypes
    void setValueInstantiators(org.codehaus.jackson.map.module.SimpleValueInstantiators) -> setValueInstantiators
    org.codehaus.jackson.map.module.SimpleModule addSerializer(org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    org.codehaus.jackson.map.module.SimpleModule addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    org.codehaus.jackson.map.module.SimpleModule addKeySerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addKeySerializer
    org.codehaus.jackson.map.module.SimpleModule addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addDeserializer
    org.codehaus.jackson.map.module.SimpleModule addKeyDeserializer(java.lang.Class,org.codehaus.jackson.map.KeyDeserializer) -> addKeyDeserializer
    org.codehaus.jackson.map.module.SimpleModule addAbstractTypeMapping(java.lang.Class,java.lang.Class) -> addAbstractTypeMapping
    org.codehaus.jackson.map.module.SimpleModule addValueInstantiator(java.lang.Class,org.codehaus.jackson.map.deser.ValueInstantiator) -> addValueInstantiator
    org.codehaus.jackson.map.module.SimpleModule setMixInAnnotation(java.lang.Class,java.lang.Class) -> setMixInAnnotation
    java.lang.String getModuleName() -> getModuleName
    void setupModule(org.codehaus.jackson.map.Module$SetupContext) -> setupModule
    org.codehaus.jackson.Version version() -> version
org.codehaus.jackson.map.module.SimpleSerializers -> org.codehaus.jackson.map.module.SimpleSerializers:
    java.util.HashMap _classMappings -> _classMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    void addSerializer(org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    void addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    void _addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> _addSerializer
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
    org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey) -> _findInterfaceMapping
org.codehaus.jackson.map.module.SimpleValueInstantiators -> org.codehaus.jackson.map.module.SimpleValueInstantiators:
    java.util.HashMap _classMappings -> _classMappings
    org.codehaus.jackson.map.module.SimpleValueInstantiators addValueInstantiator(java.lang.Class,org.codehaus.jackson.map.deser.ValueInstantiator) -> addValueInstantiator
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.ser.AnyGetterWriter -> org.codehaus.jackson.map.ser.AnyGetterWriter:
    java.lang.reflect.Method _anyGetter -> _anyGetter
    org.codehaus.jackson.map.ser.std.MapSerializer _serializer -> _serializer
    void getAndSerialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> getAndSerialize
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.ArraySerializers -> org.codehaus.jackson.map.ser.ArraySerializers:
org.codehaus.jackson.map.ser.BasicSerializerFactory -> org.codehaus.jackson.map.ser.BasicSerializerFactory:
    java.util.HashMap _concrete -> _concrete
    java.util.HashMap _concreteLazy -> _concreteLazy
    java.util.HashMap _arraySerializers -> _arraySerializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    org.codehaus.jackson.map.JsonSerializer getNullSerializer() -> getNullSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByLookup
    org.codehaus.jackson.map.JsonSerializer findSerializerByPrimaryType(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByPrimaryType
    org.codehaus.jackson.map.JsonSerializer findSerializerByAddonType(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByAddonType
    org.codehaus.jackson.map.JsonSerializer findSerializerFromAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findSerializerFromAnnotation
    org.codehaus.jackson.map.JsonSerializer buildContainerSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildContainerSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumSetSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumSetSerializer
    boolean isIndexedList(java.lang.Class) -> isIndexedList
    org.codehaus.jackson.map.JsonSerializer buildMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildArraySerializer
    org.codehaus.jackson.map.JsonSerializer buildIteratorSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIteratorSerializer
    org.codehaus.jackson.map.JsonSerializer buildIterableSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIterableSerializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifySecondaryTypesByAnnotation
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer findContentSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findContentSerializer
    boolean usesStaticTyping(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> usesStaticTyping
org.codehaus.jackson.map.ser.BeanPropertyFilter -> org.codehaus.jackson.map.ser.BeanPropertyFilter:
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.BeanPropertyWriter -> org.codehaus.jackson.map.ser.BeanPropertyWriter:
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.type.JavaType _declaredType -> _declaredType
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    java.lang.reflect.Field _field -> _field
    java.util.HashMap _internalSettings -> _internalSettings
    org.codehaus.jackson.io.SerializedString _name -> _name
    org.codehaus.jackson.type.JavaType _cfgSerializationType -> _cfgSerializationType
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _suppressNulls -> _suppressNulls
    java.lang.Object _suppressableValue -> _suppressableValue
    java.lang.Class[] _includeInViews -> _includeInViews
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.type.JavaType _nonTrivialBaseType -> _nonTrivialBaseType
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter unwrappingWriter() -> unwrappingWriter
    void setViews(java.lang.Class[]) -> setViews
    void setNonTrivialBaseType(org.codehaus.jackson.type.JavaType) -> setNonTrivialBaseType
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    java.lang.Object getInternalSetting(java.lang.Object) -> getInternalSetting
    java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object) -> setInternalSetting
    java.lang.Object removeInternalSetting(java.lang.Object) -> removeInternalSetting
    org.codehaus.jackson.io.SerializedString getSerializedName() -> getSerializedName
    boolean hasSerializer() -> hasSerializer
    org.codehaus.jackson.map.JsonSerializer getSerializer() -> getSerializer
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
    java.lang.Class getRawSerializationType() -> getRawSerializationType
    java.lang.Class getPropertyType() -> getPropertyType
    java.lang.reflect.Type getGenericPropertyType() -> getGenericPropertyType
    java.lang.Class[] getViews() -> getViews
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    java.lang.Object get(java.lang.Object) -> get
    void _reportSelfReference(java.lang.Object) -> _reportSelfReference
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializer -> org.codehaus.jackson.map.ser.BeanSerializer:
    org.codehaus.jackson.map.ser.BeanSerializer createDummy(java.lang.Class) -> createDummy
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializerBuilder -> org.codehaus.jackson.map.ser.BeanSerializerBuilder:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPERTIES -> NO_PROPERTIES
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProperties -> _filteredProperties
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetter -> _anyGetter
    java.lang.Object _filterId -> _filterId
    org.codehaus.jackson.map.introspect.BasicBeanDescription getBeanDescription() -> getBeanDescription
    java.util.List getProperties() -> getProperties
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] getFilteredProperties() -> getFilteredProperties
    boolean hasProperties() -> hasProperties
    void setProperties(java.util.List) -> setProperties
    void setFilteredProperties(org.codehaus.jackson.map.ser.BeanPropertyWriter[]) -> setFilteredProperties
    void setAnyGetter(org.codehaus.jackson.map.ser.AnyGetterWriter) -> setAnyGetter
    void setFilterId(java.lang.Object) -> setFilterId
    org.codehaus.jackson.map.JsonSerializer build() -> build
    org.codehaus.jackson.map.ser.BeanSerializer createDummy() -> createDummy
org.codehaus.jackson.map.ser.BeanSerializerFactory -> org.codehaus.jackson.map.ser.BeanSerializerFactory:
    org.codehaus.jackson.map.ser.BeanSerializerFactory instance -> instance
    org.codehaus.jackson.map.SerializerFactory$Config _factoryConfig -> _factoryConfig
    org.codehaus.jackson.map.SerializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
    org.codehaus.jackson.map.JsonSerializer findBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyContentTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeSerializer
    org.codehaus.jackson.map.JsonSerializer constructBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> constructBeanSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructFilteredBeanWriter(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    org.codehaus.jackson.map.ser.PropertyBuilder constructPropertyBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructPropertyBuilder
    org.codehaus.jackson.map.ser.BeanSerializerBuilder constructBeanSerializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanSerializerBuilder
    java.lang.Object findFilterId(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findFilterId
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    java.util.List findBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findBeanProperties
    java.util.List filterBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> filterBeanProperties
    java.util.List sortBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> sortBeanProperties
    void processViews(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> processViews
    void removeIgnorableTypes(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeIgnorableTypes
    void removeSetterlessGetters(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeSetterlessGetters
    org.codehaus.jackson.map.ser.BeanPropertyWriter _constructWriter(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.ser.PropertyBuilder,boolean,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _constructWriter
org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl -> org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl:
    org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS -> NO_SERIALIZERS
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.Serializers[] _additionalSerializers -> _additionalSerializers
    org.codehaus.jackson.map.Serializers[] _additionalKeySerializers -> _additionalKeySerializers
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.ser.BeanSerializerModifier -> org.codehaus.jackson.map.ser.BeanSerializerModifier:
    java.util.List changeProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> changeProperties
    java.util.List orderProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> orderProperties
    org.codehaus.jackson.map.ser.BeanSerializerBuilder updateBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonSerializer modifySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonSerializer) -> modifySerializer
org.codehaus.jackson.map.ser.ContainerSerializers -> org.codehaus.jackson.map.ser.ContainerSerializers:
org.codehaus.jackson.map.ser.CustomSerializerFactory -> org.codehaus.jackson.map.ser.CustomSerializerFactory:
    java.util.HashMap _directClassMappings -> _directClassMappings
    org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride -> _enumSerializerOverride
    java.util.HashMap _transitiveClassMappings -> _transitiveClassMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    void addGenericMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addGenericMapping
    void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSpecificMapping
    void setEnumSerializer(org.codehaus.jackson.map.JsonSerializer) -> setEnumSerializer
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class,org.codehaus.jackson.map.SerializationConfig) -> findCustomSerializer
    org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey) -> _findInterfaceMapping
org.codehaus.jackson.map.ser.EnumSerializer -> org.codehaus.jackson.map.ser.EnumSerializer:
org.codehaus.jackson.map.ser.FilterProvider -> org.codehaus.jackson.map.ser.FilterProvider:
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructViewBased(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class[] _views -> _views
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class _view -> _view
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.JdkSerializers -> org.codehaus.jackson.map.ser.JdkSerializers:
org.codehaus.jackson.map.ser.MapSerializer -> org.codehaus.jackson.map.ser.MapSerializer:
org.codehaus.jackson.map.ser.PropertyBuilder -> org.codehaus.jackson.map.ser.PropertyBuilder:
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _outputProps -> _outputProps
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.Object _defaultBean -> _defaultBean
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.ser.BeanPropertyWriter buildWriter(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.introspect.AnnotatedMember,boolean) -> buildWriter
    org.codehaus.jackson.type.JavaType findSerializationType(org.codehaus.jackson.map.introspect.Annotated,boolean,org.codehaus.jackson.type.JavaType) -> findSerializationType
    java.lang.Object getDefaultBean() -> getDefaultBean
    java.lang.Object getDefaultValue(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field) -> getDefaultValue
    java.lang.Object getContainerValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getContainerValueChecker
    java.lang.Object getEmptyValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getEmptyValueChecker
    java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
org.codehaus.jackson.map.ser.PropertyBuilder$1 -> org.codehaus.jackson.map.ser.PropertyBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion -> $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.ScalarSerializerBase -> org.codehaus.jackson.map.ser.ScalarSerializerBase:
org.codehaus.jackson.map.ser.SerializerBase -> org.codehaus.jackson.map.ser.SerializerBase:
org.codehaus.jackson.map.ser.StdKeySerializer -> org.codehaus.jackson.map.ser.StdKeySerializer:
    org.codehaus.jackson.map.ser.StdKeySerializer instace -> instace
org.codehaus.jackson.map.ser.StdSerializerProvider -> org.codehaus.jackson.map.ser.StdSerializerProvider:
    boolean CACHE_UNKNOWN_MAPPINGS -> CACHE_UNKNOWN_MAPPINGS
    org.codehaus.jackson.map.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> DEFAULT_NULL_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> DEFAULT_UNKNOWN_SERIALIZER
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.ser.impl.SerializerCache _serializerCache -> _serializerCache
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.JsonSerializer _unknownTypeSerializer -> _unknownTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _nullValueSerializer -> _nullValueSerializer
    org.codehaus.jackson.map.JsonSerializer _nullKeySerializer -> _nullKeySerializer
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> _knownSerializers
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.ser.StdSerializerProvider createInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> createInstance
    void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setDefaultKeySerializer
    void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullValueSerializer
    void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullKeySerializer
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> generateJsonSchema
    boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory) -> hasSerializerFor
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _serializeValue
    void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType) -> _serializeValue
    void _reportIncompatibleRootType(java.lang.Object,org.codehaus.jackson.type.JavaType) -> _reportIncompatibleRootType
    org.codehaus.jackson.map.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> _findExplicitUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _handleContextualResolvable(org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty) -> _handleContextualResolvable
org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer -> org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer:
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.ser.StdSerializers -> org.codehaus.jackson.map.ser.StdSerializers:
org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer -> org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer:
    boolean _forPrimitive -> _forPrimitive
    void serialize(java.lang.Boolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer -> org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer:
org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer -> org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer instance -> instance
    void serialize(java.lang.Double,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer -> org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer instance -> instance
    void serialize(java.lang.Float,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer:
    void serialize(java.lang.Integer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$LongSerializer -> org.codehaus.jackson.map.ser.StdSerializers$LongSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$LongSerializer instance -> instance
    void serialize(java.lang.Long,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer -> org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer:
org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer:
org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer:
    void serialize(java.sql.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer:
    void serialize(java.sql.Time,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$StringSerializer -> org.codehaus.jackson.map.ser.StdSerializers$StringSerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer -> org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer:
org.codehaus.jackson.map.ser.ToStringSerializer -> org.codehaus.jackson.map.ser.ToStringSerializer:
    org.codehaus.jackson.map.ser.ToStringSerializer instance -> instance
org.codehaus.jackson.map.ser.impl.FailingSerializer -> org.codehaus.jackson.map.ser.impl.FailingSerializer:
    java.lang.String _msg -> _msg
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.impl.JsonSerializerMap -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket[] _buckets -> _buckets
    int _size -> _size
    int findSize(int) -> findSize
    int size() -> size
    org.codehaus.jackson.map.JsonSerializer find(org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey) -> find
org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket:
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey key -> key
    org.codehaus.jackson.map.JsonSerializer value -> value
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket next -> next
org.codehaus.jackson.map.ser.impl.PropertySerializerMap -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap:
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap emptyMap() -> emptyMap
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double:
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    org.codehaus.jackson.map.JsonSerializer _serializer1 -> _serializer1
    org.codehaus.jackson.map.JsonSerializer _serializer2 -> _serializer2
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty:
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty instance -> instance
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi:
    int MAX_ENTRIES -> MAX_ENTRIES
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> _entries
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult:
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap map -> map
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single:
    java.lang.Class _type -> _type
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer:
    java.lang.Class type -> type
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap -> org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap _map -> _map
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey _cacheKey -> _cacheKey
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap instance() -> instance
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap) -> from
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
org.codehaus.jackson.map.ser.impl.SerializerCache -> org.codehaus.jackson.map.ser.impl.SerializerCache:
    java.util.HashMap _sharedMap -> _sharedMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _readOnlyMap -> _readOnlyMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    int size() -> size
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    void addTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addAndResolveNonTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
    void addAndResolveNonTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
    void flush() -> flush
org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey -> org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey:
    int _hashCode -> _hashCode
    java.lang.Class _class -> _class
    org.codehaus.jackson.type.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    int hash(java.lang.Class,boolean) -> hash
    int hash(org.codehaus.jackson.type.JavaType,boolean) -> hash
    void resetTyped(java.lang.Class) -> resetTyped
    void resetUntyped(java.lang.Class) -> resetUntyped
    void resetTyped(org.codehaus.jackson.type.JavaType) -> resetTyped
    void resetUntyped(org.codehaus.jackson.type.JavaType) -> resetUntyped
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter:
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set) -> filterOutAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[]) -> filterOutAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set) -> serializeAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[]) -> serializeAllExcept
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter:
    java.util.Set _propertiesToInclude -> _propertiesToInclude
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter:
    java.util.Set _propertiesToExclude -> _propertiesToExclude
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.impl.SimpleFilterProvider -> org.codehaus.jackson.map.ser.impl.SimpleFilterProvider:
    java.util.Map _filtersById -> _filtersById
    org.codehaus.jackson.map.ser.BeanPropertyFilter _defaultFilter -> _defaultFilter
    boolean _cfgFailOnUnknownId -> _cfgFailOnUnknownId
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setDefaultFilter(org.codehaus.jackson.map.ser.BeanPropertyFilter) -> setDefaultFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter getDefaultFilter() -> getDefaultFilter
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean) -> setFailOnUnknownId
    boolean willFailOnUnknownId() -> willFailOnUnknownId
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider addFilter(java.lang.String,org.codehaus.jackson.map.ser.BeanPropertyFilter) -> addFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter removeFilter(java.lang.String) -> removeFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
org.codehaus.jackson.map.ser.impl.UnknownSerializer -> org.codehaus.jackson.map.ser.impl.UnknownSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void failForEmpty(java.lang.Object) -> failForEmpty
org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.AsArraySerializerBase -> org.codehaus.jackson.map.ser.std.AsArraySerializerBase:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.std.BeanSerializerBase -> org.codehaus.jackson.map.ser.std.BeanSerializerBase:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPS -> NO_PROPS
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _props -> _props
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProps -> _filteredProps
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetterWriter -> _anyGetterWriter
    java.lang.Object _propertyFilterId -> _propertyFilterId
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsFiltered(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFieldsFiltered
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(org.codehaus.jackson.map.SerializerProvider) -> findFilter
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.std.CalendarSerializer -> org.codehaus.jackson.map.ser.std.CalendarSerializer:
    org.codehaus.jackson.map.ser.std.CalendarSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.CollectionSerializer -> org.codehaus.jackson.map.ser.std.CollectionSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.ContainerSerializerBase -> org.codehaus.jackson.map.ser.std.ContainerSerializerBase:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
org.codehaus.jackson.map.ser.std.DateSerializer -> org.codehaus.jackson.map.ser.std.DateSerializer:
    org.codehaus.jackson.map.ser.std.DateSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumMapSerializer -> org.codehaus.jackson.map.ser.std.EnumMapSerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.map.util.EnumValues _keyEnums -> _keyEnums
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serialize(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.EnumSerializer -> org.codehaus.jackson.map.ser.std.EnumSerializer:
    org.codehaus.jackson.map.util.EnumValues _values -> _values
    org.codehaus.jackson.map.ser.std.EnumSerializer construct(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> construct
    void serialize(java.lang.Enum,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.map.util.EnumValues getEnumValues() -> getEnumValues
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumSetSerializer -> org.codehaus.jackson.map.ser.std.EnumSetSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.EnumSet,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.IndexedStringListSerializer -> org.codehaus.jackson.map.ser.std.IndexedStringListSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.InetAddressSerializer -> org.codehaus.jackson.map.ser.std.InetAddressSerializer:
    org.codehaus.jackson.map.ser.std.InetAddressSerializer instance -> instance
    void serialize(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.IterableSerializer -> org.codehaus.jackson.map.ser.std.IterableSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Iterable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.JsonValueSerializer -> org.codehaus.jackson.map.ser.std.JsonValueSerializer:
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    boolean _forceTypeInformation -> _forceTypeInformation
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    boolean isNaturalTypeWithStdHandling(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> isNaturalTypeWithStdHandling
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.MapSerializer -> org.codehaus.jackson.map.ser.std.MapSerializer:
    org.codehaus.jackson.type.JavaType UNSPECIFIED_TYPE -> UNSPECIFIED_TYPE
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.util.HashSet _ignoredEntries -> _ignoredEntries
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> construct
    org.codehaus.jackson.map.ser.std.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer) -> construct
    java.util.HashSet toSet(java.lang.String[]) -> toSet
    void serialize(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsUsing(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeFieldsUsing
    void serializeTypedFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedFields
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase -> org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NullSerializer -> org.codehaus.jackson.map.ser.std.NullSerializer:
    org.codehaus.jackson.map.ser.std.NullSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.ObjectArraySerializer -> org.codehaus.jackson.map.ser.std.ObjectArraySerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.RawSerializer -> org.codehaus.jackson.map.ser.std.RawSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.ScalarSerializerBase -> org.codehaus.jackson.map.ser.std.ScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.SerializableSerializer -> org.codehaus.jackson.map.ser.std.SerializableSerializer:
    org.codehaus.jackson.map.ser.std.SerializableSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer -> org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer:
    org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializerBase -> org.codehaus.jackson.map.ser.std.SerializerBase:
    java.lang.Class _handledType -> _handledType
    java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.node.ObjectNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String) -> createSchemaNode
    org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean) -> createSchemaNode
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer) -> isDefaultSerializer
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
org.codehaus.jackson.map.ser.std.StaticListSerializerBase -> org.codehaus.jackson.map.ser.std.StaticListSerializerBase:
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
org.codehaus.jackson.map.ser.std.StdArraySerializers -> org.codehaus.jackson.map.ser.std.StdArraySerializers:
org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase:
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(boolean[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer:
    void serialize(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer:
    void serialize(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void _writeArrayContents(org.codehaus.jackson.JsonGenerator,char[]) -> _writeArrayContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(double[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(float[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(int[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(long[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(short[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer:
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsSlow(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsSlow
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers -> org.codehaus.jackson.map.ser.std.StdContainerSerializers:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase indexedListSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> indexedListSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase collectionSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> collectionSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iteratorSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iteratorSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iterableSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iterableSerializer
    org.codehaus.jackson.map.JsonSerializer enumSetSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> enumSetSerializer
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Iterator,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdJdkSerializers -> org.codehaus.jackson.map.ser.std.StdJdkSerializers:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer:
    void serialize(java.util.concurrent.atomic.AtomicBoolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer:
    void serialize(java.util.concurrent.atomic.AtomicInteger,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer:
    void serialize(java.util.concurrent.atomic.AtomicLong,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer:
    void serialize(java.util.concurrent.atomic.AtomicReference,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer:
    void serialize(java.lang.Class,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer:
    void serialize(java.io.File,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializer:
    org.codehaus.jackson.map.ser.std.StdKeySerializer instace -> instace
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.StdKeySerializers -> org.codehaus.jackson.map.ser.std.StdKeySerializers:
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_STRING_SERIALIZER -> DEFAULT_STRING_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer getStdKeySerializer(org.codehaus.jackson.type.JavaType) -> getStdKeySerializer
org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StringCollectionSerializer -> org.codehaus.jackson.map.ser.std.StringCollectionSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StringSerializer -> org.codehaus.jackson.map.ser.std.StringSerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.TimeZoneSerializer -> org.codehaus.jackson.map.ser.std.TimeZoneSerializer:
    org.codehaus.jackson.map.ser.std.TimeZoneSerializer instance -> instance
    void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.ToStringSerializer -> org.codehaus.jackson.map.ser.std.ToStringSerializer:
    org.codehaus.jackson.map.ser.std.ToStringSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.TokenBufferSerializer -> org.codehaus.jackson.map.ser.std.TokenBufferSerializer:
    void serialize(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.type.ArrayType -> org.codehaus.jackson.map.type.ArrayType:
    org.codehaus.jackson.type.JavaType _componentType -> _componentType
    java.lang.Object _emptyArray -> _emptyArray
    org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object) -> construct
    org.codehaus.jackson.map.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.ArrayType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    boolean isArrayType() -> isArrayType
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean hasGenericTypes() -> hasGenericTypes
    java.lang.String containedTypeName(int) -> containedTypeName
    boolean isContainerType() -> isContainerType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.ClassKey -> org.codehaus.jackson.map.type.ClassKey:
    java.lang.String _className -> _className
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    void reset(java.lang.Class) -> reset
    int compareTo(org.codehaus.jackson.map.type.ClassKey) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.type.CollectionLikeType -> org.codehaus.jackson.map.type.CollectionLikeType:
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isTrueCollectionType() -> isTrueCollectionType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.CollectionType -> org.codehaus.jackson.map.type.CollectionType:
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionType construct(java.lang.Class,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.HierarchicType -> org.codehaus.jackson.map.type.HierarchicType:
    java.lang.reflect.Type _actualType -> _actualType
    java.lang.Class _rawClass -> _rawClass
    java.lang.reflect.ParameterizedType _genericType -> _genericType
    org.codehaus.jackson.map.type.HierarchicType _superType -> _superType
    org.codehaus.jackson.map.type.HierarchicType _subType -> _subType
    org.codehaus.jackson.map.type.HierarchicType deepCloneWithoutSubtype() -> deepCloneWithoutSubtype
    void setSuperType(org.codehaus.jackson.map.type.HierarchicType) -> setSuperType
    org.codehaus.jackson.map.type.HierarchicType getSuperType() -> getSuperType
    void setSubType(org.codehaus.jackson.map.type.HierarchicType) -> setSubType
    org.codehaus.jackson.map.type.HierarchicType getSubType() -> getSubType
    boolean isGeneric() -> isGeneric
    java.lang.reflect.ParameterizedType asGeneric() -> asGeneric
    java.lang.Class getRawClass() -> getRawClass
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.MapLikeType -> org.codehaus.jackson.map.type.MapLikeType:
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.type.MapLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    boolean isMapLikeType() -> isMapLikeType
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    boolean isTrueMapType() -> isTrueMapType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.MapType -> org.codehaus.jackson.map.type.MapType:
    org.codehaus.jackson.map.type.MapType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.MapType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.SimpleType -> org.codehaus.jackson.map.type.SimpleType:
    org.codehaus.jackson.type.JavaType[] _typeParameters -> _typeParameters
    java.lang.String[] _typeNames -> _typeNames
    org.codehaus.jackson.map.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.SimpleType construct(java.lang.Class) -> construct
    org.codehaus.jackson.map.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.TypeBase -> org.codehaus.jackson.map.type.TypeBase:
    java.lang.String _canonicalName -> _canonicalName
    java.lang.String toCanonical() -> toCanonical
    java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> _classSignature
org.codehaus.jackson.map.type.TypeBindings -> org.codehaus.jackson.map.type.TypeBindings:
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.type.JavaType UNBOUND -> UNBOUND
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _contextType -> _contextType
    java.lang.Class _contextClass -> _contextClass
    java.util.Map _bindings -> _bindings
    java.util.HashSet _placeholders -> _placeholders
    org.codehaus.jackson.map.type.TypeBindings _parentBindings -> _parentBindings
    org.codehaus.jackson.map.type.TypeBindings childInstance() -> childInstance
    org.codehaus.jackson.type.JavaType resolveType(java.lang.Class) -> resolveType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    int getBindingCount() -> getBindingCount
    org.codehaus.jackson.type.JavaType findType(java.lang.String) -> findType
    void addBinding(java.lang.String,org.codehaus.jackson.type.JavaType) -> addBinding
    org.codehaus.jackson.type.JavaType[] typesAsArray() -> typesAsArray
    void _resolve() -> _resolve
    void _addPlaceholder(java.lang.String) -> _addPlaceholder
    void _resolveBindings(java.lang.reflect.Type) -> _resolveBindings
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.TypeFactory -> org.codehaus.jackson.map.type.TypeFactory:
    org.codehaus.jackson.map.type.TypeFactory instance -> instance
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.map.type.TypeModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.type.TypeParser _parser -> _parser
    org.codehaus.jackson.map.type.HierarchicType _cachedHashMapType -> _cachedHashMapType
    org.codehaus.jackson.map.type.HierarchicType _cachedArrayListType -> _cachedArrayListType
    org.codehaus.jackson.map.type.TypeFactory withModifier(org.codehaus.jackson.map.type.TypeModifier) -> withModifier
    org.codehaus.jackson.map.type.TypeFactory defaultInstance() -> defaultInstance
    org.codehaus.jackson.type.JavaType unknownType() -> unknownType
    java.lang.Class rawClass(java.lang.reflect.Type) -> rawClass
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,java.lang.Class) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> type
    org.codehaus.jackson.type.JavaType type(org.codehaus.jackson.type.TypeReference) -> type
    org.codehaus.jackson.type.JavaType arrayType(java.lang.Class) -> arrayType
    org.codehaus.jackson.type.JavaType arrayType(org.codehaus.jackson.type.JavaType) -> arrayType
    org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,java.lang.Class) -> collectionType
    org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> collectionType
    org.codehaus.jackson.type.JavaType mapType(java.lang.Class,java.lang.Class,java.lang.Class) -> mapType
    org.codehaus.jackson.type.JavaType mapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> mapType
    org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,java.lang.Class[]) -> parametricType
    org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> parametricType
    org.codehaus.jackson.type.JavaType fromCanonical(java.lang.String) -> fromCanonical
    org.codehaus.jackson.type.JavaType specialize(org.codehaus.jackson.type.JavaType,java.lang.Class) -> specialize
    org.codehaus.jackson.type.JavaType fastSimpleType(java.lang.Class) -> fastSimpleType
    org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class) -> findParameterTypes
    org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> findParameterTypes
    org.codehaus.jackson.type.JavaType[] findParameterTypes(org.codehaus.jackson.type.JavaType,java.lang.Class) -> findParameterTypes
    org.codehaus.jackson.type.JavaType fromClass(java.lang.Class) -> fromClass
    org.codehaus.jackson.type.JavaType fromTypeReference(org.codehaus.jackson.type.TypeReference) -> fromTypeReference
    org.codehaus.jackson.type.JavaType fromType(java.lang.reflect.Type) -> fromType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    org.codehaus.jackson.type.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    org.codehaus.jackson.type.JavaType[] findTypeParameters(org.codehaus.jackson.type.JavaType,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> findTypeParameters
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> constructType
    org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,java.lang.Class) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType) -> constructType
    org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> _constructType
    org.codehaus.jackson.map.type.ArrayType constructArrayType(java.lang.Class) -> constructArrayType
    org.codehaus.jackson.map.type.ArrayType constructArrayType(org.codehaus.jackson.type.JavaType) -> constructArrayType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> constructCollectionType
    org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,java.lang.Class) -> constructCollectionLikeType
    org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> constructCollectionLikeType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> constructMapType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> constructMapLikeType
    org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapLikeType
    org.codehaus.jackson.type.JavaType constructSimpleType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructSimpleType
    org.codehaus.jackson.type.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,java.lang.Class[]) -> constructParametricType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructParametricType
    org.codehaus.jackson.map.type.CollectionType constructRawCollectionType(java.lang.Class) -> constructRawCollectionType
    org.codehaus.jackson.map.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class) -> constructRawCollectionLikeType
    org.codehaus.jackson.map.type.MapType constructRawMapType(java.lang.Class) -> constructRawMapType
    org.codehaus.jackson.map.type.MapLikeType constructRawMapLikeType(java.lang.Class) -> constructRawMapLikeType
    org.codehaus.jackson.type.JavaType _fromClass(java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> _fromClass
    org.codehaus.jackson.type.JavaType _fromParameterizedClass(java.lang.Class,java.util.List) -> _fromParameterizedClass
    org.codehaus.jackson.type.JavaType _fromParamType(java.lang.reflect.ParameterizedType,org.codehaus.jackson.map.type.TypeBindings) -> _fromParamType
    org.codehaus.jackson.type.JavaType _fromArrayType(java.lang.reflect.GenericArrayType,org.codehaus.jackson.map.type.TypeBindings) -> _fromArrayType
    org.codehaus.jackson.type.JavaType _fromVariable(java.lang.reflect.TypeVariable,org.codehaus.jackson.map.type.TypeBindings) -> _fromVariable
    org.codehaus.jackson.type.JavaType _fromWildcard(java.lang.reflect.WildcardType,org.codehaus.jackson.map.type.TypeBindings) -> _fromWildcard
    org.codehaus.jackson.type.JavaType _mapType(java.lang.Class) -> _mapType
    org.codehaus.jackson.type.JavaType _collectionType(java.lang.Class) -> _collectionType
    org.codehaus.jackson.type.JavaType _resolveVariableViaSubTypes(org.codehaus.jackson.map.type.HierarchicType,java.lang.String,org.codehaus.jackson.map.type.TypeBindings) -> _resolveVariableViaSubTypes
    org.codehaus.jackson.type.JavaType _unknownType() -> _unknownType
    org.codehaus.jackson.map.type.HierarchicType _findSuperTypeChain(java.lang.Class,java.lang.Class) -> _findSuperTypeChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperClassChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _doFindSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType,java.lang.Class) -> _doFindSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _hashMapSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _hashMapSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _arrayListSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _arrayListSuperInterfaceChain
org.codehaus.jackson.map.type.TypeModifier -> org.codehaus.jackson.map.type.TypeModifier:
    org.codehaus.jackson.type.JavaType modifyType(org.codehaus.jackson.type.JavaType,java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.type.TypeFactory) -> modifyType
org.codehaus.jackson.map.type.TypeParser -> org.codehaus.jackson.map.type.TypeParser:
    org.codehaus.jackson.map.type.TypeFactory _factory -> _factory
    org.codehaus.jackson.type.JavaType parse(java.lang.String) -> parse
    org.codehaus.jackson.type.JavaType parseType(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseType
    java.util.List parseTypes(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseTypes
    java.lang.Class findClass(java.lang.String,org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> findClass
    java.lang.IllegalArgumentException _problem(org.codehaus.jackson.map.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
org.codehaus.jackson.map.type.TypeParser$MyTokenizer -> org.codehaus.jackson.map.type.TypeParser$MyTokenizer:
    java.lang.String _input -> _input
    int _index -> _index
    java.lang.String _pushbackToken -> _pushbackToken
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushBack(java.lang.String) -> pushBack
    java.lang.String getAllInput() -> getAllInput
    java.lang.String getUsedInput() -> getUsedInput
    java.lang.String getRemainingInput() -> getRemainingInput
org.codehaus.jackson.map.util.Annotations -> org.codehaus.jackson.map.util.Annotations:
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    int size() -> size
org.codehaus.jackson.map.util.ArrayBuilders -> org.codehaus.jackson.map.util.ArrayBuilders:
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> _booleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder -> _shortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder -> _intBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder -> _longBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder -> _floatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> _doubleBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    java.util.HashSet arrayToSet(java.lang.Object[]) -> arrayToSet
    java.util.List addToList(java.util.List,java.lang.Object) -> addToList
    java.lang.Object[] insertInList(java.lang.Object[],java.lang.Object) -> insertInList
    java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> insertInListNoDup
    java.util.Iterator arrayAsIterator(java.lang.Object[]) -> arrayAsIterator
    java.lang.Iterable arrayAsIterable(java.lang.Object[]) -> arrayAsIterable
org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator -> org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator:
    java.lang.Object[] _array -> _array
    int _index -> _index
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder:
    boolean[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder:
    byte[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder:
    double[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder:
    float[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder:
    int[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder:
    long[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder:
    short[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.BeanUtil -> org.codehaus.jackson.map.util.BeanUtil:
    java.lang.String okNameForGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForGetter
    java.lang.String okNameForRegularGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForRegularGetter
    java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForIsGetter
    java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForSetter
    boolean isCglibGetCallbacks(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    boolean isGroovyMetaClassSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassSetter
    boolean isGroovyMetaClassGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    java.lang.String manglePropertyName(java.lang.String) -> manglePropertyName
org.codehaus.jackson.map.util.ClassUtil -> org.codehaus.jackson.map.util.ClassUtil:
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class) -> findSuperTypes
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List) -> findSuperTypes
    void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> _addSuperTypes
    java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    java.lang.String isLocalType(java.lang.Class) -> isLocalType
    java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    boolean isProxyType(java.lang.Class) -> isProxyType
    boolean isConcrete(java.lang.Class) -> isConcrete
    boolean isConcrete(java.lang.reflect.Member) -> isConcrete
    boolean isCollectionMapOrArray(java.lang.Class) -> isCollectionMapOrArray
    java.lang.String getClassDescription(java.lang.Object) -> getClassDescription
    boolean hasGetterSignature(java.lang.reflect.Method) -> hasGetterSignature
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    void throwRootCause(java.lang.Throwable) -> throwRootCause
    void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    java.lang.Class wrapperType(java.lang.Class) -> wrapperType
    void checkAndFixAccess(java.lang.reflect.Member) -> checkAndFixAccess
    java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    java.lang.Class findEnumType(java.lang.Class) -> findEnumType
org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator -> org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator:
    org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator instance -> instance
    java.lang.reflect.Field enumSetTypeField -> enumSetTypeField
    java.lang.reflect.Field enumMapTypeField -> enumMapTypeField
    java.lang.Class enumTypeFor(java.util.EnumSet) -> enumTypeFor
    java.lang.Class enumTypeFor(java.util.EnumMap) -> enumTypeFor
    java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> get
    java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> locateField
org.codehaus.jackson.map.util.Comparators -> org.codehaus.jackson.map.util.Comparators:
    java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
org.codehaus.jackson.map.util.Comparators$1 -> org.codehaus.jackson.map.util.Comparators$1:
    java.lang.Object val$defaultValue -> val$defaultValue
    int val$length -> val$length
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.util.EnumResolver -> org.codehaus.jackson.map.util.EnumResolver:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _enums -> _enums
    java.util.HashMap _enumsById -> _enumsById
    org.codehaus.jackson.map.util.EnumResolver constructFor(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFor
    org.codehaus.jackson.map.util.EnumResolver constructUsingToString(java.lang.Class) -> constructUsingToString
    org.codehaus.jackson.map.util.EnumResolver constructUnsafe(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructUnsafe
    org.codehaus.jackson.map.util.EnumResolver constructUnsafeUsingToString(java.lang.Class) -> constructUnsafeUsingToString
    java.lang.Enum findEnum(java.lang.String) -> findEnum
    java.lang.Enum getEnum(int) -> getEnum
    java.lang.Class getEnumClass() -> getEnumClass
    int lastValidIndex() -> lastValidIndex
org.codehaus.jackson.map.util.EnumValues -> org.codehaus.jackson.map.util.EnumValues:
    java.util.EnumMap _values -> _values
    org.codehaus.jackson.map.util.EnumValues construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> construct
    org.codehaus.jackson.map.util.EnumValues constructFromName(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromName
    org.codehaus.jackson.map.util.EnumValues constructFromToString(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromToString
    java.lang.String valueFor(java.lang.Enum) -> valueFor
    org.codehaus.jackson.io.SerializedString serializedValueFor(java.lang.Enum) -> serializedValueFor
    java.util.Collection values() -> values
org.codehaus.jackson.map.util.JSONPObject -> org.codehaus.jackson.map.util.JSONPObject:
    java.lang.String _function -> _function
    java.lang.Object _value -> _value
    org.codehaus.jackson.type.JavaType _serializationType -> _serializationType
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String getFunction() -> getFunction
    java.lang.Object getValue() -> getValue
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
org.codehaus.jackson.map.util.JSONWrappedObject -> org.codehaus.jackson.map.util.JSONWrappedObject:
    java.lang.String _prefix -> _prefix
    java.lang.String _suffix -> _suffix
    java.lang.Object _value -> _value
    org.codehaus.jackson.type.JavaType _serializationType -> _serializationType
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.Object getValue() -> getValue
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
org.codehaus.jackson.map.util.LRUMap -> org.codehaus.jackson.map.util.LRUMap:
    int _maxEntries -> _maxEntries
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.codehaus.jackson.map.util.LinkedNode -> org.codehaus.jackson.map.util.LinkedNode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.map.util.LinkedNode _next -> _next
    org.codehaus.jackson.map.util.LinkedNode next() -> next
    java.lang.Object value() -> value
    boolean contains(org.codehaus.jackson.map.util.LinkedNode,java.lang.Object) -> contains
org.codehaus.jackson.map.util.Named -> org.codehaus.jackson.map.util.Named:
    java.lang.String getName() -> getName
org.codehaus.jackson.map.util.ObjectBuffer -> org.codehaus.jackson.map.util.ObjectBuffer:
    int INITIAL_CHUNK_SIZE -> INITIAL_CHUNK_SIZE
    int SMALL_CHUNK_SIZE -> SMALL_CHUNK_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object[] _freeBuffer -> _freeBuffer
    java.lang.Object[] resetAndStart() -> resetAndStart
    java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    int initialCapacity() -> initialCapacity
    int bufferedSize() -> bufferedSize
    void _reset() -> _reset
    void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
org.codehaus.jackson.map.util.ObjectBuffer$Node -> org.codehaus.jackson.map.util.ObjectBuffer$Node:
    java.lang.Object[] _data -> _data
    org.codehaus.jackson.map.util.ObjectBuffer$Node _next -> _next
    java.lang.Object[] getData() -> getData
    org.codehaus.jackson.map.util.ObjectBuffer$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.ObjectBuffer$Node) -> linkNext
org.codehaus.jackson.map.util.PrimitiveArrayBuilder -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder:
    int INITIAL_CHUNK_SIZE -> INITIAL_CHUNK_SIZE
    int SMALL_CHUNK_SIZE -> SMALL_CHUNK_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    java.lang.Object _freeBuffer -> _freeBuffer
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object resetAndStart() -> resetAndStart
    java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    void _reset() -> _reset
org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node:
    java.lang.Object _data -> _data
    int _dataLength -> _dataLength
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next -> _next
    java.lang.Object getData() -> getData
    int copyData(java.lang.Object,int) -> copyData
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node) -> linkNext
org.codehaus.jackson.map.util.Provider -> org.codehaus.jackson.map.util.Provider:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.util.RootNameLookup -> org.codehaus.jackson.map.util.RootNameLookup:
    org.codehaus.jackson.map.util.LRUMap _rootNames -> _rootNames
    org.codehaus.jackson.io.SerializedString findRootName(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.MapperConfig) -> findRootName
    org.codehaus.jackson.io.SerializedString findRootName(java.lang.Class,org.codehaus.jackson.map.MapperConfig) -> findRootName
org.codehaus.jackson.map.util.StdDateFormat -> org.codehaus.jackson.map.util.StdDateFormat:
    java.lang.String DATE_FORMAT_STR_ISO8601 -> DATE_FORMAT_STR_ISO8601
    java.lang.String DATE_FORMAT_STR_ISO8601_Z -> DATE_FORMAT_STR_ISO8601_Z
    java.lang.String DATE_FORMAT_STR_PLAIN -> DATE_FORMAT_STR_PLAIN
    java.lang.String DATE_FORMAT_STR_RFC1123 -> DATE_FORMAT_STR_RFC1123
    java.lang.String[] ALL_FORMATS -> ALL_FORMATS
    java.text.SimpleDateFormat DATE_FORMAT_RFC1123 -> DATE_FORMAT_RFC1123
    java.text.SimpleDateFormat DATE_FORMAT_ISO8601 -> DATE_FORMAT_ISO8601
    java.text.SimpleDateFormat DATE_FORMAT_ISO8601_Z -> DATE_FORMAT_ISO8601_Z
    java.text.SimpleDateFormat DATE_FORMAT_PLAIN -> DATE_FORMAT_PLAIN
    org.codehaus.jackson.map.util.StdDateFormat instance -> instance
    java.text.SimpleDateFormat _formatRFC1123 -> _formatRFC1123
    java.text.SimpleDateFormat _formatISO8601 -> _formatISO8601
    java.text.SimpleDateFormat _formatISO8601_z -> _formatISO8601_z
    java.text.SimpleDateFormat _formatPlain -> _formatPlain
    org.codehaus.jackson.map.util.StdDateFormat clone() -> clone
    java.text.DateFormat getBlueprintISO8601Format() -> getBlueprintISO8601Format
    java.text.DateFormat getISO8601Format(java.util.TimeZone) -> getISO8601Format
    java.text.DateFormat getBlueprintRFC1123Format() -> getBlueprintRFC1123Format
    java.text.DateFormat getRFC1123Format(java.util.TimeZone) -> getRFC1123Format
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    boolean hasTimeZone(java.lang.String) -> hasTimeZone
    java.lang.Object clone() -> clone
org.codehaus.jackson.node.ArrayNode -> org.codehaus.jackson.node.ArrayNode:
    java.util.ArrayList _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isArray() -> isArray
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    org.codehaus.jackson.JsonNode set(int,org.codehaus.jackson.JsonNode) -> set
    void add(org.codehaus.jackson.JsonNode) -> add
    org.codehaus.jackson.JsonNode addAll(org.codehaus.jackson.node.ArrayNode) -> addAll
    org.codehaus.jackson.JsonNode addAll(java.util.Collection) -> addAll
    void insert(int,org.codehaus.jackson.JsonNode) -> insert
    org.codehaus.jackson.JsonNode remove(int) -> remove
    org.codehaus.jackson.node.ArrayNode removeAll() -> removeAll
    org.codehaus.jackson.node.ArrayNode addArray() -> addArray
    org.codehaus.jackson.node.ObjectNode addObject() -> addObject
    void addPOJO(java.lang.Object) -> addPOJO
    void addNull() -> addNull
    void add(int) -> add
    void add(java.lang.Integer) -> add
    void add(long) -> add
    void add(java.lang.Long) -> add
    void add(float) -> add
    void add(java.lang.Float) -> add
    void add(double) -> add
    void add(java.lang.Double) -> add
    void add(java.math.BigDecimal) -> add
    void add(java.lang.String) -> add
    void add(boolean) -> add
    void add(java.lang.Boolean) -> add
    void add(byte[]) -> add
    org.codehaus.jackson.node.ArrayNode insertArray(int) -> insertArray
    org.codehaus.jackson.node.ObjectNode insertObject(int) -> insertObject
    void insertPOJO(int,java.lang.Object) -> insertPOJO
    void insertNull(int) -> insertNull
    void insert(int,int) -> insert
    void insert(int,java.lang.Integer) -> insert
    void insert(int,long) -> insert
    void insert(int,java.lang.Long) -> insert
    void insert(int,float) -> insert
    void insert(int,java.lang.Float) -> insert
    void insert(int,double) -> insert
    void insert(int,java.lang.Double) -> insert
    void insert(int,java.math.BigDecimal) -> insert
    void insert(int,java.lang.String) -> insert
    void insert(int,boolean) -> insert
    void insert(int,java.lang.Boolean) -> insert
    void insert(int,byte[]) -> insert
    void addContentsTo(java.util.List) -> addContentsTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonNode _set(int,org.codehaus.jackson.JsonNode) -> _set
    void _add(org.codehaus.jackson.JsonNode) -> _add
    void _insert(int,org.codehaus.jackson.JsonNode) -> _insert
    boolean _sameChildren(java.util.ArrayList) -> _sameChildren
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.BaseJsonNode -> org.codehaus.jackson.node.BaseJsonNode:
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    org.codehaus.jackson.JsonNode findPath(java.lang.String) -> findPath
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    org.codehaus.jackson.JsonParser traverse() -> traverse
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.BigIntegerNode -> org.codehaus.jackson.node.BigIntegerNode:
    java.math.BigInteger _value -> _value
    org.codehaus.jackson.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isBigInteger() -> isBigInteger
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.BinaryNode -> org.codehaus.jackson.node.BinaryNode:
    org.codehaus.jackson.node.BinaryNode EMPTY_BINARY_NODE -> EMPTY_BINARY_NODE
    byte[] _data -> _data
    org.codehaus.jackson.node.BinaryNode valueOf(byte[]) -> valueOf
    org.codehaus.jackson.node.BinaryNode valueOf(byte[],int,int) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isBinary() -> isBinary
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.BooleanNode -> org.codehaus.jackson.node.BooleanNode:
    org.codehaus.jackson.node.BooleanNode TRUE -> TRUE
    org.codehaus.jackson.node.BooleanNode FALSE -> FALSE
    org.codehaus.jackson.node.BooleanNode getTrue() -> getTrue
    org.codehaus.jackson.node.BooleanNode getFalse() -> getFalse
    org.codehaus.jackson.node.BooleanNode valueOf(boolean) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isBoolean() -> isBoolean
    boolean getBooleanValue() -> getBooleanValue
    java.lang.String asText() -> asText
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.ContainerNode -> org.codehaus.jackson.node.ContainerNode:
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean isContainerNode() -> isContainerNode
    org.codehaus.jackson.JsonToken asToken() -> asToken
    java.lang.String getValueAsText() -> getValueAsText
    java.lang.String asText() -> asText
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    int size() -> size
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.ObjectNode objectNode() -> objectNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.BooleanNode booleanNode(boolean) -> booleanNode
    org.codehaus.jackson.node.NumericNode numberNode(byte) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(short) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(double) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    org.codehaus.jackson.node.POJONode POJONode(java.lang.Object) -> POJONode
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.ContainerNode$NoNodesIterator -> org.codehaus.jackson.node.ContainerNode$NoNodesIterator:
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance -> instance
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance() -> instance
    boolean hasNext() -> hasNext
    org.codehaus.jackson.JsonNode next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.ContainerNode$NoStringsIterator -> org.codehaus.jackson.node.ContainerNode$NoStringsIterator:
    org.codehaus.jackson.node.ContainerNode$NoStringsIterator instance -> instance
    org.codehaus.jackson.node.ContainerNode$NoStringsIterator instance() -> instance
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.DecimalNode -> org.codehaus.jackson.node.DecimalNode:
    java.math.BigDecimal _value -> _value
    org.codehaus.jackson.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isBigDecimal() -> isBigDecimal
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.DoubleNode -> org.codehaus.jackson.node.DoubleNode:
    double _value -> _value
    org.codehaus.jackson.node.DoubleNode valueOf(double) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isDouble() -> isDouble
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.IntNode -> org.codehaus.jackson.node.IntNode:
    int MIN_CANONICAL -> MIN_CANONICAL
    int MAX_CANONICAL -> MAX_CANONICAL
    org.codehaus.jackson.node.IntNode[] CANONICALS -> CANONICALS
    int _value -> _value
    org.codehaus.jackson.node.IntNode valueOf(int) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isInt() -> isInt
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.JsonNodeFactory -> org.codehaus.jackson.node.JsonNodeFactory:
    org.codehaus.jackson.node.JsonNodeFactory instance -> instance
    org.codehaus.jackson.node.BooleanNode booleanNode(boolean) -> booleanNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.NumericNode numberNode(byte) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(short) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Short) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigInteger) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Float) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(double) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Double) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.ObjectNode objectNode() -> objectNode
    org.codehaus.jackson.node.POJONode POJONode(java.lang.Object) -> POJONode
org.codehaus.jackson.node.LongNode -> org.codehaus.jackson.node.LongNode:
    long _value -> _value
    org.codehaus.jackson.node.LongNode valueOf(long) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isLong() -> isLong
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.MissingNode -> org.codehaus.jackson.node.MissingNode:
    org.codehaus.jackson.node.MissingNode instance -> instance
    org.codehaus.jackson.node.MissingNode getInstance() -> getInstance
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isMissingNode() -> isMissingNode
    java.lang.String asText() -> asText
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.codehaus.jackson.node.NodeCursor -> org.codehaus.jackson.node.NodeCursor:
    org.codehaus.jackson.node.NodeCursor _parent -> _parent
    org.codehaus.jackson.node.NodeCursor getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.node.NodeCursor iterateChildren() -> iterateChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$Array -> org.codehaus.jackson.node.NodeCursor$Array:
    java.util.Iterator _contents -> _contents
    org.codehaus.jackson.JsonNode _currentNode -> _currentNode
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$Object -> org.codehaus.jackson.node.NodeCursor$Object:
    java.util.Iterator _contents -> _contents
    java.util.Map$Entry _current -> _current
    boolean _needEntry -> _needEntry
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$RootValue -> org.codehaus.jackson.node.NodeCursor$RootValue:
    org.codehaus.jackson.JsonNode _node -> _node
    boolean _done -> _done
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NullNode -> org.codehaus.jackson.node.NullNode:
    org.codehaus.jackson.node.NullNode instance -> instance
    org.codehaus.jackson.node.NullNode getInstance() -> getInstance
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isNull() -> isNull
    java.lang.String asText() -> asText
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.NumericNode -> org.codehaus.jackson.node.NumericNode:
    boolean isNumber() -> isNumber
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
org.codehaus.jackson.node.ObjectNode -> org.codehaus.jackson.node.ObjectNode:
    java.util.LinkedHashMap _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isObject() -> isObject
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.util.Iterator getFieldNames() -> getFieldNames
    org.codehaus.jackson.JsonNode path(int) -> path
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    java.util.Iterator getFields() -> getFields
    org.codehaus.jackson.node.ObjectNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode put(java.lang.String,org.codehaus.jackson.JsonNode) -> put
    org.codehaus.jackson.JsonNode remove(java.lang.String) -> remove
    org.codehaus.jackson.node.ObjectNode remove(java.util.Collection) -> remove
    org.codehaus.jackson.node.ObjectNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode putAll(java.util.Map) -> putAll
    org.codehaus.jackson.JsonNode putAll(org.codehaus.jackson.node.ObjectNode) -> putAll
    org.codehaus.jackson.node.ObjectNode retain(java.util.Collection) -> retain
    org.codehaus.jackson.node.ObjectNode retain(java.lang.String[]) -> retain
    org.codehaus.jackson.node.ArrayNode putArray(java.lang.String) -> putArray
    org.codehaus.jackson.node.ObjectNode putObject(java.lang.String) -> putObject
    void putPOJO(java.lang.String,java.lang.Object) -> putPOJO
    void putNull(java.lang.String) -> putNull
    void put(java.lang.String,int) -> put
    void put(java.lang.String,java.lang.Integer) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,java.lang.Long) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,java.lang.Float) -> put
    void put(java.lang.String,double) -> put
    void put(java.lang.String,java.lang.Double) -> put
    void put(java.lang.String,java.math.BigDecimal) -> put
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Boolean) -> put
    void put(java.lang.String,byte[]) -> put
    void putContentsTo(java.util.Map) -> putContentsTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonNode _put(java.lang.String,org.codehaus.jackson.JsonNode) -> _put
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.ObjectNode$NoFieldsIterator -> org.codehaus.jackson.node.ObjectNode$NoFieldsIterator:
    org.codehaus.jackson.node.ObjectNode$NoFieldsIterator instance -> instance
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.POJONode -> org.codehaus.jackson.node.POJONode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isPojo() -> isPojo
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.Object getPojo() -> getPojo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.TextNode -> org.codehaus.jackson.node.TextNode:
    int INT_SPACE -> INT_SPACE
    org.codehaus.jackson.node.TextNode EMPTY_STRING_NODE -> EMPTY_STRING_NODE
    java.lang.String _value -> _value
    org.codehaus.jackson.node.TextNode valueOf(java.lang.String) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isTextual() -> isTextual
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int) -> _reportInvalidBase64
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
org.codehaus.jackson.node.TreeTraversingParser -> org.codehaus.jackson.node.TreeTraversingParser:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.node.NodeCursor _nodeCursor -> _nodeCursor
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    boolean _startContainer -> _startContainer
    boolean _closed -> _closed
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    int getIntValue() -> getIntValue
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    org.codehaus.jackson.JsonNode currentNumericNode() -> currentNumericNode
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.node.TreeTraversingParser$1 -> org.codehaus.jackson.node.TreeTraversingParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.node.ValueNode -> org.codehaus.jackson.node.ValueNode:
    boolean isValueNode() -> isValueNode
    org.codehaus.jackson.JsonToken asToken() -> asToken
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    java.lang.String toString() -> toString
org.codehaus.jackson.schema.JsonSchema -> org.codehaus.jackson.schema.JsonSchema:
    org.codehaus.jackson.node.ObjectNode schema -> schema
    org.codehaus.jackson.node.ObjectNode getSchemaNode() -> getSchemaNode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.JsonNode getDefaultSchemaNode() -> getDefaultSchemaNode
org.codehaus.jackson.schema.JsonSerializableSchema -> org.codehaus.jackson.schema.JsonSerializableSchema:
    java.lang.String schemaType() -> schemaType
    java.lang.String schemaObjectPropertiesDefinition() -> schemaObjectPropertiesDefinition
    java.lang.String schemaItemDefinition() -> schemaItemDefinition
org.codehaus.jackson.schema.SchemaAware -> org.codehaus.jackson.schema.SchemaAware:
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.sym.BytesToNameCanonicalizer -> org.codehaus.jackson.sym.BytesToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    int MIN_HASH_SIZE -> MIN_HASH_SIZE
    int INITIAL_COLLISION_LEN -> INITIAL_COLLISION_LEN
    int LAST_VALID_BUCKET -> LAST_VALID_BUCKET
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _parent -> _parent
    boolean _intern -> _intern
    int _count -> _count
    int _mainHashMask -> _mainHashMask
    int[] _mainHash -> _mainHash
    org.codehaus.jackson.sym.Name[] _mainNames -> _mainNames
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket[] _collList -> _collList
    int _collCount -> _collCount
    int _collEnd -> _collEnd
    boolean _needRehash -> _needRehash
    boolean _mainHashShared -> _mainHashShared
    boolean _mainNamesShared -> _mainNamesShared
    boolean _collListShared -> _collListShared
    org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot() -> createRoot
    org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    void release() -> release
    void initTables(int) -> initTables
    void mergeChild(org.codehaus.jackson.sym.BytesToNameCanonicalizer) -> mergeChild
    void markAsShared() -> markAsShared
    int size() -> size
    boolean maybeDirty() -> maybeDirty
    org.codehaus.jackson.sym.Name getEmptyName() -> getEmptyName
    org.codehaus.jackson.sym.Name findName(int) -> findName
    org.codehaus.jackson.sym.Name findName(int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int[],int) -> findName
    org.codehaus.jackson.sym.Name addName(java.lang.String,int,int) -> addName
    org.codehaus.jackson.sym.Name addName(java.lang.String,int[],int) -> addName
    int calcHash(int) -> calcHash
    int calcHash(int,int) -> calcHash
    int calcHash(int[],int) -> calcHash
    void _addSymbol(int,org.codehaus.jackson.sym.Name) -> _addSymbol
    void rehash() -> rehash
    void nukeSymbols() -> nukeSymbols
    int findBestBucket() -> findBestBucket
    void unshareMain() -> unshareMain
    void unshareCollision() -> unshareCollision
    void unshareNames() -> unshareNames
    void expandCollision() -> expandCollision
    org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int,int) -> constructName
    org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int[],int) -> constructName
org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket:
    org.codehaus.jackson.sym.Name _name -> _name
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket _next -> _next
    int length() -> length
    org.codehaus.jackson.sym.Name find(int,int,int) -> find
    org.codehaus.jackson.sym.Name find(int,int[],int) -> find
org.codehaus.jackson.sym.CharsToNameCanonicalizer -> org.codehaus.jackson.sym.CharsToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    org.codehaus.jackson.sym.CharsToNameCanonicalizer sBootstrapSymbolTable -> sBootstrapSymbolTable
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _parent -> _parent
    boolean _intern -> _intern
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    boolean _dirty -> _dirty
    org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    void initTables(int) -> initTables
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeOrphan() -> makeOrphan
    void mergeChild(org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> mergeChild
    void release() -> release
    int size() -> size
    boolean maybeDirty() -> maybeDirty
    java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    int calcHash(char[],int,int) -> calcHash
    int calcHash(java.lang.String) -> calcHash
    void copyArrays() -> copyArrays
    void rehash() -> rehash
org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket:
    java.lang.String _symbol -> _symbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket mNext -> mNext
    java.lang.String getSymbol() -> getSymbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket getNext() -> getNext
    java.lang.String find(char[],int,int) -> find
org.codehaus.jackson.sym.Name -> org.codehaus.jackson.sym.Name:
    java.lang.String _name -> _name
    int _hashCode -> _hashCode
    java.lang.String getName() -> getName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.sym.Name1 -> org.codehaus.jackson.sym.Name1:
    org.codehaus.jackson.sym.Name1 sEmptyName -> sEmptyName
    int mQuad -> mQuad
    org.codehaus.jackson.sym.Name1 getEmptyName() -> getEmptyName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.Name2 -> org.codehaus.jackson.sym.Name2:
    int mQuad1 -> mQuad1
    int mQuad2 -> mQuad2
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.Name3 -> org.codehaus.jackson.sym.Name3:
    int mQuad1 -> mQuad1
    int mQuad2 -> mQuad2
    int mQuad3 -> mQuad3
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.NameN -> org.codehaus.jackson.sym.NameN:
    int[] mQuads -> mQuads
    int mQuadLen -> mQuadLen
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.type.JavaType -> org.codehaus.jackson.type.JavaType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.Object _valueHandler -> _valueHandler
    java.lang.Object _typeHandler -> _typeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    void setValueHandler(java.lang.Object) -> setValueHandler
    org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class) -> narrowBy
    org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class) -> forcedNarrowBy
    org.codehaus.jackson.type.JavaType widenBy(java.lang.Class) -> widenBy
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType _widen(java.lang.Class) -> _widen
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    java.lang.String toCanonical() -> toCanonical
    java.lang.String getGenericSignature() -> getGenericSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String getErasedSignature() -> getErasedSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    void _assertSubclass(java.lang.Class,java.lang.Class) -> _assertSubclass
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.type.TypeReference -> org.codehaus.jackson.type.TypeReference:
    java.lang.reflect.Type _type -> _type
    java.lang.reflect.Type getType() -> getType
    int compareTo(org.codehaus.jackson.type.TypeReference) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.util.BufferRecycler -> org.codehaus.jackson.util.BufferRecycler:
    int DEFAULT_WRITE_CONCAT_BUFFER_LEN -> DEFAULT_WRITE_CONCAT_BUFFER_LEN
    byte[][] _byteBuffers -> _byteBuffers
    char[][] _charBuffers -> _charBuffers
    byte[] allocByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> allocByteBuffer
    void releaseByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType,byte[]) -> releaseByteBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> allocCharBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,int) -> allocCharBuffer
    void releaseCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,char[]) -> releaseCharBuffer
    byte[] balloc(int) -> balloc
    char[] calloc(int) -> calloc
org.codehaus.jackson.util.BufferRecycler$ByteBufferType -> org.codehaus.jackson.util.BufferRecycler$ByteBufferType:
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER -> READ_IO_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER -> WRITE_ENCODING_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER -> WRITE_CONCAT_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType valueOf(java.lang.String) -> valueOf
    int access$000(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> access$000
org.codehaus.jackson.util.BufferRecycler$CharBufferType -> org.codehaus.jackson.util.BufferRecycler$CharBufferType:
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TOKEN_BUFFER -> TOKEN_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType CONCAT_BUFFER -> CONCAT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TEXT_BUFFER -> TEXT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType NAME_COPY_BUFFER -> NAME_COPY_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$CharBufferType valueOf(java.lang.String) -> valueOf
    int access$100(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> access$100
org.codehaus.jackson.util.ByteArrayBuilder -> org.codehaus.jackson.util.ByteArrayBuilder:
    byte[] NO_BYTES -> NO_BYTES
    int INITIAL_BLOCK_SIZE -> INITIAL_BLOCK_SIZE
    int MAX_BLOCK_SIZE -> MAX_BLOCK_SIZE
    int DEFAULT_BLOCK_ARRAY_SIZE -> DEFAULT_BLOCK_ARRAY_SIZE
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    java.util.LinkedList _pastBlocks -> _pastBlocks
    int _pastLen -> _pastLen
    byte[] _currBlock -> _currBlock
    int _currBlockPtr -> _currBlockPtr
    void reset() -> reset
    void release() -> release
    void append(int) -> append
    void appendTwoBytes(int) -> appendTwoBytes
    void appendThreeBytes(int) -> appendThreeBytes
    byte[] toByteArray() -> toByteArray
    byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    byte[] finishCurrentSegment() -> finishCurrentSegment
    byte[] completeAndCoalesce(int) -> completeAndCoalesce
    byte[] getCurrentSegment() -> getCurrentSegment
    void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    int getCurrentSegmentLength() -> getCurrentSegmentLength
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    void flush() -> flush
    void _allocMore() -> _allocMore
org.codehaus.jackson.util.CharTypes -> org.codehaus.jackson.util.CharTypes:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    int[] sInputCodes -> sInputCodes
    int[] sInputCodesUtf8 -> sInputCodesUtf8
    int[] sInputCodesJsNames -> sInputCodesJsNames
    int[] sInputCodesUtf8JsNames -> sInputCodesUtf8JsNames
    int[] sInputCodesComment -> sInputCodesComment
    int[] sOutputEscapes128 -> sOutputEscapes128
    int[] sHexValues -> sHexValues
    int[] getInputCodeLatin1() -> getInputCodeLatin1
    int[] getInputCodeUtf8() -> getInputCodeUtf8
    int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    int[] getInputCodeComment() -> getInputCodeComment
    int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    int charToHex(int) -> charToHex
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    char[] copyHexChars() -> copyHexChars
    byte[] copyHexBytes() -> copyHexBytes
org.codehaus.jackson.util.DefaultPrettyPrinter -> org.codehaus.jackson.util.DefaultPrettyPrinter:
    org.codehaus.jackson.impl.Indenter _arrayIndenter -> _arrayIndenter
    org.codehaus.jackson.impl.Indenter _objectIndenter -> _objectIndenter
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    void indentArraysWith(org.codehaus.jackson.impl.Indenter) -> indentArraysWith
    void indentObjectsWith(org.codehaus.jackson.impl.Indenter) -> indentObjectsWith
    void spacesInObjectEntries(boolean) -> spacesInObjectEntries
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter:
    java.lang.String SYSTEM_LINE_SEPARATOR -> SYSTEM_LINE_SEPARATOR
    int SPACE_COUNT -> SPACE_COUNT
    char[] SPACES -> SPACES
    boolean isInline() -> isInline
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.util.InternCache -> org.codehaus.jackson.util.InternCache:
    int MAX_ENTRIES -> MAX_ENTRIES
    org.codehaus.jackson.util.InternCache instance -> instance
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.String intern(java.lang.String) -> intern
org.codehaus.jackson.util.JsonGeneratorDelegate -> org.codehaus.jackson.util.JsonGeneratorDelegate:
    org.codehaus.jackson.JsonGenerator delegate -> delegate
    void close() -> close
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    void flush() -> flush
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    boolean isClosed() -> isClosed
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeObject(java.lang.Object) -> writeObject
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
org.codehaus.jackson.util.JsonParserDelegate -> org.codehaus.jackson.util.JsonParserDelegate:
    org.codehaus.jackson.JsonParser delegate -> delegate
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    org.codehaus.jackson.JsonToken getLastClearedToken() -> getLastClearedToken
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
org.codehaus.jackson.util.JsonParserSequence -> org.codehaus.jackson.util.JsonParserSequence:
    org.codehaus.jackson.JsonParser[] _parsers -> _parsers
    int _nextParser -> _nextParser
    org.codehaus.jackson.util.JsonParserSequence createFlattened(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonParser) -> createFlattened
    void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    int containedParsersCount() -> containedParsersCount
    boolean switchToNext() -> switchToNext
org.codehaus.jackson.util.MinimalPrettyPrinter -> org.codehaus.jackson.util.MinimalPrettyPrinter:
    java.lang.String DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    java.lang.String _rootValueSeparator -> _rootValueSeparator
    void setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.util.TextBuffer -> org.codehaus.jackson.util.TextBuffer:
    char[] NO_CHARS -> NO_CHARS
    int MIN_SEGMENT_LEN -> MIN_SEGMENT_LEN
    int MAX_SEGMENT_LEN -> MAX_SEGMENT_LEN
    org.codehaus.jackson.util.BufferRecycler _allocator -> _allocator
    char[] _inputBuffer -> _inputBuffer
    int _inputStart -> _inputStart
    int _inputLen -> _inputLen
    java.util.ArrayList _segments -> _segments
    boolean _hasSegments -> _hasSegments
    int _segmentSize -> _segmentSize
    char[] _currentSegment -> _currentSegment
    int _currentSize -> _currentSize
    java.lang.String _resultString -> _resultString
    char[] _resultArray -> _resultArray
    void releaseBuffers() -> releaseBuffers
    void resetWithEmpty() -> resetWithEmpty
    void resetWithShared(char[],int,int) -> resetWithShared
    void resetWithCopy(char[],int,int) -> resetWithCopy
    void resetWithString(java.lang.String) -> resetWithString
    char[] findBuffer(int) -> findBuffer
    void clearSegments() -> clearSegments
    int size() -> size
    int getTextOffset() -> getTextOffset
    boolean hasTextAsCharacters() -> hasTextAsCharacters
    char[] getTextBuffer() -> getTextBuffer
    java.lang.String contentsAsString() -> contentsAsString
    char[] contentsAsArray() -> contentsAsArray
    java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    double contentsAsDouble() -> contentsAsDouble
    void ensureNotShared() -> ensureNotShared
    void append(char) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String,int,int) -> append
    char[] getCurrentSegment() -> getCurrentSegment
    char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    int getCurrentSegmentSize() -> getCurrentSegmentSize
    void setCurrentLength(int) -> setCurrentLength
    char[] finishCurrentSegment() -> finishCurrentSegment
    char[] expandCurrentSegment() -> expandCurrentSegment
    java.lang.String toString() -> toString
    void unshare(int) -> unshare
    void expand(int) -> expand
    char[] buildResultArray() -> buildResultArray
    char[] _charArray(int) -> _charArray
org.codehaus.jackson.util.TokenBuffer -> org.codehaus.jackson.util.TokenBuffer:
    int DEFAULT_PARSER_FEATURES -> DEFAULT_PARSER_FEATURES
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _generatorFeatures -> _generatorFeatures
    boolean _closed -> _closed
    org.codehaus.jackson.util.TokenBuffer$Segment _first -> _first
    org.codehaus.jackson.util.TokenBuffer$Segment _last -> _last
    int _appendOffset -> _appendOffset
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    org.codehaus.jackson.JsonParser asParser() -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.ObjectCodec) -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.JsonParser) -> asParser
    void serialize(org.codehaus.jackson.JsonGenerator) -> serialize
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> getOutputContext
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _append(org.codehaus.jackson.JsonToken) -> _append
    void _append(org.codehaus.jackson.JsonToken,java.lang.Object) -> _append
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
org.codehaus.jackson.util.TokenBuffer$1 -> org.codehaus.jackson.util.TokenBuffer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.util.TokenBuffer$Parser -> org.codehaus.jackson.util.TokenBuffer$Parser:
    org.codehaus.jackson.ObjectCodec _codec -> _codec
    org.codehaus.jackson.util.TokenBuffer$Segment _segment -> _segment
    int _segmentPtr -> _segmentPtr
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    boolean _closed -> _closed
    org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.JsonLocation _location -> _location
    void setLocation(org.codehaus.jackson.JsonLocation) -> setLocation
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonToken peekNextToken() -> peekNextToken
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    void _decodeBase64(java.lang.String,org.codehaus.jackson.util.ByteArrayBuilder,org.codehaus.jackson.Base64Variant) -> _decodeBase64
    java.lang.Object _currentObject() -> _currentObject
    void _checkIsNumber() -> _checkIsNumber
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.util.TokenBuffer$Segment -> org.codehaus.jackson.util.TokenBuffer$Segment:
    int TOKENS_PER_SEGMENT -> TOKENS_PER_SEGMENT
    org.codehaus.jackson.JsonToken[] TOKEN_TYPES_BY_INDEX -> TOKEN_TYPES_BY_INDEX
    org.codehaus.jackson.util.TokenBuffer$Segment _next -> _next
    long _tokenTypes -> _tokenTypes
    java.lang.Object[] _tokens -> _tokens
    org.codehaus.jackson.JsonToken type(int) -> type
    java.lang.Object get(int) -> get
    org.codehaus.jackson.util.TokenBuffer$Segment next() -> next
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken) -> append
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> append
    void set(int,org.codehaus.jackson.JsonToken) -> set
    void set(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> set
org.codehaus.jackson.util.VersionUtil -> org.codehaus.jackson.util.VersionUtil:
    java.lang.String VERSION_FILE -> VERSION_FILE
    java.util.regex.Pattern VERSION_SEPARATOR -> VERSION_SEPARATOR
    org.codehaus.jackson.Version versionFor(java.lang.Class) -> versionFor
    org.codehaus.jackson.Version parseVersion(java.lang.String) -> parseVersion
    int parseVersionPart(java.lang.String) -> parseVersionPart
